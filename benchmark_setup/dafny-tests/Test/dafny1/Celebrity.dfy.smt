(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@76) 11))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@64) (= (type $generated@@80) $generated@@76)) (= (type $generated@@81) $generated@@76)) (or ($generated@@77 $generated@@79 $generated@@80 $generated@@81) (and (not (= 0 $generated@@74)) (and (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@78 $generated@@81 $generated@@79)) (not (= $generated@@80 $generated@@81)))))) true)
 :pattern ( ($generated@@75 $generated@@79 $generated@@80 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@83 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@76)
 :pattern ( ($generated@@151 $generated@@153))
)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@76)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@144) (= (type $generated@@156) $generated@@144)) true) (= ($generated@@150 $generated@@155 $generated@@156)  (and (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156)))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@140 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@140 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@85 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@85) (= (type $generated@@212) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@85)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@85 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@85) (= (type $generated@@224) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@85)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232)) $generated@@144)
 :pattern ( ($generated@@230 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@76)) (= (type $generated@@236) $generated@@76)) (= ($generated@@140 ($generated@@230 $generated@@235 $generated@@236) ($generated@@143 $generated@@233 $generated@@234))  (and ($generated@@78 $generated@@235 $generated@@233) ($generated@@78 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@140 ($generated@@230 $generated@@235 $generated@@236) ($generated@@143 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@144) (= (type $generated@@238) $generated@@144)) (= ($generated@@150 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@150 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@76) ($generated@@0 ($generated@@89 $generated@@241 $generated@@243))) ($generated@@78 $generated@@243 $generated@@242))
 :pattern ( ($generated@@89 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@76) ($generated@@0 ($generated@@89 $generated@@246 $generated@@248))) ($generated@@78 $generated@@248 $generated@@247))
 :pattern ( ($generated@@89 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@76)) (= (type $generated@@258) $generated@@76)) (= (type $generated@@259) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@253 $generated@@259)) (= ($generated@@82 ($generated@@230 $generated@@257 $generated@@258) ($generated@@143 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@82 ($generated@@230 $generated@@257 $generated@@258) ($generated@@143 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@144) (= ($generated@@142 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@262))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) $generated@@76)) (= (type $generated@@267) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@264 $generated@@265 ($generated@@249 $generated@@266) ($generated@@249 $generated@@267)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@266 $generated@@265) ($generated@@140 $generated@@267 ($generated@@239 $generated@@265)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) ($generated@@249 $generated@@266))) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@76) ($generated@@78 $generated@@268 $generated@@265)) (and (=> ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) $generated@@268)) (=> (not (= $generated@@268 $generated@@266)) ($generated@@77 $generated@@265 $generated@@268 ($generated@@249 $generated@@266)))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) $generated@@268)) (not (= $generated@@268 $generated@@266))) ($generated@@75 $generated@@265 $generated@@268 ($generated@@249 $generated@@266))) (=> ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) $generated@@268)) (=> (not (= $generated@@268 $generated@@266)) ($generated@@77 $generated@@265 ($generated@@249 $generated@@266) $generated@@268))))))
 :pattern ( ($generated@@75 $generated@@265 $generated@@266 $generated@@268))
 :pattern ( ($generated@@75 $generated@@265 $generated@@268 $generated@@266))
 :pattern ( ($generated@@89 $generated@@267 $generated@@268))
))) (= ($generated@@263 $generated@@265 ($generated@@249 $generated@@266) ($generated@@249 $generated@@267))  (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) ($generated@@249 $generated@@266))) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@76) ($generated@@78 $generated@@269 $generated@@265)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) $generated@@269)) (not (= $generated@@269 $generated@@266))) ($generated@@75 $generated@@265 $generated@@269 ($generated@@249 $generated@@266))) (=> (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@267) $generated@@269)) (not (= $generated@@269 $generated@@266))) (not ($generated@@75 $generated@@265 ($generated@@249 $generated@@266) $generated@@269)))))
 :pattern ( ($generated@@75 $generated@@265 $generated@@266 $generated@@269))
 :pattern ( ($generated@@75 $generated@@265 $generated@@269 $generated@@266))
 :pattern ( ($generated@@89 $generated@@267 $generated@@269))
))))))
 :weight 3
 :pattern ( ($generated@@263 $generated@@265 ($generated@@249 $generated@@266) ($generated@@249 $generated@@267)))
))))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@144) ($generated@@142 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@76) (= (type $generated@@272) $generated@@76)) (= $generated@@270 ($generated@@230 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@142 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 17)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@76)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@254 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@82 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@254 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) $generated@@76)) (= (type $generated@@288) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@264 $generated@@286 $generated@@287 $generated@@288) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@287 $generated@@286) ($generated@@140 $generated@@288 ($generated@@239 $generated@@286)))))) true)
 :pattern ( ($generated@@263 $generated@@286 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@84 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@87 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@84 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@89 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@84 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@84 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@87 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@84 $generated@@332 $generated@@2)) (= ($generated@@158 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@89 $generated@@331 $generated@@333))) (<= ($generated ($generated@@89 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@89 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@158 $generated@@331))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@334) $generated@@64) (= (type $generated@@335) $generated@@76)) (= (type $generated@@336) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@264 $generated@@334 $generated@@335 ($generated@@249 $generated@@336)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@335 $generated@@334) ($generated@@140 $generated@@336 ($generated@@239 $generated@@334)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@335)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@76) ($generated@@78 $generated@@337 $generated@@334)) (and (=> ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@337)) (=> (not (= $generated@@337 $generated@@335)) ($generated@@77 $generated@@334 $generated@@337 $generated@@335))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@337)) (not (= $generated@@337 $generated@@335))) ($generated@@75 $generated@@334 $generated@@337 $generated@@335)) (=> ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@337)) (=> (not (= $generated@@337 $generated@@335)) ($generated@@77 $generated@@334 $generated@@335 $generated@@337))))))
 :pattern ( ($generated@@75 $generated@@334 $generated@@335 $generated@@337))
 :pattern ( ($generated@@75 $generated@@334 $generated@@337 $generated@@335))
 :pattern ( ($generated@@89 $generated@@336 $generated@@337))
))) (= ($generated@@263 $generated@@334 $generated@@335 ($generated@@249 $generated@@336))  (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@335)) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@76) ($generated@@78 $generated@@338 $generated@@334)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@338)) (not (= $generated@@338 $generated@@335))) ($generated@@75 $generated@@334 $generated@@338 $generated@@335)) (=> (and ($generated@@0 ($generated@@89 ($generated@@249 $generated@@336) $generated@@338)) (not (= $generated@@338 $generated@@335))) (not ($generated@@75 $generated@@334 $generated@@335 $generated@@338)))))
 :pattern ( ($generated@@75 $generated@@334 $generated@@335 $generated@@338))
 :pattern ( ($generated@@75 $generated@@334 $generated@@338 $generated@@335))
 :pattern ( ($generated@@89 $generated@@336 $generated@@338))
))))))
 :weight 3
 :pattern ( ($generated@@263 $generated@@334 $generated@@335 ($generated@@249 $generated@@336)))
))))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@299 (type $generated@@339))))
(let (($generated@@341 ($generated@@298 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@297 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@296 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@295 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@299 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@84 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@299 (type $generated@@346))))
(let (($generated@@348 ($generated@@298 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@297 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@296 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@89 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@317 (type $generated@@350))))
(let (($generated@@352 ($generated@@316 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@315 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@314 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@313 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@317 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@84 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@317 (type $generated@@357))))
(let (($generated@@359 ($generated@@316 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@315 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@314 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@89 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@362) $generated@@64)) (= ($generated@@140 $generated@@361 ($generated@@157 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@361 $generated@@363)))) ($generated@@78 $generated@@363 $generated@@362))
 :pattern ( ($generated@@89 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@140 $generated@@361 ($generated@@157 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@364 ($generated@@239 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@76) ($generated@@0 ($generated@@89 $generated@@364 $generated@@367))) ($generated@@254 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@89 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@82 $generated@@364 ($generated@@239 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@368 ($generated@@244 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@76) ($generated@@0 ($generated@@89 $generated@@368 $generated@@371))) ($generated@@254 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@89 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@82 $generated@@368 ($generated@@244 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@89 ($generated@@290 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@89 ($generated@@290 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@299 (type $generated@@380))))
(let (($generated@@382 ($generated@@298 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@84 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@384) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@383) ($generated@@151 ($generated@@375 $generated@@144 $generated@@384)))) (= ($generated@@89 ($generated@@376 $generated@@383) ($generated@@151 ($generated@@375 $generated@@144 $generated@@384))) ($generated@@152 ($generated@@375 $generated@@144 $generated@@384))))))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@317 (type $generated@@388))))
(let (($generated@@390 ($generated@@316 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@84 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@392) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@391) ($generated@@151 ($generated@@375 $generated@@144 $generated@@392)))) (= ($generated@@89 ($generated@@386 $generated@@391) ($generated@@151 ($generated@@375 $generated@@144 $generated@@392))) ($generated@@152 ($generated@@375 $generated@@144 $generated@@392))))))
 :pattern ( ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@298 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@297 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@89 ($generated@@343 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@89 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@393) $generated@@397))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@89 ($generated@@343 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@316 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@315 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@89 ($generated@@354 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@398) $generated@@402))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@89 ($generated@@354 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))) (and ($generated@@254 ($generated@@89 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@254 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@82 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@414) $generated@@418))) (and ($generated@@254 ($generated@@89 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@254 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@82 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@84 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@317 (type $generated@@421))))
(let (($generated@@423 ($generated@@316 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@315 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@314 $generated@@423 $generated@@422)) (= ($generated@@313 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@313 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@317 (type $generated@@424))))
(let (($generated@@426 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@314 $generated@@426 $generated@@425)) (= ($generated@@354 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@354 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@317 (type $generated@@427))))
(let (($generated@@429 ($generated@@316 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@315 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@314 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@76))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@299 (type $generated@@430))))
(let (($generated@@432 ($generated@@298 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@297 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@296 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@76) (= (type $generated@@434) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@374 $generated@@430) ($generated@@281 ($generated@@230 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@317 (type $generated@@435))))
(let (($generated@@437 ($generated@@316 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@315 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@314 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@76) (= (type $generated@@439) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@385 $generated@@435) ($generated@@281 ($generated@@230 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@76) ($generated@@78 $generated@@440 $generated@@46)) (and (= ($generated@@281 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@140 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@78 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@76) ($generated@@78 $generated@@441 $generated@@47)) (and (= ($generated@@281 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@140 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@78 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@76) ($generated@@78 $generated@@442 $generated@@44)) (and (= ($generated@@281 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@140 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@78 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@76) ($generated@@78 $generated@@444 $generated@@45)) (and (= ($generated@@281 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@140 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@78 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@78 ($generated@@281 $generated@@445) $generated@@446) ($generated@@140 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@78 ($generated@@281 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@87 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@84 $generated@@448 $generated@@2)) (<= 0 ($generated@@289 $generated@@447))))
 :pattern ( ($generated@@289 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@276 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@275 $generated@@450)) (<= 0 ($generated@@274 $generated@@449))))
 :pattern ( ($generated@@274 $generated@@449))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@76)) (= (type $generated@@453) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@264 $generated@@451 $generated@@452 $generated@@453) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@452 $generated@@451) ($generated@@140 $generated@@453 ($generated@@239 $generated@@451)))))) (and (=> ($generated@@0 ($generated@@89 $generated@@453 $generated@@452)) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@76) ($generated@@78 $generated@@454 $generated@@451)) (and (=> ($generated@@0 ($generated@@89 $generated@@453 $generated@@454)) (=> (not (= $generated@@454 $generated@@452)) ($generated@@77 $generated@@451 $generated@@454 $generated@@452))) (=> (=> (and ($generated@@0 ($generated@@89 $generated@@453 $generated@@454)) (not (= $generated@@454 $generated@@452))) ($generated@@75 $generated@@451 $generated@@454 $generated@@452)) (=> ($generated@@0 ($generated@@89 $generated@@453 $generated@@454)) (=> (not (= $generated@@454 $generated@@452)) ($generated@@77 $generated@@451 $generated@@452 $generated@@454))))))
 :pattern ( ($generated@@75 $generated@@451 $generated@@452 $generated@@454))
 :pattern ( ($generated@@75 $generated@@451 $generated@@454 $generated@@452))
 :pattern ( ($generated@@89 $generated@@453 $generated@@454))
))) (= ($generated@@263 $generated@@451 $generated@@452 $generated@@453)  (and ($generated@@0 ($generated@@89 $generated@@453 $generated@@452)) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@76) ($generated@@78 $generated@@455 $generated@@451)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@453 $generated@@455)) (not (= $generated@@455 $generated@@452))) ($generated@@75 $generated@@451 $generated@@455 $generated@@452)) (=> (and ($generated@@0 ($generated@@89 $generated@@453 $generated@@455)) (not (= $generated@@455 $generated@@452))) (not ($generated@@75 $generated@@451 $generated@@452 $generated@@455)))))
 :pattern ( ($generated@@75 $generated@@451 $generated@@452 $generated@@455))
 :pattern ( ($generated@@75 $generated@@451 $generated@@455 $generated@@452))
 :pattern ( ($generated@@89 $generated@@453 $generated@@455))
))))))
 :pattern ( ($generated@@263 $generated@@451 $generated@@452 $generated@@453))
))))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@403 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@403 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@411 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@411 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@76) (= (type $generated@@477) $generated@@76)) (= ($generated@@260 ($generated@@230 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@143 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@143 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@143 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@143 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@76) (= (type $generated@@487) $generated@@76)) (= ($generated@@151 ($generated@@230 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@230 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@76) (= (type $generated@@489) $generated@@76)) (= ($generated@@152 ($generated@@230 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@230 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@276 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@275 $generated@@76)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@274 $generated@@496))) ($generated@@254 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@82 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@83 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@83 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@239 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@244 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@157 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@157 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@375 $generated@@519 ($generated@@281 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@281 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@140 $generated@@520 ($generated@@403 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@520) $generated@@523))) (and ($generated@@78 ($generated@@89 ($generated@@376 $generated@@520) $generated@@523) $generated@@522) ($generated@@78 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@520) $generated@@523))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@140 $generated@@520 ($generated@@403 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@140 $generated@@524 ($generated@@411 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@524) $generated@@527))) (and ($generated@@78 ($generated@@89 ($generated@@386 $generated@@524) $generated@@527) $generated@@526) ($generated@@78 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@524) $generated@@527))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@140 $generated@@524 ($generated@@411 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@76) (= (type $generated@@531) $generated@@76)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@230 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@230 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@76) (= (type $generated@@533) $generated@@76)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@230 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@230 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@76) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@78 $generated@@534 ($generated@@403 $generated@@535 $generated@@536))) (and (= ($generated@@281 ($generated@@375 ($generated@@297 $generated@@76 $generated@@76) $generated@@534)) $generated@@534) ($generated@@140 ($generated@@375 ($generated@@297 $generated@@76 $generated@@76) $generated@@534) ($generated@@403 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@78 $generated@@534 ($generated@@403 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@76) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@78 $generated@@537 ($generated@@411 $generated@@538 $generated@@539))) (and (= ($generated@@281 ($generated@@375 ($generated@@315 $generated@@76 $generated@@76) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@375 ($generated@@315 $generated@@76 $generated@@76) $generated@@537) ($generated@@411 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@78 $generated@@537 ($generated@@411 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@76)) ($generated@@78 $generated@@542 ($generated@@143 $generated@@540 $generated@@541))) (and (= ($generated@@281 ($generated@@375 $generated@@144 $generated@@542)) $generated@@542) ($generated@@140 ($generated@@375 $generated@@144 $generated@@542) ($generated@@143 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@143 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@89 ($generated@@419 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@89 ($generated@@419 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@143 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@144) (= ($generated@@528 ($generated@@281 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@281 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@76) ($generated@@78 $generated@@550 ($generated@@83 0))) (and (= ($generated@@281 ($generated@@375 $generated@@2 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@375 ($generated@@84 $generated@@76 $generated@@4) $generated@@550) ($generated@@83 0))))
 :pattern ( ($generated@@78 $generated@@550 ($generated@@83 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@76) (= (type $generated@@552) $generated@@64)) ($generated@@78 $generated@@551 ($generated@@239 $generated@@552))) (and (= ($generated@@281 ($generated@@375 ($generated@@84 $generated@@76 $generated@@4) $generated@@551)) $generated@@551) ($generated@@140 ($generated@@375 ($generated@@84 $generated@@76 $generated@@4) $generated@@551) ($generated@@239 $generated@@552))))
 :pattern ( ($generated@@78 $generated@@551 ($generated@@239 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@76) (= (type $generated@@554) $generated@@64)) ($generated@@78 $generated@@553 ($generated@@244 $generated@@554))) (and (= ($generated@@281 ($generated@@375 ($generated@@84 $generated@@76 $generated@@4) $generated@@553)) $generated@@553) ($generated@@140 ($generated@@375 ($generated@@84 $generated@@76 $generated@@4) $generated@@553) ($generated@@244 $generated@@554))))
 :pattern ( ($generated@@78 $generated@@553 ($generated@@244 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@76) (= (type $generated@@556) $generated@@64)) ($generated@@78 $generated@@555 ($generated@@157 $generated@@556))) (and (= ($generated@@281 ($generated@@375 ($generated@@84 $generated@@76 $generated@@2) $generated@@555)) $generated@@555) ($generated@@140 ($generated@@375 ($generated@@84 $generated@@76 $generated@@2) $generated@@555) ($generated@@157 $generated@@556))))
 :pattern ( ($generated@@78 $generated@@555 ($generated@@157 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@76) (= (type $generated@@558) $generated@@64)) ($generated@@78 $generated@@557 ($generated@@490 $generated@@558))) (and (= ($generated@@281 ($generated@@375 ($generated@@275 $generated@@76) $generated@@557)) $generated@@557) ($generated@@140 ($generated@@375 ($generated@@275 $generated@@76) $generated@@557) ($generated@@490 $generated@@558))))
 :pattern ( ($generated@@78 $generated@@557 ($generated@@490 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@559 ($generated@@157 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@559 $generated@@562)))) ($generated@@254 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@89 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@82 $generated@@559 ($generated@@157 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@144) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@253 $generated@@565) (and ($generated@@142 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@82 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@82 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@254 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@254 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@144) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@253 $generated@@569) (and ($generated@@142 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@82 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@82 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@254 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@254 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@76) (= (type $generated@@572) $generated@@76)) (= ($generated@@230 ($generated@@249 $generated@@571) ($generated@@249 $generated@@572)) ($generated@@249 ($generated@@230 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@230 ($generated@@249 $generated@@571) ($generated@@249 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@281 ($generated@@249 $generated@@573)) ($generated@@249 ($generated@@281 $generated@@573)))
 :pattern ( ($generated@@281 ($generated@@249 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@276 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@275 $generated@@575)) (= ($generated@@274 $generated@@574) 0)) (= $generated@@574 ($generated@@273 $generated@@575))))
 :pattern ( ($generated@@274 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@84 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@289 ($generated@@90 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@289 $generated@@576) ($generated ($generated@@89 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@289 ($generated@@90 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@581) $generated@@2)) ($generated@@82 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@82 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@583) $generated@@3)) ($generated@@82 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@82 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@585) $generated@@4)) ($generated@@82 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@82 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@587) $generated@@443)) ($generated@@82 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@82 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@589) $generated@@76)) ($generated@@82 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@82 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@275 $generated@@76)) (= (type $generated@@591) $generated@@64)) (= ($generated@@140 $generated@@590 ($generated@@490 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@274 $generated@@590))) ($generated@@78 ($generated@@491 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@491 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@140 $generated@@590 ($generated@@490 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@275 $generated@@76)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@274 $generated@@594))) (< ($generated@@529 ($generated@@375 $generated@@144 ($generated@@491 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@529 ($generated@@375 $generated@@144 ($generated@@491 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@140 $generated@@596 ($generated@@403 $generated@@597 $generated@@598))) (and (and ($generated@@140 ($generated@@295 $generated@@596) ($generated@@239 $generated@@597)) ($generated@@140 ($generated@@343 $generated@@596) ($generated@@239 $generated@@598))) ($generated@@140 ($generated@@374 $generated@@596) ($generated@@239 ($generated@@143 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@140 $generated@@596 ($generated@@403 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@140 $generated@@599 ($generated@@411 $generated@@600 $generated@@601))) (and (and ($generated@@140 ($generated@@313 $generated@@599) ($generated@@244 $generated@@600)) ($generated@@140 ($generated@@354 $generated@@599) ($generated@@244 $generated@@601))) ($generated@@140 ($generated@@385 $generated@@599) ($generated@@244 ($generated@@143 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@140 $generated@@599 ($generated@@411 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@140 $generated@@602 $generated@@46))
 :pattern ( ($generated@@140 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@140 $generated@@603 $generated@@47))
 :pattern ( ($generated@@140 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@140 $generated@@604 $generated@@44))
 :pattern ( ($generated@@140 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@443) ($generated@@140 $generated@@605 $generated@@45))
 :pattern ( ($generated@@140 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@76) ($generated@@140 $generated@@606 $generated@@48))
 :pattern ( ($generated@@140 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@611) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@609) $generated@@76)) (= (type $generated@@608) $generated@@76)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@612) ($generated@@164 $generated@@85 $generated@@4))) (= (type $generated@@613) $generated@@85)) (= (type $generated@@614) ($generated@@164 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@616 true))
(let (($generated@@617  (=> (and (not ($generated@@75 $generated@@607 $generated@@608 $generated@@609)) (= (ControlFlow 0 8) 2)) $generated@@616)))
(let (($generated@@618  (=> ($generated@@75 $generated@@607 $generated@@608 $generated@@609) (=> (and ($generated@@254 $generated@@609 $generated@@607 $generated@@610) ($generated@@254 $generated@@608 $generated@@607 $generated@@610)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@609 $generated@@608))) (=> (not (= $generated@@609 $generated@@608)) (=> (and ($generated@@77 $generated@@607 $generated@@609 $generated@@608) (= (ControlFlow 0 6) 2)) $generated@@616)))))))
(let (($generated@@619  (=> (and (and ($generated@@0 ($generated@@89 $generated@@611 $generated@@608)) (not (= $generated@@608 $generated@@609))) (and ($generated@@254 $generated@@608 $generated@@607 $generated@@610) ($generated@@254 $generated@@609 $generated@@607 $generated@@610))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not (= $generated@@608 $generated@@609))) (=> (and (not (= $generated@@608 $generated@@609)) ($generated@@77 $generated@@607 $generated@@608 $generated@@609)) (and (=> (= (ControlFlow 0 9) 6) $generated@@618) (=> (= (ControlFlow 0 9) 8) $generated@@617)))))))
(let (($generated@@620  (=> (and (not (and ($generated@@0 ($generated@@89 $generated@@611 $generated@@608)) (not (= $generated@@608 $generated@@609)))) (= (ControlFlow 0 5) 2)) $generated@@616)))
(let (($generated@@621  (=> (not ($generated@@0 ($generated@@89 $generated@@611 $generated@@608))) (and (=> (= (ControlFlow 0 12) 9) $generated@@619) (=> (= (ControlFlow 0 12) 5) $generated@@620)))))
(let (($generated@@622  (=> ($generated@@0 ($generated@@89 $generated@@611 $generated@@608)) (and (=> (= (ControlFlow 0 11) 9) $generated@@619) (=> (= (ControlFlow 0 11) 5) $generated@@620)))))
(let (($generated@@623  (=> (and ($generated@@78 $generated@@608 $generated@@607) ($generated@@254 $generated@@608 $generated@@607 $generated@@610)) (and (=> (= (ControlFlow 0 13) 11) $generated@@622) (=> (= (ControlFlow 0 13) 12) $generated@@621)))))
(let (($generated@@624  (=> (and (not (and ($generated@@78 $generated@@608 $generated@@607) ($generated@@254 $generated@@608 $generated@@607 $generated@@610))) (= (ControlFlow 0 4) 2)) $generated@@616)))
(let (($generated@@625  (=> ($generated@@0 ($generated@@89 $generated@@611 $generated@@609)) (and (=> (= (ControlFlow 0 14) 13) $generated@@623) (=> (= (ControlFlow 0 14) 4) $generated@@624)))))
(let (($generated@@626  (=> (and (not ($generated@@0 ($generated@@89 $generated@@611 $generated@@609))) (= (ControlFlow 0 3) 2)) $generated@@616)))
(let (($generated@@627  (=> (= $generated@@612 ($generated@@218 $generated@@613 $generated@@610 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 14) $generated@@625) (=> (= (ControlFlow 0 15) 3) $generated@@626)))))
(let (($generated@@628 true))
(let (($generated@@629  (=> (= $generated@@614 ($generated@@163 $generated@@613 $generated@@610 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 1) $generated@@628) (=> (= (ControlFlow 0 16) 15) $generated@@627)))))
(let (($generated@@630  (=> (and ($generated@@253 $generated@@610) ($generated@@615 $generated@@610)) (=> (and (and ($generated@@78 $generated@@609 $generated@@607) ($generated@@140 $generated@@611 ($generated@@239 $generated@@607))) (and (= 1 $generated@@74) (= (ControlFlow 0 17) 16))) $generated@@629))))
$generated@@630))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@76) 11))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@64) (= (type $generated@@80) $generated@@76)) (= (type $generated@@81) $generated@@76)) (or ($generated@@77 $generated@@79 $generated@@80 $generated@@81) (and (not (= 0 $generated@@74)) (and (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@78 $generated@@81 $generated@@79)) (not (= $generated@@80 $generated@@81)))))) true)
 :pattern ( ($generated@@75 $generated@@79 $generated@@80 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@83 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@76)
 :pattern ( ($generated@@151 $generated@@153))
)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@76)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@144) (= (type $generated@@156) $generated@@144)) true) (= ($generated@@150 $generated@@155 $generated@@156)  (and (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156)))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@140 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@140 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@85 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@85) (= (type $generated@@212) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@85)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220)) $generated@@144)
 :pattern ( ($generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@64) (= (type $generated@@222) $generated@@64)) (= (type $generated@@223) $generated@@76)) (= (type $generated@@224) $generated@@76)) (= ($generated@@140 ($generated@@218 $generated@@223 $generated@@224) ($generated@@143 $generated@@221 $generated@@222))  (and ($generated@@78 $generated@@223 $generated@@221) ($generated@@78 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@140 ($generated@@218 $generated@@223 $generated@@224) ($generated@@143 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@144) (= (type $generated@@226) $generated@@144)) (= ($generated@@150 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@150 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@230) $generated@@64)) (= ($generated@@140 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@76) ($generated@@0 ($generated@@89 $generated@@229 $generated@@231))) ($generated@@78 $generated@@231 $generated@@230))
 :pattern ( ($generated@@89 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@140 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@235) $generated@@64)) (= ($generated@@140 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@76) ($generated@@0 ($generated@@89 $generated@@234 $generated@@236))) ($generated@@78 $generated@@236 $generated@@235))
 :pattern ( ($generated@@89 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@140 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@76)) (= (type $generated@@246) $generated@@76)) (= (type $generated@@247) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@241 $generated@@247)) (= ($generated@@82 ($generated@@218 $generated@@245 $generated@@246) ($generated@@143 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@82 ($generated@@218 $generated@@245 $generated@@246) ($generated@@143 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@144) (= ($generated@@142 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@250))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@64) (= (type $generated@@254) $generated@@76)) (= (type $generated@@255) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@252 $generated@@253 ($generated@@237 $generated@@254) ($generated@@237 $generated@@255)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@254 $generated@@253) ($generated@@140 $generated@@255 ($generated@@227 $generated@@253)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) ($generated@@237 $generated@@254))) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@76) ($generated@@78 $generated@@256 $generated@@253)) (and (=> ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) $generated@@256)) (=> (not (= $generated@@256 $generated@@254)) ($generated@@77 $generated@@253 $generated@@256 ($generated@@237 $generated@@254)))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) $generated@@256)) (not (= $generated@@256 $generated@@254))) ($generated@@75 $generated@@253 $generated@@256 ($generated@@237 $generated@@254))) (=> ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) $generated@@256)) (=> (not (= $generated@@256 $generated@@254)) ($generated@@77 $generated@@253 ($generated@@237 $generated@@254) $generated@@256))))))
 :pattern ( ($generated@@75 $generated@@253 $generated@@254 $generated@@256))
 :pattern ( ($generated@@75 $generated@@253 $generated@@256 $generated@@254))
 :pattern ( ($generated@@89 $generated@@255 $generated@@256))
))) (= ($generated@@251 $generated@@253 ($generated@@237 $generated@@254) ($generated@@237 $generated@@255))  (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) ($generated@@237 $generated@@254))) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@76) ($generated@@78 $generated@@257 $generated@@253)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) $generated@@257)) (not (= $generated@@257 $generated@@254))) ($generated@@75 $generated@@253 $generated@@257 ($generated@@237 $generated@@254))) (=> (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@255) $generated@@257)) (not (= $generated@@257 $generated@@254))) (not ($generated@@75 $generated@@253 ($generated@@237 $generated@@254) $generated@@257)))))
 :pattern ( ($generated@@75 $generated@@253 $generated@@254 $generated@@257))
 :pattern ( ($generated@@75 $generated@@253 $generated@@257 $generated@@254))
 :pattern ( ($generated@@89 $generated@@255 $generated@@257))
))))))
 :weight 3
 :pattern ( ($generated@@251 $generated@@253 ($generated@@237 $generated@@254) ($generated@@237 $generated@@255)))
))))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@144) ($generated@@142 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@76) (= (type $generated@@260) $generated@@76)) (= $generated@@258 ($generated@@218 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@142 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 17)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@76)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@64) (= (type $generated@@273) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@242 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@82 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@242 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@76)) (= (type $generated@@276) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@252 $generated@@274 $generated@@275 $generated@@276) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@275 $generated@@274) ($generated@@140 $generated@@276 ($generated@@227 $generated@@274)))))) true)
 :pattern ( ($generated@@251 $generated@@274 $generated@@275 $generated@@276))
))))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@84 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@87 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@84 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@89 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@84 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@89 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@89 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@84 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@89 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@89 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@87 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@84 $generated@@320 $generated@@2)) (= ($generated@@158 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@89 $generated@@319 $generated@@321))) (<= ($generated ($generated@@89 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@89 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@158 $generated@@319))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@322) $generated@@64) (= (type $generated@@323) $generated@@76)) (= (type $generated@@324) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@252 $generated@@322 $generated@@323 ($generated@@237 $generated@@324)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@323 $generated@@322) ($generated@@140 $generated@@324 ($generated@@227 $generated@@322)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@323)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@76) ($generated@@78 $generated@@325 $generated@@322)) (and (=> ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@325)) (=> (not (= $generated@@325 $generated@@323)) ($generated@@77 $generated@@322 $generated@@325 $generated@@323))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@325)) (not (= $generated@@325 $generated@@323))) ($generated@@75 $generated@@322 $generated@@325 $generated@@323)) (=> ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@325)) (=> (not (= $generated@@325 $generated@@323)) ($generated@@77 $generated@@322 $generated@@323 $generated@@325))))))
 :pattern ( ($generated@@75 $generated@@322 $generated@@323 $generated@@325))
 :pattern ( ($generated@@75 $generated@@322 $generated@@325 $generated@@323))
 :pattern ( ($generated@@89 $generated@@324 $generated@@325))
))) (= ($generated@@251 $generated@@322 $generated@@323 ($generated@@237 $generated@@324))  (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@323)) (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@76) ($generated@@78 $generated@@326 $generated@@322)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@326)) (not (= $generated@@326 $generated@@323))) ($generated@@75 $generated@@322 $generated@@326 $generated@@323)) (=> (and ($generated@@0 ($generated@@89 ($generated@@237 $generated@@324) $generated@@326)) (not (= $generated@@326 $generated@@323))) (not ($generated@@75 $generated@@322 $generated@@323 $generated@@326)))))
 :pattern ( ($generated@@75 $generated@@322 $generated@@323 $generated@@326))
 :pattern ( ($generated@@75 $generated@@322 $generated@@326 $generated@@323))
 :pattern ( ($generated@@89 $generated@@324 $generated@@326))
))))))
 :weight 3
 :pattern ( ($generated@@251 $generated@@322 $generated@@323 ($generated@@237 $generated@@324)))
))))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(let (($generated@@329 ($generated@@286 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@285 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@284 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@89 ($generated@@283 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@283 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@84 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@287 (type $generated@@334))))
(let (($generated@@336 ($generated@@286 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@285 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@284 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@89 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@305 (type $generated@@338))))
(let (($generated@@340 ($generated@@304 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@303 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@302 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@89 ($generated@@301 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@301 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@305 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@84 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@305 (type $generated@@345))))
(let (($generated@@347 ($generated@@304 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@303 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@302 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@89 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@140 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@349 $generated@@351)))) ($generated@@78 $generated@@351 $generated@@350))
 :pattern ( ($generated@@89 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@140 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@352 ($generated@@227 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@76) ($generated@@0 ($generated@@89 $generated@@352 $generated@@355))) ($generated@@242 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@89 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@82 $generated@@352 ($generated@@227 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@356 ($generated@@232 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@76) ($generated@@0 ($generated@@89 $generated@@356 $generated@@359))) ($generated@@242 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@89 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@82 $generated@@356 ($generated@@232 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@89 ($generated@@278 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@89 ($generated@@278 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@287 (type $generated@@368))))
(let (($generated@@370 ($generated@@286 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@84 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@285 $generated@@76 $generated@@76)) (= (type $generated@@372) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@89 ($generated@@283 $generated@@371) ($generated@@151 ($generated@@363 $generated@@144 $generated@@372)))) (= ($generated@@89 ($generated@@364 $generated@@371) ($generated@@151 ($generated@@363 $generated@@144 $generated@@372))) ($generated@@152 ($generated@@363 $generated@@144 $generated@@372))))))
 :pattern ( ($generated@@89 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@305 (type $generated@@376))))
(let (($generated@@378 ($generated@@304 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@84 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@303 $generated@@76 $generated@@76)) (= (type $generated@@380) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@89 ($generated@@301 $generated@@379) ($generated@@151 ($generated@@363 $generated@@144 $generated@@380)))) (= ($generated@@89 ($generated@@374 $generated@@379) ($generated@@151 ($generated@@363 $generated@@144 $generated@@380))) ($generated@@152 ($generated@@363 $generated@@144 $generated@@380))))))
 :pattern ( ($generated@@89 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@286 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@285 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@89 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@89 ($generated@@283 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@89 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@89 ($generated@@283 $generated@@381) $generated@@385))
 :pattern ( ($generated@@89 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@89 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@304 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@303 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@89 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@89 ($generated@@301 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@89 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@89 ($generated@@301 $generated@@386) $generated@@390))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@89 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@285 $generated@@76 $generated@@76)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@283 $generated@@394) $generated@@398))) (and ($generated@@242 ($generated@@89 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@242 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@89 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@89 ($generated@@283 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@303 $generated@@76 $generated@@76)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@301 $generated@@402) $generated@@406))) (and ($generated@@242 ($generated@@89 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@242 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@89 ($generated@@301 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@82 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@84 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@305 (type $generated@@409))))
(let (($generated@@411 ($generated@@304 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@303 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@302 $generated@@411 $generated@@410)) (= ($generated@@301 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@301 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@305 (type $generated@@412))))
(let (($generated@@414 ($generated@@304 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@303 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@302 $generated@@414 $generated@@413)) (= ($generated@@342 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@342 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@305 (type $generated@@415))))
(let (($generated@@417 ($generated@@304 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@303 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@302 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@76))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@287 (type $generated@@418))))
(let (($generated@@420 ($generated@@286 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@285 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@284 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@76) (= (type $generated@@422) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@362 $generated@@418) ($generated@@269 ($generated@@218 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@305 (type $generated@@423))))
(let (($generated@@425 ($generated@@304 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@303 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@302 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@76) (= (type $generated@@427) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@373 $generated@@423) ($generated@@269 ($generated@@218 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@76) ($generated@@78 $generated@@428 $generated@@46)) (and (= ($generated@@269 ($generated@@363 $generated@@2 $generated@@428)) $generated@@428) ($generated@@140 ($generated@@363 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@78 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@76) ($generated@@78 $generated@@429 $generated@@47)) (and (= ($generated@@269 ($generated@@363 $generated@@3 $generated@@429)) $generated@@429) ($generated@@140 ($generated@@363 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@78 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@76) ($generated@@78 $generated@@430 $generated@@44)) (and (= ($generated@@269 ($generated@@363 $generated@@4 $generated@@430)) $generated@@430) ($generated@@140 ($generated@@363 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@78 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@76) ($generated@@78 $generated@@432 $generated@@45)) (and (= ($generated@@269 ($generated@@363 $generated@@431 $generated@@432)) $generated@@432) ($generated@@140 ($generated@@363 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@78 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@78 ($generated@@269 $generated@@433) $generated@@434) ($generated@@140 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@78 ($generated@@269 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@87 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@84 $generated@@436 $generated@@2)) (<= 0 ($generated@@277 $generated@@435))))
 :pattern ( ($generated@@277 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@264 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@263 $generated@@438)) (<= 0 ($generated@@262 $generated@@437))))
 :pattern ( ($generated@@262 $generated@@437))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@76)) (= (type $generated@@441) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@252 $generated@@439 $generated@@440 $generated@@441) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@440 $generated@@439) ($generated@@140 $generated@@441 ($generated@@227 $generated@@439)))))) (and (=> ($generated@@0 ($generated@@89 $generated@@441 $generated@@440)) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@76) ($generated@@78 $generated@@442 $generated@@439)) (and (=> ($generated@@0 ($generated@@89 $generated@@441 $generated@@442)) (=> (not (= $generated@@442 $generated@@440)) ($generated@@77 $generated@@439 $generated@@442 $generated@@440))) (=> (=> (and ($generated@@0 ($generated@@89 $generated@@441 $generated@@442)) (not (= $generated@@442 $generated@@440))) ($generated@@75 $generated@@439 $generated@@442 $generated@@440)) (=> ($generated@@0 ($generated@@89 $generated@@441 $generated@@442)) (=> (not (= $generated@@442 $generated@@440)) ($generated@@77 $generated@@439 $generated@@440 $generated@@442))))))
 :pattern ( ($generated@@75 $generated@@439 $generated@@440 $generated@@442))
 :pattern ( ($generated@@75 $generated@@439 $generated@@442 $generated@@440))
 :pattern ( ($generated@@89 $generated@@441 $generated@@442))
))) (= ($generated@@251 $generated@@439 $generated@@440 $generated@@441)  (and ($generated@@0 ($generated@@89 $generated@@441 $generated@@440)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@76) ($generated@@78 $generated@@443 $generated@@439)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@441 $generated@@443)) (not (= $generated@@443 $generated@@440))) ($generated@@75 $generated@@439 $generated@@443 $generated@@440)) (=> (and ($generated@@0 ($generated@@89 $generated@@441 $generated@@443)) (not (= $generated@@443 $generated@@440))) (not ($generated@@75 $generated@@439 $generated@@440 $generated@@443)))))
 :pattern ( ($generated@@75 $generated@@439 $generated@@440 $generated@@443))
 :pattern ( ($generated@@75 $generated@@439 $generated@@443 $generated@@440))
 :pattern ( ($generated@@89 $generated@@441 $generated@@443))
))))))
 :pattern ( ($generated@@251 $generated@@439 $generated@@440 $generated@@441))
))))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@391 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@391 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@399 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@399 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@76) (= (type $generated@@465) $generated@@76)) (= ($generated@@248 ($generated@@218 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@143 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@143 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@143 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@143 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@76) (= (type $generated@@475) $generated@@76)) (= ($generated@@151 ($generated@@218 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@218 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@76) (= (type $generated@@477) $generated@@76)) (= ($generated@@152 ($generated@@218 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@218 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@264 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@263 $generated@@76)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@262 $generated@@484))) ($generated@@242 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@82 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@83 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@83 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@227 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@227 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@232 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@232 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@232 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@157 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@157 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@363 $generated@@507 ($generated@@269 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@269 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@285 $generated@@76 $generated@@76)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@140 $generated@@508 ($generated@@391 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@283 $generated@@508) $generated@@511))) (and ($generated@@78 ($generated@@89 ($generated@@364 $generated@@508) $generated@@511) $generated@@510) ($generated@@78 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@89 ($generated@@364 $generated@@508) $generated@@511))
 :pattern ( ($generated@@89 ($generated@@283 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@140 $generated@@508 ($generated@@391 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@303 $generated@@76 $generated@@76)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@140 $generated@@512 ($generated@@399 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@301 $generated@@512) $generated@@515))) (and ($generated@@78 ($generated@@89 ($generated@@374 $generated@@512) $generated@@515) $generated@@514) ($generated@@78 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@512) $generated@@515))
 :pattern ( ($generated@@89 ($generated@@301 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@140 $generated@@512 ($generated@@399 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@76) (= (type $generated@@519) $generated@@76)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@218 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@218 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@76) (= (type $generated@@521) $generated@@76)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@218 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@218 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@76) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@78 $generated@@522 ($generated@@391 $generated@@523 $generated@@524))) (and (= ($generated@@269 ($generated@@363 ($generated@@285 $generated@@76 $generated@@76) $generated@@522)) $generated@@522) ($generated@@140 ($generated@@363 ($generated@@285 $generated@@76 $generated@@76) $generated@@522) ($generated@@391 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@78 $generated@@522 ($generated@@391 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@76) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@78 $generated@@525 ($generated@@399 $generated@@526 $generated@@527))) (and (= ($generated@@269 ($generated@@363 ($generated@@303 $generated@@76 $generated@@76) $generated@@525)) $generated@@525) ($generated@@140 ($generated@@363 ($generated@@303 $generated@@76 $generated@@76) $generated@@525) ($generated@@399 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@78 $generated@@525 ($generated@@399 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@76)) ($generated@@78 $generated@@530 ($generated@@143 $generated@@528 $generated@@529))) (and (= ($generated@@269 ($generated@@363 $generated@@144 $generated@@530)) $generated@@530) ($generated@@140 ($generated@@363 $generated@@144 $generated@@530) ($generated@@143 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@78 $generated@@530 ($generated@@143 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@89 ($generated@@407 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@89 ($generated@@407 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@535 $generated@@536)) $generated@@62) (= ($generated@@533 ($generated@@143 $generated@@535 $generated@@536)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@144) (= ($generated@@516 ($generated@@269 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@269 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@76) ($generated@@78 $generated@@538 ($generated@@83 0))) (and (= ($generated@@269 ($generated@@363 $generated@@2 $generated@@538)) $generated@@538) ($generated@@140 ($generated@@363 ($generated@@84 $generated@@76 $generated@@4) $generated@@538) ($generated@@83 0))))
 :pattern ( ($generated@@78 $generated@@538 ($generated@@83 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@76) (= (type $generated@@540) $generated@@64)) ($generated@@78 $generated@@539 ($generated@@227 $generated@@540))) (and (= ($generated@@269 ($generated@@363 ($generated@@84 $generated@@76 $generated@@4) $generated@@539)) $generated@@539) ($generated@@140 ($generated@@363 ($generated@@84 $generated@@76 $generated@@4) $generated@@539) ($generated@@227 $generated@@540))))
 :pattern ( ($generated@@78 $generated@@539 ($generated@@227 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@76) (= (type $generated@@542) $generated@@64)) ($generated@@78 $generated@@541 ($generated@@232 $generated@@542))) (and (= ($generated@@269 ($generated@@363 ($generated@@84 $generated@@76 $generated@@4) $generated@@541)) $generated@@541) ($generated@@140 ($generated@@363 ($generated@@84 $generated@@76 $generated@@4) $generated@@541) ($generated@@232 $generated@@542))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@232 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@76) (= (type $generated@@544) $generated@@64)) ($generated@@78 $generated@@543 ($generated@@157 $generated@@544))) (and (= ($generated@@269 ($generated@@363 ($generated@@84 $generated@@76 $generated@@2) $generated@@543)) $generated@@543) ($generated@@140 ($generated@@363 ($generated@@84 $generated@@76 $generated@@2) $generated@@543) ($generated@@157 $generated@@544))))
 :pattern ( ($generated@@78 $generated@@543 ($generated@@157 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@76) (= (type $generated@@546) $generated@@64)) ($generated@@78 $generated@@545 ($generated@@478 $generated@@546))) (and (= ($generated@@269 ($generated@@363 ($generated@@263 $generated@@76) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@363 ($generated@@263 $generated@@76) $generated@@545) ($generated@@478 $generated@@546))))
 :pattern ( ($generated@@78 $generated@@545 ($generated@@478 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@547 ($generated@@157 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@547 $generated@@550)))) ($generated@@242 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@89 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@82 $generated@@547 ($generated@@157 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@144) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@241 $generated@@553) (and ($generated@@142 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@82 $generated@@551 ($generated@@143 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@82 $generated@@551 ($generated@@143 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@242 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@242 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@144) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@241 $generated@@557) (and ($generated@@142 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@82 $generated@@555 ($generated@@143 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@82 $generated@@555 ($generated@@143 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@242 ($generated@@152 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@242 ($generated@@152 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@76) (= (type $generated@@560) $generated@@76)) (= ($generated@@218 ($generated@@237 $generated@@559) ($generated@@237 $generated@@560)) ($generated@@237 ($generated@@218 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@218 ($generated@@237 $generated@@559) ($generated@@237 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@269 ($generated@@237 $generated@@561)) ($generated@@237 ($generated@@269 $generated@@561)))
 :pattern ( ($generated@@269 ($generated@@237 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@264 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@263 $generated@@563)) (= ($generated@@262 $generated@@562) 0)) (= $generated@@562 ($generated@@261 $generated@@563))))
 :pattern ( ($generated@@262 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@84 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@277 ($generated@@90 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@277 $generated@@564) ($generated ($generated@@89 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@277 ($generated@@90 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@569) $generated@@2)) ($generated@@82 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@82 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@571) $generated@@3)) ($generated@@82 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@82 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@573) $generated@@4)) ($generated@@82 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@82 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@575) $generated@@431)) ($generated@@82 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@82 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@577) $generated@@76)) ($generated@@82 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@82 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@263 $generated@@76)) (= (type $generated@@579) $generated@@64)) (= ($generated@@140 $generated@@578 ($generated@@478 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@262 $generated@@578))) ($generated@@78 ($generated@@479 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@479 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@140 $generated@@578 ($generated@@478 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@263 $generated@@76)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@262 $generated@@582))) (< ($generated@@517 ($generated@@363 $generated@@144 ($generated@@479 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@517 ($generated@@363 $generated@@144 ($generated@@479 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@285 $generated@@76 $generated@@76)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@140 $generated@@584 ($generated@@391 $generated@@585 $generated@@586))) (and (and ($generated@@140 ($generated@@283 $generated@@584) ($generated@@227 $generated@@585)) ($generated@@140 ($generated@@331 $generated@@584) ($generated@@227 $generated@@586))) ($generated@@140 ($generated@@362 $generated@@584) ($generated@@227 ($generated@@143 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@140 $generated@@584 ($generated@@391 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@303 $generated@@76 $generated@@76)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@140 $generated@@587 ($generated@@399 $generated@@588 $generated@@589))) (and (and ($generated@@140 ($generated@@301 $generated@@587) ($generated@@232 $generated@@588)) ($generated@@140 ($generated@@342 $generated@@587) ($generated@@232 $generated@@589))) ($generated@@140 ($generated@@373 $generated@@587) ($generated@@232 ($generated@@143 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@140 $generated@@587 ($generated@@399 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@140 $generated@@590 $generated@@46))
 :pattern ( ($generated@@140 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@140 $generated@@591 $generated@@47))
 :pattern ( ($generated@@140 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@140 $generated@@592 $generated@@44))
 :pattern ( ($generated@@140 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@431) ($generated@@140 $generated@@593 $generated@@45))
 :pattern ( ($generated@@140 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@76) ($generated@@140 $generated@@594 $generated@@48))
 :pattern ( ($generated@@140 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@595) $generated@@76) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@598) $generated@@76)) (= (type $generated@@599) $generated@@76)) (= (type $generated@@600) ($generated@@164 $generated@@85 $generated@@4))) (= (type $generated@@601) $generated@@85)) (= (type $generated@@603) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@605) $generated@@76)) (= (type $generated@@607) $generated@@76)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@608  (=> (and (=> true (and ($generated@@78 $generated@@595 $generated@@596) ($generated@@242 $generated@@595 $generated@@596 $generated@@597))) (= $generated@@595 $generated@@598)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@595 $generated@@598)))))))
(let (($generated@@609  (=> (and (not (and ($generated@@78 $generated@@599 $generated@@596) ($generated@@242 $generated@@599 $generated@@596 $generated@@597))) (= (ControlFlow 0 6) 2)) $generated@@608)))
(let (($generated@@610  (=> (and (and ($generated@@78 $generated@@599 $generated@@596) ($generated@@242 $generated@@599 $generated@@596 $generated@@597)) (= (ControlFlow 0 5) 2)) $generated@@608)))
(let (($generated@@611  (=> (= $generated@@600 ($generated@@163 $generated@@601 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@610) (=> (= (ControlFlow 0 7) 6) $generated@@609)))))
(let (($generated@@612  (=> (and (and (and (and ($generated@@241 $generated@@597) ($generated@@602 $generated@@597)) (and ($generated@@140 $generated@@603 ($generated@@227 $generated@@596)) ($generated@@82 $generated@@603 ($generated@@227 $generated@@596) $generated@@597))) (and (and ($generated@@78 $generated@@598 $generated@@596) ($generated@@242 $generated@@598 $generated@@596 $generated@@597)) (=> $generated@@604 (and ($generated@@78 $generated@@605 $generated@@596) ($generated@@242 $generated@@605 $generated@@596 $generated@@597))))) (and (and (and (=> $generated@@606 (and ($generated@@78 $generated@@607 $generated@@596) ($generated@@242 $generated@@607 $generated@@596 $generated@@597))) true) (= 2 $generated@@74)) (and (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@76) (and ($generated@@78 $generated@@613 $generated@@596) ($generated@@251 $generated@@596 $generated@@613 $generated@@603)))
 :pattern ( ($generated@@251 $generated@@596 $generated@@613 $generated@@603))
)) (= (ControlFlow 0 8) 7)))) $generated@@611)))
$generated@@612))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@369 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@581 (T@T) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@601 (T@U T@U) Bool)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@76) 11))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@64) (= (type $generated@@80) $generated@@76)) (= (type $generated@@81) $generated@@76)) (or ($generated@@77 $generated@@79 $generated@@80 $generated@@81) (and (not (= 0 $generated@@74)) (and (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@78 $generated@@81 $generated@@79)) (not (= $generated@@80 $generated@@81)))))) true)
 :pattern ( ($generated@@75 $generated@@79 $generated@@80 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@83 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@76)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@76)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@148) (= (type $generated@@160) $generated@@148)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@165) $generated@@64)) ($generated@@144 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@144 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@85 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@67 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@85) (= (type $generated@@216) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@217) ($generated@@66 $generated@@4))) (= (type $generated@@219) $generated@@85)) (= (type $generated@@220) ($generated@@66 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@223 $generated@@224)) $generated@@148)
 :pattern ( ($generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@64) (= (type $generated@@226) $generated@@64)) (= (type $generated@@227) $generated@@76)) (= (type $generated@@228) $generated@@76)) (= ($generated@@144 ($generated@@222 $generated@@227 $generated@@228) ($generated@@147 $generated@@225 $generated@@226))  (and ($generated@@78 $generated@@227 $generated@@225) ($generated@@78 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@144 ($generated@@222 $generated@@227 $generated@@228) ($generated@@147 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@148) (= (type $generated@@230) $generated@@148)) (= ($generated@@154 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@154 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@64)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@234) $generated@@64)) (= ($generated@@144 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@76) ($generated@@0 ($generated@@89 $generated@@233 $generated@@235))) ($generated@@78 $generated@@235 $generated@@234))
 :pattern ( ($generated@@89 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@144 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@76) ($generated@@0 ($generated@@89 $generated@@238 $generated@@240))) ($generated@@78 $generated@@240 $generated@@239))
 :pattern ( ($generated@@89 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@64) (= (type $generated@@248) $generated@@64)) (= (type $generated@@249) $generated@@76)) (= (type $generated@@250) $generated@@76)) (= (type $generated@@251) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@245 $generated@@251)) (= ($generated@@82 ($generated@@222 $generated@@249 $generated@@250) ($generated@@147 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@82 ($generated@@222 $generated@@249 $generated@@250) ($generated@@147 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@68)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@148) (= ($generated@@146 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@254))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@76)) (= (type $generated@@259) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@256 $generated@@257 ($generated@@241 $generated@@258) ($generated@@241 $generated@@259)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@258 $generated@@257) ($generated@@144 $generated@@259 ($generated@@231 $generated@@257)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) ($generated@@241 $generated@@258))) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@76) ($generated@@78 $generated@@260 $generated@@257)) (and (=> ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) $generated@@260)) (=> (not (= $generated@@260 $generated@@258)) ($generated@@77 $generated@@257 $generated@@260 ($generated@@241 $generated@@258)))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) $generated@@260)) (not (= $generated@@260 $generated@@258))) ($generated@@75 $generated@@257 $generated@@260 ($generated@@241 $generated@@258))) (=> ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) $generated@@260)) (=> (not (= $generated@@260 $generated@@258)) ($generated@@77 $generated@@257 ($generated@@241 $generated@@258) $generated@@260))))))
 :pattern ( ($generated@@75 $generated@@257 $generated@@258 $generated@@260))
 :pattern ( ($generated@@75 $generated@@257 $generated@@260 $generated@@258))
 :pattern ( ($generated@@89 $generated@@259 $generated@@260))
))) (= ($generated@@255 $generated@@257 ($generated@@241 $generated@@258) ($generated@@241 $generated@@259))  (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) ($generated@@241 $generated@@258))) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@76) ($generated@@78 $generated@@261 $generated@@257)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) $generated@@261)) (not (= $generated@@261 $generated@@258))) ($generated@@75 $generated@@257 $generated@@261 ($generated@@241 $generated@@258))) (=> (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@259) $generated@@261)) (not (= $generated@@261 $generated@@258))) (not ($generated@@75 $generated@@257 ($generated@@241 $generated@@258) $generated@@261)))))
 :pattern ( ($generated@@75 $generated@@257 $generated@@258 $generated@@261))
 :pattern ( ($generated@@75 $generated@@257 $generated@@261 $generated@@258))
 :pattern ( ($generated@@89 $generated@@259 $generated@@261))
))))))
 :weight 3
 :pattern ( ($generated@@255 $generated@@257 ($generated@@241 $generated@@258) ($generated@@241 $generated@@259)))
))))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@148) ($generated@@146 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@76) (= (type $generated@@264) $generated@@76)) (= $generated@@262 ($generated@@222 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@76)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@246 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@82 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@246 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@279) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@280) $generated@@76)) (= (type $generated@@281) $generated@@64)) ($generated@@140 $generated@@278 $generated@@279)) ($generated@@246 $generated@@280 $generated@@281 $generated@@278)) ($generated@@246 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@140 $generated@@278 $generated@@279) ($generated@@246 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@283) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@285) $generated@@64)) ($generated@@140 $generated@@282 $generated@@283)) ($generated@@82 $generated@@284 $generated@@285 $generated@@282)) ($generated@@82 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@140 $generated@@282 $generated@@283) ($generated@@82 $generated@@284 $generated@@285 $generated@@282))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) $generated@@76)) (= (type $generated@@288) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@256 $generated@@286 $generated@@287 $generated@@288) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@287 $generated@@286) ($generated@@144 $generated@@288 ($generated@@231 $generated@@286)))))) true)
 :pattern ( ($generated@@255 $generated@@286 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@84 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@87 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@84 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@89 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@84 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@84 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@87 (type $generated@@332))))
 (=> (and (= (type $generated@@332) ($generated@@84 $generated@@334 $generated@@4)) (= (type $generated@@333) ($generated@@84 $generated@@334 $generated@@4))) (= ($generated@@331 $generated@@332 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (= ($generated@@0 ($generated@@89 $generated@@332 $generated@@335)) ($generated@@0 ($generated@@89 $generated@@333 $generated@@335))))
 :pattern ( ($generated@@89 $generated@@332 $generated@@335))
 :pattern ( ($generated@@89 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@87 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@84 $generated@@337 $generated@@2)) (= ($generated@@162 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@89 $generated@@336 $generated@@338))) (<= ($generated ($generated@@89 $generated@@336 $generated@@338)) ($generated@@289 $generated@@336))))
 :pattern ( ($generated@@89 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@162 $generated@@336))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (= (type $generated@@339) $generated@@64) (= (type $generated@@340) $generated@@76)) (= (type $generated@@341) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@256 $generated@@339 $generated@@340 ($generated@@241 $generated@@341)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@340 $generated@@339) ($generated@@144 $generated@@341 ($generated@@231 $generated@@339)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@340)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@76) ($generated@@78 $generated@@342 $generated@@339)) (and (=> ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@342)) (=> (not (= $generated@@342 $generated@@340)) ($generated@@77 $generated@@339 $generated@@342 $generated@@340))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@342)) (not (= $generated@@342 $generated@@340))) ($generated@@75 $generated@@339 $generated@@342 $generated@@340)) (=> ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@342)) (=> (not (= $generated@@342 $generated@@340)) ($generated@@77 $generated@@339 $generated@@340 $generated@@342))))))
 :pattern ( ($generated@@75 $generated@@339 $generated@@340 $generated@@342))
 :pattern ( ($generated@@75 $generated@@339 $generated@@342 $generated@@340))
 :pattern ( ($generated@@89 $generated@@341 $generated@@342))
))) (= ($generated@@255 $generated@@339 $generated@@340 ($generated@@241 $generated@@341))  (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@340)) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@76) ($generated@@78 $generated@@343 $generated@@339)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@343)) (not (= $generated@@343 $generated@@340))) ($generated@@75 $generated@@339 $generated@@343 $generated@@340)) (=> (and ($generated@@0 ($generated@@89 ($generated@@241 $generated@@341) $generated@@343)) (not (= $generated@@343 $generated@@340))) (not ($generated@@75 $generated@@339 $generated@@340 $generated@@343)))))
 :pattern ( ($generated@@75 $generated@@339 $generated@@340 $generated@@343))
 :pattern ( ($generated@@75 $generated@@339 $generated@@343 $generated@@340))
 :pattern ( ($generated@@89 $generated@@341 $generated@@343))
))))))
 :weight 3
 :pattern ( ($generated@@255 $generated@@339 $generated@@340 ($generated@@241 $generated@@341)))
))))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@299 (type $generated@@344))))
(let (($generated@@346 ($generated@@298 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@297 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@296 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@295 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@299 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@84 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@299 (type $generated@@351))))
(let (($generated@@353 ($generated@@298 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@297 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@296 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@89 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@317 (type $generated@@355))))
(let (($generated@@357 ($generated@@316 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@315 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@314 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@313 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@317 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@84 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@317 (type $generated@@362))))
(let (($generated@@364 ($generated@@316 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@315 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@314 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@89 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@367) $generated@@64)) (= ($generated@@144 $generated@@366 ($generated@@161 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@366 $generated@@368)))) ($generated@@78 $generated@@368 $generated@@367))
 :pattern ( ($generated@@89 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@144 $generated@@366 ($generated@@161 $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@87 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370 $generated@@371)) ($generated@@84 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (and (= (type $generated@@373) ($generated@@84 $generated@@376 $generated@@4)) (= (type $generated@@374) ($generated@@84 $generated@@376 $generated@@4))) (= ($generated@@0 ($generated@@89 ($generated@@369 $generated@@373 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@89 $generated@@373 $generated@@375)) (not ($generated@@0 ($generated@@89 $generated@@374 $generated@@375)))))))
 :pattern ( ($generated@@89 ($generated@@369 $generated@@373 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@377 ($generated@@231 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@76) ($generated@@0 ($generated@@89 $generated@@377 $generated@@380))) ($generated@@246 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@89 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@82 $generated@@377 ($generated@@231 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@381 ($generated@@236 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@76) ($generated@@0 ($generated@@89 $generated@@381 $generated@@384))) ($generated@@246 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@89 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@82 $generated@@381 ($generated@@236 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@89 ($generated@@290 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@89 ($generated@@290 $generated@@386) $generated@@385)))
)))
(assert  (and (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@387 $generated@@390)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@387 $generated@@390))
)) (forall (($generated@@391 T@T) ($generated@@392 T@U) ) (! (= (type ($generated@@388 $generated@@391 $generated@@392)) $generated@@391)
 :pattern ( ($generated@@388 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@299 (type $generated@@393))))
(let (($generated@@395 ($generated@@298 (type $generated@@393))))
(= (type ($generated@@389 $generated@@393)) ($generated@@84 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@389 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@397) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@387 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@396) ($generated@@155 ($generated@@388 $generated@@148 $generated@@397)))) (= ($generated@@89 ($generated@@389 $generated@@396) ($generated@@155 ($generated@@388 $generated@@148 $generated@@397))) ($generated@@156 ($generated@@388 $generated@@148 $generated@@397))))))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@317 (type $generated@@401))))
(let (($generated@@403 ($generated@@316 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@84 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@405) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@404) ($generated@@155 ($generated@@388 $generated@@148 $generated@@405)))) (= ($generated@@89 ($generated@@399 $generated@@404) ($generated@@155 ($generated@@388 $generated@@148 $generated@@405))) ($generated@@156 ($generated@@388 $generated@@148 $generated@@405))))))
 :pattern ( ($generated@@89 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@298 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@297 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@89 ($generated@@348 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@89 ($generated@@389 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@89 ($generated@@348 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@316 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@315 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@89 ($generated@@359 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@89 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@411) $generated@@415))
 :pattern ( ($generated@@89 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@89 ($generated@@359 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@64)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@419) $generated@@423))) (and ($generated@@246 ($generated@@89 ($generated@@389 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@246 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@419) $generated@@423))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@82 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@427) $generated@@431))) (and ($generated@@246 ($generated@@89 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@246 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@89 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@82 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@87 (type $generated@@432))))
 (=> (and (and (= (type $generated@@432) ($generated@@84 $generated@@434 $generated@@4)) (= (type $generated@@433) ($generated@@84 $generated@@434 $generated@@4))) ($generated@@331 $generated@@432 $generated@@433)) (= $generated@@432 $generated@@433)))
 :pattern ( ($generated@@331 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(= (type ($generated@@435 $generated@@436 $generated@@437)) ($generated@@84 $generated@@438 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@440)))
 (=> (and (and (= (type $generated@@439) ($generated@@84 $generated@@442 $generated@@4)) (= (type $generated@@441) $generated@@442)) ($generated@@0 ($generated@@89 $generated@@439 $generated@@441))) ($generated@@0 ($generated@@89 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))))
 :pattern ( ($generated@@435 $generated@@439 $generated@@440) ($generated@@89 $generated@@439 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@444)))
 (=> (and (= (type $generated@@443) ($generated@@84 $generated@@446 $generated@@4)) (= (type $generated@@445) $generated@@446)) (= ($generated@@0 ($generated@@89 ($generated@@435 $generated@@443 $generated@@444) $generated@@445))  (or (= $generated@@445 $generated@@444) ($generated@@0 ($generated@@89 $generated@@443 $generated@@445))))))
 :pattern ( ($generated@@89 ($generated@@435 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@447) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@448) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@449) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@447 $generated@@449))) (and ($generated@@140 $generated@@447 $generated@@448) ($generated@@140 $generated@@448 $generated@@449))) ($generated@@140 $generated@@447 $generated@@449))
 :pattern ( ($generated@@140 $generated@@447 $generated@@448) ($generated@@140 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
 (=> (and (and (= (type $generated@@450) ($generated@@84 $generated@@453 $generated@@4)) (= (type $generated@@451) ($generated@@84 $generated@@453 $generated@@4))) ($generated@@0 ($generated@@89 $generated@@451 $generated@@452))) (not ($generated@@0 ($generated@@89 ($generated@@369 $generated@@450 $generated@@451) $generated@@452)))))
 :pattern ( ($generated@@369 $generated@@450 $generated@@451) ($generated@@89 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@84 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@317 (type $generated@@456))))
(let (($generated@@458 ($generated@@316 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@315 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@314 $generated@@458 $generated@@457)) (= ($generated@@313 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@313 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@317 (type $generated@@459))))
(let (($generated@@461 ($generated@@316 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@315 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@314 $generated@@461 $generated@@460)) (= ($generated@@359 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@359 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@317 (type $generated@@462))))
(let (($generated@@464 ($generated@@316 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@315 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@314 $generated@@464 $generated@@463)) (= ($generated@@398 $generated@@462) ($generated@@454 $generated@@76))))))
 :pattern ( ($generated@@398 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@299 (type $generated@@465))))
(let (($generated@@467 ($generated@@298 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@297 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@296 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@76) (= (type $generated@@469) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@387 $generated@@465) ($generated@@273 ($generated@@222 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@387 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@317 (type $generated@@470))))
(let (($generated@@472 ($generated@@316 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@315 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@314 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@76) (= (type $generated@@474) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@398 $generated@@470) ($generated@@273 ($generated@@222 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@398 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@76) ($generated@@78 $generated@@475 $generated@@46)) (and (= ($generated@@273 ($generated@@388 $generated@@2 $generated@@475)) $generated@@475) ($generated@@144 ($generated@@388 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@78 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@76) ($generated@@78 $generated@@476 $generated@@47)) (and (= ($generated@@273 ($generated@@388 $generated@@3 $generated@@476)) $generated@@476) ($generated@@144 ($generated@@388 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@78 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@76) ($generated@@78 $generated@@477 $generated@@44)) (and (= ($generated@@273 ($generated@@388 $generated@@4 $generated@@477)) $generated@@477) ($generated@@144 ($generated@@388 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@78 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@76) ($generated@@78 $generated@@479 $generated@@45)) (and (= ($generated@@273 ($generated@@388 $generated@@478 $generated@@479)) $generated@@479) ($generated@@144 ($generated@@388 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@78 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@78 ($generated@@273 $generated@@480) $generated@@481) ($generated@@144 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@78 ($generated@@273 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@87 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@84 $generated@@483 $generated@@2)) (<= 0 ($generated@@289 $generated@@482))))
 :pattern ( ($generated@@289 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@268 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@267 $generated@@485)) (<= 0 ($generated@@266 $generated@@484))))
 :pattern ( ($generated@@266 $generated@@484))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@76)) (= (type $generated@@488) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@256 $generated@@486 $generated@@487 $generated@@488) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@487 $generated@@486) ($generated@@144 $generated@@488 ($generated@@231 $generated@@486)))))) (and (=> ($generated@@0 ($generated@@89 $generated@@488 $generated@@487)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@76) ($generated@@78 $generated@@489 $generated@@486)) (and (=> ($generated@@0 ($generated@@89 $generated@@488 $generated@@489)) (=> (not (= $generated@@489 $generated@@487)) ($generated@@77 $generated@@486 $generated@@489 $generated@@487))) (=> (=> (and ($generated@@0 ($generated@@89 $generated@@488 $generated@@489)) (not (= $generated@@489 $generated@@487))) ($generated@@75 $generated@@486 $generated@@489 $generated@@487)) (=> ($generated@@0 ($generated@@89 $generated@@488 $generated@@489)) (=> (not (= $generated@@489 $generated@@487)) ($generated@@77 $generated@@486 $generated@@487 $generated@@489))))))
 :pattern ( ($generated@@75 $generated@@486 $generated@@487 $generated@@489))
 :pattern ( ($generated@@75 $generated@@486 $generated@@489 $generated@@487))
 :pattern ( ($generated@@89 $generated@@488 $generated@@489))
))) (= ($generated@@255 $generated@@486 $generated@@487 $generated@@488)  (and ($generated@@0 ($generated@@89 $generated@@488 $generated@@487)) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@76) ($generated@@78 $generated@@490 $generated@@486)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@488 $generated@@490)) (not (= $generated@@490 $generated@@487))) ($generated@@75 $generated@@486 $generated@@490 $generated@@487)) (=> (and ($generated@@0 ($generated@@89 $generated@@488 $generated@@490)) (not (= $generated@@490 $generated@@487))) (not ($generated@@75 $generated@@486 $generated@@487 $generated@@490)))))
 :pattern ( ($generated@@75 $generated@@486 $generated@@487 $generated@@490))
 :pattern ( ($generated@@75 $generated@@486 $generated@@490 $generated@@487))
 :pattern ( ($generated@@89 $generated@@488 $generated@@490))
))))))
 :pattern ( ($generated@@255 $generated@@486 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@416 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@416 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@416 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@416 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@72 ($generated@@416 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@501 ($generated@@424 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@424 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@505 ($generated@@424 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@424 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@72 ($generated@@424 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@76) (= (type $generated@@512) $generated@@76)) (= ($generated@@252 ($generated@@222 $generated@@511 $generated@@512)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@147 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@147 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@517 ($generated@@147 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@147 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@76) (= (type $generated@@522) $generated@@76)) (= ($generated@@155 ($generated@@222 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@222 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@76) (= (type $generated@@524) $generated@@76)) (= ($generated@@156 ($generated@@222 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@222 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@268 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@267 $generated@@76)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@266 $generated@@531))) ($generated@@246 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@82 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (=> (= (type $generated@@535) ($generated@@84 $generated@@537 $generated@@4)) ($generated@@0 ($generated@@89 ($generated@@435 $generated@@535 $generated@@536) $generated@@536))))
 :pattern ( ($generated@@435 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@83 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@83 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@64)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@540 ($generated@@231 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@231 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@64) (= ($generated@@72 ($generated@@231 $generated@@543)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@236 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@236 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@547)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@161 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@161 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@72 ($generated@@161 $generated@@551)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@525 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@525 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@72 ($generated@@525 $generated@@555)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@388 $generated@@557 ($generated@@273 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@273 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) (= ($generated@@144 $generated@@558 ($generated@@416 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@558) $generated@@561))) (and ($generated@@78 ($generated@@89 ($generated@@389 $generated@@558) $generated@@561) $generated@@560) ($generated@@78 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@558) $generated@@561))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@144 $generated@@558 ($generated@@416 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@144 $generated@@562 ($generated@@424 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@562) $generated@@565))) (and ($generated@@78 ($generated@@89 ($generated@@399 $generated@@562) $generated@@565) $generated@@564) ($generated@@78 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@89 ($generated@@399 $generated@@562) $generated@@565))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@144 $generated@@562 ($generated@@424 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@76) (= (type $generated@@569) $generated@@76)) (< ($generated@@566 $generated@@568) ($generated@@567 ($generated@@222 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@222 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@76) (= (type $generated@@571) $generated@@76)) (< ($generated@@566 $generated@@571) ($generated@@567 ($generated@@222 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@222 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@76) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@78 $generated@@572 ($generated@@416 $generated@@573 $generated@@574))) (and (= ($generated@@273 ($generated@@388 ($generated@@297 $generated@@76 $generated@@76) $generated@@572)) $generated@@572) ($generated@@144 ($generated@@388 ($generated@@297 $generated@@76 $generated@@76) $generated@@572) ($generated@@416 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@78 $generated@@572 ($generated@@416 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@76) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@78 $generated@@575 ($generated@@424 $generated@@576 $generated@@577))) (and (= ($generated@@273 ($generated@@388 ($generated@@315 $generated@@76 $generated@@76) $generated@@575)) $generated@@575) ($generated@@144 ($generated@@388 ($generated@@315 $generated@@76 $generated@@76) $generated@@575) ($generated@@424 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@78 $generated@@575 ($generated@@424 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@64) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@76)) ($generated@@78 $generated@@580 ($generated@@147 $generated@@578 $generated@@579))) (and (= ($generated@@273 ($generated@@388 $generated@@148 $generated@@580)) $generated@@580) ($generated@@144 ($generated@@388 $generated@@148 $generated@@580) ($generated@@147 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@78 $generated@@580 ($generated@@147 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@582 T@T) ) (! (= (type ($generated@@581 $generated@@582)) ($generated@@84 $generated@@582 $generated@@4))
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@89 ($generated@@581 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@89 ($generated@@581 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@89 ($generated@@454 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@89 ($generated@@454 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@147 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@148) (= ($generated@@566 ($generated@@273 $generated@@591)) ($generated@@567 $generated@@591)))
 :pattern ( ($generated@@566 ($generated@@273 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@76) ($generated@@78 $generated@@592 ($generated@@83 0))) (and (= ($generated@@273 ($generated@@388 $generated@@2 $generated@@592)) $generated@@592) ($generated@@144 ($generated@@388 ($generated@@84 $generated@@76 $generated@@4) $generated@@592) ($generated@@83 0))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@83 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@76) (= (type $generated@@594) $generated@@64)) ($generated@@78 $generated@@593 ($generated@@231 $generated@@594))) (and (= ($generated@@273 ($generated@@388 ($generated@@84 $generated@@76 $generated@@4) $generated@@593)) $generated@@593) ($generated@@144 ($generated@@388 ($generated@@84 $generated@@76 $generated@@4) $generated@@593) ($generated@@231 $generated@@594))))
 :pattern ( ($generated@@78 $generated@@593 ($generated@@231 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@76) (= (type $generated@@596) $generated@@64)) ($generated@@78 $generated@@595 ($generated@@236 $generated@@596))) (and (= ($generated@@273 ($generated@@388 ($generated@@84 $generated@@76 $generated@@4) $generated@@595)) $generated@@595) ($generated@@144 ($generated@@388 ($generated@@84 $generated@@76 $generated@@4) $generated@@595) ($generated@@236 $generated@@596))))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@236 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@76) (= (type $generated@@598) $generated@@64)) ($generated@@78 $generated@@597 ($generated@@161 $generated@@598))) (and (= ($generated@@273 ($generated@@388 ($generated@@84 $generated@@76 $generated@@2) $generated@@597)) $generated@@597) ($generated@@144 ($generated@@388 ($generated@@84 $generated@@76 $generated@@2) $generated@@597) ($generated@@161 $generated@@598))))
 :pattern ( ($generated@@78 $generated@@597 ($generated@@161 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@76) (= (type $generated@@600) $generated@@64)) ($generated@@78 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@273 ($generated@@388 ($generated@@267 $generated@@76) $generated@@599)) $generated@@599) ($generated@@144 ($generated@@388 ($generated@@267 $generated@@76) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@87 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@84 $generated@@604 $generated@@4)) (= (type $generated@@603) ($generated@@84 $generated@@604 $generated@@4))) (= ($generated@@601 $generated@@602 $generated@@603) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@604) ($generated@@0 ($generated@@89 $generated@@602 $generated@@605))) ($generated@@0 ($generated@@89 $generated@@603 $generated@@605)))
 :pattern ( ($generated@@89 $generated@@602 $generated@@605))
 :pattern ( ($generated@@89 $generated@@603 $generated@@605))
)))))
 :pattern ( ($generated@@601 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@606 ($generated@@161 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@606 $generated@@609)))) ($generated@@246 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@89 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@82 $generated@@606 ($generated@@161 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@148) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@245 $generated@@612) (and ($generated@@146 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@64) ($generated@@82 $generated@@610 ($generated@@147 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@82 $generated@@610 ($generated@@147 $generated@@611 $generated@@613) $generated@@612))
))))) ($generated@@246 ($generated@@155 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@246 ($generated@@155 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@148) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@245 $generated@@616) (and ($generated@@146 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@64) ($generated@@82 $generated@@614 ($generated@@147 $generated@@617 $generated@@615) $generated@@616))
 :pattern ( ($generated@@82 $generated@@614 ($generated@@147 $generated@@617 $generated@@615) $generated@@616))
))))) ($generated@@246 ($generated@@156 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@246 ($generated@@156 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@76) (= (type $generated@@619) $generated@@76)) (= ($generated@@222 ($generated@@241 $generated@@618) ($generated@@241 $generated@@619)) ($generated@@241 ($generated@@222 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@222 ($generated@@241 $generated@@618) ($generated@@241 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@273 ($generated@@241 $generated@@620)) ($generated@@241 ($generated@@273 $generated@@620)))
 :pattern ( ($generated@@273 ($generated@@241 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@268 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@267 $generated@@622)) (= ($generated@@266 $generated@@621) 0)) (= $generated@@621 ($generated@@265 $generated@@622))))
 :pattern ( ($generated@@266 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@84 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@289 ($generated@@90 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@289 $generated@@623) ($generated ($generated@@89 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@289 ($generated@@90 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@628) $generated@@2)) ($generated@@82 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@82 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@630) $generated@@3)) ($generated@@82 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@82 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@632) $generated@@4)) ($generated@@82 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@82 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@634) $generated@@478)) ($generated@@82 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@82 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@636) $generated@@76)) ($generated@@82 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@82 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@267 $generated@@76)) (= (type $generated@@638) $generated@@64)) (= ($generated@@144 $generated@@637 ($generated@@525 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@266 $generated@@637))) ($generated@@78 ($generated@@526 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@526 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@144 $generated@@637 ($generated@@525 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@267 $generated@@76)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@266 $generated@@641))) (< ($generated@@567 ($generated@@388 $generated@@148 ($generated@@526 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@567 ($generated@@388 $generated@@148 ($generated@@526 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@297 $generated@@76 $generated@@76)) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) $generated@@64)) ($generated@@144 $generated@@643 ($generated@@416 $generated@@644 $generated@@645))) (and (and ($generated@@144 ($generated@@295 $generated@@643) ($generated@@231 $generated@@644)) ($generated@@144 ($generated@@348 $generated@@643) ($generated@@231 $generated@@645))) ($generated@@144 ($generated@@387 $generated@@643) ($generated@@231 ($generated@@147 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@144 $generated@@643 ($generated@@416 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@315 $generated@@76 $generated@@76)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@144 $generated@@646 ($generated@@424 $generated@@647 $generated@@648))) (and (and ($generated@@144 ($generated@@313 $generated@@646) ($generated@@236 $generated@@647)) ($generated@@144 ($generated@@359 $generated@@646) ($generated@@236 $generated@@648))) ($generated@@144 ($generated@@398 $generated@@646) ($generated@@236 ($generated@@147 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@144 $generated@@646 ($generated@@424 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@2) ($generated@@144 $generated@@649 $generated@@46))
 :pattern ( ($generated@@144 $generated@@649 $generated@@46))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@3) ($generated@@144 $generated@@650 $generated@@47))
 :pattern ( ($generated@@144 $generated@@650 $generated@@47))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@4) ($generated@@144 $generated@@651 $generated@@44))
 :pattern ( ($generated@@144 $generated@@651 $generated@@44))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@478) ($generated@@144 $generated@@652 $generated@@45))
 :pattern ( ($generated@@144 $generated@@652 $generated@@45))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@76) ($generated@@144 $generated@@653 $generated@@48))
 :pattern ( ($generated@@144 $generated@@653 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Bool)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Bool)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Bool)
(declare-fun $generated@@683 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@655) $generated@@76) (= (type $generated@@659) $generated@@64)) (= (type $generated@@662) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@656) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@660) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@661) $generated@@76)) (= (type $generated@@664) $generated@@76)) (= (type $generated@@657) $generated@@76)) (= (type $generated@@665) $generated@@76)) (= (type $generated@@667) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@666) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@668) $generated@@76)) (= (type $generated@@654) $generated@@76)) (= (type $generated@@670) $generated@@76)) (= (type $generated@@671) $generated@@85)) (= (type $generated@@672) ($generated@@168 $generated@@85 $generated@@4))) (= (type $generated@@674) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@675) $generated@@76)) (= (type $generated@@676) $generated@@76)) (= (type $generated@@678) $generated@@76)) (= (type $generated@@679) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@681) $generated@@76)) (= (type $generated@@683) $generated@@76)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@684  (=> (= (ControlFlow 0 28) (- 0 27)) (= $generated@@654 $generated@@655))))
(let (($generated@@685  (=> ($generated@@331 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@657)) (and (=> (= (ControlFlow 0 29) (- 0 31)) $generated@@658) (=> $generated@@658 (and (=> (= (ControlFlow 0 29) (- 0 30)) true) (=> (and (= $generated@@654 $generated@@657) (= (ControlFlow 0 29) 28)) $generated@@684)))))))
(let (($generated@@686  (and (=> (= (ControlFlow 0 5) (- 0 9)) (exists (($generated@@687 T@U) ) (!  (and (= (type $generated@@687) $generated@@76) (and ($generated@@78 $generated@@687 $generated@@659) ($generated@@0 ($generated@@89 $generated@@660 $generated@@687))))
 :no-pattern (type $generated@@687)
 :no-pattern ($generated $generated@@687)
 :no-pattern ($generated@@0 $generated@@687)
))) (=> (exists (($generated@@688 T@U) ) (!  (and (= (type $generated@@688) $generated@@76) (and ($generated@@78 $generated@@688 $generated@@659) ($generated@@0 ($generated@@89 $generated@@660 $generated@@688))))
 :no-pattern (type $generated@@688)
 :no-pattern ($generated $generated@@688)
 :no-pattern ($generated@@0 $generated@@688)
)) (=> (and (=> true (and ($generated@@78 $generated@@661 $generated@@659) ($generated@@246 $generated@@661 $generated@@659 $generated@@662))) ($generated@@0 ($generated@@89 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and ($generated@@601 $generated@@660 $generated@@656) (not ($generated@@601 $generated@@656 $generated@@660)))) (=> (and ($generated@@601 $generated@@660 $generated@@656) (not ($generated@@601 $generated@@656 $generated@@660))) (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@660) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@660) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@660) ($generated@@0 ($generated@@89 $generated@@660 $generated@@655)))))) (=> (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@660) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@660) ($generated@@0 ($generated@@89 $generated@@660 $generated@@655))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@660) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@660) (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@76) ($generated@@78 $generated@@689 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@660 $generated@@689)) (not (= $generated@@689 $generated@@655))) ($generated@@75 $generated@@659 $generated@@689 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@660 $generated@@689)) (not (= $generated@@689 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@689)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@689))
 :pattern ( ($generated@@75 $generated@@659 $generated@@689 $generated@@655))
 :pattern ( ($generated@@89 $generated@@660 $generated@@689))
)))))) (=> (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@660) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@660) (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@76) ($generated@@78 $generated@@690 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@660 $generated@@690)) (not (= $generated@@690 $generated@@655))) ($generated@@75 $generated@@659 $generated@@690 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@660 $generated@@690)) (not (= $generated@@690 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@690)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@690))
 :pattern ( ($generated@@75 $generated@@659 $generated@@690 $generated@@655))
 :pattern ( ($generated@@89 $generated@@660 $generated@@690))
))))) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@663 ($generated@@0 ($generated@@89 $generated@@660 $generated@@661))))))))))))))))
(let (($generated@@691  (=> (and (not (and ($generated@@78 $generated@@664 $generated@@659) ($generated@@246 $generated@@664 $generated@@659 $generated@@662))) (= (ControlFlow 0 11) 5)) $generated@@686)))
(let (($generated@@692  (=> (and (and ($generated@@78 $generated@@664 $generated@@659) ($generated@@246 $generated@@664 $generated@@659 $generated@@662)) (= (ControlFlow 0 10) 5)) $generated@@686)))
(let (($generated@@693  (=> (not ($generated@@75 $generated@@659 $generated@@657 $generated@@665)) (and (=> (= (ControlFlow 0 14) (- 0 17)) true) (=> (= $generated@@666 ($generated@@369 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@665))) (and (=> (= (ControlFlow 0 14) (- 0 16)) $generated@@658) (=> $generated@@658 (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@0 ($generated@@89 $generated@@666 $generated@@657))) (=> ($generated@@0 ($generated@@89 $generated@@666 $generated@@657)) (=> (= $generated@@660 $generated@@666) (and (=> (= (ControlFlow 0 14) 10) $generated@@692) (=> (= (ControlFlow 0 14) 11) $generated@@691))))))))))))
(let (($generated@@694  (=> ($generated@@75 $generated@@659 $generated@@657 $generated@@665) (and (=> (= (ControlFlow 0 12) (- 0 13)) $generated@@658) (=> $generated@@658 (=> (and (= $generated@@667 ($generated@@369 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@657))) (= $generated@@660 $generated@@667)) (and (=> (= (ControlFlow 0 12) 10) $generated@@692) (=> (= (ControlFlow 0 12) 11) $generated@@691))))))))
(let (($generated@@695  (and (=> (= (ControlFlow 0 18) (- 0 22)) (exists (($generated@@696 T@U) ) (!  (and (= (type $generated@@696) $generated@@76) (and ($generated@@78 $generated@@696 $generated@@659) ($generated@@0 ($generated@@89 ($generated@@369 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@657)) $generated@@696))))
 :no-pattern (type $generated@@696)
 :no-pattern ($generated $generated@@696)
 :no-pattern ($generated@@0 $generated@@696)
))) (=> (exists (($generated@@697 T@U) ) (!  (and (= (type $generated@@697) $generated@@76) (and ($generated@@78 $generated@@697 $generated@@659) ($generated@@0 ($generated@@89 ($generated@@369 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@657)) $generated@@697))))
 :no-pattern (type $generated@@697)
 :no-pattern ($generated $generated@@697)
 :no-pattern ($generated@@0 $generated@@697)
)) (=> (and (=> true (and ($generated@@78 $generated@@665 $generated@@659) ($generated@@246 $generated@@665 $generated@@659 $generated@@662))) ($generated@@0 ($generated@@89 ($generated@@369 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@657)) $generated@@665))) (and (=> (= (ControlFlow 0 18) (- 0 21)) $generated@@658) (=> $generated@@658 (and (=> (= (ControlFlow 0 18) (- 0 20)) true) (=> (and ($generated@@246 $generated@@657 $generated@@659 $generated@@662) ($generated@@246 $generated@@665 $generated@@659 $generated@@662)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@657 $generated@@665))) (=> (not (= $generated@@657 $generated@@665)) (=> (and ($generated@@77 $generated@@659 $generated@@657 $generated@@665) ($generated@@77 $generated@@659 $generated@@657 $generated@@665)) (and (=> (= (ControlFlow 0 18) 12) $generated@@694) (=> (= (ControlFlow 0 18) 14) $generated@@693))))))))))))))
(let (($generated@@698  (=> (and (not (and ($generated@@78 $generated@@668 $generated@@659) ($generated@@246 $generated@@668 $generated@@659 $generated@@662))) (= (ControlFlow 0 25) 18)) $generated@@695)))
(let (($generated@@699  (=> (and ($generated@@78 $generated@@668 $generated@@659) ($generated@@246 $generated@@668 $generated@@659 $generated@@662)) (and (=> (= (ControlFlow 0 23) (- 0 24)) $generated@@658) (=> $generated@@658 (=> (= (ControlFlow 0 23) 18) $generated@@695))))))
(let (($generated@@700  (=> (not ($generated@@331 $generated@@656 ($generated@@435 ($generated@@581 $generated@@76) $generated@@657))) (and (=> (= (ControlFlow 0 26) 23) $generated@@699) (=> (= (ControlFlow 0 26) 25) $generated@@698)))))
(let (($generated@@701  (=> $generated@@663 (and (=> (= (ControlFlow 0 32) (- 0 33)) $generated@@658) (=> $generated@@658 (and (=> (= (ControlFlow 0 32) 29) $generated@@685) (=> (= (ControlFlow 0 32) 26) $generated@@700)))))))
(let (($generated@@702  (=> (not $generated@@663) (=> (and ($generated@@246 $generated@@655 $generated@@659 $generated@@662) ($generated@@82 $generated@@656 ($generated@@231 $generated@@659) $generated@@662)) (=> (and (and ($generated@@256 $generated@@659 $generated@@655 $generated@@656) ($generated@@256 $generated@@659 $generated@@655 $generated@@656)) (and ($generated@@255 $generated@@659 $generated@@655 $generated@@656) (= (ControlFlow 0 3) (- 0 2)))) $generated@@658)))))
(let (($generated@@703  (and (=> (= (ControlFlow 0 34) 3) $generated@@702) (=> (= (ControlFlow 0 34) 32) $generated@@701))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (=> $generated@@658 (and ($generated@@78 $generated@@657 $generated@@659) ($generated@@246 $generated@@657 $generated@@659 $generated@@662))) (=> (and (and ($generated@@144 $generated@@656 ($generated@@231 $generated@@659)) ($generated@@82 $generated@@656 ($generated@@231 $generated@@659) $generated@@662)) (=> $generated@@669 (and ($generated@@78 $generated@@670 $generated@@659) ($generated@@246 $generated@@670 $generated@@659 $generated@@662)))) (=> (and (and (and (and (and (not false) $generated@@658) true) (=> $generated@@663 ($generated@@256 $generated@@659 $generated@@655 $generated@@656))) (and (and (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@656) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@656) ($generated@@0 ($generated@@89 $generated@@656 $generated@@655))))) (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@656) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@656) (forall (($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@76) ($generated@@78 $generated@@706 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@656 $generated@@706)) (not (= $generated@@706 $generated@@655))) ($generated@@75 $generated@@659 $generated@@706 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@656 $generated@@706)) (not (= $generated@@706 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@706)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@706))
 :pattern ( ($generated@@75 $generated@@659 $generated@@706 $generated@@655))
 :pattern ( ($generated@@89 $generated@@656 $generated@@706))
)))))) (and (=> $generated@@663 (and ($generated@@256 $generated@@659 $generated@@655 $generated@@656) (and ($generated@@255 $generated@@659 $generated@@655 $generated@@656) (and ($generated@@0 ($generated@@89 $generated@@656 $generated@@655)) (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@76) ($generated@@78 $generated@@707 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@656 $generated@@707)) (not (= $generated@@707 $generated@@655))) ($generated@@75 $generated@@659 $generated@@707 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@656 $generated@@707)) (not (= $generated@@707 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@707)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@707))
 :pattern ( ($generated@@75 $generated@@659 $generated@@707 $generated@@655))
 :pattern ( ($generated@@89 $generated@@656 $generated@@707))
)))))) (=> $generated@@663 true)))) (and (and (and (=> $generated@@663 ($generated@@0 ($generated@@89 $generated@@656 $generated@@657))) (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@85) (=> (and (not (= $generated@@708 $generated@@671)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@662 $generated@@708) $generated@@60))) (= ($generated@@89 $generated@@662 $generated@@708) ($generated@@89 $generated@@662 $generated@@708))))
 :pattern ( ($generated@@89 $generated@@662 $generated@@708))
))) (and ($generated@@140 $generated@@662 $generated@@662) (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@67 (type $generated@@710))))
 (=> (and (and (= (type $generated@@709) $generated@@85) (= (type $generated@@710) ($generated@@66 $generated@@711))) (and (not (= $generated@@709 $generated@@671)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@662 $generated@@709) $generated@@60)))) (or (= ($generated@@91 ($generated@@89 $generated@@662 $generated@@709) $generated@@710) ($generated@@91 ($generated@@89 $generated@@662 $generated@@709) $generated@@710)) ($generated@@0 ($generated@@166 $generated@@672 $generated@@709 $generated@@710)))))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@662 $generated@@709) $generated@@710))
)))) (and (and (=> $generated@@673 $generated@@673) (=> true $generated@@658)) (and ($generated@@601 $generated@@656 $generated@@674) (=> ($generated@@331 $generated@@656 $generated@@674) true))))) (and (=> (= (ControlFlow 0 35) 1) $generated@@704) (=> (= (ControlFlow 0 35) 34) $generated@@703)))))))
(let (($generated@@712  (and (=> (= (ControlFlow 0 36) (- 0 40)) (exists (($generated@@713 T@U) ) (!  (and (= (type $generated@@713) $generated@@76) (and ($generated@@78 $generated@@713 $generated@@659) ($generated@@0 ($generated@@89 $generated@@674 $generated@@713))))
 :no-pattern (type $generated@@713)
 :no-pattern ($generated $generated@@713)
 :no-pattern ($generated@@0 $generated@@713)
))) (=> (exists (($generated@@714 T@U) ) (!  (and (= (type $generated@@714) $generated@@76) (and ($generated@@78 $generated@@714 $generated@@659) ($generated@@0 ($generated@@89 $generated@@674 $generated@@714))))
 :no-pattern (type $generated@@714)
 :no-pattern ($generated $generated@@714)
 :no-pattern ($generated@@0 $generated@@714)
)) (=> (and (=> true (and ($generated@@78 $generated@@675 $generated@@659) ($generated@@246 $generated@@675 $generated@@659 $generated@@662))) ($generated@@0 ($generated@@89 $generated@@674 $generated@@675))) (and (=> (= (ControlFlow 0 36) (- 0 39)) (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@674) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@674) ($generated@@0 ($generated@@89 $generated@@674 $generated@@655)))))) (=> (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@674) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@674) ($generated@@0 ($generated@@89 $generated@@674 $generated@@655))))) (and (=> (= (ControlFlow 0 36) (- 0 38)) (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@674) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@674) (forall (($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@76) ($generated@@78 $generated@@715 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@715)) (not (= $generated@@715 $generated@@655))) ($generated@@75 $generated@@659 $generated@@715 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@715)) (not (= $generated@@715 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@715)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@715))
 :pattern ( ($generated@@75 $generated@@659 $generated@@715 $generated@@655))
 :pattern ( ($generated@@89 $generated@@674 $generated@@715))
)))))) (=> (=> $generated@@663 (=> ($generated@@256 $generated@@659 $generated@@655 $generated@@674) (or ($generated@@255 $generated@@659 $generated@@655 $generated@@674) (forall (($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@76) ($generated@@78 $generated@@716 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@716)) (not (= $generated@@716 $generated@@655))) ($generated@@75 $generated@@659 $generated@@716 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@716)) (not (= $generated@@716 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@716)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@716))
 :pattern ( ($generated@@75 $generated@@659 $generated@@716 $generated@@655))
 :pattern ( ($generated@@89 $generated@@674 $generated@@716))
))))) (and (=> (= (ControlFlow 0 36) (- 0 37)) (=> $generated@@663 ($generated@@0 ($generated@@89 $generated@@674 $generated@@675)))) (=> (=> $generated@@663 ($generated@@0 ($generated@@89 $generated@@674 $generated@@675))) (=> (= (ControlFlow 0 36) 35) $generated@@705))))))))))))
(let (($generated@@717  (=> (and (not (and ($generated@@78 $generated@@676 $generated@@659) ($generated@@246 $generated@@676 $generated@@659 $generated@@662))) (= (ControlFlow 0 42) 36)) $generated@@712)))
(let (($generated@@718  (=> (and (and ($generated@@78 $generated@@676 $generated@@659) ($generated@@246 $generated@@676 $generated@@659 $generated@@662)) (= (ControlFlow 0 41) 36)) $generated@@712)))
(let (($generated@@719  (=> (= $generated@@672 ($generated@@167 $generated@@671 $generated@@662 $generated@@60 false)) (and (=> (= (ControlFlow 0 43) 41) $generated@@718) (=> (= (ControlFlow 0 43) 42) $generated@@717)))))
(let (($generated@@720  (=> (and (and (and ($generated@@245 $generated@@662) ($generated@@677 $generated@@662)) (and ($generated@@144 $generated@@674 ($generated@@231 $generated@@659)) ($generated@@82 $generated@@674 ($generated@@231 $generated@@659) $generated@@662))) (and (and ($generated@@78 $generated@@655 $generated@@659) ($generated@@246 $generated@@655 $generated@@659 $generated@@662)) (=> $generated@@673 (and ($generated@@78 $generated@@678 $generated@@659) ($generated@@246 $generated@@678 $generated@@659 $generated@@662))))) (=> (and (and (and (and ($generated@@144 $generated@@679 ($generated@@231 $generated@@659)) ($generated@@82 $generated@@679 ($generated@@231 $generated@@659) $generated@@662)) true) (and (=> $generated@@680 (and ($generated@@78 $generated@@681 $generated@@659) ($generated@@246 $generated@@681 $generated@@659 $generated@@662))) true)) (and (and (and (=> $generated@@682 (and ($generated@@78 $generated@@683 $generated@@659) ($generated@@246 $generated@@683 $generated@@659 $generated@@662))) true) (= 2 $generated@@74)) (and (and ($generated@@256 $generated@@659 $generated@@655 $generated@@674) (and ($generated@@255 $generated@@659 $generated@@655 $generated@@674) (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@655)) (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@76) ($generated@@78 $generated@@721 $generated@@659)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@721)) (not (= $generated@@721 $generated@@655))) ($generated@@75 $generated@@659 $generated@@721 $generated@@655)) (=> (and ($generated@@0 ($generated@@89 $generated@@674 $generated@@721)) (not (= $generated@@721 $generated@@655))) (not ($generated@@75 $generated@@659 $generated@@655 $generated@@721)))))
 :pattern ( ($generated@@75 $generated@@659 $generated@@655 $generated@@721))
 :pattern ( ($generated@@75 $generated@@659 $generated@@721 $generated@@655))
 :pattern ( ($generated@@89 $generated@@674 $generated@@721))
))))) (= (ControlFlow 0 44) 43)))) $generated@@719))))
$generated@@720))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@603 (T@T) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@623 (T@U T@U) Bool)
(declare-fun $generated@@670 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@76) 11))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@64) (= (type $generated@@80) $generated@@76)) (= (type $generated@@81) $generated@@76)) (or ($generated@@77 $generated@@79 $generated@@80 $generated@@81) (and (not (= 0 $generated@@74)) (and (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@78 $generated@@81 $generated@@79)) (not (= $generated@@80 $generated@@81)))))) true)
 :pattern ( ($generated@@75 $generated@@79 $generated@@80 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@83 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@76)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@76)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@148) (= (type $generated@@160) $generated@@148)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@165) $generated@@64)) ($generated@@144 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@144 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@85 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@67 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@85) (= (type $generated@@216) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@217) ($generated@@66 $generated@@4))) (= (type $generated@@219) $generated@@85)) (= (type $generated@@220) ($generated@@66 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@87 (type $generated@@223))))
(= (type ($generated@@222 $generated@@223 $generated@@224)) ($generated@@84 $generated@@225 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@87 (type $generated@@226))))
 (=> (and (= (type $generated@@226) ($generated@@84 $generated@@228 $generated@@4)) (= (type $generated@@227) ($generated@@84 $generated@@228 $generated@@4))) (= ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227) ($generated@@222 $generated@@226 $generated@@227))))
 :pattern ( ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231)) $generated@@148)
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@76)) (= (type $generated@@235) $generated@@76)) (= ($generated@@144 ($generated@@229 $generated@@234 $generated@@235) ($generated@@147 $generated@@232 $generated@@233))  (and ($generated@@78 $generated@@234 $generated@@232) ($generated@@78 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@144 ($generated@@229 $generated@@234 $generated@@235) ($generated@@147 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@148) (= (type $generated@@237) $generated@@148)) (= ($generated@@154 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@154 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@144 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@76) ($generated@@0 ($generated@@89 $generated@@240 $generated@@242))) ($generated@@78 $generated@@242 $generated@@241))
 :pattern ( ($generated@@89 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@144 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@144 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@76) ($generated@@0 ($generated@@89 $generated@@245 $generated@@247))) ($generated@@78 $generated@@247 $generated@@246))
 :pattern ( ($generated@@89 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@144 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@76)) (= (type $generated@@257) $generated@@76)) (= (type $generated@@258) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@252 $generated@@258)) (= ($generated@@82 ($generated@@229 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@82 ($generated@@229 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@148) (= ($generated@@146 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@261))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@76)) (= (type $generated@@266) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@263 $generated@@264 ($generated@@248 $generated@@265) ($generated@@248 $generated@@266)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@265 $generated@@264) ($generated@@144 $generated@@266 ($generated@@238 $generated@@264)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) ($generated@@248 $generated@@265))) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@76) ($generated@@78 $generated@@267 $generated@@264)) (and (=> ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) $generated@@267)) (=> (not (= $generated@@267 $generated@@265)) ($generated@@77 $generated@@264 $generated@@267 ($generated@@248 $generated@@265)))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) $generated@@267)) (not (= $generated@@267 $generated@@265))) ($generated@@75 $generated@@264 $generated@@267 ($generated@@248 $generated@@265))) (=> ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) $generated@@267)) (=> (not (= $generated@@267 $generated@@265)) ($generated@@77 $generated@@264 ($generated@@248 $generated@@265) $generated@@267))))))
 :pattern ( ($generated@@75 $generated@@264 $generated@@265 $generated@@267))
 :pattern ( ($generated@@75 $generated@@264 $generated@@267 $generated@@265))
 :pattern ( ($generated@@89 $generated@@266 $generated@@267))
))) (= ($generated@@262 $generated@@264 ($generated@@248 $generated@@265) ($generated@@248 $generated@@266))  (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) ($generated@@248 $generated@@265))) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@76) ($generated@@78 $generated@@268 $generated@@264)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) $generated@@268)) (not (= $generated@@268 $generated@@265))) ($generated@@75 $generated@@264 $generated@@268 ($generated@@248 $generated@@265))) (=> (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@266) $generated@@268)) (not (= $generated@@268 $generated@@265))) (not ($generated@@75 $generated@@264 ($generated@@248 $generated@@265) $generated@@268)))))
 :pattern ( ($generated@@75 $generated@@264 $generated@@265 $generated@@268))
 :pattern ( ($generated@@75 $generated@@264 $generated@@268 $generated@@265))
 :pattern ( ($generated@@89 $generated@@266 $generated@@268))
))))))
 :weight 3
 :pattern ( ($generated@@262 $generated@@264 ($generated@@248 $generated@@265) ($generated@@248 $generated@@266)))
))))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@76) (= (type $generated@@271) $generated@@76)) (= $generated@@269 ($generated@@229 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@76)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@253 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@82 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@253 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@286) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@287) $generated@@76)) (= (type $generated@@288) $generated@@64)) ($generated@@140 $generated@@285 $generated@@286)) ($generated@@253 $generated@@287 $generated@@288 $generated@@285)) ($generated@@253 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@140 $generated@@285 $generated@@286) ($generated@@253 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@290) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@292) $generated@@64)) ($generated@@140 $generated@@289 $generated@@290)) ($generated@@82 $generated@@291 $generated@@292 $generated@@289)) ($generated@@82 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@140 $generated@@289 $generated@@290) ($generated@@82 $generated@@291 $generated@@292 $generated@@289))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@64) (= (type $generated@@294) $generated@@76)) (= (type $generated@@295) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@263 $generated@@293 $generated@@294 $generated@@295) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@294 $generated@@293) ($generated@@144 $generated@@295 ($generated@@238 $generated@@293)))))) true)
 :pattern ( ($generated@@262 $generated@@293 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@84 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@87 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@84 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@89 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@84 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@89 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@89 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@84 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@89 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@89 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@87 (type $generated@@339))))
 (=> (and (= (type $generated@@339) ($generated@@84 $generated@@341 $generated@@4)) (= (type $generated@@340) ($generated@@84 $generated@@341 $generated@@4))) (= ($generated@@338 $generated@@339 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (= ($generated@@0 ($generated@@89 $generated@@339 $generated@@342)) ($generated@@0 ($generated@@89 $generated@@340 $generated@@342))))
 :pattern ( ($generated@@89 $generated@@339 $generated@@342))
 :pattern ( ($generated@@89 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@87 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@84 $generated@@344 $generated@@2)) (= ($generated@@162 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@89 $generated@@343 $generated@@345))) (<= ($generated ($generated@@89 $generated@@343 $generated@@345)) ($generated@@296 $generated@@343))))
 :pattern ( ($generated@@89 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@162 $generated@@343))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@346) $generated@@64) (= (type $generated@@347) $generated@@76)) (= (type $generated@@348) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@263 $generated@@346 $generated@@347 ($generated@@248 $generated@@348)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@347 $generated@@346) ($generated@@144 $generated@@348 ($generated@@238 $generated@@346)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@347)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@76) ($generated@@78 $generated@@349 $generated@@346)) (and (=> ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@349)) (=> (not (= $generated@@349 $generated@@347)) ($generated@@77 $generated@@346 $generated@@349 $generated@@347))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@349)) (not (= $generated@@349 $generated@@347))) ($generated@@75 $generated@@346 $generated@@349 $generated@@347)) (=> ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@349)) (=> (not (= $generated@@349 $generated@@347)) ($generated@@77 $generated@@346 $generated@@347 $generated@@349))))))
 :pattern ( ($generated@@75 $generated@@346 $generated@@347 $generated@@349))
 :pattern ( ($generated@@75 $generated@@346 $generated@@349 $generated@@347))
 :pattern ( ($generated@@89 $generated@@348 $generated@@349))
))) (= ($generated@@262 $generated@@346 $generated@@347 ($generated@@248 $generated@@348))  (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@347)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@76) ($generated@@78 $generated@@350 $generated@@346)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@350)) (not (= $generated@@350 $generated@@347))) ($generated@@75 $generated@@346 $generated@@350 $generated@@347)) (=> (and ($generated@@0 ($generated@@89 ($generated@@248 $generated@@348) $generated@@350)) (not (= $generated@@350 $generated@@347))) (not ($generated@@75 $generated@@346 $generated@@347 $generated@@350)))))
 :pattern ( ($generated@@75 $generated@@346 $generated@@347 $generated@@350))
 :pattern ( ($generated@@75 $generated@@346 $generated@@350 $generated@@347))
 :pattern ( ($generated@@89 $generated@@348 $generated@@350))
))))))
 :weight 3
 :pattern ( ($generated@@262 $generated@@346 $generated@@347 ($generated@@248 $generated@@348)))
))))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@306 (type $generated@@351))))
(let (($generated@@353 ($generated@@305 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@304 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@303 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@89 ($generated@@302 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@302 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@306 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@84 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@306 (type $generated@@358))))
(let (($generated@@360 ($generated@@305 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@304 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@303 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@324 (type $generated@@362))))
(let (($generated@@364 ($generated@@323 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@322 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@321 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@89 ($generated@@320 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@320 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@84 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@324 (type $generated@@369))))
(let (($generated@@371 ($generated@@323 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@322 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@321 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@89 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@374) $generated@@64)) (= ($generated@@144 $generated@@373 ($generated@@161 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@373 $generated@@375)))) ($generated@@78 $generated@@375 $generated@@374))
 :pattern ( ($generated@@89 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@144 $generated@@373 ($generated@@161 $generated@@374)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@87 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378 $generated@@379)) ($generated@@84 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@87 (type $generated@@381))))
 (=> (and (and (= (type $generated@@381) ($generated@@84 $generated@@383 $generated@@4)) (= (type $generated@@382) ($generated@@84 $generated@@383 $generated@@4))) ($generated@@376 $generated@@381 $generated@@382)) (and (= ($generated@@377 ($generated@@222 $generated@@381 $generated@@382) $generated@@381) $generated@@382) (= ($generated@@377 ($generated@@222 $generated@@381 $generated@@382) $generated@@382) $generated@@381))))
 :pattern ( ($generated@@222 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
 (=> (and (= (type $generated@@384) ($generated@@84 $generated@@387 $generated@@4)) (= (type $generated@@385) ($generated@@84 $generated@@387 $generated@@4))) (= ($generated@@0 ($generated@@89 ($generated@@377 $generated@@384 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@89 $generated@@384 $generated@@386)) (not ($generated@@0 ($generated@@89 $generated@@385 $generated@@386)))))))
 :pattern ( ($generated@@89 ($generated@@377 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@388 ($generated@@238 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@76) ($generated@@0 ($generated@@89 $generated@@388 $generated@@391))) ($generated@@253 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@89 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@82 $generated@@388 ($generated@@238 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@392 ($generated@@243 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@76) ($generated@@0 ($generated@@89 $generated@@392 $generated@@395))) ($generated@@253 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@89 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@82 $generated@@392 ($generated@@243 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@89 ($generated@@297 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@89 ($generated@@297 $generated@@397) $generated@@396)))
)))
(assert  (and (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@398 $generated@@401)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@398 $generated@@401))
)) (forall (($generated@@402 T@T) ($generated@@403 T@U) ) (! (= (type ($generated@@399 $generated@@402 $generated@@403)) $generated@@402)
 :pattern ( ($generated@@399 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@306 (type $generated@@404))))
(let (($generated@@406 ($generated@@305 (type $generated@@404))))
(= (type ($generated@@400 $generated@@404)) ($generated@@84 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@400 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@304 $generated@@76 $generated@@76)) (= (type $generated@@408) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@398 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@89 ($generated@@302 $generated@@407) ($generated@@155 ($generated@@399 $generated@@148 $generated@@408)))) (= ($generated@@89 ($generated@@400 $generated@@407) ($generated@@155 ($generated@@399 $generated@@148 $generated@@408))) ($generated@@156 ($generated@@399 $generated@@148 $generated@@408))))))
 :pattern ( ($generated@@89 ($generated@@398 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@324 (type $generated@@412))))
(let (($generated@@414 ($generated@@323 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@84 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@322 $generated@@76 $generated@@76)) (= (type $generated@@416) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@89 ($generated@@320 $generated@@415) ($generated@@155 ($generated@@399 $generated@@148 $generated@@416)))) (= ($generated@@89 ($generated@@410 $generated@@415) ($generated@@155 ($generated@@399 $generated@@148 $generated@@416))) ($generated@@156 ($generated@@399 $generated@@148 $generated@@416))))))
 :pattern ( ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@305 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@304 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@89 ($generated@@355 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@89 ($generated@@302 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@89 ($generated@@400 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@89 ($generated@@302 $generated@@417) $generated@@421))
 :pattern ( ($generated@@89 ($generated@@400 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@323 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@322 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@89 ($generated@@366 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@89 ($generated@@320 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@89 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@89 ($generated@@320 $generated@@422) $generated@@426))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@304 $generated@@76 $generated@@76)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@302 $generated@@430) $generated@@434))) (and ($generated@@253 ($generated@@89 ($generated@@400 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@253 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@89 ($generated@@400 $generated@@430) $generated@@434))
 :pattern ( ($generated@@89 ($generated@@302 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@82 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@322 $generated@@76 $generated@@76)) (= (type $generated@@439) $generated@@64)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@320 $generated@@438) $generated@@442))) (and ($generated@@253 ($generated@@89 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@253 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@89 ($generated@@320 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@87 (type $generated@@443))))
 (=> (and (and (= (type $generated@@443) ($generated@@84 $generated@@445 $generated@@4)) (= (type $generated@@444) ($generated@@84 $generated@@445 $generated@@4))) ($generated@@338 $generated@@443 $generated@@444)) (= $generated@@443 $generated@@444)))
 :pattern ( ($generated@@338 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(= (type ($generated@@446 $generated@@447 $generated@@448)) ($generated@@84 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@451)))
 (=> (and (and (= (type $generated@@450) ($generated@@84 $generated@@453 $generated@@4)) (= (type $generated@@452) $generated@@453)) ($generated@@0 ($generated@@89 $generated@@450 $generated@@452))) ($generated@@0 ($generated@@89 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))))
 :pattern ( ($generated@@446 $generated@@450 $generated@@451) ($generated@@89 $generated@@450 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
 (=> (and (and (= (type $generated@@454) ($generated@@84 $generated@@457 $generated@@4)) (= (type $generated@@455) ($generated@@84 $generated@@457 $generated@@4))) ($generated@@0 ($generated@@89 $generated@@454 $generated@@456))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@454 $generated@@455) $generated@@456))))
 :pattern ( ($generated@@222 $generated@@454 $generated@@455) ($generated@@89 $generated@@454 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
 (=> (and (and (= (type $generated@@458) ($generated@@84 $generated@@461 $generated@@4)) (= (type $generated@@459) ($generated@@84 $generated@@461 $generated@@4))) ($generated@@0 ($generated@@89 $generated@@459 $generated@@460))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@458 $generated@@459) $generated@@460))))
 :pattern ( ($generated@@222 $generated@@458 $generated@@459) ($generated@@89 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@463)))
 (=> (and (= (type $generated@@462) ($generated@@84 $generated@@465 $generated@@4)) (= (type $generated@@464) $generated@@465)) (= ($generated@@0 ($generated@@89 ($generated@@446 $generated@@462 $generated@@463) $generated@@464))  (or (= $generated@@464 $generated@@463) ($generated@@0 ($generated@@89 $generated@@462 $generated@@464))))))
 :pattern ( ($generated@@89 ($generated@@446 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@467) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@468) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@466 $generated@@468))) (and ($generated@@140 $generated@@466 $generated@@467) ($generated@@140 $generated@@467 $generated@@468))) ($generated@@140 $generated@@466 $generated@@468))
 :pattern ( ($generated@@140 $generated@@466 $generated@@467) ($generated@@140 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@471)))
 (=> (and (and (= (type $generated@@469) ($generated@@84 $generated@@472 $generated@@4)) (= (type $generated@@470) ($generated@@84 $generated@@472 $generated@@4))) ($generated@@0 ($generated@@89 $generated@@470 $generated@@471))) (not ($generated@@0 ($generated@@89 ($generated@@377 $generated@@469 $generated@@470) $generated@@471)))))
 :pattern ( ($generated@@377 $generated@@469 $generated@@470) ($generated@@89 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@84 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@324 (type $generated@@475))))
(let (($generated@@477 ($generated@@323 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@322 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@321 $generated@@477 $generated@@476)) (= ($generated@@320 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@320 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@324 (type $generated@@478))))
(let (($generated@@480 ($generated@@323 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@322 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@321 $generated@@480 $generated@@479)) (= ($generated@@366 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@366 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@324 (type $generated@@481))))
(let (($generated@@483 ($generated@@323 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@322 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@321 $generated@@483 $generated@@482)) (= ($generated@@409 $generated@@481) ($generated@@473 $generated@@76))))))
 :pattern ( ($generated@@409 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@306 (type $generated@@484))))
(let (($generated@@486 ($generated@@305 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@304 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@303 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@76) (= (type $generated@@488) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@398 $generated@@484) ($generated@@280 ($generated@@229 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@398 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@324 (type $generated@@489))))
(let (($generated@@491 ($generated@@323 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@322 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@321 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@76) (= (type $generated@@493) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@409 $generated@@489) ($generated@@280 ($generated@@229 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@409 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@76) ($generated@@78 $generated@@494 $generated@@46)) (and (= ($generated@@280 ($generated@@399 $generated@@2 $generated@@494)) $generated@@494) ($generated@@144 ($generated@@399 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@78 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@76) ($generated@@78 $generated@@495 $generated@@47)) (and (= ($generated@@280 ($generated@@399 $generated@@3 $generated@@495)) $generated@@495) ($generated@@144 ($generated@@399 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@78 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@76) ($generated@@78 $generated@@496 $generated@@44)) (and (= ($generated@@280 ($generated@@399 $generated@@4 $generated@@496)) $generated@@496) ($generated@@144 ($generated@@399 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@78 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 20))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@76) ($generated@@78 $generated@@498 $generated@@45)) (and (= ($generated@@280 ($generated@@399 $generated@@497 $generated@@498)) $generated@@498) ($generated@@144 ($generated@@399 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@78 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@78 ($generated@@280 $generated@@499) $generated@@500) ($generated@@144 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@78 ($generated@@280 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@87 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@84 $generated@@502 $generated@@2)) (<= 0 ($generated@@296 $generated@@501))))
 :pattern ( ($generated@@296 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@275 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@274 $generated@@504)) (<= 0 ($generated@@273 $generated@@503))))
 :pattern ( ($generated@@273 $generated@@503))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@76)) (= (type $generated@@507) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@263 $generated@@505 $generated@@506 $generated@@507) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@506 $generated@@505) ($generated@@144 $generated@@507 ($generated@@238 $generated@@505)))))) (and (=> ($generated@@0 ($generated@@89 $generated@@507 $generated@@506)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@76) ($generated@@78 $generated@@508 $generated@@505)) (and (=> ($generated@@0 ($generated@@89 $generated@@507 $generated@@508)) (=> (not (= $generated@@508 $generated@@506)) ($generated@@77 $generated@@505 $generated@@508 $generated@@506))) (=> (=> (and ($generated@@0 ($generated@@89 $generated@@507 $generated@@508)) (not (= $generated@@508 $generated@@506))) ($generated@@75 $generated@@505 $generated@@508 $generated@@506)) (=> ($generated@@0 ($generated@@89 $generated@@507 $generated@@508)) (=> (not (= $generated@@508 $generated@@506)) ($generated@@77 $generated@@505 $generated@@506 $generated@@508))))))
 :pattern ( ($generated@@75 $generated@@505 $generated@@506 $generated@@508))
 :pattern ( ($generated@@75 $generated@@505 $generated@@508 $generated@@506))
 :pattern ( ($generated@@89 $generated@@507 $generated@@508))
))) (= ($generated@@262 $generated@@505 $generated@@506 $generated@@507)  (and ($generated@@0 ($generated@@89 $generated@@507 $generated@@506)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@76) ($generated@@78 $generated@@509 $generated@@505)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@507 $generated@@509)) (not (= $generated@@509 $generated@@506))) ($generated@@75 $generated@@505 $generated@@509 $generated@@506)) (=> (and ($generated@@0 ($generated@@89 $generated@@507 $generated@@509)) (not (= $generated@@509 $generated@@506))) (not ($generated@@75 $generated@@505 $generated@@506 $generated@@509)))))
 :pattern ( ($generated@@75 $generated@@505 $generated@@506 $generated@@509))
 :pattern ( ($generated@@75 $generated@@505 $generated@@509 $generated@@506))
 :pattern ( ($generated@@89 $generated@@507 $generated@@509))
))))))
 :pattern ( ($generated@@262 $generated@@505 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@510 ($generated@@427 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@427 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@427 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@427 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= ($generated@@72 ($generated@@427 $generated@@518 $generated@@519)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@520 ($generated@@435 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@435 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= ($generated@@524 ($generated@@435 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@435 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@72 ($generated@@435 $generated@@528 $generated@@529)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@76) (= (type $generated@@531) $generated@@76)) (= ($generated@@259 ($generated@@229 $generated@@530 $generated@@531)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@147 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@147 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@147 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@147 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@76) (= (type $generated@@541) $generated@@76)) (= ($generated@@155 ($generated@@229 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@229 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@76) (= (type $generated@@543) $generated@@76)) (= ($generated@@156 ($generated@@229 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@229 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@275 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@274 $generated@@76)) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@273 $generated@@550))) ($generated@@253 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@82 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (= (type $generated@@554) ($generated@@84 $generated@@556 $generated@@4)) ($generated@@0 ($generated@@89 ($generated@@446 $generated@@554 $generated@@555) $generated@@555))))
 :pattern ( ($generated@@446 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@557 ($generated@@83 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@83 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@64)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@64) (= ($generated@@559 ($generated@@238 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@238 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@562)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@64)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@64) (= ($generated@@563 ($generated@@243 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@243 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@566)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@64)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@64) (= ($generated@@567 ($generated@@161 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@161 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@72 ($generated@@161 $generated@@570)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@64)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@64) (= ($generated@@571 ($generated@@544 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@544 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@72 ($generated@@544 $generated@@574)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@399 $generated@@576 ($generated@@280 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@280 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@304 $generated@@76 $generated@@76)) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) $generated@@64)) (= ($generated@@144 $generated@@577 ($generated@@427 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@302 $generated@@577) $generated@@580))) (and ($generated@@78 ($generated@@89 ($generated@@400 $generated@@577) $generated@@580) $generated@@579) ($generated@@78 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@89 ($generated@@400 $generated@@577) $generated@@580))
 :pattern ( ($generated@@89 ($generated@@302 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@144 $generated@@577 ($generated@@427 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@322 $generated@@76 $generated@@76)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) (= ($generated@@144 $generated@@581 ($generated@@435 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@320 $generated@@581) $generated@@584))) (and ($generated@@78 ($generated@@89 ($generated@@410 $generated@@581) $generated@@584) $generated@@583) ($generated@@78 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@581) $generated@@584))
 :pattern ( ($generated@@89 ($generated@@320 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@144 $generated@@581 ($generated@@435 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@76) (= (type $generated@@588) $generated@@76)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@229 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@229 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@76) (= (type $generated@@590) $generated@@76)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@229 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@229 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@87 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@84 $generated@@593 $generated@@4)) (= (type $generated@@592) ($generated@@84 $generated@@593 $generated@@4))) (= ($generated@@222 $generated@@591 ($generated@@222 $generated@@591 $generated@@592)) ($generated@@222 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@222 $generated@@591 ($generated@@222 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@76) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@78 $generated@@594 ($generated@@427 $generated@@595 $generated@@596))) (and (= ($generated@@280 ($generated@@399 ($generated@@304 $generated@@76 $generated@@76) $generated@@594)) $generated@@594) ($generated@@144 ($generated@@399 ($generated@@304 $generated@@76 $generated@@76) $generated@@594) ($generated@@427 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@427 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@76) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@78 $generated@@597 ($generated@@435 $generated@@598 $generated@@599))) (and (= ($generated@@280 ($generated@@399 ($generated@@322 $generated@@76 $generated@@76) $generated@@597)) $generated@@597) ($generated@@144 ($generated@@399 ($generated@@322 $generated@@76 $generated@@76) $generated@@597) ($generated@@435 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@78 $generated@@597 ($generated@@435 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@64) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@76)) ($generated@@78 $generated@@602 ($generated@@147 $generated@@600 $generated@@601))) (and (= ($generated@@280 ($generated@@399 $generated@@148 $generated@@602)) $generated@@602) ($generated@@144 ($generated@@399 $generated@@148 $generated@@602) ($generated@@147 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@78 $generated@@602 ($generated@@147 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@604 T@T) ) (! (= (type ($generated@@603 $generated@@604)) ($generated@@84 $generated@@604 $generated@@4))
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (not ($generated@@0 ($generated@@89 ($generated@@603 $generated@@606) $generated@@605))))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@89 ($generated@@603 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@89 ($generated@@473 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@89 ($generated@@473 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@69)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@64) (= (type $generated@@612) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@611 $generated@@612)) $generated@@62) (= ($generated@@609 ($generated@@147 $generated@@611 $generated@@612)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@148) (= ($generated@@585 ($generated@@280 $generated@@613)) ($generated@@586 $generated@@613)))
 :pattern ( ($generated@@585 ($generated@@280 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@76) ($generated@@78 $generated@@614 ($generated@@83 0))) (and (= ($generated@@280 ($generated@@399 $generated@@2 $generated@@614)) $generated@@614) ($generated@@144 ($generated@@399 ($generated@@84 $generated@@76 $generated@@4) $generated@@614) ($generated@@83 0))))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@83 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@76) (= (type $generated@@616) $generated@@64)) ($generated@@78 $generated@@615 ($generated@@238 $generated@@616))) (and (= ($generated@@280 ($generated@@399 ($generated@@84 $generated@@76 $generated@@4) $generated@@615)) $generated@@615) ($generated@@144 ($generated@@399 ($generated@@84 $generated@@76 $generated@@4) $generated@@615) ($generated@@238 $generated@@616))))
 :pattern ( ($generated@@78 $generated@@615 ($generated@@238 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@76) (= (type $generated@@618) $generated@@64)) ($generated@@78 $generated@@617 ($generated@@243 $generated@@618))) (and (= ($generated@@280 ($generated@@399 ($generated@@84 $generated@@76 $generated@@4) $generated@@617)) $generated@@617) ($generated@@144 ($generated@@399 ($generated@@84 $generated@@76 $generated@@4) $generated@@617) ($generated@@243 $generated@@618))))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@243 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@76) (= (type $generated@@620) $generated@@64)) ($generated@@78 $generated@@619 ($generated@@161 $generated@@620))) (and (= ($generated@@280 ($generated@@399 ($generated@@84 $generated@@76 $generated@@2) $generated@@619)) $generated@@619) ($generated@@144 ($generated@@399 ($generated@@84 $generated@@76 $generated@@2) $generated@@619) ($generated@@161 $generated@@620))))
 :pattern ( ($generated@@78 $generated@@619 ($generated@@161 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@76) (= (type $generated@@622) $generated@@64)) ($generated@@78 $generated@@621 ($generated@@544 $generated@@622))) (and (= ($generated@@280 ($generated@@399 ($generated@@274 $generated@@76) $generated@@621)) $generated@@621) ($generated@@144 ($generated@@399 ($generated@@274 $generated@@76) $generated@@621) ($generated@@544 $generated@@622))))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@544 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@87 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@84 $generated@@626 $generated@@4)) (= (type $generated@@625) ($generated@@84 $generated@@626 $generated@@4))) (= ($generated@@623 $generated@@624 $generated@@625) (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@626) ($generated@@0 ($generated@@89 $generated@@624 $generated@@627))) ($generated@@0 ($generated@@89 $generated@@625 $generated@@627)))
 :pattern ( ($generated@@89 $generated@@624 $generated@@627))
 :pattern ( ($generated@@89 $generated@@625 $generated@@627))
)))))
 :pattern ( ($generated@@623 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@629) $generated@@64)) (= (type $generated@@630) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@628 ($generated@@161 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@628 $generated@@631)))) ($generated@@253 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@89 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@82 $generated@@628 ($generated@@161 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@87 (type $generated@@632))))
 (=> (and (= (type $generated@@632) ($generated@@84 $generated@@634 $generated@@4)) (= (type $generated@@633) ($generated@@84 $generated@@634 $generated@@4))) (= ($generated@@376 $generated@@632 $generated@@633) (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@634) (or (not ($generated@@0 ($generated@@89 $generated@@632 $generated@@635))) (not ($generated@@0 ($generated@@89 $generated@@633 $generated@@635)))))
 :pattern ( ($generated@@89 $generated@@632 $generated@@635))
 :pattern ( ($generated@@89 $generated@@633 $generated@@635))
)))))
 :pattern ( ($generated@@376 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@148) (= (type $generated@@637) $generated@@64)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@252 $generated@@638) (and ($generated@@146 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@64) ($generated@@82 $generated@@636 ($generated@@147 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@82 $generated@@636 ($generated@@147 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@253 ($generated@@155 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@148) (= (type $generated@@641) $generated@@64)) (= (type $generated@@642) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@252 $generated@@642) (and ($generated@@146 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@64) ($generated@@82 $generated@@640 ($generated@@147 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@82 $generated@@640 ($generated@@147 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@253 ($generated@@156 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@253 ($generated@@156 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@76) (= (type $generated@@645) $generated@@76)) (= ($generated@@229 ($generated@@248 $generated@@644) ($generated@@248 $generated@@645)) ($generated@@248 ($generated@@229 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@229 ($generated@@248 $generated@@644) ($generated@@248 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@280 ($generated@@248 $generated@@646)) ($generated@@248 ($generated@@280 $generated@@646)))
 :pattern ( ($generated@@280 ($generated@@248 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@275 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@274 $generated@@648)) (= ($generated@@273 $generated@@647) 0)) (= $generated@@647 ($generated@@272 $generated@@648))))
 :pattern ( ($generated@@273 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@84 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@296 ($generated@@90 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@296 $generated@@649) ($generated ($generated@@89 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@296 ($generated@@90 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@655)))
 (=> (and (= (type $generated@@653) ($generated@@84 $generated@@656 $generated@@4)) (= (type $generated@@654) ($generated@@84 $generated@@656 $generated@@4))) (= ($generated@@0 ($generated@@89 ($generated@@222 $generated@@653 $generated@@654) $generated@@655))  (or ($generated@@0 ($generated@@89 $generated@@653 $generated@@655)) ($generated@@0 ($generated@@89 $generated@@654 $generated@@655))))))
 :pattern ( ($generated@@89 ($generated@@222 $generated@@653 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@658) $generated@@2)) ($generated@@82 $generated@@658 $generated@@46 $generated@@657))
 :pattern ( ($generated@@82 $generated@@658 $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@660) $generated@@3)) ($generated@@82 $generated@@660 $generated@@47 $generated@@659))
 :pattern ( ($generated@@82 $generated@@660 $generated@@47 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@662) $generated@@4)) ($generated@@82 $generated@@662 $generated@@44 $generated@@661))
 :pattern ( ($generated@@82 $generated@@662 $generated@@44 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@664) $generated@@497)) ($generated@@82 $generated@@664 $generated@@45 $generated@@663))
 :pattern ( ($generated@@82 $generated@@664 $generated@@45 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@666) $generated@@76)) ($generated@@82 $generated@@666 $generated@@48 $generated@@665))
 :pattern ( ($generated@@82 $generated@@666 $generated@@48 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@274 $generated@@76)) (= (type $generated@@668) $generated@@64)) (= ($generated@@144 $generated@@667 ($generated@@544 $generated@@668)) (forall (($generated@@669 Int) ) (!  (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@273 $generated@@667))) ($generated@@78 ($generated@@545 $generated@@667 $generated@@669) $generated@@668))
 :pattern ( ($generated@@545 $generated@@667 $generated@@669))
))))
 :pattern ( ($generated@@144 $generated@@667 ($generated@@544 $generated@@668)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ) (!  (=> (= (type $generated@@671) ($generated@@274 $generated@@76)) (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@273 $generated@@671))) (< ($generated@@586 ($generated@@399 $generated@@148 ($generated@@545 $generated@@671 $generated@@672))) ($generated@@670 $generated@@671))))
 :pattern ( ($generated@@586 ($generated@@399 $generated@@148 ($generated@@545 $generated@@671 $generated@@672))))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@304 $generated@@76 $generated@@76)) (= (type $generated@@674) $generated@@64)) (= (type $generated@@675) $generated@@64)) ($generated@@144 $generated@@673 ($generated@@427 $generated@@674 $generated@@675))) (and (and ($generated@@144 ($generated@@302 $generated@@673) ($generated@@238 $generated@@674)) ($generated@@144 ($generated@@355 $generated@@673) ($generated@@238 $generated@@675))) ($generated@@144 ($generated@@398 $generated@@673) ($generated@@238 ($generated@@147 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@144 $generated@@673 ($generated@@427 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@322 $generated@@76 $generated@@76)) (= (type $generated@@677) $generated@@64)) (= (type $generated@@678) $generated@@64)) ($generated@@144 $generated@@676 ($generated@@435 $generated@@677 $generated@@678))) (and (and ($generated@@144 ($generated@@320 $generated@@676) ($generated@@243 $generated@@677)) ($generated@@144 ($generated@@366 $generated@@676) ($generated@@243 $generated@@678))) ($generated@@144 ($generated@@409 $generated@@676) ($generated@@243 ($generated@@147 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@144 $generated@@676 ($generated@@435 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@2) ($generated@@144 $generated@@679 $generated@@46))
 :pattern ( ($generated@@144 $generated@@679 $generated@@46))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@3) ($generated@@144 $generated@@680 $generated@@47))
 :pattern ( ($generated@@144 $generated@@680 $generated@@47))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@4) ($generated@@144 $generated@@681 $generated@@44))
 :pattern ( ($generated@@144 $generated@@681 $generated@@44))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@497) ($generated@@144 $generated@@682 $generated@@45))
 :pattern ( ($generated@@144 $generated@@682 $generated@@45))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@76) ($generated@@144 $generated@@683 $generated@@48))
 :pattern ( ($generated@@144 $generated@@683 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Bool)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Bool)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Bool)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Bool)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 (T@U) Bool)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Bool)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () Bool)
(declare-fun $generated@@713 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@686) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@690) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@688) $generated@@76)) (= (type $generated@@689) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@691) $generated@@76)) (= (type $generated@@692) $generated@@64)) (= (type $generated@@685) $generated@@76)) (= (type $generated@@694) $generated@@76)) (= (type $generated@@696) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@695) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@697) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@698) $generated@@76)) (= (type $generated@@684) $generated@@76)) (= (type $generated@@700) $generated@@76)) (= (type $generated@@701) $generated@@85)) (= (type $generated@@702) ($generated@@168 $generated@@85 $generated@@4))) (= (type $generated@@704) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@705) $generated@@76)) (= (type $generated@@706) $generated@@76)) (= (type $generated@@708) $generated@@76)) (= (type $generated@@710) $generated@@76)) (= (type $generated@@711) ($generated@@84 $generated@@76 $generated@@4))) (= (type $generated@@713) $generated@@76)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 45) (let (($generated@@714  (=> (= (ControlFlow 0 27) (- 0 26)) (= $generated@@684 $generated@@685))))
(let (($generated@@715  (=> ($generated@@338 $generated@@686 ($generated@@603 $generated@@76)) (and (=> (= (ControlFlow 0 28) (- 0 30)) $generated@@687) (=> $generated@@687 (and (=> (= (ControlFlow 0 28) (- 0 29)) true) (=> (and (= $generated@@684 $generated@@688) (= (ControlFlow 0 28) 27)) $generated@@714)))))))
(let (($generated@@716  (and (=> (= (ControlFlow 0 7) (- 0 12)) (and ($generated@@623 $generated@@689 $generated@@686) (not ($generated@@623 $generated@@686 $generated@@689)))) (=> (and ($generated@@623 $generated@@689 $generated@@686) (not ($generated@@623 $generated@@686 $generated@@689))) (=> (=> ($generated@@623 $generated@@689 $generated@@690) (=> ($generated@@0 ($generated@@89 $generated@@690 $generated@@691)) (=> (not ($generated@@0 ($generated@@89 $generated@@689 $generated@@691))) ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691)))))) (and (=> (= (ControlFlow 0 7) (- 0 11)) (=> $generated@@693 ($generated@@623 $generated@@689 $generated@@690))) (=> (=> $generated@@693 ($generated@@623 $generated@@689 $generated@@690)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> $generated@@693 ($generated@@0 ($generated@@89 $generated@@690 $generated@@691)))) (=> (=> $generated@@693 ($generated@@0 ($generated@@89 $generated@@690 $generated@@691))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> $generated@@693 (not ($generated@@0 ($generated@@89 $generated@@689 $generated@@691))))) (=> (=> $generated@@693 (not ($generated@@0 ($generated@@89 $generated@@689 $generated@@691)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691)) $generated@@685)))))) (=> (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691)) $generated@@685))))) (=> (= (ControlFlow 0 7) (- 0 6)) (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691))) (forall (($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@76) ($generated@@78 $generated@@717 $generated@@692)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691)) $generated@@717)) (not (= $generated@@717 $generated@@685))) ($generated@@75 $generated@@692 $generated@@717 $generated@@685)) (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691)) $generated@@717)) (not (= $generated@@717 $generated@@685))) (not ($generated@@75 $generated@@692 $generated@@685 $generated@@717)))))
 :pattern ( ($generated@@75 $generated@@692 $generated@@685 $generated@@717))
 :pattern ( ($generated@@75 $generated@@692 $generated@@717 $generated@@685))
 :pattern ( ($generated@@89 ($generated@@222 $generated@@689 ($generated@@446 ($generated@@603 $generated@@76) $generated@@691)) $generated@@717))
)))))))))))))))))))
(let (($generated@@718  (=> (not ($generated@@75 $generated@@692 $generated@@694 $generated@@688)) (and (=> (= (ControlFlow 0 15) (- 0 17)) true) (and (=> (= (ControlFlow 0 15) (- 0 16)) true) (=> (and (and (= $generated@@695 ($generated@@377 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@694))) (= $generated@@691 $generated@@694)) (and (= $generated@@689 $generated@@695) (= (ControlFlow 0 15) 7))) $generated@@716))))))
(let (($generated@@719  (=> ($generated@@75 $generated@@692 $generated@@694 $generated@@688) (and (=> (= (ControlFlow 0 13) (- 0 14)) true) (=> (and (and (= $generated@@696 ($generated@@377 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@694))) (= $generated@@691 $generated@@688)) (and (= $generated@@689 $generated@@696) (= (ControlFlow 0 13) 7))) $generated@@716)))))
(let (($generated@@720  (and (=> (= (ControlFlow 0 18) (- 0 22)) (exists (($generated@@721 T@U) ) (!  (and (= (type $generated@@721) $generated@@76) (and ($generated@@78 $generated@@721 $generated@@692) ($generated@@0 ($generated@@89 $generated@@686 $generated@@721))))
 :no-pattern (type $generated@@721)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
))) (=> (exists (($generated@@722 T@U) ) (!  (and (= (type $generated@@722) $generated@@76) (and ($generated@@78 $generated@@722 $generated@@692) ($generated@@0 ($generated@@89 $generated@@686 $generated@@722))))
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
)) (=> (and (=> true (and ($generated@@78 $generated@@694 $generated@@692) ($generated@@253 $generated@@694 $generated@@692 $generated@@697))) ($generated@@0 ($generated@@89 $generated@@686 $generated@@694))) (and (=> (= (ControlFlow 0 18) (- 0 21)) true) (and (=> (= (ControlFlow 0 18) (- 0 20)) $generated@@687) (=> $generated@@687 (=> (and ($generated@@253 $generated@@694 $generated@@692 $generated@@697) ($generated@@253 $generated@@688 $generated@@692 $generated@@697)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@694 $generated@@688))) (=> (not (= $generated@@694 $generated@@688)) (=> (and ($generated@@77 $generated@@692 $generated@@694 $generated@@688) ($generated@@77 $generated@@692 $generated@@694 $generated@@688)) (and (=> (= (ControlFlow 0 18) 13) $generated@@719) (=> (= (ControlFlow 0 18) 15) $generated@@718))))))))))))))
(let (($generated@@723  (=> (and (not (and ($generated@@78 $generated@@698 $generated@@692) ($generated@@253 $generated@@698 $generated@@692 $generated@@697))) (= (ControlFlow 0 24) 18)) $generated@@720)))
(let (($generated@@724  (=> (and (and ($generated@@78 $generated@@698 $generated@@692) ($generated@@253 $generated@@698 $generated@@692 $generated@@697)) (= (ControlFlow 0 23) 18)) $generated@@720)))
(let (($generated@@725  (=> (not ($generated@@338 $generated@@686 ($generated@@603 $generated@@76))) (and (=> (= (ControlFlow 0 25) 23) $generated@@724) (=> (= (ControlFlow 0 25) 24) $generated@@723)))))
(let (($generated@@726  (=> $generated@@693 (and (=> (= (ControlFlow 0 31) 28) $generated@@715) (=> (= (ControlFlow 0 31) 25) $generated@@725)))))
(let (($generated@@727  (=> (and (not $generated@@693) ($generated@@623 $generated@@686 $generated@@690)) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@687) (=> $generated@@687 (=> ($generated@@0 ($generated@@89 $generated@@690 $generated@@688)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@687) (=> $generated@@687 (=> (and (not ($generated@@0 ($generated@@89 $generated@@686 $generated@@688))) (= (ControlFlow 0 3) (- 0 2))) $generated@@687)))))))))
(let (($generated@@728  (and (=> (= (ControlFlow 0 32) 3) $generated@@727) (=> (= (ControlFlow 0 32) 31) $generated@@726))))
(let (($generated@@729 true))
(let (($generated@@730  (=> (=> $generated@@687 (and ($generated@@78 $generated@@688 $generated@@692) ($generated@@253 $generated@@688 $generated@@692 $generated@@697))) (=> (and (and ($generated@@144 $generated@@686 ($generated@@238 $generated@@692)) ($generated@@82 $generated@@686 ($generated@@238 $generated@@692) $generated@@697)) (=> $generated@@699 (and ($generated@@78 $generated@@700 $generated@@692) ($generated@@253 $generated@@700 $generated@@692 $generated@@697)))) (=> (and (and (and (not false) $generated@@687) true) (=> $generated@@693 true)) (=> (and (and (and (and (=> $generated@@693 ($generated@@623 $generated@@686 $generated@@690)) (=> $generated@@693 true)) (and (=> $generated@@693 ($generated@@0 ($generated@@89 $generated@@690 $generated@@688))) (=> $generated@@693 true))) (and (and (=> $generated@@693 (not ($generated@@0 ($generated@@89 $generated@@686 $generated@@688)))) (=> $generated@@693 ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))))) (and (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@685))))) (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))) (forall (($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@731) $generated@@76) ($generated@@78 $generated@@731 $generated@@692)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@731)) (not (= $generated@@731 $generated@@685))) ($generated@@75 $generated@@692 $generated@@731 $generated@@685)) (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@731)) (not (= $generated@@731 $generated@@685))) (not ($generated@@75 $generated@@692 $generated@@685 $generated@@731)))))
 :pattern ( ($generated@@75 $generated@@692 $generated@@685 $generated@@731))
 :pattern ( ($generated@@75 $generated@@692 $generated@@731 $generated@@685))
 :pattern ( ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@731))
)))))))) (and (and (and (=> $generated@@693 (and ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))) (and ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688))) (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@685)) (forall (($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@732) $generated@@76) ($generated@@78 $generated@@732 $generated@@692)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@732)) (not (= $generated@@732 $generated@@685))) ($generated@@75 $generated@@692 $generated@@732 $generated@@685)) (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@732)) (not (= $generated@@732 $generated@@685))) (not ($generated@@75 $generated@@692 $generated@@685 $generated@@732)))))
 :pattern ( ($generated@@75 $generated@@692 $generated@@685 $generated@@732))
 :pattern ( ($generated@@75 $generated@@692 $generated@@732 $generated@@685))
 :pattern ( ($generated@@89 ($generated@@222 $generated@@686 ($generated@@446 ($generated@@603 $generated@@76) $generated@@688)) $generated@@732))
)))))) (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@85) (=> (and (not (= $generated@@733 $generated@@701)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@697 $generated@@733) $generated@@60))) (= ($generated@@89 $generated@@697 $generated@@733) ($generated@@89 $generated@@697 $generated@@733))))
 :pattern ( ($generated@@89 $generated@@697 $generated@@733))
))) (and ($generated@@140 $generated@@697 $generated@@697) (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (! (let (($generated@@736 ($generated@@67 (type $generated@@735))))
 (=> (and (and (= (type $generated@@734) $generated@@85) (= (type $generated@@735) ($generated@@66 $generated@@736))) (and (not (= $generated@@734 $generated@@701)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@697 $generated@@734) $generated@@60)))) (or (= ($generated@@91 ($generated@@89 $generated@@697 $generated@@734) $generated@@735) ($generated@@91 ($generated@@89 $generated@@697 $generated@@734) $generated@@735)) ($generated@@0 ($generated@@166 $generated@@702 $generated@@734 $generated@@735)))))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@697 $generated@@734) $generated@@735))
)))) (and (and (=> $generated@@703 $generated@@703) (=> true $generated@@687)) (and ($generated@@623 $generated@@686 $generated@@704) (=> ($generated@@338 $generated@@686 $generated@@704) true))))) (and (=> (= (ControlFlow 0 33) 1) $generated@@729) (=> (= (ControlFlow 0 33) 32) $generated@@728))))))))
(let (($generated@@737  (and (=> (= (ControlFlow 0 34) (- 0 41)) (exists (($generated@@738 T@U) ) (!  (and (= (type $generated@@738) $generated@@76) (and ($generated@@78 $generated@@738 $generated@@692) ($generated@@0 ($generated@@89 $generated@@690 $generated@@738))))
 :no-pattern (type $generated@@738)
 :no-pattern ($generated $generated@@738)
 :no-pattern ($generated@@0 $generated@@738)
))) (=> (exists (($generated@@739 T@U) ) (!  (and (= (type $generated@@739) $generated@@76) (and ($generated@@78 $generated@@739 $generated@@692) ($generated@@0 ($generated@@89 $generated@@690 $generated@@739))))
 :no-pattern (type $generated@@739)
 :no-pattern ($generated $generated@@739)
 :no-pattern ($generated@@0 $generated@@739)
)) (=> (and (=> true (and ($generated@@78 $generated@@705 $generated@@692) ($generated@@253 $generated@@705 $generated@@692 $generated@@697))) ($generated@@0 ($generated@@89 $generated@@690 $generated@@705))) (and (=> (= (ControlFlow 0 34) (- 0 40)) true) (=> (= $generated@@704 ($generated@@377 $generated@@690 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (and (=> (= (ControlFlow 0 34) (- 0 39)) (=> $generated@@693 ($generated@@623 $generated@@704 $generated@@690))) (=> (=> $generated@@693 ($generated@@623 $generated@@704 $generated@@690)) (and (=> (= (ControlFlow 0 34) (- 0 38)) (=> $generated@@693 ($generated@@0 ($generated@@89 $generated@@690 $generated@@705)))) (=> (=> $generated@@693 ($generated@@0 ($generated@@89 $generated@@690 $generated@@705))) (and (=> (= (ControlFlow 0 34) (- 0 37)) (=> $generated@@693 (not ($generated@@0 ($generated@@89 $generated@@704 $generated@@705))))) (=> (=> $generated@@693 (not ($generated@@0 ($generated@@89 $generated@@704 $generated@@705)))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@685)))))) (=> (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) ($generated@@0 ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@685))))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (forall (($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@76) ($generated@@78 $generated@@740 $generated@@692)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@740)) (not (= $generated@@740 $generated@@685))) ($generated@@75 $generated@@692 $generated@@740 $generated@@685)) (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@740)) (not (= $generated@@740 $generated@@685))) (not ($generated@@75 $generated@@692 $generated@@685 $generated@@740)))))
 :pattern ( ($generated@@75 $generated@@692 $generated@@685 $generated@@740))
 :pattern ( ($generated@@75 $generated@@692 $generated@@740 $generated@@685))
 :pattern ( ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@740))
)))))) (=> (=> $generated@@693 (=> ($generated@@263 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (or ($generated@@262 $generated@@692 $generated@@685 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705))) (forall (($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@741) $generated@@76) ($generated@@78 $generated@@741 $generated@@692)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@741)) (not (= $generated@@741 $generated@@685))) ($generated@@75 $generated@@692 $generated@@741 $generated@@685)) (=> (and ($generated@@0 ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@741)) (not (= $generated@@741 $generated@@685))) (not ($generated@@75 $generated@@692 $generated@@685 $generated@@741)))))
 :pattern ( ($generated@@75 $generated@@692 $generated@@685 $generated@@741))
 :pattern ( ($generated@@75 $generated@@692 $generated@@741 $generated@@685))
 :pattern ( ($generated@@89 ($generated@@222 $generated@@704 ($generated@@446 ($generated@@603 $generated@@76) $generated@@705)) $generated@@741))
))))) (=> (= (ControlFlow 0 34) 33) $generated@@730))))))))))))))))))
(let (($generated@@742  (=> (and (not (and ($generated@@78 $generated@@706 $generated@@692) ($generated@@253 $generated@@706 $generated@@692 $generated@@697))) (= (ControlFlow 0 43) 34)) $generated@@737)))
(let (($generated@@743  (=> (and (and ($generated@@78 $generated@@706 $generated@@692) ($generated@@253 $generated@@706 $generated@@692 $generated@@697)) (= (ControlFlow 0 42) 34)) $generated@@737)))
(let (($generated@@744  (=> (= $generated@@702 ($generated@@167 $generated@@701 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 44) 42) $generated@@743) (=> (= (ControlFlow 0 44) 43) $generated@@742)))))
(let (($generated@@745  (=> (and (and ($generated@@252 $generated@@697) ($generated@@707 $generated@@697)) (and ($generated@@144 $generated@@690 ($generated@@238 $generated@@692)) ($generated@@82 $generated@@690 ($generated@@238 $generated@@692) $generated@@697))) (=> (and (and (and (and (and ($generated@@78 $generated@@685 $generated@@692) ($generated@@253 $generated@@685 $generated@@692 $generated@@697)) (=> $generated@@703 (and ($generated@@78 $generated@@708 $generated@@692) ($generated@@253 $generated@@708 $generated@@692 $generated@@697)))) (and (=> $generated@@709 (and ($generated@@78 $generated@@710 $generated@@692) ($generated@@253 $generated@@710 $generated@@692 $generated@@697))) true)) (and (and ($generated@@144 $generated@@711 ($generated@@238 $generated@@692)) ($generated@@82 $generated@@711 ($generated@@238 $generated@@692) $generated@@697)) true)) (and (and (and (=> $generated@@712 (and ($generated@@78 $generated@@713 $generated@@692) ($generated@@253 $generated@@713 $generated@@692 $generated@@697))) true) (= 2 $generated@@74)) (and (and ($generated@@263 $generated@@692 $generated@@685 $generated@@690) (and ($generated@@262 $generated@@692 $generated@@685 $generated@@690) (and ($generated@@0 ($generated@@89 $generated@@690 $generated@@685)) (forall (($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@746) $generated@@76) ($generated@@78 $generated@@746 $generated@@692)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@690 $generated@@746)) (not (= $generated@@746 $generated@@685))) ($generated@@75 $generated@@692 $generated@@746 $generated@@685)) (=> (and ($generated@@0 ($generated@@89 $generated@@690 $generated@@746)) (not (= $generated@@746 $generated@@685))) (not ($generated@@75 $generated@@692 $generated@@685 $generated@@746)))))
 :pattern ( ($generated@@75 $generated@@692 $generated@@685 $generated@@746))
 :pattern ( ($generated@@75 $generated@@692 $generated@@746 $generated@@685))
 :pattern ( ($generated@@89 $generated@@690 $generated@@746))
))))) (= (ControlFlow 0 45) 44)))) $generated@@744))))
$generated@@745))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@76) 11))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@64) (= (type $generated@@80) $generated@@76)) (= (type $generated@@81) $generated@@76)) (or ($generated@@77 $generated@@79 $generated@@80 $generated@@81) (and (not (= 0 $generated@@74)) (and (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@78 $generated@@81 $generated@@79)) (not (= $generated@@80 $generated@@81)))))) true)
 :pattern ( ($generated@@75 $generated@@79 $generated@@80 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@83 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@76)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@76)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@148) (= (type $generated@@160) $generated@@148)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@165) $generated@@64)) ($generated@@144 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@144 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@85 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@67 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@85) (= (type $generated@@216) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@217) ($generated@@66 $generated@@4))) (= (type $generated@@219) $generated@@85)) (= (type $generated@@220) ($generated@@66 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@223 $generated@@224)) $generated@@148)
 :pattern ( ($generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@64) (= (type $generated@@226) $generated@@64)) (= (type $generated@@227) $generated@@76)) (= (type $generated@@228) $generated@@76)) (= ($generated@@144 ($generated@@222 $generated@@227 $generated@@228) ($generated@@147 $generated@@225 $generated@@226))  (and ($generated@@78 $generated@@227 $generated@@225) ($generated@@78 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@144 ($generated@@222 $generated@@227 $generated@@228) ($generated@@147 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@148) (= (type $generated@@230) $generated@@148)) (= ($generated@@154 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@154 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@64)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@234) $generated@@64)) (= ($generated@@144 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@76) ($generated@@0 ($generated@@89 $generated@@233 $generated@@235))) ($generated@@78 $generated@@235 $generated@@234))
 :pattern ( ($generated@@89 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@144 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@76) ($generated@@0 ($generated@@89 $generated@@238 $generated@@240))) ($generated@@78 $generated@@240 $generated@@239))
 :pattern ( ($generated@@89 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@76)) (= (type $generated@@252) $generated@@76)) (= (type $generated@@253) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@247 $generated@@253)) (= ($generated@@82 ($generated@@222 $generated@@251 $generated@@252) ($generated@@147 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@82 ($generated@@222 $generated@@251 $generated@@252) ($generated@@147 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@148) (= ($generated@@146 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@256))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) $generated@@76)) (= (type $generated@@261) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@258 $generated@@259 ($generated@@243 $generated@@260) ($generated@@243 $generated@@261)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@260 $generated@@259) ($generated@@144 $generated@@261 ($generated@@231 $generated@@259)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) ($generated@@243 $generated@@260))) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@76) ($generated@@78 $generated@@262 $generated@@259)) (and (=> ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) $generated@@262)) (=> (not (= $generated@@262 $generated@@260)) ($generated@@77 $generated@@259 $generated@@262 ($generated@@243 $generated@@260)))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) $generated@@262)) (not (= $generated@@262 $generated@@260))) ($generated@@75 $generated@@259 $generated@@262 ($generated@@243 $generated@@260))) (=> ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) $generated@@262)) (=> (not (= $generated@@262 $generated@@260)) ($generated@@77 $generated@@259 ($generated@@243 $generated@@260) $generated@@262))))))
 :pattern ( ($generated@@75 $generated@@259 $generated@@260 $generated@@262))
 :pattern ( ($generated@@75 $generated@@259 $generated@@262 $generated@@260))
 :pattern ( ($generated@@89 $generated@@261 $generated@@262))
))) (= ($generated@@257 $generated@@259 ($generated@@243 $generated@@260) ($generated@@243 $generated@@261))  (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) ($generated@@243 $generated@@260))) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@76) ($generated@@78 $generated@@263 $generated@@259)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) $generated@@263)) (not (= $generated@@263 $generated@@260))) ($generated@@75 $generated@@259 $generated@@263 ($generated@@243 $generated@@260))) (=> (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@261) $generated@@263)) (not (= $generated@@263 $generated@@260))) (not ($generated@@75 $generated@@259 ($generated@@243 $generated@@260) $generated@@263)))))
 :pattern ( ($generated@@75 $generated@@259 $generated@@260 $generated@@263))
 :pattern ( ($generated@@75 $generated@@259 $generated@@263 $generated@@260))
 :pattern ( ($generated@@89 $generated@@261 $generated@@263))
))))))
 :weight 3
 :pattern ( ($generated@@257 $generated@@259 ($generated@@243 $generated@@260) ($generated@@243 $generated@@261)))
))))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@148) ($generated@@146 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@76) (= (type $generated@@266) $generated@@76)) (= $generated@@264 ($generated@@222 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@146 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@76)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@248 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@82 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@248 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@281) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@282) $generated@@76)) (= (type $generated@@283) $generated@@64)) ($generated@@140 $generated@@280 $generated@@281)) ($generated@@248 $generated@@282 $generated@@283 $generated@@280)) ($generated@@248 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@140 $generated@@280 $generated@@281) ($generated@@248 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@285) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@287) $generated@@64)) ($generated@@140 $generated@@284 $generated@@285)) ($generated@@82 $generated@@286 $generated@@287 $generated@@284)) ($generated@@82 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@140 $generated@@284 $generated@@285) ($generated@@82 $generated@@286 $generated@@287 $generated@@284))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) $generated@@76)) (= (type $generated@@290) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@258 $generated@@288 $generated@@289 $generated@@290) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@289 $generated@@288) ($generated@@144 $generated@@290 ($generated@@231 $generated@@288)))))) true)
 :pattern ( ($generated@@257 $generated@@288 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@84 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@87 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@84 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@89 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@84 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@89 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@89 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@84 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@89 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@89 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@87 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@84 $generated@@334 $generated@@2)) (= ($generated@@162 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@89 $generated@@333 $generated@@335))) (<= ($generated ($generated@@89 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@89 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@162 $generated@@333))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (= (type $generated@@336) $generated@@64) (= (type $generated@@337) $generated@@76)) (= (type $generated@@338) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@258 $generated@@336 $generated@@337 ($generated@@243 $generated@@338)) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@337 $generated@@336) ($generated@@144 $generated@@338 ($generated@@231 $generated@@336)))))) (and (=> ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@337)) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@76) ($generated@@78 $generated@@339 $generated@@336)) (and (=> ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@339)) (=> (not (= $generated@@339 $generated@@337)) ($generated@@77 $generated@@336 $generated@@339 $generated@@337))) (=> (=> (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@339)) (not (= $generated@@339 $generated@@337))) ($generated@@75 $generated@@336 $generated@@339 $generated@@337)) (=> ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@339)) (=> (not (= $generated@@339 $generated@@337)) ($generated@@77 $generated@@336 $generated@@337 $generated@@339))))))
 :pattern ( ($generated@@75 $generated@@336 $generated@@337 $generated@@339))
 :pattern ( ($generated@@75 $generated@@336 $generated@@339 $generated@@337))
 :pattern ( ($generated@@89 $generated@@338 $generated@@339))
))) (= ($generated@@257 $generated@@336 $generated@@337 ($generated@@243 $generated@@338))  (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@337)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@76) ($generated@@78 $generated@@340 $generated@@336)) (and (=> (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@340)) (not (= $generated@@340 $generated@@337))) ($generated@@75 $generated@@336 $generated@@340 $generated@@337)) (=> (and ($generated@@0 ($generated@@89 ($generated@@243 $generated@@338) $generated@@340)) (not (= $generated@@340 $generated@@337))) (not ($generated@@75 $generated@@336 $generated@@337 $generated@@340)))))
 :pattern ( ($generated@@75 $generated@@336 $generated@@337 $generated@@340))
 :pattern ( ($generated@@75 $generated@@336 $generated@@340 $generated@@337))
 :pattern ( ($generated@@89 $generated@@338 $generated@@340))
))))))
 :weight 3
 :pattern ( ($generated@@257 $generated@@336 $generated@@337 ($generated@@243 $generated@@338)))
))))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(let (($generated@@343 ($generated@@300 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@299 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@298 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@89 ($generated@@297 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@297 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@301 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@84 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@301 (type $generated@@348))))
(let (($generated@@350 ($generated@@300 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@299 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@298 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(let (($generated@@354 ($generated@@318 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@317 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@316 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@89 ($generated@@315 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@315 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@319 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@84 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@319 (type $generated@@359))))
(let (($generated@@361 ($generated@@318 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@317 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@316 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@89 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@144 $generated@@363 ($generated@@161 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@363 $generated@@365)))) ($generated@@78 $generated@@365 $generated@@364))
 :pattern ( ($generated@@89 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@144 $generated@@363 ($generated@@161 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@366 ($generated@@231 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@76) ($generated@@0 ($generated@@89 $generated@@366 $generated@@369))) ($generated@@248 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@89 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@82 $generated@@366 ($generated@@231 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@84 $generated@@76 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@370 ($generated@@236 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@76) ($generated@@0 ($generated@@89 $generated@@370 $generated@@373))) ($generated@@248 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@89 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@82 $generated@@370 ($generated@@236 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@89 ($generated@@292 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@89 ($generated@@292 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@301 (type $generated@@382))))
(let (($generated@@384 ($generated@@300 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@84 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@299 $generated@@76 $generated@@76)) (= (type $generated@@386) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@89 ($generated@@297 $generated@@385) ($generated@@155 ($generated@@377 $generated@@148 $generated@@386)))) (= ($generated@@89 ($generated@@378 $generated@@385) ($generated@@155 ($generated@@377 $generated@@148 $generated@@386))) ($generated@@156 ($generated@@377 $generated@@148 $generated@@386))))))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@84 $generated@@76 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@319 (type $generated@@390))))
(let (($generated@@392 ($generated@@318 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@84 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@317 $generated@@76 $generated@@76)) (= (type $generated@@394) $generated@@76)) (= ($generated@@0 ($generated@@89 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@89 ($generated@@315 $generated@@393) ($generated@@155 ($generated@@377 $generated@@148 $generated@@394)))) (= ($generated@@89 ($generated@@388 $generated@@393) ($generated@@155 ($generated@@377 $generated@@148 $generated@@394))) ($generated@@156 ($generated@@377 $generated@@148 $generated@@394))))))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@300 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@299 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@89 ($generated@@345 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@89 ($generated@@297 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@89 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@89 ($generated@@297 $generated@@395) $generated@@399))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@89 ($generated@@345 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@318 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@317 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@89 ($generated@@356 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@89 ($generated@@315 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@89 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@89 ($generated@@315 $generated@@400) $generated@@404))
 :pattern ( ($generated@@89 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@89 ($generated@@356 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@299 $generated@@76 $generated@@76)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@297 $generated@@408) $generated@@412))) (and ($generated@@248 ($generated@@89 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@248 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@89 ($generated@@297 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@82 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@317 $generated@@76 $generated@@76)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@315 $generated@@416) $generated@@420))) (and ($generated@@248 ($generated@@89 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@248 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@89 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@89 ($generated@@315 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@82 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@421) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@422) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@423) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@421 $generated@@423))) (and ($generated@@140 $generated@@421 $generated@@422) ($generated@@140 $generated@@422 $generated@@423))) ($generated@@140 $generated@@421 $generated@@423))
 :pattern ( ($generated@@140 $generated@@421 $generated@@422) ($generated@@140 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@84 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@319 (type $generated@@426))))
(let (($generated@@428 ($generated@@318 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@317 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@316 $generated@@428 $generated@@427)) (= ($generated@@315 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@315 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@319 (type $generated@@429))))
(let (($generated@@431 ($generated@@318 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@317 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@316 $generated@@431 $generated@@430)) (= ($generated@@356 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@356 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@319 (type $generated@@432))))
(let (($generated@@434 ($generated@@318 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@317 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@316 $generated@@434 $generated@@433)) (= ($generated@@387 $generated@@432) ($generated@@424 $generated@@76))))))
 :pattern ( ($generated@@387 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@301 (type $generated@@435))))
(let (($generated@@437 ($generated@@300 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@299 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@298 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@76) (= (type $generated@@439) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@376 $generated@@435) ($generated@@275 ($generated@@222 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@376 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@319 (type $generated@@440))))
(let (($generated@@442 ($generated@@318 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@317 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@316 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@76) (= (type $generated@@444) $generated@@76)) ($generated@@0 ($generated@@89 ($generated@@387 $generated@@440) ($generated@@275 ($generated@@222 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@76) ($generated@@78 $generated@@445 $generated@@46)) (and (= ($generated@@275 ($generated@@377 $generated@@2 $generated@@445)) $generated@@445) ($generated@@144 ($generated@@377 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@78 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@76) ($generated@@78 $generated@@446 $generated@@47)) (and (= ($generated@@275 ($generated@@377 $generated@@3 $generated@@446)) $generated@@446) ($generated@@144 ($generated@@377 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@78 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@76) ($generated@@78 $generated@@447 $generated@@44)) (and (= ($generated@@275 ($generated@@377 $generated@@4 $generated@@447)) $generated@@447) ($generated@@144 ($generated@@377 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@78 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@76) ($generated@@78 $generated@@449 $generated@@45)) (and (= ($generated@@275 ($generated@@377 $generated@@448 $generated@@449)) $generated@@449) ($generated@@144 ($generated@@377 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@78 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@78 ($generated@@275 $generated@@450) $generated@@451) ($generated@@144 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@78 ($generated@@275 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@87 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@84 $generated@@453 $generated@@2)) (<= 0 ($generated@@291 $generated@@452))))
 :pattern ( ($generated@@291 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@270 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@269 $generated@@455)) (<= 0 ($generated@@268 $generated@@454))))
 :pattern ( ($generated@@268 $generated@@454))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@76)) (= (type $generated@@458) ($generated@@84 $generated@@76 $generated@@4))) (or ($generated@@258 $generated@@456 $generated@@457 $generated@@458) (and (not (= 1 $generated@@74)) (and ($generated@@78 $generated@@457 $generated@@456) ($generated@@144 $generated@@458 ($generated@@231 $generated@@456)))))) (and (=> ($generated@@0 ($generated@@89 $generated@@458 $generated@@457)) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@76) ($generated@@78 $generated@@459 $generated@@456)) (and (=> ($generated@@0 ($generated@@89 $generated@@458 $generated@@459)) (=> (not (= $generated@@459 $generated@@457)) ($generated@@77 $generated@@456 $generated@@459 $generated@@457))) (=> (=> (and ($generated@@0 ($generated@@89 $generated@@458 $generated@@459)) (not (= $generated@@459 $generated@@457))) ($generated@@75 $generated@@456 $generated@@459 $generated@@457)) (=> ($generated@@0 ($generated@@89 $generated@@458 $generated@@459)) (=> (not (= $generated@@459 $generated@@457)) ($generated@@77 $generated@@456 $generated@@457 $generated@@459))))))
 :pattern ( ($generated@@75 $generated@@456 $generated@@457 $generated@@459))
 :pattern ( ($generated@@75 $generated@@456 $generated@@459 $generated@@457))
 :pattern ( ($generated@@89 $generated@@458 $generated@@459))
))) (= ($generated@@257 $generated@@456 $generated@@457 $generated@@458)  (and ($generated@@0 ($generated@@89 $generated@@458 $generated@@457)) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@76) ($generated@@78 $generated@@460 $generated@@456)) (and (=> (and ($generated@@0 ($generated@@89 $generated@@458 $generated@@460)) (not (= $generated@@460 $generated@@457))) ($generated@@75 $generated@@456 $generated@@460 $generated@@457)) (=> (and ($generated@@0 ($generated@@89 $generated@@458 $generated@@460)) (not (= $generated@@460 $generated@@457))) (not ($generated@@75 $generated@@456 $generated@@457 $generated@@460)))))
 :pattern ( ($generated@@75 $generated@@456 $generated@@457 $generated@@460))
 :pattern ( ($generated@@75 $generated@@456 $generated@@460 $generated@@457))
 :pattern ( ($generated@@89 $generated@@458 $generated@@460))
))))))
 :pattern ( ($generated@@257 $generated@@456 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@405 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@405 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@405 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@413 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@413 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@76) (= (type $generated@@482) $generated@@76)) (= ($generated@@254 ($generated@@222 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@147 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@147 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@147 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@147 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@76) (= (type $generated@@492) $generated@@76)) (= ($generated@@155 ($generated@@222 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@222 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@76) (= (type $generated@@494) $generated@@76)) (= ($generated@@156 ($generated@@222 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@222 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@270 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@269 $generated@@76)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@268 $generated@@501))) ($generated@@248 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@82 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@83 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@83 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@231 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@231 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@231 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@236 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@236 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@161 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@161 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@161 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@377 $generated@@524 ($generated@@275 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@275 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@299 $generated@@76 $generated@@76)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@144 $generated@@525 ($generated@@405 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@297 $generated@@525) $generated@@528))) (and ($generated@@78 ($generated@@89 ($generated@@378 $generated@@525) $generated@@528) $generated@@527) ($generated@@78 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@525) $generated@@528))
 :pattern ( ($generated@@89 ($generated@@297 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@144 $generated@@525 ($generated@@405 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@317 $generated@@76 $generated@@76)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@144 $generated@@529 ($generated@@413 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@76) ($generated@@0 ($generated@@89 ($generated@@315 $generated@@529) $generated@@532))) (and ($generated@@78 ($generated@@89 ($generated@@388 $generated@@529) $generated@@532) $generated@@531) ($generated@@78 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@89 ($generated@@388 $generated@@529) $generated@@532))
 :pattern ( ($generated@@89 ($generated@@315 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@144 $generated@@529 ($generated@@413 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@76) (= (type $generated@@536) $generated@@76)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@222 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@76) (= (type $generated@@538) $generated@@76)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@222 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@76) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@78 $generated@@539 ($generated@@405 $generated@@540 $generated@@541))) (and (= ($generated@@275 ($generated@@377 ($generated@@299 $generated@@76 $generated@@76) $generated@@539)) $generated@@539) ($generated@@144 ($generated@@377 ($generated@@299 $generated@@76 $generated@@76) $generated@@539) ($generated@@405 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@78 $generated@@539 ($generated@@405 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@76) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@78 $generated@@542 ($generated@@413 $generated@@543 $generated@@544))) (and (= ($generated@@275 ($generated@@377 ($generated@@317 $generated@@76 $generated@@76) $generated@@542)) $generated@@542) ($generated@@144 ($generated@@377 ($generated@@317 $generated@@76 $generated@@76) $generated@@542) ($generated@@413 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@413 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@76)) ($generated@@78 $generated@@547 ($generated@@147 $generated@@545 $generated@@546))) (and (= ($generated@@275 ($generated@@377 $generated@@148 $generated@@547)) $generated@@547) ($generated@@144 ($generated@@377 $generated@@148 $generated@@547) ($generated@@147 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@78 $generated@@547 ($generated@@147 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@89 ($generated@@424 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@89 ($generated@@424 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@69)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@147 $generated@@552 $generated@@553)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@148) (= ($generated@@533 ($generated@@275 $generated@@554)) ($generated@@534 $generated@@554)))
 :pattern ( ($generated@@533 ($generated@@275 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@76) ($generated@@78 $generated@@555 ($generated@@83 0))) (and (= ($generated@@275 ($generated@@377 $generated@@2 $generated@@555)) $generated@@555) ($generated@@144 ($generated@@377 ($generated@@84 $generated@@76 $generated@@4) $generated@@555) ($generated@@83 0))))
 :pattern ( ($generated@@78 $generated@@555 ($generated@@83 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@76) (= (type $generated@@557) $generated@@64)) ($generated@@78 $generated@@556 ($generated@@231 $generated@@557))) (and (= ($generated@@275 ($generated@@377 ($generated@@84 $generated@@76 $generated@@4) $generated@@556)) $generated@@556) ($generated@@144 ($generated@@377 ($generated@@84 $generated@@76 $generated@@4) $generated@@556) ($generated@@231 $generated@@557))))
 :pattern ( ($generated@@78 $generated@@556 ($generated@@231 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@76) (= (type $generated@@559) $generated@@64)) ($generated@@78 $generated@@558 ($generated@@236 $generated@@559))) (and (= ($generated@@275 ($generated@@377 ($generated@@84 $generated@@76 $generated@@4) $generated@@558)) $generated@@558) ($generated@@144 ($generated@@377 ($generated@@84 $generated@@76 $generated@@4) $generated@@558) ($generated@@236 $generated@@559))))
 :pattern ( ($generated@@78 $generated@@558 ($generated@@236 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@76) (= (type $generated@@561) $generated@@64)) ($generated@@78 $generated@@560 ($generated@@161 $generated@@561))) (and (= ($generated@@275 ($generated@@377 ($generated@@84 $generated@@76 $generated@@2) $generated@@560)) $generated@@560) ($generated@@144 ($generated@@377 ($generated@@84 $generated@@76 $generated@@2) $generated@@560) ($generated@@161 $generated@@561))))
 :pattern ( ($generated@@78 $generated@@560 ($generated@@161 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@76) (= (type $generated@@563) $generated@@64)) ($generated@@78 $generated@@562 ($generated@@495 $generated@@563))) (and (= ($generated@@275 ($generated@@377 ($generated@@269 $generated@@76) $generated@@562)) $generated@@562) ($generated@@144 ($generated@@377 ($generated@@269 $generated@@76) $generated@@562) ($generated@@495 $generated@@563))))
 :pattern ( ($generated@@78 $generated@@562 ($generated@@495 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@84 $generated@@76 $generated@@2)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@564 ($generated@@161 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@76) (< 0 ($generated ($generated@@89 $generated@@564 $generated@@567)))) ($generated@@248 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@89 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@82 $generated@@564 ($generated@@161 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@148) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@247 $generated@@570) (and ($generated@@146 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@64) ($generated@@82 $generated@@568 ($generated@@147 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@82 $generated@@568 ($generated@@147 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@248 ($generated@@155 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@248 ($generated@@155 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@148) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@247 $generated@@574) (and ($generated@@146 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@82 $generated@@572 ($generated@@147 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@82 $generated@@572 ($generated@@147 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@248 ($generated@@156 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@248 ($generated@@156 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@76) (= (type $generated@@577) $generated@@76)) (= ($generated@@222 ($generated@@243 $generated@@576) ($generated@@243 $generated@@577)) ($generated@@243 ($generated@@222 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@222 ($generated@@243 $generated@@576) ($generated@@243 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@241 $generated@@578))) ($generated@@243 ($generated@@275 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@241 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@275 ($generated@@243 $generated@@579)) ($generated@@243 ($generated@@275 $generated@@579)))
 :pattern ( ($generated@@275 ($generated@@243 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@270 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@269 $generated@@581)) (= ($generated@@268 $generated@@580) 0)) (= $generated@@580 ($generated@@267 $generated@@581))))
 :pattern ( ($generated@@268 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@84 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@291 ($generated@@90 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@291 $generated@@582) ($generated ($generated@@89 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@291 ($generated@@90 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@587) $generated@@2)) ($generated@@82 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@82 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@589) $generated@@3)) ($generated@@82 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@82 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@591) $generated@@4)) ($generated@@82 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@82 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@593) $generated@@448)) ($generated@@82 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@82 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@595) $generated@@76)) ($generated@@82 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@82 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@269 $generated@@76)) (= (type $generated@@597) $generated@@64)) (= ($generated@@144 $generated@@596 ($generated@@495 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@268 $generated@@596))) ($generated@@78 ($generated@@496 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@496 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@144 $generated@@596 ($generated@@495 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@269 $generated@@76)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@268 $generated@@600))) (< ($generated@@534 ($generated@@377 $generated@@148 ($generated@@496 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@534 ($generated@@377 $generated@@148 ($generated@@496 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@299 $generated@@76 $generated@@76)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@144 $generated@@602 ($generated@@405 $generated@@603 $generated@@604))) (and (and ($generated@@144 ($generated@@297 $generated@@602) ($generated@@231 $generated@@603)) ($generated@@144 ($generated@@345 $generated@@602) ($generated@@231 $generated@@604))) ($generated@@144 ($generated@@376 $generated@@602) ($generated@@231 ($generated@@147 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@144 $generated@@602 ($generated@@405 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@317 $generated@@76 $generated@@76)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@144 $generated@@605 ($generated@@413 $generated@@606 $generated@@607))) (and (and ($generated@@144 ($generated@@315 $generated@@605) ($generated@@236 $generated@@606)) ($generated@@144 ($generated@@356 $generated@@605) ($generated@@236 $generated@@607))) ($generated@@144 ($generated@@387 $generated@@605) ($generated@@236 ($generated@@147 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@144 $generated@@605 ($generated@@413 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@144 $generated@@608 $generated@@46))
 :pattern ( ($generated@@144 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@144 $generated@@609 $generated@@47))
 :pattern ( ($generated@@144 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@144 $generated@@610 $generated@@44))
 :pattern ( ($generated@@144 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@448) ($generated@@144 $generated@@611 $generated@@45))
 :pattern ( ($generated@@144 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@76) ($generated@@144 $generated@@612 $generated@@48))
 :pattern ( ($generated@@144 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Bool)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () T@U)
(assert  (and (and (and (= (type $generated@@624) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@627) $generated@@85)) (= (type $generated@@628) ($generated@@168 $generated@@85 $generated@@4))) (= (type $generated@@632) ($generated@@84 $generated@@76 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@633 true))
(let (($generated@@634  (=> (and (< $generated@@613 $generated@@614) (= (ControlFlow 0 19) 16)) $generated@@633)))
(let (($generated@@635  (=> (and (<= $generated@@614 $generated@@613) (= (ControlFlow 0 18) 16)) $generated@@633)))
(let (($generated@@636  (=> (not (= $generated@@613 $generated@@615)) (and (=> (= (ControlFlow 0 20) 18) $generated@@635) (=> (= (ControlFlow 0 20) 19) $generated@@634)))))
(let (($generated@@637  (=> (and (= $generated@@613 $generated@@615) (= (ControlFlow 0 17) 16)) $generated@@633)))
(let (($generated@@638  (=> (not $generated@@616) (=> (and (<= $generated@@614 $generated@@617) (< $generated@@615 $generated@@614)) (and (=> (= (ControlFlow 0 21) 20) $generated@@636) (=> (= (ControlFlow 0 21) 17) $generated@@637))))))
(let (($generated@@639  (=> (= (ControlFlow 0 13) (- 0 12)) (= $generated@@618 $generated@@613))))
(let (($generated@@640  (=> (<= $generated@@617 $generated@@614) (=> (and (= $generated@@618 $generated@@615) (= (ControlFlow 0 14) 13)) $generated@@639))))
(let (($generated@@641  (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@619) (= (- $generated@@617 $generated@@620) $generated@@619))) (=> (or (<= 0 $generated@@619) (= (- $generated@@617 $generated@@620) $generated@@619)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< (- $generated@@617 $generated@@620) $generated@@619)) (=> (< (- $generated@@617 $generated@@620) $generated@@619) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@616 (<= $generated@@620 $generated@@617))) (=> (=> $generated@@616 (<= $generated@@620 $generated@@617)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@616 (< $generated@@621 $generated@@620))) (=> (=> $generated@@616 (< $generated@@621 $generated@@620)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@616 (or (= $generated@@613 $generated@@621) (and (<= $generated@@620 $generated@@613) (< $generated@@613 $generated@@617)))))))))))))))
(let (($generated@@642  (=> (not ($generated@@75 $generated@@46 ($generated@@275 ($generated@@8 $generated@@614)) ($generated@@275 ($generated@@8 $generated@@615)))) (=> (and (and (= $generated@@622 (+ $generated@@614 1)) (= $generated@@620 $generated@@622)) (and (= $generated@@621 $generated@@614) (= (ControlFlow 0 9) 3))) $generated@@641))))
(let (($generated@@643  (=> ($generated@@75 $generated@@46 ($generated@@275 ($generated@@8 $generated@@614)) ($generated@@275 ($generated@@8 $generated@@615))) (=> (and (and (= $generated@@623 (+ $generated@@614 1)) (= $generated@@620 $generated@@623)) (and (= $generated@@621 $generated@@615) (= (ControlFlow 0 8) 3))) $generated@@641))))
(let (($generated@@644  (=> (and (and (< $generated@@614 $generated@@617) (= $generated@@619 (- $generated@@617 $generated@@614))) (and ($generated@@82 ($generated@@8 $generated@@614) $generated@@46 $generated@@624) ($generated@@82 ($generated@@8 $generated@@615) $generated@@46 $generated@@624))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@614 $generated@@615))) (=> (not (= $generated@@614 $generated@@615)) (=> (and ($generated@@77 $generated@@46 ($generated@@275 ($generated@@8 $generated@@614)) ($generated@@275 ($generated@@8 $generated@@615))) ($generated@@77 $generated@@46 ($generated@@275 ($generated@@8 $generated@@614)) ($generated@@275 ($generated@@8 $generated@@615)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@643) (=> (= (ControlFlow 0 10) 9) $generated@@642))))))))
(let (($generated@@645  (=> $generated@@616 (and (=> (= (ControlFlow 0 15) 14) $generated@@640) (=> (= (ControlFlow 0 15) 10) $generated@@644)))))
(let (($generated@@646  (and (=> (= (ControlFlow 0 22) 21) $generated@@638) (=> (= (ControlFlow 0 22) 15) $generated@@645))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (and (and (and (and (and (and (and (= $generated@@625 0) (not false)) (<= 1 $generated@@614)) (<= 0 $generated@@615)) (<= 0 $generated@@626)) (=> $generated@@616 true)) (and (=> $generated@@616 (<= $generated@@614 $generated@@617)) (=> $generated@@616 true))) (and (and (and (=> $generated@@616 (< $generated@@615 $generated@@614)) (=> $generated@@616 true)) (and (=> $generated@@616 (or (= $generated@@613 $generated@@615) (and (<= $generated@@614 $generated@@613) (< $generated@@613 $generated@@617)))) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@85) (=> (and (not (= $generated@@649 $generated@@627)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@624 $generated@@649) $generated@@60))) (= ($generated@@89 $generated@@624 $generated@@649) ($generated@@89 $generated@@624 $generated@@649))))
 :pattern ( ($generated@@89 $generated@@624 $generated@@649))
)))) (and (and ($generated@@140 $generated@@624 $generated@@624) (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@67 (type $generated@@651))))
 (=> (and (and (= (type $generated@@650) $generated@@85) (= (type $generated@@651) ($generated@@66 $generated@@652))) (and (not (= $generated@@650 $generated@@627)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@624 $generated@@650) $generated@@60)))) (or (= ($generated@@91 ($generated@@89 $generated@@624 $generated@@650) $generated@@651) ($generated@@91 ($generated@@89 $generated@@624 $generated@@650) $generated@@651)) ($generated@@0 ($generated@@166 $generated@@628 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@624 $generated@@650) $generated@@651))
))) (and (<= (- $generated@@617 $generated@@614) $generated@@626) (=> (= (- $generated@@617 $generated@@614) $generated@@626) true))))) (and (=> (= (ControlFlow 0 23) 1) $generated@@647) (=> (= (ControlFlow 0 23) 22) $generated@@646)))))
(let (($generated@@653  (=> (= $generated@@628 ($generated@@167 $generated@@627 $generated@@624 $generated@@60 false)) (=> (and (and (= $generated@@625 ($generated@@241 0)) (= $generated@@629 ($generated@@241 1))) (and (= $generated@@630 ($generated@@241 0)) (= $generated@@626 (- $generated@@617 $generated@@629)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (=> $generated@@616 (<= $generated@@629 $generated@@617))) (=> (=> $generated@@616 (<= $generated@@629 $generated@@617)) (and (=> (= (ControlFlow 0 24) (- 0 26)) (=> $generated@@616 (< $generated@@630 $generated@@629))) (=> (=> $generated@@616 (< $generated@@630 $generated@@629)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (=> $generated@@616 (or (= $generated@@613 $generated@@630) (and (<= $generated@@629 $generated@@613) (< $generated@@613 $generated@@617))))) (=> (=> $generated@@616 (or (= $generated@@613 $generated@@630) (and (<= $generated@@629 $generated@@613) (< $generated@@613 $generated@@617)))) (=> (= (ControlFlow 0 24) 23) $generated@@648)))))))))))
(let (($generated@@654  (=> (and ($generated@@247 $generated@@624) ($generated@@631 $generated@@624)) (=> (and (and (and (and ($generated@@144 $generated@@632 ($generated@@231 $generated@@46)) ($generated@@82 $generated@@632 ($generated@@231 $generated@@46) $generated@@624)) (= 2 $generated@@74)) (and (< 0 $generated@@617) (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@2) true) (= ($generated@@0 ($generated@@89 $generated@@632 ($generated@@275 $generated@@655)))  (and (<= ($generated@@241 0) ($generated $generated@@655)) (< ($generated $generated@@655) $generated@@617))))
 :pattern ( ($generated@@89 $generated@@632 ($generated@@275 $generated@@655)))
)))) (and (and ($generated@@258 $generated@@46 ($generated@@275 ($generated@@8 $generated@@613)) $generated@@632) (and ($generated@@257 $generated@@46 ($generated@@275 ($generated@@8 $generated@@613)) $generated@@632) (and ($generated@@0 ($generated@@89 $generated@@632 ($generated@@275 ($generated@@8 $generated@@613)))) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@2) true) (and (=> (and ($generated@@0 ($generated@@89 $generated@@632 ($generated@@275 $generated@@656))) (not (= ($generated $generated@@656) $generated@@613))) ($generated@@75 $generated@@46 ($generated@@275 $generated@@656) ($generated@@275 ($generated@@8 $generated@@613)))) (=> (and ($generated@@0 ($generated@@89 $generated@@632 ($generated@@275 $generated@@656))) (not (= ($generated $generated@@656) $generated@@613))) (not ($generated@@75 $generated@@46 ($generated@@275 ($generated@@8 $generated@@613)) ($generated@@275 $generated@@656))))))
 :pattern ( ($generated@@75 $generated@@46 ($generated@@275 ($generated@@8 $generated@@613)) ($generated@@275 $generated@@656)))
 :pattern ( ($generated@@75 $generated@@46 ($generated@@275 $generated@@656) ($generated@@275 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@89 $generated@@632 ($generated@@275 $generated@@656)))
))))) (= (ControlFlow 0 28) 24))) $generated@@653))))
$generated@@654)))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
