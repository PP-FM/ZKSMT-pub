(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@577 (Int Int) Int)
(declare-fun $generated@@629 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 Int) ($generated@@579 Int) ) (! (= ($generated@@577 $generated@@578 $generated@@579) (* $generated@@578 $generated@@579))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@580)) ($generated@@503 $generated@@580)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@173) ($generated@@184 $generated@@581 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@581)) $generated@@581) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@581 ($generated@@79 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@173) (= (type $generated@@583) $generated@@67)) ($generated@@184 $generated@@582 ($generated@@193 $generated@@583))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@582)) $generated@@582) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@582) ($generated@@193 $generated@@583))))
 :pattern ( ($generated@@184 $generated@@582 ($generated@@193 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@173) (= (type $generated@@585) $generated@@67)) ($generated@@184 $generated@@584 ($generated@@198 $generated@@585))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@584) ($generated@@198 $generated@@585))))
 :pattern ( ($generated@@184 $generated@@584 ($generated@@198 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@173) (= (type $generated@@587) $generated@@67)) ($generated@@184 $generated@@586 ($generated@@178 $generated@@587))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@586)) $generated@@586) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@586) ($generated@@178 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@586 ($generated@@178 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@173) (= (type $generated@@589) $generated@@67)) ($generated@@184 $generated@@588 ($generated@@451 $generated@@589))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@588)) $generated@@588) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@588) ($generated@@451 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@588 ($generated@@451 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@67) (= (type $generated@@591) $generated@@173)) ($generated@@184 $generated@@591 ($generated@@137 $generated@@590))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@591)) $generated@@591) ($generated@@140 ($generated@@331 $generated@@81 $generated@@591) ($generated@@137 $generated@@590))))
 :pattern ( ($generated@@184 $generated@@591 ($generated@@137 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@67) (= (type $generated@@593) $generated@@173)) ($generated@@184 $generated@@593 ($generated@@157 $generated@@592))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@593)) $generated@@593) ($generated@@140 ($generated@@331 $generated@@81 $generated@@593) ($generated@@157 $generated@@592))))
 :pattern ( ($generated@@184 $generated@@593 ($generated@@157 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@594 ($generated@@178 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@594 $generated@@597)))) ($generated@@209 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@178 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@164) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@600) (and ($generated@@162 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@67) ($generated@@78 $generated@@598 ($generated@@163 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@163 $generated@@599 $generated@@601) $generated@@600))
))))) ($generated@@209 ($generated@@171 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@164) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@604) (and ($generated@@162 $generated@@602) (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@67) ($generated@@78 $generated@@602 ($generated@@163 $generated@@605 $generated@@603) $generated@@604))
 :pattern ( ($generated@@78 $generated@@602 ($generated@@163 $generated@@605 $generated@@603) $generated@@604))
))))) ($generated@@209 ($generated@@172 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@173) (= (type $generated@@607) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@606) ($generated@@205 $generated@@607)) ($generated@@205 ($generated@@183 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@606) ($generated@@205 $generated@@607)))
)))
(assert (forall (($generated@@608 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@608))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@608))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@609)) ($generated@@205 ($generated@@231 $generated@@609)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@224 (type $generated@@610))))
 (=> (and (= (type $generated@@610) ($generated@@223 $generated@@611)) (= ($generated@@222 $generated@@610) 0)) (= $generated@@610 ($generated@@221 $generated@@611))))
 :pattern ( ($generated@@222 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@613)))
 (=> (and (and (= (type $generated@@612) ($generated@@80 $generated@@615 $generated@@2)) (= (type $generated@@614) $generated@@2)) (<= 0 ($generated $generated@@614))) (= ($generated@@244 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)) (+ (- ($generated@@244 $generated@@612) ($generated ($generated@@85 $generated@@612 $generated@@613))) ($generated $generated@@614)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@2)) ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@3)) ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@4)) ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@408)) ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@173)) ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@223 $generated@@173)) (= (type $generated@@627) $generated@@67)) (= ($generated@@140 $generated@@626 ($generated@@451 $generated@@627)) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@222 $generated@@626))) ($generated@@184 ($generated@@452 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@452 $generated@@626 $generated@@628))
))))
 :pattern ( ($generated@@140 $generated@@626 ($generated@@451 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@222 $generated@@630))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@630 $generated@@631))) ($generated@@629 $generated@@630))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) ($generated@@140 $generated@@632 ($generated@@359 $generated@@633 $generated@@634))) (and (and ($generated@@140 ($generated@@254 $generated@@632) ($generated@@193 $generated@@633)) ($generated@@140 ($generated@@299 $generated@@632) ($generated@@193 $generated@@634))) ($generated@@140 ($generated@@330 $generated@@632) ($generated@@193 ($generated@@163 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@359 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@67)) ($generated@@140 $generated@@635 ($generated@@367 $generated@@636 $generated@@637))) (and (and ($generated@@140 ($generated@@272 $generated@@635) ($generated@@198 $generated@@636)) ($generated@@140 ($generated@@310 $generated@@635) ($generated@@198 $generated@@637))) ($generated@@140 ($generated@@341 $generated@@635) ($generated@@198 ($generated@@163 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@140 $generated@@635 ($generated@@367 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@140 $generated@@638 $generated@@46))
 :pattern ( ($generated@@140 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@140 $generated@@639 $generated@@47))
 :pattern ( ($generated@@140 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@140 $generated@@640 $generated@@44))
 :pattern ( ($generated@@140 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@408) ($generated@@140 $generated@@641 $generated@@45))
 :pattern ( ($generated@@140 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@173) ($generated@@140 $generated@@642 $generated@@48))
 :pattern ( ($generated@@140 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () Int)
(assert  (and (and (and (= (type $generated@@644) $generated@@81) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@650 true))
(let (($generated@@651  (=> (and (=> (and (<= ($generated@@203 0) $generated@@643) (< $generated@@643 ($generated@@136 $generated@@644))) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@644) ($generated@@378 $generated@@643)))) ($generated@@577 ($generated@@577 $generated@@643 $generated@@643) $generated@@643))) (= (ControlFlow 0 6) 1)) $generated@@650)))
(let (($generated@@652  (=> (<= ($generated@@203 0) $generated@@643) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (=> (< $generated@@643 ($generated@@136 $generated@@644)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@136 $generated@@644))) (=> (and (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@644) ($generated@@378 $generated@@643)))) ($generated@@577 ($generated@@577 $generated@@643 $generated@@643) $generated@@643)) (= (ControlFlow 0 2) 1)) $generated@@650)))))))))))
(let (($generated@@653  (=> (= $generated@@646 ($generated@@520 $generated@@138 $generated@@647 $generated@@60 $generated@@644)) (=> (and (and ($generated@@152 $generated@@645) ($generated@@648 $generated@@645)) (and (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@81) (=> (and (not (= $generated@@654 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@647 $generated@@654) $generated@@60))) (or (= ($generated@@85 $generated@@645 $generated@@654) ($generated@@85 $generated@@647 $generated@@654)) (= $generated@@654 $generated@@644))))
 :pattern ( ($generated@@85 $generated@@645 $generated@@654))
)) ($generated@@145 $generated@@647 $generated@@645))) (and (=> (= (ControlFlow 0 7) 2) $generated@@652) (=> (= (ControlFlow 0 7) 6) $generated@@651))))))
(let (($generated@@655  (=> (and ($generated@@152 $generated@@647) ($generated@@648 $generated@@647)) (=> (and (and ($generated@@140 $generated@@644 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@644 ($generated@@157 $generated@@46) $generated@@647)) (and (= 1 $generated@@649) (= (ControlFlow 0 8) 7))) $generated@@653))))
$generated@@655))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@577 (Int Int) Int)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 Int) ($generated@@579 Int) ) (! (= ($generated@@577 $generated@@578 $generated@@579) (* $generated@@578 $generated@@579))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@580)) ($generated@@503 $generated@@580)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@173) ($generated@@184 $generated@@581 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@581)) $generated@@581) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@581 ($generated@@79 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@173) (= (type $generated@@583) $generated@@67)) ($generated@@184 $generated@@582 ($generated@@193 $generated@@583))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@582)) $generated@@582) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@582) ($generated@@193 $generated@@583))))
 :pattern ( ($generated@@184 $generated@@582 ($generated@@193 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@173) (= (type $generated@@585) $generated@@67)) ($generated@@184 $generated@@584 ($generated@@198 $generated@@585))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@584) ($generated@@198 $generated@@585))))
 :pattern ( ($generated@@184 $generated@@584 ($generated@@198 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@173) (= (type $generated@@587) $generated@@67)) ($generated@@184 $generated@@586 ($generated@@178 $generated@@587))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@586)) $generated@@586) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@586) ($generated@@178 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@586 ($generated@@178 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@173) (= (type $generated@@589) $generated@@67)) ($generated@@184 $generated@@588 ($generated@@451 $generated@@589))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@588)) $generated@@588) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@588) ($generated@@451 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@588 ($generated@@451 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@67) (= (type $generated@@591) $generated@@173)) ($generated@@184 $generated@@591 ($generated@@137 $generated@@590))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@591)) $generated@@591) ($generated@@140 ($generated@@331 $generated@@81 $generated@@591) ($generated@@137 $generated@@590))))
 :pattern ( ($generated@@184 $generated@@591 ($generated@@137 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@67) (= (type $generated@@593) $generated@@173)) ($generated@@184 $generated@@593 ($generated@@157 $generated@@592))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@593)) $generated@@593) ($generated@@140 ($generated@@331 $generated@@81 $generated@@593) ($generated@@157 $generated@@592))))
 :pattern ( ($generated@@184 $generated@@593 ($generated@@157 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (=> (and (and (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@81)) (= (type $generated@@596) ($generated@@69 $generated@@598))) ($generated@@152 ($generated@@86 $generated@@594 $generated@@595 ($generated@@88 ($generated@@85 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))) ($generated@@145 $generated@@594 ($generated@@86 $generated@@594 $generated@@595 ($generated@@88 ($generated@@85 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@86 $generated@@594 $generated@@595 ($generated@@88 ($generated@@85 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@599 ($generated@@178 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@599 $generated@@602)))) ($generated@@209 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@178 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@164) (= (type $generated@@604) $generated@@67)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@605) (and ($generated@@162 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@67) ($generated@@78 $generated@@603 ($generated@@163 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@163 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@209 ($generated@@171 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@164) (= (type $generated@@608) $generated@@67)) (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@609) (and ($generated@@162 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@67) ($generated@@78 $generated@@607 ($generated@@163 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@78 $generated@@607 ($generated@@163 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@209 ($generated@@172 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@173) (= (type $generated@@612) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@611) ($generated@@205 $generated@@612)) ($generated@@205 ($generated@@183 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@611) ($generated@@205 $generated@@612)))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@613))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@614)) ($generated@@205 ($generated@@231 $generated@@614)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@224 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@223 $generated@@616)) (= ($generated@@222 $generated@@615) 0)) (= $generated@@615 ($generated@@221 $generated@@616))))
 :pattern ( ($generated@@222 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@80 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@244 ($generated@@86 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@244 $generated@@617) ($generated ($generated@@85 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@2)) ($generated@@78 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@624) $generated@@3)) ($generated@@78 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@78 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@626) $generated@@4)) ($generated@@78 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@78 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@628) $generated@@408)) ($generated@@78 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@630) $generated@@173)) ($generated@@78 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@223 $generated@@173)) (= (type $generated@@632) $generated@@67)) (= ($generated@@140 $generated@@631 ($generated@@451 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@222 $generated@@631))) ($generated@@184 ($generated@@452 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@452 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@140 $generated@@631 ($generated@@451 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@222 $generated@@635))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@359 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@254 $generated@@637) ($generated@@193 $generated@@638)) ($generated@@140 ($generated@@299 $generated@@637) ($generated@@193 $generated@@639))) ($generated@@140 ($generated@@330 $generated@@637) ($generated@@193 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@359 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@641) $generated@@67)) (= (type $generated@@642) $generated@@67)) ($generated@@140 $generated@@640 ($generated@@367 $generated@@641 $generated@@642))) (and (and ($generated@@140 ($generated@@272 $generated@@640) ($generated@@198 $generated@@641)) ($generated@@140 ($generated@@310 $generated@@640) ($generated@@198 $generated@@642))) ($generated@@140 ($generated@@341 $generated@@640) ($generated@@198 ($generated@@163 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@367 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@140 $generated@@643 $generated@@46))
 :pattern ( ($generated@@140 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@140 $generated@@644 $generated@@47))
 :pattern ( ($generated@@140 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@140 $generated@@645 $generated@@44))
 :pattern ( ($generated@@140 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@408) ($generated@@140 $generated@@646 $generated@@45))
 :pattern ( ($generated@@140 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@173) ($generated@@140 $generated@@647 $generated@@48))
 :pattern ( ($generated@@140 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Bool)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(assert  (and (and (and (and (and (= (type $generated@@649) $generated@@81) (= (type $generated@@658) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 43) (let (($generated@@672  (=> (forall (($generated@@673 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@673) (< $generated@@673 $generated@@650)) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@648 $generated@@649) ($generated@@378 $generated@@673)))) ($generated@@577 ($generated@@577 $generated@@673 $generated@@673) $generated@@673))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@648 $generated@@649) ($generated@@378 $generated@@673))))
)) (=> (and (and (= $generated@@651 ($generated@@577 ($generated@@577 $generated@@650 $generated@@650) $generated@@650)) (= $generated@@652 (+ (+ ($generated@@577 ($generated@@577 ($generated@@203 3) $generated@@650) $generated@@650) ($generated@@577 ($generated@@203 3) $generated@@650)) 1))) (and (= $generated@@653 (+ ($generated@@577 ($generated@@203 6) $generated@@650) 6)) (= (ControlFlow 0 21) (- 0 20)))) (not (= $generated@@649 $generated@@138))))))
(let (($generated@@674  (=> (and (not (and (<= ($generated@@203 0) $generated@@654) (< $generated@@654 $generated@@650))) (= (ControlFlow 0 25) 21)) $generated@@672)))
(let (($generated@@675  (=> (and (<= ($generated@@203 0) $generated@@654) (< $generated@@654 $generated@@650)) (and (=> (= (ControlFlow 0 22) (- 0 24)) (not (= $generated@@649 $generated@@138))) (=> (not (= $generated@@649 $generated@@138)) (and (=> (= (ControlFlow 0 22) (- 0 23)) (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@136 $generated@@649)))) (=> (= (ControlFlow 0 22) 21) $generated@@672)))))))
(let (($generated@@676  (=> (< $generated@@654 ($generated@@203 0)) (and (=> (= (ControlFlow 0 27) 22) $generated@@675) (=> (= (ControlFlow 0 27) 25) $generated@@674)))))
(let (($generated@@677  (=> (<= ($generated@@203 0) $generated@@654) (and (=> (= (ControlFlow 0 26) 22) $generated@@675) (=> (= (ControlFlow 0 26) 25) $generated@@674)))))
(let (($generated@@678  (and (=> (= (ControlFlow 0 28) 26) $generated@@677) (=> (= (ControlFlow 0 28) 27) $generated@@676))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (and (<= ($generated@@203 0) $generated@@650) (<= $generated@@650 ($generated@@136 $generated@@649))) (and (=> (= (ControlFlow 0 29) 28) $generated@@678) (=> (= (ControlFlow 0 29) 19) $generated@@679)))))
(let (($generated@@681  (=> (and (< $generated@@650 ($generated@@203 0)) (= (ControlFlow 0 32) 29)) $generated@@680)))
(let (($generated@@682  (=> (<= ($generated@@203 0) $generated@@650) (and (=> (= (ControlFlow 0 30) (- 0 31)) (not (= $generated@@649 $generated@@138))) (=> (= (ControlFlow 0 30) 29) $generated@@680)))))
(let (($generated@@683  (=> (not $generated@@655) (and (=> (= (ControlFlow 0 33) 30) $generated@@682) (=> (= (ControlFlow 0 33) 32) $generated@@681)))))
(let (($generated@@684  (=> (= (ControlFlow 0 15) (- 0 14)) (forall (($generated@@685 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@685) (< $generated@@685 ($generated@@136 $generated@@649))) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@649) ($generated@@378 $generated@@685)))) ($generated@@577 ($generated@@577 $generated@@685 $generated@@685) $generated@@685))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@649) ($generated@@378 $generated@@685))))
)))))
(let (($generated@@686  (=> (<= ($generated@@136 $generated@@649) $generated@@650) (=> (and (= $generated@@656 $generated@@648) (= (ControlFlow 0 16) 15)) $generated@@684))))
(let (($generated@@687  (=> (and (< $generated@@650 ($generated@@136 $generated@@649)) (= $generated@@657 (- ($generated@@136 $generated@@649) $generated@@650))) (and (=> (= (ControlFlow 0 3) (- 0 13)) (not (= $generated@@649 $generated@@138))) (=> (not (= $generated@@649 $generated@@138)) (and (=> (= (ControlFlow 0 3) (- 0 12)) (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@649)))) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@649))) (and (=> (= (ControlFlow 0 3) (- 0 11)) ($generated@@0 ($generated@@519 $generated@@658 $generated@@649 ($generated@@378 $generated@@650)))) (=> ($generated@@0 ($generated@@519 $generated@@658 $generated@@649 ($generated@@378 $generated@@650))) (=> (and (= $generated@@659 ($generated@@86 $generated@@648 $generated@@649 ($generated@@88 ($generated@@85 $generated@@648 $generated@@649) ($generated@@378 $generated@@650) ($generated@@231 ($generated@@8 $generated@@651))))) ($generated@@152 $generated@@659)) (=> (and (and (= $generated@@660 (+ $generated@@651 $generated@@652)) (= $generated@@661 (+ $generated@@652 $generated@@653))) (and (= $generated@@662 (+ $generated@@653 6)) (= $generated@@663 (+ $generated@@650 1)))) (and (=> (= (ControlFlow 0 3) (- 0 10)) (or (<= 0 $generated@@657) (= (- ($generated@@136 $generated@@649) $generated@@663) $generated@@657))) (=> (or (<= 0 $generated@@657) (= (- ($generated@@136 $generated@@649) $generated@@663) $generated@@657)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (< (- ($generated@@136 $generated@@649) $generated@@663) $generated@@657)) (=> (< (- ($generated@@136 $generated@@649) $generated@@663) $generated@@657) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> $generated@@655 (<= ($generated@@203 0) $generated@@663))) (=> (=> $generated@@655 (<= ($generated@@203 0) $generated@@663)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> $generated@@655 (<= $generated@@663 ($generated@@136 $generated@@649)))) (=> (=> $generated@@655 (<= $generated@@663 ($generated@@136 $generated@@649))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> $generated@@655 (forall (($generated@@688 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@688) (< $generated@@688 $generated@@663)) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@649) ($generated@@378 $generated@@688)))) ($generated@@577 ($generated@@577 $generated@@688 $generated@@688) $generated@@688))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@649) ($generated@@378 $generated@@688))))
)))) (=> (=> $generated@@655 (forall (($generated@@689 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@689) (< $generated@@689 $generated@@663)) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@649) ($generated@@378 $generated@@689)))) ($generated@@577 ($generated@@577 $generated@@689 $generated@@689) $generated@@689))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@649) ($generated@@378 $generated@@689))))
))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@655 (= $generated@@660 ($generated@@577 ($generated@@577 $generated@@663 $generated@@663) $generated@@663)))) (=> (=> $generated@@655 (= $generated@@660 ($generated@@577 ($generated@@577 $generated@@663 $generated@@663) $generated@@663))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@655 (= $generated@@661 (+ (+ ($generated@@577 ($generated@@577 ($generated@@203 3) $generated@@663) $generated@@663) ($generated@@577 ($generated@@203 3) $generated@@663)) 1)))) (=> (=> $generated@@655 (= $generated@@661 (+ (+ ($generated@@577 ($generated@@577 ($generated@@203 3) $generated@@663) $generated@@663) ($generated@@577 ($generated@@203 3) $generated@@663)) 1))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@655 (= $generated@@662 (+ ($generated@@577 ($generated@@203 6) $generated@@663) 6)))))))))))))))))))))))))))))
(let (($generated@@690  (=> $generated@@655 (and (=> (= (ControlFlow 0 17) (- 0 18)) (not (= $generated@@649 $generated@@138))) (=> (not (= $generated@@649 $generated@@138)) (and (=> (= (ControlFlow 0 17) 16) $generated@@686) (=> (= (ControlFlow 0 17) 3) $generated@@687)))))))
(let (($generated@@691  (and (=> (= (ControlFlow 0 34) 33) $generated@@683) (=> (= (ControlFlow 0 34) 17) $generated@@690))))
(let (($generated@@692 true))
(let (($generated@@693  (=> (and ($generated@@152 $generated@@648) ($generated@@664 $generated@@648)) (=> (and (and (and (and (and (not false) (<= 0 $generated@@650)) (<= 0 $generated@@651)) (<= 1 $generated@@652)) (<= 6 $generated@@653)) (and (and (and (and (=> $generated@@655 true) (=> $generated@@655 (<= ($generated@@203 0) $generated@@650))) (and (=> $generated@@655 (<= $generated@@650 ($generated@@136 $generated@@649))) (=> $generated@@655 true))) (and (and (=> $generated@@655 (forall (($generated@@694 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@694) (< $generated@@694 $generated@@650)) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@648 $generated@@649) ($generated@@378 $generated@@694)))) ($generated@@577 ($generated@@577 $generated@@694 $generated@@694) $generated@@694))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@648 $generated@@649) ($generated@@378 $generated@@694))))
))) (=> $generated@@655 true)) (and (=> $generated@@655 (= $generated@@651 ($generated@@577 ($generated@@577 $generated@@650 $generated@@650) $generated@@650))) (=> $generated@@655 true)))) (and (and (and (=> $generated@@655 (= $generated@@652 (+ (+ ($generated@@577 ($generated@@577 ($generated@@203 3) $generated@@650) $generated@@650) ($generated@@577 ($generated@@203 3) $generated@@650)) 1))) (=> $generated@@655 true)) (and (=> $generated@@655 (= $generated@@653 (+ ($generated@@577 ($generated@@203 6) $generated@@650) 6))) (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@81) (=> (and (not (= $generated@@695 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@665 $generated@@695) $generated@@60))) (or (= ($generated@@85 $generated@@648 $generated@@695) ($generated@@85 $generated@@665 $generated@@695)) (= $generated@@695 $generated@@649))))
 :pattern ( ($generated@@85 $generated@@648 $generated@@695))
)))) (and (and ($generated@@145 $generated@@665 $generated@@648) (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 ($generated@@70 (type $generated@@697))))
 (=> (and (and (= (type $generated@@696) $generated@@81) (= (type $generated@@697) ($generated@@69 $generated@@698))) (and (not (= $generated@@696 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@665 $generated@@696) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@648 $generated@@696) $generated@@697) ($generated@@87 ($generated@@85 $generated@@665 $generated@@696) $generated@@697)) ($generated@@0 ($generated@@519 $generated@@658 $generated@@696 $generated@@697)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@648 $generated@@696) $generated@@697))
))) (and (<= (- ($generated@@136 $generated@@649) $generated@@650) $generated@@666) (=> (= (- ($generated@@136 $generated@@649) $generated@@650) $generated@@666) true)))))) (and (=> (= (ControlFlow 0 35) 1) $generated@@692) (=> (= (ControlFlow 0 35) 34) $generated@@691))))))
(let (($generated@@699  (=> (and (= $generated@@658 ($generated@@520 $generated@@138 $generated@@665 $generated@@60 $generated@@649)) (= $generated@@667 ($generated@@203 0))) (=> (and (and (= $generated@@668 ($generated@@203 0)) (= $generated@@669 ($generated@@203 1))) (and (= $generated@@670 ($generated@@203 6)) (= $generated@@666 (- ($generated@@136 $generated@@649) $generated@@667)))) (and (=> (= (ControlFlow 0 36) (- 0 42)) (=> $generated@@655 (<= ($generated@@203 0) $generated@@667))) (=> (=> $generated@@655 (<= ($generated@@203 0) $generated@@667)) (and (=> (= (ControlFlow 0 36) (- 0 41)) (=> $generated@@655 (<= $generated@@667 ($generated@@136 $generated@@649)))) (=> (=> $generated@@655 (<= $generated@@667 ($generated@@136 $generated@@649))) (and (=> (= (ControlFlow 0 36) (- 0 40)) (=> $generated@@655 (forall (($generated@@700 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@700) (< $generated@@700 $generated@@667)) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@649) ($generated@@378 $generated@@700)))) ($generated@@577 ($generated@@577 $generated@@700 $generated@@700) $generated@@700))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@649) ($generated@@378 $generated@@700))))
)))) (=> (=> $generated@@655 (forall (($generated@@701 Int) ) (!  (=> true (=> (and (<= ($generated@@203 0) $generated@@701) (< $generated@@701 $generated@@667)) (= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@649) ($generated@@378 $generated@@701)))) ($generated@@577 ($generated@@577 $generated@@701 $generated@@701) $generated@@701))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@649) ($generated@@378 $generated@@701))))
))) (and (=> (= (ControlFlow 0 36) (- 0 39)) (=> $generated@@655 (= $generated@@668 ($generated@@577 ($generated@@577 $generated@@667 $generated@@667) $generated@@667)))) (=> (=> $generated@@655 (= $generated@@668 ($generated@@577 ($generated@@577 $generated@@667 $generated@@667) $generated@@667))) (and (=> (= (ControlFlow 0 36) (- 0 38)) (=> $generated@@655 (= $generated@@669 (+ (+ ($generated@@577 ($generated@@577 ($generated@@203 3) $generated@@667) $generated@@667) ($generated@@577 ($generated@@203 3) $generated@@667)) 1)))) (=> (=> $generated@@655 (= $generated@@669 (+ (+ ($generated@@577 ($generated@@577 ($generated@@203 3) $generated@@667) $generated@@667) ($generated@@577 ($generated@@203 3) $generated@@667)) 1))) (and (=> (= (ControlFlow 0 36) (- 0 37)) (=> $generated@@655 (= $generated@@670 (+ ($generated@@577 ($generated@@203 6) $generated@@667) 6)))) (=> (=> $generated@@655 (= $generated@@670 (+ ($generated@@577 ($generated@@203 6) $generated@@667) 6))) (=> (= (ControlFlow 0 36) 35) $generated@@693)))))))))))))))))
(let (($generated@@702  (=> (and ($generated@@152 $generated@@665) ($generated@@664 $generated@@665)) (=> (and (and ($generated@@140 $generated@@649 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@649 ($generated@@157 $generated@@46) $generated@@665)) (and (= 1 $generated@@671) (= (ControlFlow 0 43) 36))) $generated@@699))))
$generated@@702)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
