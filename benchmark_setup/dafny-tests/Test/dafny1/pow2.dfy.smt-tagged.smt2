(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (Int) Bool)
(declare-fun $generated@@233 (Int) Bool)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@235 (Int Int) Int)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@347 (Int Int) Int)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@236 Int) ) (!  (=> (or ($generated@@233 $generated@@236) (and (not (= 0 $generated@@231)) (<= ($generated@@234 0) $generated@@236))) (=> ($generated@@232 $generated@@236) (= $generated@@236 (+ ($generated@@235 $generated@@236 ($generated@@234 2)) ($generated@@235 $generated@@236 ($generated@@234 2))))))
 :pattern ( ($generated@@232 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@136) (= (type $generated@@238) $generated@@136)) (= ($generated@@142 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@142 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@145) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@224 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@145) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@224 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@234 $generated@@249) $generated@@249)
 :pattern ( ($generated@@234 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@254 $generated@@260)) (= ($generated@@74 ($generated@@223 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@136) (= ($generated@@134 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@136) ($generated@@134 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@145) (= (type $generated@@266) $generated@@145)) (= $generated@@264 ($generated@@223 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@145)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@74 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@76 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@79 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@76 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@81 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@76 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@290 (type $generated@@325))))
(let (($generated@@327 ($generated@@289 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@288 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@287 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@286 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@290 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@290 (type $generated@@332))))
(let (($generated@@334 ($generated@@289 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@288 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@287 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@308 (type $generated@@336))))
(let (($generated@@338 ($generated@@307 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@306 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@305 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@304 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@308 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@348 Int) ) (!  (=> (or ($generated@@233 $generated@@348) (and (not (= 0 $generated@@231)) (<= ($generated@@234 0) $generated@@348))) (= ($generated@@232 $generated@@348) (= ($generated@@347 ($generated@@235 $generated@@348 ($generated@@234 2)) ($generated@@234 2)) $generated@@348)))
 :pattern ( ($generated@@232 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@132 $generated@@349 ($generated@@150 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@224 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@132 $generated@@349 ($generated@@150 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@239 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@255 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@239 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@244 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@255 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@244 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@281 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@281 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@290 (type $generated@@368))))
(let (($generated@@370 ($generated@@289 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@308 (type $generated@@376))))
(let (($generated@@378 ($generated@@307 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@289 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@288 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@307 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@306 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@394) $generated@@398))) (and ($generated@@255 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@255 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@402) $generated@@406))) (and ($generated@@255 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@255 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 Int) ($generated@@408 Int) ) (! (= ($generated@@235 $generated@@407 $generated@@408) (div $generated@@407 $generated@@408))
 :pattern ( ($generated@@235 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@308 (type $generated@@411))))
(let (($generated@@413 ($generated@@307 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@306 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@305 $generated@@413 $generated@@412)) (= ($generated@@304 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@304 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@308 (type $generated@@414))))
(let (($generated@@416 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@305 $generated@@416 $generated@@415)) (= ($generated@@340 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@340 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@308 (type $generated@@417))))
(let (($generated@@419 ($generated@@307 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@306 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@305 $generated@@419 $generated@@418)) (= ($generated@@373 $generated@@417) ($generated@@409 $generated@@145))))))
 :pattern ( ($generated@@373 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@420) ($generated@@275 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@362 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@308 (type $generated@@425))))
(let (($generated@@427 ($generated@@307 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@306 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@305 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@145) (= (type $generated@@429) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@425) ($generated@@275 ($generated@@223 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@373 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@46)) (and (= ($generated@@275 ($generated@@363 $generated@@2 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@363 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@47)) (and (= ($generated@@275 ($generated@@363 $generated@@3 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@363 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@224 $generated@@432 $generated@@44)) (and (= ($generated@@275 ($generated@@363 $generated@@4 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@363 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@224 $generated@@434 $generated@@45)) (and (= ($generated@@275 ($generated@@363 $generated@@433 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@363 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@64) (= ($generated@@224 ($generated@@275 $generated@@435) $generated@@436) ($generated@@132 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@224 ($generated@@275 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@79 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@76 $generated@@438 $generated@@2)) (<= 0 ($generated@@280 $generated@@437))))
 :pattern ( ($generated@@280 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@270 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@269 $generated@@440)) (<= 0 ($generated@@268 $generated@@439))))
 :pattern ( ($generated@@268 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@399 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@261 ($generated@@223 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@135 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@135 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@135 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@270 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@269 $generated@@145)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@268 $generated@@481))) ($generated@@255 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@239 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@244 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@244 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@150 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@363 $generated@@504 ($generated@@275 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@275 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@132 $generated@@505 ($generated@@391 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@505) $generated@@508))) (and ($generated@@224 ($generated@@81 ($generated@@364 $generated@@505) $generated@@508) $generated@@507) ($generated@@224 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@132 $generated@@505 ($generated@@391 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@132 $generated@@509 ($generated@@399 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@509) $generated@@512))) (and ($generated@@224 ($generated@@81 ($generated@@374 $generated@@509) $generated@@512) $generated@@511) ($generated@@224 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@132 $generated@@509 ($generated@@399 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@145)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@223 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@223 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@224 $generated@@519 ($generated@@391 $generated@@520 $generated@@521))) (and (= ($generated@@275 ($generated@@363 ($generated@@288 $generated@@145 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@363 ($generated@@288 $generated@@145 $generated@@145) $generated@@519) ($generated@@391 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@519 ($generated@@391 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@224 $generated@@522 ($generated@@399 $generated@@523 $generated@@524))) (and (= ($generated@@275 ($generated@@363 ($generated@@306 $generated@@145 $generated@@145) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@363 ($generated@@306 $generated@@145 $generated@@145) $generated@@522) ($generated@@399 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@399 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@145)) ($generated@@224 $generated@@527 ($generated@@135 $generated@@525 $generated@@526))) (and (= ($generated@@275 ($generated@@363 $generated@@136 $generated@@527)) $generated@@527) ($generated@@132 ($generated@@363 $generated@@136 $generated@@527) ($generated@@135 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@527 ($generated@@135 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@81 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@81 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@135 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 Int) ($generated@@535 Int) ) (! (= ($generated@@347 $generated@@534 $generated@@535) (* $generated@@534 $generated@@535))
 :pattern ( ($generated@@347 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@513 ($generated@@275 $generated@@536)) ($generated@@514 $generated@@536)))
 :pattern ( ($generated@@513 ($generated@@275 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@275 ($generated@@363 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@239 $generated@@539))) (and (= ($generated@@275 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@239 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@239 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@244 $generated@@541))) (and (= ($generated@@275 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@244 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@244 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@275 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@475 $generated@@545))) (and (= ($generated@@275 ($generated@@363 ($generated@@269 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@363 ($generated@@269 $generated@@145) $generated@@544) ($generated@@475 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@475 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@255 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@550 Int) ) (!  (=> (or ($generated@@233 ($generated@@234 $generated@@550)) (and (not (= 0 $generated@@231)) (<= ($generated@@234 0) ($generated@@234 $generated@@550)))) (= ($generated@@232 ($generated@@234 $generated@@550)) (= ($generated@@234 ($generated@@347 ($generated@@234 ($generated@@235 $generated@@550 ($generated@@234 2))) ($generated@@234 2))) ($generated@@234 $generated@@550))))
 :weight 3
 :pattern ( ($generated@@232 ($generated@@234 $generated@@550)))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@255 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@255 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@557) (and ($generated@@134 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@255 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@255 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@145)) (= ($generated@@223 ($generated@@250 $generated@@559) ($generated@@250 $generated@@560)) ($generated@@250 ($generated@@223 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@223 ($generated@@250 $generated@@559) ($generated@@250 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@234 $generated@@561))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@234 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@562)) ($generated@@250 ($generated@@275 $generated@@562)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@270 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@269 $generated@@564)) (= ($generated@@268 $generated@@563) 0)) (= $generated@@563 ($generated@@267 $generated@@564))))
 :pattern ( ($generated@@268 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@280 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@280 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@280 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@433)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@145)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@269 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= ($generated@@132 $generated@@579 ($generated@@475 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@268 $generated@@579))) ($generated@@224 ($generated@@476 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@476 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@475 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@269 $generated@@145)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@268 $generated@@583))) (< ($generated@@514 ($generated@@363 $generated@@136 ($generated@@476 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@514 ($generated@@363 $generated@@136 ($generated@@476 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@391 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@286 $generated@@585) ($generated@@239 $generated@@586)) ($generated@@132 ($generated@@329 $generated@@585) ($generated@@239 $generated@@587))) ($generated@@132 ($generated@@362 $generated@@585) ($generated@@239 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@391 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@132 $generated@@588 ($generated@@399 $generated@@589 $generated@@590))) (and (and ($generated@@132 ($generated@@304 $generated@@588) ($generated@@244 $generated@@589)) ($generated@@132 ($generated@@340 $generated@@588) ($generated@@244 $generated@@590))) ($generated@@132 ($generated@@373 $generated@@588) ($generated@@244 ($generated@@135 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@132 $generated@@588 ($generated@@399 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@132 $generated@@591 $generated@@46))
 :pattern ( ($generated@@132 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@132 $generated@@592 $generated@@47))
 :pattern ( ($generated@@132 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@132 $generated@@593 $generated@@44))
 :pattern ( ($generated@@132 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@433) ($generated@@132 $generated@@594 $generated@@45))
 :pattern ( ($generated@@132 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@145) ($generated@@132 $generated@@595 $generated@@48))
 :pattern ( ($generated@@132 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@598) $generated@@77)) (= (type $generated@@600) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@602  (=> (= (ControlFlow 0 10) (- 0 9)) (=> ($generated@@232 $generated@@596) (= $generated@@596 (+ ($generated@@235 $generated@@596 ($generated@@234 2)) ($generated@@235 $generated@@596 ($generated@@234 2))))))))
(let (($generated@@603  (=> (= $generated@@597 ($generated@@211 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= ($generated@@234 2) 0))) (=> (not (= ($generated@@234 2) 0)) (=> (= ($generated@@232 $generated@@596) (= ($generated@@347 ($generated@@235 $generated@@596 ($generated@@234 2)) ($generated@@234 2)) $generated@@596)) (=> (and ($generated@@132 ($generated@@11 ($generated@@232 $generated@@596)) $generated@@44) (= (ControlFlow 0 11) 10)) $generated@@602)))))))
(let (($generated@@604 true))
(let (($generated@@605  (=> (and (=> ($generated@@232 $generated@@596) (= $generated@@596 (+ ($generated@@235 $generated@@596 ($generated@@234 2)) ($generated@@235 $generated@@596 ($generated@@234 2))))) (= (ControlFlow 0 8) 1)) $generated@@604)))
(let (($generated@@606  (=> ($generated@@74 ($generated@@8 $generated@@596) $generated@@46 $generated@@599) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@234 0) $generated@@596)) (=> (<= ($generated@@234 0) $generated@@596) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (<= 0 $generated@@596) (= $generated@@596 $generated@@596))) (=> (or (<= 0 $generated@@596) (= $generated@@596 $generated@@596)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (= $generated@@596 $generated@@596) (< $generated@@596 $generated@@596))) (=> (or (= $generated@@596 $generated@@596) (< $generated@@596 $generated@@596)) (=> (and (or (= $generated@@596 $generated@@596) ($generated@@233 $generated@@596)) ($generated@@232 $generated@@596)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= ($generated@@234 2) 0))) (=> (not (= ($generated@@234 2) 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@234 2) 0))) (=> (not (= ($generated@@234 2) 0)) (=> (and (= $generated@@596 (+ ($generated@@235 $generated@@596 ($generated@@234 2)) ($generated@@235 $generated@@596 ($generated@@234 2)))) (= (ControlFlow 0 2) 1)) $generated@@604)))))))))))))))
(let (($generated@@607  (=> (and (= $generated@@600 ($generated@@156 $generated@@598 $generated@@599 $generated@@60 false)) (<= ($generated@@234 0) $generated@@596)) (and (and (=> (= (ControlFlow 0 13) 11) $generated@@603) (=> (= (ControlFlow 0 13) 2) $generated@@606)) (=> (= (ControlFlow 0 13) 8) $generated@@605)))))
(let (($generated@@608  (=> (and (and ($generated@@254 $generated@@599) ($generated@@601 $generated@@599)) (and (= 0 $generated@@231) (= (ControlFlow 0 14) 13))) $generated@@607)))
$generated@@608))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) Int)
(declare-fun $generated@@134 (Int) Bool)
(declare-fun $generated@@135 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@236 (Int) Bool)
(declare-fun $generated@@237 (Int) Bool)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@239 (Int Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U Int) Int)
(declare-fun $generated@@281 () T@T)
(declare-fun $generated@@282 (Int) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 () T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@136 Int) ) (!  (=> (or ($generated@@134 $generated@@136) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@136) ($generated@@135 $generated@@136 $generated@@136)))
 :pattern ( ($generated@@133 $generated@@136))
))))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@64)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@64) (= (type $generated@@145) $generated@@64)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@64)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@64)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@77 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@67 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@77) (= (type $generated@@210) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@211) ($generated@@66 $generated@@4))) (= (type $generated@@213) $generated@@77)) (= (type $generated@@214) ($generated@@66 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@77 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@240 Int) ) (!  (=> (or ($generated@@237 $generated@@240) (and (not (= 0 $generated@@132)) (<= ($generated@@238 0) $generated@@240))) (=> ($generated@@236 $generated@@240) (= $generated@@240 (+ ($generated@@239 $generated@@240 ($generated@@238 2)) ($generated@@239 $generated@@240 ($generated@@238 2))))))
 :pattern ( ($generated@@236 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@141) (= (type $generated@@242) $generated@@141)) (= ($generated@@147 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@147 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@229 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@238 $generated@@253) $generated@@253)
 :pattern ( ($generated@@238 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@258 Int) ) (!  (=> (or ($generated@@134 $generated@@258) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@150)) (= (type $generated@@264) $generated@@150)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@140 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@140 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@141) (= ($generated@@139 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@141) ($generated@@139 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@150) (= (type $generated@@271) $generated@@150)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@139 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (= ($generated@@1 $generated@@281) 18))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@283 T@U) ($generated@@284 Int) ) (!  (=> (and (= (type $generated@@283) $generated@@281) (or ($generated@@282 $generated@@284) (and (not (= 1 $generated@@132)) (<= ($generated@@238 0) $generated@@284)))) (<= ($generated@@238 0) ($generated@@280 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@280 $generated@@283 $generated@@284))
))))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@74 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@260 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@281)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@292 T@U) ($generated@@293 Int) ) (!  (=> (and (= (type $generated@@292) $generated@@281) (or ($generated@@282 ($generated@@238 $generated@@293)) (and (not (= 1 $generated@@132)) (<= ($generated@@238 0) ($generated@@238 $generated@@293))))) (and (=> (not (= ($generated@@238 $generated@@293) ($generated@@238 0))) (and (and ($generated@@237 ($generated@@238 $generated@@293)) (=> ($generated@@0 ($generated@@254 ($generated@@11 ($generated@@236 ($generated@@238 $generated@@293))))) (and ($generated@@282 ($generated@@238 ($generated@@239 $generated@@293 ($generated@@238 2)))) ($generated@@134 ($generated@@238 ($generated@@280 ($generated@@290 $generated@@292) ($generated@@238 ($generated@@239 $generated@@293 ($generated@@238 2))))))))) (=> (not ($generated@@0 ($generated@@254 ($generated@@11 ($generated@@236 ($generated@@238 $generated@@293)))))) ($generated@@282 ($generated@@238 (- $generated@@293 1)))))) (= ($generated@@280 ($generated@@290 $generated@@292) ($generated@@238 $generated@@293)) (ite (= ($generated@@238 $generated@@293) ($generated@@238 0)) 1 (ite ($generated@@236 ($generated@@238 $generated@@293)) ($generated@@133 ($generated@@238 ($generated@@280 ($generated@@290 $generated@@292) ($generated@@238 ($generated@@239 $generated@@293 ($generated@@238 2)))))) ($generated@@135 ($generated@@238 2) ($generated@@238 ($generated@@280 ($generated@@290 $generated@@292) ($generated@@238 (- $generated@@293 1))))))))))
 :weight 3
 :pattern ( ($generated@@280 ($generated@@290 $generated@@292) ($generated@@238 $generated@@293)))
))))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@76 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@79 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@76 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@81 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@336 Int) ) (!  (=> (or ($generated@@134 ($generated@@238 $generated@@336)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@238 $generated@@336)) ($generated@@238 ($generated@@135 ($generated@@238 $generated@@336) ($generated@@238 $generated@@336)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@238 $generated@@336)))
))))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@79 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@76 $generated@@338 $generated@@2)) (= ($generated@@156 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@81 $generated@@337 $generated@@339))) (<= ($generated ($generated@@81 $generated@@337 $generated@@339)) ($generated@@294 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@156 $generated@@337))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@340 T@U) ($generated@@341 Int) ) (!  (=> (and (= (type $generated@@340) $generated@@281) (or ($generated@@282 $generated@@341) (and (not (= 1 $generated@@132)) (<= ($generated@@238 0) $generated@@341)))) (and (=> (not (= $generated@@341 ($generated@@238 0))) (and (and ($generated@@237 $generated@@341) (=> ($generated@@236 $generated@@341) (and ($generated@@282 ($generated@@239 $generated@@341 ($generated@@238 2))) ($generated@@134 ($generated@@280 $generated@@340 ($generated@@239 $generated@@341 ($generated@@238 2))))))) (=> (not ($generated@@236 $generated@@341)) ($generated@@282 (- $generated@@341 1))))) (= ($generated@@280 ($generated@@290 $generated@@340) $generated@@341) (ite (= $generated@@341 ($generated@@238 0)) 1 (ite ($generated@@236 $generated@@341) ($generated@@133 ($generated@@280 $generated@@340 ($generated@@239 $generated@@341 ($generated@@238 2)))) ($generated@@135 ($generated@@238 2) ($generated@@280 $generated@@340 (- $generated@@341 1))))))))
 :pattern ( ($generated@@280 ($generated@@290 $generated@@340) $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@304 (type $generated@@342))))
(let (($generated@@344 ($generated@@303 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@302 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@301 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@300 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@304 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@304 (type $generated@@349))))
(let (($generated@@351 ($generated@@303 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@302 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@301 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@322 (type $generated@@353))))
(let (($generated@@355 ($generated@@321 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@320 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@319 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@318 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@322 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@322 (type $generated@@360))))
(let (($generated@@362 ($generated@@321 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@320 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@319 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@237 $generated@@364) (and (not (= 0 $generated@@132)) (<= ($generated@@238 0) $generated@@364))) (= ($generated@@236 $generated@@364) (= ($generated@@135 ($generated@@239 $generated@@364 ($generated@@238 2)) ($generated@@238 2)) $generated@@364)))
 :pattern ( ($generated@@236 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@137 $generated@@365 ($generated@@155 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@150) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@229 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@137 $generated@@365 ($generated@@155 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@150) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@248 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@150) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@260 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@248 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@81 ($generated@@295 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@81 ($generated@@295 $generated@@377) $generated@@376)))
)))
(assert  (and (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@381)) ($generated@@76 $generated@@150 $generated@@4))
 :pattern ( ($generated@@378 $generated@@381))
)) (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@379 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@379 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@304 (type $generated@@384))))
(let (($generated@@386 ($generated@@303 (type $generated@@384))))
(= (type ($generated@@380 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@380 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@388) $generated@@150)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@387) ($generated@@148 ($generated@@379 $generated@@141 $generated@@388)))) (= ($generated@@81 ($generated@@380 $generated@@387) ($generated@@148 ($generated@@379 $generated@@141 $generated@@388))) ($generated@@149 ($generated@@379 $generated@@141 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@76 $generated@@150 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@322 (type $generated@@392))))
(let (($generated@@394 ($generated@@321 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@396) $generated@@150)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@395) ($generated@@148 ($generated@@379 $generated@@141 $generated@@396)))) (= ($generated@@81 ($generated@@390 $generated@@395) ($generated@@148 ($generated@@379 $generated@@141 $generated@@396))) ($generated@@149 ($generated@@379 $generated@@141 $generated@@396))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@303 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@302 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@321 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@320 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@410) $generated@@414))) (and ($generated@@260 ($generated@@81 ($generated@@380 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@260 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@418) $generated@@422))) (and ($generated@@260 ($generated@@81 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@260 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 Int) ($generated@@424 Int) ) (! (= ($generated@@239 $generated@@423 $generated@@424) (div $generated@@423 $generated@@424))
 :pattern ( ($generated@@239 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@76 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@322 (type $generated@@427))))
(let (($generated@@429 ($generated@@321 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@320 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@319 $generated@@429 $generated@@428)) (= ($generated@@318 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@318 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@322 (type $generated@@430))))
(let (($generated@@432 ($generated@@321 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@320 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@319 $generated@@432 $generated@@431)) (= ($generated@@357 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@357 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@389 $generated@@433) ($generated@@425 $generated@@150))))))
 :pattern ( ($generated@@389 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@304 (type $generated@@436))))
(let (($generated@@438 ($generated@@303 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@302 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@301 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@150) (= (type $generated@@440) $generated@@150)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@436) ($generated@@285 ($generated@@228 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@378 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@322 (type $generated@@441))))
(let (($generated@@443 ($generated@@321 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@320 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@319 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@150) (= (type $generated@@445) $generated@@150)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@441) ($generated@@285 ($generated@@228 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@389 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) ($generated@@229 $generated@@446 $generated@@46)) (and (= ($generated@@285 ($generated@@379 $generated@@2 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@379 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@150) ($generated@@229 $generated@@447 $generated@@47)) (and (= ($generated@@285 ($generated@@379 $generated@@3 $generated@@447)) $generated@@447) ($generated@@137 ($generated@@379 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@150) ($generated@@229 $generated@@448 $generated@@44)) (and (= ($generated@@285 ($generated@@379 $generated@@4 $generated@@448)) $generated@@448) ($generated@@137 ($generated@@379 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 21))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@150) ($generated@@229 $generated@@450 $generated@@45)) (and (= ($generated@@285 ($generated@@379 $generated@@449 $generated@@450)) $generated@@450) ($generated@@137 ($generated@@379 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@64) (= ($generated@@229 ($generated@@285 $generated@@451) $generated@@452) ($generated@@137 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@229 ($generated@@285 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@79 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@76 $generated@@454 $generated@@2)) (<= 0 ($generated@@294 $generated@@453))))
 :pattern ( ($generated@@294 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@275 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@274 $generated@@456)) (<= 0 ($generated@@273 $generated@@455))))
 :pattern ( ($generated@@273 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@415 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@415 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@415 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@415 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@150) (= (type $generated@@478) $generated@@150)) (= ($generated@@266 ($generated@@228 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@140 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@140 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@140 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@140 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) (= (type $generated@@488) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@228 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@281)
 :pattern ( ($generated@@491 $generated@@493))
)) (= (type $generated@@492) $generated@@281)))
(assert (forall (($generated@@494 T@U) ($generated@@495 Int) ) (!  (=> (= (type $generated@@494) $generated@@281) (= ($generated@@280 $generated@@494 $generated@@495) ($generated@@280 $generated@@492 $generated@@495)))
 :pattern ( ($generated@@280 ($generated@@491 $generated@@494) $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@275 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@274 $generated@@150)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@273 $generated@@502))) ($generated@@260 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@74 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@75 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@75 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@243 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@243 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@155 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@155 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@155 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@379 $generated@@525 ($generated@@285 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@285 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@137 $generated@@526 ($generated@@407 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@526) $generated@@529))) (and ($generated@@229 ($generated@@81 ($generated@@380 $generated@@526) $generated@@529) $generated@@528) ($generated@@229 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@137 $generated@@526 ($generated@@407 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) (= ($generated@@137 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@530) $generated@@533))) (and ($generated@@229 ($generated@@81 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@229 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@137 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@150)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@228 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@228 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@150)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@228 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@228 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 Int) ) (!  (=> (= (type $generated@@540) $generated@@281) (= ($generated@@280 ($generated@@290 $generated@@540) $generated@@541) ($generated@@280 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@280 ($generated@@290 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@229 $generated@@542 ($generated@@407 $generated@@543 $generated@@544))) (and (= ($generated@@285 ($generated@@379 ($generated@@302 $generated@@150 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@379 ($generated@@302 $generated@@150 $generated@@150) $generated@@542) ($generated@@407 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@407 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) ($generated@@229 $generated@@545 ($generated@@415 $generated@@546 $generated@@547))) (and (= ($generated@@285 ($generated@@379 ($generated@@320 $generated@@150 $generated@@150) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@379 ($generated@@320 $generated@@150 $generated@@150) $generated@@545) ($generated@@415 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@415 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@150)) ($generated@@229 $generated@@550 ($generated@@140 $generated@@548 $generated@@549))) (and (= ($generated@@285 ($generated@@379 $generated@@141 $generated@@550)) $generated@@550) ($generated@@137 ($generated@@379 $generated@@141 $generated@@550) ($generated@@140 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@140 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@81 ($generated@@425 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@81 ($generated@@425 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (and (= ($generated@@72 ($generated@@140 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@140 $generated@@555 $generated@@556)) $generated@@63)))
 :pattern ( ($generated@@140 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 Int) ($generated@@558 Int) ) (! (= ($generated@@135 $generated@@557 $generated@@558) (* $generated@@557 $generated@@558))
 :pattern ( ($generated@@135 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@141) (= ($generated@@534 ($generated@@285 $generated@@559)) ($generated@@535 $generated@@559)))
 :pattern ( ($generated@@534 ($generated@@285 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@150) ($generated@@229 $generated@@560 ($generated@@75 0))) (and (= ($generated@@285 ($generated@@379 $generated@@2 $generated@@560)) $generated@@560) ($generated@@137 ($generated@@379 ($generated@@76 $generated@@150 $generated@@4) $generated@@560) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@75 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@64)) ($generated@@229 $generated@@561 ($generated@@243 $generated@@562))) (and (= ($generated@@285 ($generated@@379 ($generated@@76 $generated@@150 $generated@@4) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@379 ($generated@@76 $generated@@150 $generated@@4) $generated@@561) ($generated@@243 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@561 ($generated@@243 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@64)) ($generated@@229 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@285 ($generated@@379 ($generated@@76 $generated@@150 $generated@@4) $generated@@563)) $generated@@563) ($generated@@137 ($generated@@379 ($generated@@76 $generated@@150 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@64)) ($generated@@229 $generated@@565 ($generated@@155 $generated@@566))) (and (= ($generated@@285 ($generated@@379 ($generated@@76 $generated@@150 $generated@@2) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@379 ($generated@@76 $generated@@150 $generated@@2) $generated@@565) ($generated@@155 $generated@@566))))
 :pattern ( ($generated@@229 $generated@@565 ($generated@@155 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@64)) ($generated@@229 $generated@@567 ($generated@@496 $generated@@568))) (and (= ($generated@@285 ($generated@@379 ($generated@@274 $generated@@150) $generated@@567)) $generated@@567) ($generated@@137 ($generated@@379 ($generated@@274 $generated@@150) $generated@@567) ($generated@@496 $generated@@568))))
 :pattern ( ($generated@@229 $generated@@567 ($generated@@496 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@569 ($generated@@155 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (< 0 ($generated ($generated@@81 $generated@@569 $generated@@572)))) ($generated@@260 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@81 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@155 $generated@@570) $generated@@571))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@573 Int) ) (!  (=> (or ($generated@@237 ($generated@@238 $generated@@573)) (and (not (= 0 $generated@@132)) (<= ($generated@@238 0) ($generated@@238 $generated@@573)))) (= ($generated@@236 ($generated@@238 $generated@@573)) (= ($generated@@238 ($generated@@135 ($generated@@238 ($generated@@239 $generated@@573 ($generated@@238 2))) ($generated@@238 2))) ($generated@@238 $generated@@573))))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@238 $generated@@573)))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@141) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@576) (and ($generated@@139 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@64) ($generated@@74 $generated@@574 ($generated@@140 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@140 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@260 ($generated@@148 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@260 ($generated@@148 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@141) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@580) (and ($generated@@139 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@64) ($generated@@74 $generated@@578 ($generated@@140 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@74 $generated@@578 ($generated@@140 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@260 ($generated@@149 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@260 ($generated@@149 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@150) (= (type $generated@@583) $generated@@150)) (= ($generated@@228 ($generated@@254 $generated@@582) ($generated@@254 $generated@@583)) ($generated@@254 ($generated@@228 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@228 ($generated@@254 $generated@@582) ($generated@@254 $generated@@583)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@238 $generated@@584))) ($generated@@254 ($generated@@285 ($generated@@8 $generated@@584))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@238 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@285 ($generated@@254 $generated@@585)) ($generated@@254 ($generated@@285 $generated@@585)))
 :pattern ( ($generated@@285 ($generated@@254 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@275 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@274 $generated@@587)) (= ($generated@@273 $generated@@586) 0)) (= $generated@@586 ($generated@@272 $generated@@587))))
 :pattern ( ($generated@@273 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@76 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@294 ($generated@@82 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@294 $generated@@588) ($generated ($generated@@81 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@294 ($generated@@82 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@2)) ($generated@@74 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@3)) ($generated@@74 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@4)) ($generated@@74 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@449)) ($generated@@74 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@150)) ($generated@@74 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@274 $generated@@150)) (= (type $generated@@603) $generated@@64)) (= ($generated@@137 $generated@@602 ($generated@@496 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@273 $generated@@602))) ($generated@@229 ($generated@@497 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@497 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@496 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@274 $generated@@150)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@273 $generated@@606))) (< ($generated@@535 ($generated@@379 $generated@@141 ($generated@@497 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@535 ($generated@@379 $generated@@141 ($generated@@497 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) $generated@@64)) ($generated@@137 $generated@@608 ($generated@@407 $generated@@609 $generated@@610))) (and (and ($generated@@137 ($generated@@300 $generated@@608) ($generated@@243 $generated@@609)) ($generated@@137 ($generated@@346 $generated@@608) ($generated@@243 $generated@@610))) ($generated@@137 ($generated@@378 $generated@@608) ($generated@@243 ($generated@@140 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@137 $generated@@608 ($generated@@407 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) $generated@@64)) ($generated@@137 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@137 ($generated@@318 $generated@@611) ($generated@@248 $generated@@612)) ($generated@@137 ($generated@@357 $generated@@611) ($generated@@248 $generated@@613))) ($generated@@137 ($generated@@389 $generated@@611) ($generated@@248 ($generated@@140 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@137 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@137 $generated@@614 $generated@@46))
 :pattern ( ($generated@@137 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@137 $generated@@615 $generated@@47))
 :pattern ( ($generated@@137 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@137 $generated@@616 $generated@@44))
 :pattern ( ($generated@@137 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@449) ($generated@@137 $generated@@617 $generated@@45))
 :pattern ( ($generated@@137 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@150) ($generated@@137 $generated@@618 $generated@@48))
 :pattern ( ($generated@@137 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) ($generated@@162 $generated@@77 $generated@@4))) (= (type $generated@@625) $generated@@77)) (= (type $generated@@626) ($generated@@162 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@628  (=> (= (ControlFlow 0 6) (- 0 5)) (<= ($generated@@238 0) ($generated@@280 ($generated@@290 ($generated@@290 $generated@@492)) $generated@@619)))))
(let (($generated@@629  (=> (not ($generated@@236 $generated@@619)) (=> (and (= $generated@@620 (- $generated@@619 1)) ($generated@@74 ($generated@@8 $generated@@620) $generated@@46 $generated@@621)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (<= ($generated@@238 0) $generated@@620)) (=> (<= ($generated@@238 0) $generated@@620) (and (=> (= (ControlFlow 0 13) (- 0 15)) (or (<= 0 $generated@@619) (= $generated@@620 $generated@@619))) (=> (or (<= 0 $generated@@619) (= $generated@@620 $generated@@619)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (< $generated@@620 $generated@@619)) (=> (< $generated@@620 $generated@@619) (=> ($generated@@282 (- $generated@@619 1)) (=> (and (and (= ($generated@@280 ($generated@@290 $generated@@492) $generated@@619) ($generated@@135 ($generated@@238 2) ($generated@@280 ($generated@@290 $generated@@492) (- $generated@@619 1)))) ($generated@@282 (- $generated@@619 1))) (and ($generated@@137 ($generated@@8 ($generated@@280 ($generated@@290 $generated@@492) $generated@@619)) $generated@@46) (= (ControlFlow 0 13) 6))) $generated@@628))))))))))))
(let (($generated@@630  (=> ($generated@@236 $generated@@619) (and (=> (= (ControlFlow 0 8) (- 0 12)) (not (= ($generated@@238 2) 0))) (=> (not (= ($generated@@238 2) 0)) (=> (and (= $generated@@622 ($generated@@239 $generated@@619 ($generated@@238 2))) ($generated@@74 ($generated@@8 $generated@@622) $generated@@46 $generated@@621)) (and (=> (= (ControlFlow 0 8) (- 0 11)) (<= ($generated@@238 0) $generated@@622)) (=> (<= ($generated@@238 0) $generated@@622) (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (<= 0 $generated@@619) (= $generated@@622 $generated@@619))) (=> (or (<= 0 $generated@@619) (= $generated@@622 $generated@@619)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (< $generated@@622 $generated@@619)) (=> (< $generated@@622 $generated@@619) (=> ($generated@@282 ($generated@@239 $generated@@619 ($generated@@238 2))) (=> (and (and (and (= $generated@@623 ($generated@@280 ($generated@@290 $generated@@492) ($generated@@239 $generated@@619 ($generated@@238 2)))) ($generated@@74 ($generated@@8 $generated@@623) $generated@@46 $generated@@621)) (and ($generated@@134 ($generated@@280 ($generated@@290 $generated@@492) ($generated@@239 $generated@@619 ($generated@@238 2)))) (= ($generated@@280 ($generated@@290 $generated@@492) $generated@@619) ($generated@@133 ($generated@@280 ($generated@@290 $generated@@492) ($generated@@239 $generated@@619 ($generated@@238 2))))))) (and (and ($generated@@282 ($generated@@239 $generated@@619 ($generated@@238 2))) ($generated@@134 ($generated@@280 ($generated@@290 $generated@@492) ($generated@@239 $generated@@619 ($generated@@238 2))))) (and ($generated@@137 ($generated@@8 ($generated@@280 ($generated@@290 $generated@@492) $generated@@619)) $generated@@46) (= (ControlFlow 0 8) 6)))) $generated@@628))))))))))))))
(let (($generated@@631  (=> (and (not (= $generated@@619 ($generated@@238 0))) ($generated@@74 ($generated@@8 $generated@@619) $generated@@46 $generated@@621)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (<= ($generated@@238 0) $generated@@619)) (=> (and (<= ($generated@@238 0) $generated@@619) ($generated@@237 $generated@@619)) (and (=> (= (ControlFlow 0 17) 8) $generated@@630) (=> (= (ControlFlow 0 17) 13) $generated@@629)))))))
(let (($generated@@632  (=> (and (and (= $generated@@619 ($generated@@238 0)) (= ($generated@@280 ($generated@@290 $generated@@492) $generated@@619) ($generated@@238 1))) (and ($generated@@137 ($generated@@8 ($generated@@280 ($generated@@290 $generated@@492) $generated@@619)) $generated@@46) (= (ControlFlow 0 7) 6))) $generated@@628)))
(let (($generated@@633  (=> (= $generated@@624 ($generated@@216 $generated@@625 $generated@@621 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 7) $generated@@632) (=> (= (ControlFlow 0 19) 17) $generated@@631)))))
(let (($generated@@634  (=> ($generated@@74 ($generated@@8 $generated@@619) $generated@@46 $generated@@621) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@238 0) $generated@@619)) (=> (<= ($generated@@238 0) $generated@@619) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@619) (= $generated@@619 $generated@@619))) (=> (or (<= 0 $generated@@619) (= $generated@@619 $generated@@619)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@619 $generated@@619) (< $generated@@619 $generated@@619))))))))))
(let (($generated@@635  (=> (and (= $generated@@626 ($generated@@161 $generated@@625 $generated@@621 $generated@@60 false)) (<= ($generated@@238 0) $generated@@619)) (and (=> (= (ControlFlow 0 20) 2) $generated@@634) (=> (= (ControlFlow 0 20) 19) $generated@@633)))))
(let (($generated@@636  (=> (and (and ($generated@@259 $generated@@621) ($generated@@627 $generated@@621)) (and (= 1 $generated@@132) (= (ControlFlow 0 21) 20))) $generated@@635)))
$generated@@636))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 (T@U Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 () T@T)
(declare-fun $generated@@263 (Int) Bool)
(declare-fun $generated@@264 (Int Int) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert  (and (= ($generated@@1 $generated@@262) 17) (forall (($generated@@265 T@U) ) (! (= (type ($generated@@261 $generated@@265)) $generated@@262)
 :pattern ( ($generated@@261 $generated@@265))
))))
(assert  (=> (<= 0 $generated@@259) (forall (($generated@@266 T@U) ($generated@@267 Int) ) (!  (=> (and (= (type $generated@@266) $generated@@262) (or ($generated@@263 ($generated@@243 $generated@@267)) (and (not (= 0 $generated@@259)) (<= ($generated@@243 0) ($generated@@243 $generated@@267))))) (and (=> (not (= ($generated@@243 $generated@@267) ($generated@@243 0))) ($generated@@263 ($generated@@243 (- $generated@@267 1)))) (= ($generated@@260 ($generated@@261 $generated@@266) ($generated@@243 $generated@@267)) (ite (= ($generated@@243 $generated@@267) ($generated@@243 0)) 1 ($generated@@264 ($generated@@243 2) ($generated@@243 ($generated@@260 ($generated@@261 $generated@@266) ($generated@@243 (- $generated@@267 1)))))))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@261 $generated@@266) ($generated@@243 $generated@@267)))
))))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@136) ($generated@@134 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@145) (= (type $generated@@270) $generated@@145)) (= $generated@@268 ($generated@@223 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@134 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 18)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@145)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@64) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@74 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@250 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@76 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@79 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@76 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@81 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 20)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@76 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@79 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@76 $generated@@327 $generated@@2)) (= ($generated@@151 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@81 $generated@@326 $generated@@328))) (<= ($generated ($generated@@81 $generated@@326 $generated@@328)) ($generated@@284 $generated@@326))))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@151 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@290 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@294 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@76 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@294 (type $generated@@336))))
(let (($generated@@338 ($generated@@293 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@292 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@291 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@312 (type $generated@@340))))
(let (($generated@@342 ($generated@@311 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@310 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@309 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@308 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@312 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@312 (type $generated@@347))))
(let (($generated@@349 ($generated@@311 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@310 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@309 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@352) $generated@@64)) (= ($generated@@132 $generated@@351 ($generated@@150 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@351 $generated@@353)))) ($generated@@224 $generated@@353 $generated@@352))
 :pattern ( ($generated@@81 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@132 $generated@@351 ($generated@@150 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@233 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@250 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@233 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@238 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@145) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@250 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@238 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@285 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@285 $generated@@363) $generated@@362)))
)))
(assert  (=> (<= 0 $generated@@259) (forall (($generated@@364 T@U) ($generated@@365 Int) ) (!  (=> (and (= (type $generated@@364) $generated@@262) (or ($generated@@263 $generated@@365) (and (not (= 0 $generated@@259)) (<= ($generated@@243 0) $generated@@365)))) true)
 :pattern ( ($generated@@260 $generated@@364 $generated@@365))
))))
(assert  (and (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@366 $generated@@369)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@366 $generated@@369))
)) (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@367 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@294 (type $generated@@372))))
(let (($generated@@374 ($generated@@293 (type $generated@@372))))
(= (type ($generated@@368 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@368 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@375) ($generated@@143 ($generated@@367 $generated@@136 $generated@@376)))) (= ($generated@@81 ($generated@@368 $generated@@375) ($generated@@143 ($generated@@367 $generated@@136 $generated@@376))) ($generated@@144 ($generated@@367 $generated@@136 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@312 (type $generated@@380))))
(let (($generated@@382 ($generated@@311 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@383) ($generated@@143 ($generated@@367 $generated@@136 $generated@@384)))) (= ($generated@@81 ($generated@@378 $generated@@383) ($generated@@143 ($generated@@367 $generated@@136 $generated@@384))) ($generated@@144 ($generated@@367 $generated@@136 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@293 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@292 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@333 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@333 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@311 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@310 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@81 ($generated@@368 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@406) $generated@@410))) (and ($generated@@250 ($generated@@81 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@250 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@312 (type $generated@@413))))
(let (($generated@@415 ($generated@@311 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@310 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@309 $generated@@415 $generated@@414)) (= ($generated@@308 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@308 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@312 (type $generated@@416))))
(let (($generated@@418 ($generated@@311 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@310 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@309 $generated@@418 $generated@@417)) (= ($generated@@344 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@344 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@312 (type $generated@@419))))
(let (($generated@@421 ($generated@@311 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@310 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@309 $generated@@421 $generated@@420)) (= ($generated@@377 $generated@@419) ($generated@@411 $generated@@145))))))
 :pattern ( ($generated@@377 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@294 (type $generated@@422))))
(let (($generated@@424 ($generated@@293 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@292 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@291 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@145) (= (type $generated@@426) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@422) ($generated@@279 ($generated@@223 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@366 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@312 (type $generated@@427))))
(let (($generated@@429 ($generated@@311 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@310 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@309 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@427) ($generated@@279 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@377 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@224 $generated@@432 $generated@@46)) (and (= ($generated@@279 ($generated@@367 $generated@@2 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@367 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@47)) (and (= ($generated@@279 ($generated@@367 $generated@@3 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@367 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@224 $generated@@434 $generated@@44)) (and (= ($generated@@279 ($generated@@367 $generated@@4 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@367 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@45)) (and (= ($generated@@279 ($generated@@367 $generated@@435 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@367 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@224 ($generated@@279 $generated@@437) $generated@@438) ($generated@@132 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@224 ($generated@@279 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@284 $generated@@439))))
 :pattern ( ($generated@@284 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@274 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@273 $generated@@442)) (<= 0 ($generated@@272 $generated@@441))))
 :pattern ( ($generated@@272 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@395 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@395 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@395 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@395 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@403 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@403 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@403 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@262)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@262)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@262) (= ($generated@@260 $generated@@480 $generated@@481) ($generated@@260 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@260 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@274 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@273 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@272 $generated@@488))) ($generated@@250 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@233 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@233 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@238 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@150 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@367 $generated@@511 ($generated@@279 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@279 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@132 $generated@@512 ($generated@@395 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@512) $generated@@515))) (and ($generated@@224 ($generated@@81 ($generated@@368 $generated@@512) $generated@@515) $generated@@514) ($generated@@224 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@132 $generated@@512 ($generated@@395 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@132 $generated@@516 ($generated@@403 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@516) $generated@@519))) (and ($generated@@224 ($generated@@81 ($generated@@378 $generated@@516) $generated@@519) $generated@@518) ($generated@@224 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@132 $generated@@516 ($generated@@403 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@223 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@223 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@223 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@262) (= ($generated@@260 ($generated@@261 $generated@@526) $generated@@527) ($generated@@260 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@260 ($generated@@261 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@224 $generated@@528 ($generated@@395 $generated@@529 $generated@@530))) (and (= ($generated@@279 ($generated@@367 ($generated@@292 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@367 ($generated@@292 $generated@@145 $generated@@145) $generated@@528) ($generated@@395 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@224 $generated@@528 ($generated@@395 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@531 ($generated@@403 $generated@@532 $generated@@533))) (and (= ($generated@@279 ($generated@@367 ($generated@@310 $generated@@145 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@367 ($generated@@310 $generated@@145 $generated@@145) $generated@@531) ($generated@@403 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@403 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@145)) ($generated@@224 $generated@@536 ($generated@@135 $generated@@534 $generated@@535))) (and (= ($generated@@279 ($generated@@367 $generated@@136 $generated@@536)) $generated@@536) ($generated@@132 ($generated@@367 $generated@@136 $generated@@536) ($generated@@135 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@135 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@135 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 Int) ($generated@@544 Int) ) (! (= ($generated@@264 $generated@@543 $generated@@544) (* $generated@@543 $generated@@544))
 :pattern ( ($generated@@264 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@136) (= ($generated@@520 ($generated@@279 $generated@@545)) ($generated@@521 $generated@@545)))
 :pattern ( ($generated@@520 ($generated@@279 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) ($generated@@224 $generated@@546 ($generated@@75 0))) (and (= ($generated@@279 ($generated@@367 $generated@@2 $generated@@546)) $generated@@546) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@546 ($generated@@75 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@224 $generated@@547 ($generated@@233 $generated@@548))) (and (= ($generated@@279 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@233 $generated@@548))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@233 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) ($generated@@224 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@279 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@224 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@224 $generated@@551 ($generated@@150 $generated@@552))) (and (= ($generated@@279 ($generated@@367 ($generated@@76 $generated@@145 $generated@@2) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@2) $generated@@551) ($generated@@150 $generated@@552))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@150 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@224 $generated@@553 ($generated@@482 $generated@@554))) (and (= ($generated@@279 ($generated@@367 ($generated@@273 $generated@@145) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@367 ($generated@@273 $generated@@145) $generated@@553) ($generated@@482 $generated@@554))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@482 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@555 $generated@@558)))) ($generated@@250 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@561) (and ($generated@@134 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@250 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@250 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@567) ($generated@@245 $generated@@568)) ($generated@@245 ($generated@@223 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@567) ($generated@@245 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@279 ($generated@@8 ($generated@@243 $generated@@569))) ($generated@@245 ($generated@@279 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@279 ($generated@@8 ($generated@@243 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@279 ($generated@@245 $generated@@570)) ($generated@@245 ($generated@@279 $generated@@570)))
 :pattern ( ($generated@@279 ($generated@@245 $generated@@570)))
)))
(assert  (=> (<= 0 $generated@@259) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (!  (=> (and (= (type $generated@@571) $generated@@262) (or ($generated@@263 $generated@@572) (and (not (= 0 $generated@@259)) (<= ($generated@@243 0) $generated@@572)))) (and (=> (not (= $generated@@572 ($generated@@243 0))) ($generated@@263 (- $generated@@572 1))) (= ($generated@@260 ($generated@@261 $generated@@571) $generated@@572) (ite (= $generated@@572 ($generated@@243 0)) 1 ($generated@@264 ($generated@@243 2) ($generated@@260 $generated@@571 (- $generated@@572 1)))))))
 :pattern ( ($generated@@260 ($generated@@261 $generated@@571) $generated@@572))
))))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@274 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@273 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@271 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@284 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@284 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@284 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@435)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@145)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@273 $generated@@145)) (= (type $generated@@590) $generated@@64)) (= ($generated@@132 $generated@@589 ($generated@@482 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@224 ($generated@@483 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@483 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@132 $generated@@589 ($generated@@482 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@273 $generated@@145)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@521 ($generated@@367 $generated@@136 ($generated@@483 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@521 ($generated@@367 $generated@@136 ($generated@@483 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@395 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@290 $generated@@595) ($generated@@233 $generated@@596)) ($generated@@132 ($generated@@333 $generated@@595) ($generated@@233 $generated@@597))) ($generated@@132 ($generated@@366 $generated@@595) ($generated@@233 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@395 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@132 $generated@@598 ($generated@@403 $generated@@599 $generated@@600))) (and (and ($generated@@132 ($generated@@308 $generated@@598) ($generated@@238 $generated@@599)) ($generated@@132 ($generated@@344 $generated@@598) ($generated@@238 $generated@@600))) ($generated@@132 ($generated@@377 $generated@@598) ($generated@@238 ($generated@@135 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@132 $generated@@598 ($generated@@403 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@132 $generated@@601 $generated@@46))
 :pattern ( ($generated@@132 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@132 $generated@@602 $generated@@47))
 :pattern ( ($generated@@132 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@132 $generated@@603 $generated@@44))
 :pattern ( ($generated@@132 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@435) ($generated@@132 $generated@@604 $generated@@45))
 :pattern ( ($generated@@132 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@145) ($generated@@132 $generated@@605 $generated@@48))
 :pattern ( ($generated@@132 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@610) $generated@@77)) (= (type $generated@@611) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@613  (=> (not (= $generated@@606 ($generated@@243 0))) (=> (and (= $generated@@607 (- $generated@@606 1)) ($generated@@74 ($generated@@8 $generated@@607) $generated@@46 $generated@@608)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@243 0) $generated@@607)) (=> (<= ($generated@@243 0) $generated@@607) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@606) (= $generated@@607 $generated@@606))) (=> (or (<= 0 $generated@@606) (= $generated@@607 $generated@@606)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@607 $generated@@606))))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@609 ($generated@@211 $generated@@610 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@614) (=> (= (ControlFlow 0 7) 4) $generated@@613)))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (and (= $generated@@611 ($generated@@156 $generated@@610 $generated@@608 $generated@@60 false)) (<= ($generated@@243 0) $generated@@606)) (and (=> (= (ControlFlow 0 8) 1) $generated@@616) (=> (= (ControlFlow 0 8) 7) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@249 $generated@@608) ($generated@@612 $generated@@608)) (and (= 0 $generated@@259) (= (ControlFlow 0 9) 8))) $generated@@617)))
$generated@@618)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Int)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@130 (Int Int) Int)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@188 (Int) Bool)
(declare-fun $generated@@189 (Int) Bool)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (Int Int) Int)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U Int) Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 (Int) Bool)
(declare-fun $generated@@206 (T@T) T@U)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 () T@T)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@T T@T) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@T T@T) T@U)
(declare-fun $generated@@241 (T@T T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@243 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@293 (T@U T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 () T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@U Int) T@U)
(declare-fun $generated@@349 (T@U) Int)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@397 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@131 Int) ) (!  (=> (or ($generated@@129 $generated@@131) (not (= 0 $generated@@127))) (= ($generated@@128 $generated@@131) ($generated@@130 $generated@@131 $generated@@131)))
 :pattern ( ($generated@@128 $generated@@131))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@138 $generated@@139)) 12)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@134 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@134 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@136 (type $generated@@144))))
(= (type ($generated@@132 $generated@@144 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@132 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(let (($generated@@153 (type $generated@@149)))
(= (type ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151)) ($generated@@134 $generated@@153 $generated@@152))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@136 (type $generated@@154))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@132 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@155 $generated@@156) $generated@@157)))
 :weight 0
))) (and (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@132 ($generated@@137 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@132 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@132 ($generated@@137 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@132 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or true (= ($generated@@132 ($generated@@137 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@132 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ) (! (= (type ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@72 $generated@@4))
 :pattern ( ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@64 (type $generated@@186))))
 (=> (and (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@183) ($generated@@63 $generated@@4))) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) ($generated@@63 $generated@@187))) (= ($generated@@0 ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (not (= $generated@@185 $generated@@181)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@182 $generated@@185) $generated@@183))) $generated@@184))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@189 $generated@@192) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@192))) (=> ($generated@@188 $generated@@192) (= $generated@@192 (+ ($generated@@191 $generated@@192 ($generated@@190 2)) ($generated@@191 $generated@@192 ($generated@@190 2))))))
 :pattern ( ($generated@@188 $generated@@192))
))))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@190 $generated@@193) $generated@@193)
 :pattern ( ($generated@@190 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 Int) ) (!  (=> (or ($generated@@129 $generated@@198) (not (= 0 $generated@@127))) true)
 :pattern ( ($generated@@128 $generated@@198))
))))
(assert  (and (= ($generated@@1 $generated@@201) 13) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@203)) $generated@@201)
 :pattern ( ($generated@@200 $generated@@203))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (and (= (type $generated@@204) $generated@@201) (or ($generated@@202 ($generated@@190 $generated@@205)) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@205))))) (and (=> (not (= ($generated@@190 $generated@@205) ($generated@@190 0))) ($generated@@202 ($generated@@190 (- $generated@@205 1)))) (= ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 $generated@@205)) (ite (= ($generated@@190 $generated@@205) ($generated@@190 0)) 1 ($generated@@130 ($generated@@190 2) ($generated@@190 ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 (- $generated@@205 1)))))))))
 :weight 3
 :pattern ( ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 $generated@@205)))
))))
(assert  (and (and (forall (($generated@@210 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@210)) 14)) (forall (($generated@@211 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@208 $generated@@211))
))) (forall (($generated@@212 T@T) ) (! (= (type ($generated@@206 $generated@@212)) ($generated@@208 $generated@@212))
 :pattern ( ($generated@@206 $generated@@212))
))))
(assert (forall (($generated@@213 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@213)) 0)
 :pattern ( ($generated@@206 $generated@@213))
)))
(assert  (and (= ($generated@@1 $generated@@216) 15) (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@215 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@61) (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@214 ($generated@@215 $generated@@218) $generated@@219 $generated@@220) ($generated@@69 $generated@@218 $generated@@219 $generated@@220)))
 :pattern ( ($generated@@214 ($generated@@215 $generated@@218) $generated@@219 $generated@@220))
)))
(assert  (and (and (and (and (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@226 $generated@@227)) 16)) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@228 $generated@@229)) $generated@@228)
 :pattern ( ($generated@@223 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@223 $generated@@230 $generated@@231)) $generated@@231)
 :pattern ( ($generated@@223 $generated@@230 $generated@@231))
))) (forall (($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@224 (type $generated@@232))))
(= (type ($generated@@221 $generated@@232)) ($generated@@71 $generated@@233 $generated@@4)))
 :pattern ( ($generated@@221 $generated@@232))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= (type ($generated@@222 $generated@@234 $generated@@235)) ($generated@@223 $generated@@234 $generated@@235))
 :pattern ( ($generated@@222 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@T) ) (! (let (($generated@@238 (type $generated@@236)))
 (not ($generated@@0 ($generated@@76 ($generated@@221 ($generated@@222 $generated@@238 $generated@@237)) $generated@@236))))
 :pattern ( (let (($generated@@238 (type $generated@@236)))
($generated@@76 ($generated@@221 ($generated@@222 $generated@@238 $generated@@237)) $generated@@236)))
)))
(assert  (and (and (and (and (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (= ($generated@@1 ($generated@@241 $generated@@244 $generated@@245)) 17)) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@242 ($generated@@241 $generated@@246 $generated@@247)) $generated@@246)
 :pattern ( ($generated@@241 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@243 ($generated@@241 $generated@@248 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@241 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@242 (type $generated@@250))))
(= (type ($generated@@239 $generated@@250)) ($generated@@71 $generated@@251 $generated@@4)))
 :pattern ( ($generated@@239 $generated@@250))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= (type ($generated@@240 $generated@@252 $generated@@253)) ($generated@@241 $generated@@252 $generated@@253))
 :pattern ( ($generated@@240 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (let (($generated@@256 (type $generated@@254)))
 (not ($generated@@0 ($generated@@76 ($generated@@239 ($generated@@240 $generated@@256 $generated@@255)) $generated@@254))))
 :pattern ( (let (($generated@@256 (type $generated@@254)))
($generated@@76 ($generated@@239 ($generated@@240 $generated@@256 $generated@@255)) $generated@@254)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@257 Int) ) (!  (=> (or ($generated@@129 ($generated@@190 $generated@@257)) (not (= 0 $generated@@127))) (= ($generated@@128 ($generated@@190 $generated@@257)) ($generated@@190 ($generated@@130 ($generated@@190 $generated@@257) ($generated@@190 $generated@@257)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@190 $generated@@257)))
))))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@225 (type $generated@@258))))
(let (($generated@@260 ($generated@@224 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@223 $generated@@260 $generated@@259)) (or (= $generated@@258 ($generated@@222 $generated@@260 $generated@@259)) (exists (($generated@@261 T@U) ) (!  (and (= (type $generated@@261) $generated@@260) ($generated@@0 ($generated@@76 ($generated@@221 $generated@@258) $generated@@261)))
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
))))))
 :pattern ( ($generated@@221 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@243 (type $generated@@262))))
(let (($generated@@264 ($generated@@242 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@241 $generated@@264 $generated@@263)) (or (= $generated@@262 ($generated@@240 $generated@@264 $generated@@263)) (exists (($generated@@265 T@U) ) (!  (and (= (type $generated@@265) $generated@@264) ($generated@@0 ($generated@@76 ($generated@@239 $generated@@262) $generated@@265)))
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
))))))
 :pattern ( ($generated@@239 $generated@@262))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@266 Int) ) (!  (=> (or ($generated@@189 $generated@@266) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@266))) (= ($generated@@188 $generated@@266) (= ($generated@@130 ($generated@@191 $generated@@266 ($generated@@190 2)) ($generated@@190 2)) $generated@@266)))
 :pattern ( ($generated@@188 $generated@@266))
))))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@61)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@269) ($generated@@71 $generated@@216 $generated@@4)) (= (type $generated@@270) $generated@@61)) (= (type $generated@@271) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@269 ($generated@@267 $generated@@270) $generated@@271) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@216) ($generated@@0 ($generated@@76 $generated@@269 $generated@@272))) ($generated@@214 $generated@@272 $generated@@270 $generated@@271))
 :pattern ( ($generated@@76 $generated@@269 $generated@@272))
))))
 :pattern ( ($generated@@69 $generated@@269 ($generated@@267 $generated@@270) $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@275) ($generated@@71 $generated@@216 $generated@@4)) (= (type $generated@@276) $generated@@61)) (= (type $generated@@277) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@275 ($generated@@273 $generated@@276) $generated@@277) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@216) ($generated@@0 ($generated@@76 $generated@@275 $generated@@278))) ($generated@@214 $generated@@278 $generated@@276 $generated@@277))
 :pattern ( ($generated@@76 $generated@@275 $generated@@278))
))))
 :pattern ( ($generated@@69 $generated@@275 ($generated@@273 $generated@@276) $generated@@277))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@279 T@U) ($generated@@280 Int) ) (!  (=> (and (= (type $generated@@279) $generated@@201) (or ($generated@@202 $generated@@280) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@280)))) true)
 :pattern ( ($generated@@199 $generated@@279 $generated@@280))
))))
(assert  (and (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@281 $generated@@283 $generated@@284)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@283 $generated@@284))
)) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@225 (type $generated@@285))))
(let (($generated@@287 ($generated@@224 (type $generated@@285))))
(= (type ($generated@@282 $generated@@285)) ($generated@@71 $generated@@287 $generated@@286))))
 :pattern ( ($generated@@282 $generated@@285))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) ($generated@@223 $generated@@216 $generated@@216)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@281 $generated@@289 $generated@@290) $generated@@291) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@216) ($generated@@0 ($generated@@76 ($generated@@221 $generated@@288) $generated@@292))) (and ($generated@@214 ($generated@@76 ($generated@@282 $generated@@288) $generated@@292) $generated@@290 $generated@@291) ($generated@@214 $generated@@292 $generated@@289 $generated@@291)))
 :pattern ( ($generated@@76 ($generated@@282 $generated@@288) $generated@@292))
 :pattern ( ($generated@@76 ($generated@@221 $generated@@288) $generated@@292))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@281 $generated@@289 $generated@@290) $generated@@291))
)))
(assert  (and (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (= (type ($generated@@293 $generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@293 $generated@@295 $generated@@296))
)) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@243 (type $generated@@297))))
(let (($generated@@299 ($generated@@242 (type $generated@@297))))
(= (type ($generated@@294 $generated@@297)) ($generated@@71 $generated@@299 $generated@@298))))
 :pattern ( ($generated@@294 $generated@@297))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (= (type $generated@@300) ($generated@@241 $generated@@216 $generated@@216)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) $generated@@61)) (= (type $generated@@303) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@300 ($generated@@293 $generated@@301 $generated@@302) $generated@@303) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@216) ($generated@@0 ($generated@@76 ($generated@@239 $generated@@300) $generated@@304))) (and ($generated@@214 ($generated@@76 ($generated@@294 $generated@@300) $generated@@304) $generated@@302 $generated@@303) ($generated@@214 $generated@@304 $generated@@301 $generated@@303)))
 :pattern ( ($generated@@76 ($generated@@294 $generated@@300) $generated@@304))
 :pattern ( ($generated@@76 ($generated@@239 $generated@@300) $generated@@304))
))))
 :pattern ( ($generated@@69 $generated@@300 ($generated@@293 $generated@@301 $generated@@302) $generated@@303))
)))
(assert (forall (($generated@@305 Int) ($generated@@306 Int) ) (! (= ($generated@@191 $generated@@305 $generated@@306) (div $generated@@305 $generated@@306))
 :pattern ( ($generated@@191 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@71 $generated@@308 $generated@@4))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@243 (type $generated@@309))))
(let (($generated@@311 ($generated@@242 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@241 $generated@@311 $generated@@310)) (= (= $generated@@309 ($generated@@240 $generated@@311 $generated@@310)) (= ($generated@@239 $generated@@309) ($generated@@307 $generated@@311))))))
 :pattern ( ($generated@@239 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@209 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@208 $generated@@313)) (<= 0 ($generated@@207 $generated@@312))))
 :pattern ( ($generated@@207 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@281 $generated@@316 $generated@@317)) $generated@@316))
 :pattern ( ($generated@@281 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@61)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@318 ($generated@@281 $generated@@320 $generated@@321)) $generated@@321))
 :pattern ( ($generated@@281 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@61) (= (type $generated@@323) $generated@@61)) (= ($generated@@67 ($generated@@281 $generated@@322 $generated@@323)) $generated@@58))
 :pattern ( ($generated@@281 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@61) (= (type $generated@@327) $generated@@61)) (= ($generated@@324 ($generated@@293 $generated@@326 $generated@@327)) $generated@@326))
 :pattern ( ($generated@@293 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@328 ($generated@@293 $generated@@330 $generated@@331)) $generated@@331))
 :pattern ( ($generated@@293 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@61) (= (type $generated@@333) $generated@@61)) (= ($generated@@67 ($generated@@293 $generated@@332 $generated@@333)) $generated@@59))
 :pattern ( ($generated@@293 $generated@@332 $generated@@333))
)))
(assert  (and (forall (($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@336)) $generated@@201)
 :pattern ( ($generated@@334 $generated@@336))
)) (= (type $generated@@335) $generated@@201)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (!  (=> (= (type $generated@@337) $generated@@201) (= ($generated@@199 $generated@@337 $generated@@338) ($generated@@199 $generated@@335 $generated@@338)))
 :pattern ( ($generated@@199 ($generated@@334 $generated@@337) $generated@@338))
)))
(assert  (and (forall (($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@341))
)) (forall (($generated@@342 T@U) ($generated@@343 Int) ) (! (let (($generated@@344 ($generated@@209 (type $generated@@342))))
(= (type ($generated@@340 $generated@@342 $generated@@343)) $generated@@344))
 :pattern ( ($generated@@340 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@208 $generated@@216)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@339 $generated@@346) $generated@@347) (forall (($generated@@348 Int) ) (!  (=> (and (<= 0 $generated@@348) (< $generated@@348 ($generated@@207 $generated@@345))) ($generated@@214 ($generated@@340 $generated@@345 $generated@@348) $generated@@346 $generated@@347))
 :pattern ( ($generated@@340 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@339 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@350 Int) ) (! (= ($generated@@349 ($generated@@70 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@70 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@351 ($generated@@267 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@267 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@67 ($generated@@267 $generated@@354)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@273 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@273 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@273 $generated@@358)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@360 ($generated@@359 $generated@@363)) $generated@@363))
 :pattern ( ($generated@@359 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@61) (= ($generated@@67 ($generated@@359 $generated@@364)) $generated@@56))
 :pattern ( ($generated@@359 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@365 ($generated@@339 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@339 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@339 $generated@@368)) $generated@@57))
 :pattern ( ($generated@@339 $generated@@368))
)))
(assert (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated@@369 $generated@@373 ($generated@@215 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@215 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 Int) ) (!  (=> (= (type $generated@@374) $generated@@201) (= ($generated@@199 ($generated@@200 $generated@@374) $generated@@375) ($generated@@199 $generated@@374 $generated@@375)))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
 (not ($generated@@0 ($generated@@76 ($generated@@307 $generated@@377) $generated@@376))))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@76 ($generated@@307 $generated@@377) $generated@@376)))
)))
(assert (forall (($generated@@378 Int) ($generated@@379 Int) ) (! (= ($generated@@130 $generated@@378 $generated@@379) (* $generated@@378 $generated@@379))
 :pattern ( ($generated@@130 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@216 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@359 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@216) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@214 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@359 $generated@@381) $generated@@382))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@384 Int) ) (!  (=> (or ($generated@@189 ($generated@@190 $generated@@384)) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@384)))) (= ($generated@@188 ($generated@@190 $generated@@384)) (= ($generated@@190 ($generated@@130 ($generated@@190 ($generated@@191 $generated@@384 ($generated@@190 2))) ($generated@@190 2))) ($generated@@190 $generated@@384))))
 :weight 3
 :pattern ( ($generated@@188 ($generated@@190 $generated@@384)))
))))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@215 ($generated@@8 ($generated@@190 $generated@@385))) ($generated@@194 ($generated@@215 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@215 ($generated@@8 ($generated@@190 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@215 ($generated@@194 $generated@@386)) ($generated@@194 ($generated@@215 $generated@@386)))
 :pattern ( ($generated@@215 ($generated@@194 $generated@@386)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@387 T@U) ($generated@@388 Int) ) (!  (=> (and (= (type $generated@@387) $generated@@201) (or ($generated@@202 $generated@@388) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@388)))) (and (=> (not (= $generated@@388 ($generated@@190 0))) ($generated@@202 (- $generated@@388 1))) (= ($generated@@199 ($generated@@200 $generated@@387) $generated@@388) (ite (= $generated@@388 ($generated@@190 0)) 1 ($generated@@130 ($generated@@190 2) ($generated@@199 $generated@@387 (- $generated@@388 1)))))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@387) $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@209 (type $generated@@389))))
 (=> (and (= (type $generated@@389) ($generated@@208 $generated@@390)) (= ($generated@@207 $generated@@389) 0)) (= $generated@@389 ($generated@@206 $generated@@390))))
 :pattern ( ($generated@@207 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@2)) ($generated@@69 $generated@@392 $generated@@46 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@46 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@3)) ($generated@@69 $generated@@394 $generated@@47 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@47 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@4)) ($generated@@69 $generated@@396 $generated@@44 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@44 $generated@@395))
)))
(assert (= ($generated@@1 $generated@@397) 18))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@397)) ($generated@@69 $generated@@399 $generated@@45 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@45 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@216)) ($generated@@69 $generated@@401 $generated@@48 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@48 $generated@@400))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@405 () Int)
(declare-fun $generated@@406 (T@U) Bool)
(declare-fun $generated@@407 () T@U)
(declare-fun $generated@@408 (T@U) Bool)
(declare-fun $generated@@409 () Int)
(assert  (and (and (and (= (type $generated@@402) ($generated@@134 $generated@@72 $generated@@4)) (= (type $generated@@403) $generated@@72)) (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@410  (=> (= $generated@@402 ($generated@@133 $generated@@403 $generated@@404 $generated@@60 false)) (=> (and (<= ($generated@@190 0) $generated@@405) ($generated@@69 ($generated@@8 $generated@@405) $generated@@46 $generated@@404)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@190 0) $generated@@405)) (=> (<= ($generated@@190 0) $generated@@405) (=> (and ($generated@@189 $generated@@405) ($generated@@188 $generated@@405)) (=> (and (and ($generated@@406 $generated@@407) ($generated@@408 $generated@@407)) (and (= $generated@@404 $generated@@407) ($generated@@69 ($generated@@8 $generated@@405) $generated@@46 $generated@@407))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@190 0) $generated@@405)) (=> (and (<= ($generated@@190 0) $generated@@405) ($generated@@202 $generated@@405)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@190 2) 0))) (=> (not (= ($generated@@190 2) 0)) (=> (= $generated@@409 ($generated@@191 $generated@@405 ($generated@@190 2))) (=> (and ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@407) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@190 0) $generated@@409)))))))))))))))
(let (($generated@@411  (=> (and (and ($generated@@406 $generated@@404) ($generated@@408 $generated@@404)) (and (= 1 $generated@@127) (= (ControlFlow 0 6) 2))) $generated@@410)))
$generated@@411)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@46 (Int) Bool)
(declare-fun $generated@@47 (Int Int) Int)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Bool)
(declare-fun $generated@@163 (Int) Bool)
(declare-fun $generated@@164 (Int) Int)
(declare-fun $generated@@165 (Int Int) Int)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U Int) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 (Int) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@T T@U) T@U)
(declare-fun $generated@@193 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@48 Int) ) (!  (=> (or ($generated@@46 $generated@@48) (not (= 0 $generated@@44))) (= ($generated@@45 $generated@@48) ($generated@@47 $generated@@48 $generated@@48)))
 :pattern ( ($generated@@45 $generated@@48))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@53 $generated@@66 $generated@@67)) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@59 ($generated@@53 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@59 (type $generated@@72))))
(= (type ($generated@@57 $generated@@72 $generated@@73)) $generated@@74))
 :pattern ( ($generated@@57 $generated@@72 $generated@@73))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(let (($generated@@79 (type $generated@@76)))
(= (type ($generated@@60 $generated@@75 $generated@@76 $generated@@77)) ($generated@@53 $generated@@79 $generated@@78))))
 :pattern ( ($generated@@60 $generated@@75 $generated@@76 $generated@@77))
))) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@59 (type $generated@@80))))
 (=> (= (type $generated@@82) $generated@@83) (= ($generated@@57 ($generated@@60 $generated@@80 $generated@@81 $generated@@82) $generated@@81) $generated@@82)))
 :weight 0
))) (and (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@57 ($generated@@60 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@57 $generated@@85 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or true (= ($generated@@57 ($generated@@60 $generated@@89 $generated@@90 $generated@@88) $generated@@91) ($generated@@57 $generated@@89 $generated@@91)))
 :weight 0
)))) (forall (($generated@@92 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@92)) 7))) (forall (($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@55 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@51 (type $generated@@95))))
(= (type ($generated@@56 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@56 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@54) 8)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@61 $generated@@97 $generated@@98 $generated@@99)) $generated@@54)
 :pattern ( ($generated@@61 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@51 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@56 ($generated@@61 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@56 ($generated@@61 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@56 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@56 ($generated@@61 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@56 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@52) 9)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@112 $generated@@113)) 10))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@63 ($generated@@62 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@62 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@49 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@49 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@62 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@49 ($generated@@65 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@49 ($generated@@65 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@49 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@49 ($generated@@65 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@49 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@49 ($generated@@65 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@49 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@62 $generated@@52 $generated@@4))
 :pattern ( ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@51 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@52) (= (type $generated@@156) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@157) ($generated@@55 $generated@@4))) (= (type $generated@@159) $generated@@52)) (= (type $generated@@160) ($generated@@55 $generated@@161))) (= ($generated@@0 ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@56 ($generated@@57 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@166 Int) ) (!  (=> (or ($generated@@163 $generated@@166) (and (not (= 0 $generated@@44)) (<= ($generated@@164 0) $generated@@166))) (=> ($generated@@162 $generated@@166) (= $generated@@166 (+ ($generated@@165 $generated@@166 ($generated@@164 2)) ($generated@@165 $generated@@166 ($generated@@164 2))))))
 :pattern ( ($generated@@162 $generated@@166))
))))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= (type ($generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@168 $generated@@171) $generated@@171)
 :pattern ( ($generated@@168 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@172 Int) ) (!  (=> (or ($generated@@46 $generated@@172) (not (= 0 $generated@@44))) true)
 :pattern ( ($generated@@45 $generated@@172))
))))
(assert  (and (= ($generated@@1 $generated@@175) 11) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@178 T@U) ($generated@@179 Int) ) (!  (=> (and (= (type $generated@@178) $generated@@175) (or ($generated@@176 ($generated@@164 $generated@@179)) (and (not (= 0 $generated@@44)) (<= ($generated@@164 0) ($generated@@164 $generated@@179))))) (and (=> (not (= ($generated@@164 $generated@@179) ($generated@@164 0))) ($generated@@176 ($generated@@164 (- $generated@@179 1)))) (= ($generated@@173 ($generated@@174 $generated@@178) ($generated@@164 $generated@@179)) (ite (= ($generated@@164 $generated@@179) ($generated@@164 0)) 1 ($generated@@47 ($generated@@164 2) ($generated@@164 ($generated@@173 ($generated@@174 $generated@@178) ($generated@@164 (- $generated@@179 1)))))))))
 :weight 3
 :pattern ( ($generated@@173 ($generated@@174 $generated@@178) ($generated@@164 $generated@@179)))
))))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@180 Int) ) (!  (=> (or ($generated@@46 ($generated@@164 $generated@@180)) (not (= 0 $generated@@44))) (= ($generated@@45 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@47 ($generated@@164 $generated@@180) ($generated@@164 $generated@@180)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@164 $generated@@180)))
))))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@181 Int) ) (!  (=> (or ($generated@@163 $generated@@181) (and (not (= 0 $generated@@44)) (<= ($generated@@164 0) $generated@@181))) (= ($generated@@162 $generated@@181) (= ($generated@@47 ($generated@@165 $generated@@181 ($generated@@164 2)) ($generated@@164 2)) $generated@@181)))
 :pattern ( ($generated@@162 $generated@@181))
))))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (and (= (type $generated@@182) $generated@@175) (or ($generated@@176 $generated@@183) (and (not (= 0 $generated@@44)) (<= ($generated@@164 0) $generated@@183)))) true)
 :pattern ( ($generated@@173 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 Int) ($generated@@185 Int) ) (! (= ($generated@@165 $generated@@184 $generated@@185) (div $generated@@184 $generated@@185))
 :pattern ( ($generated@@165 $generated@@184 $generated@@185))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@175)
 :pattern ( ($generated@@186 $generated@@188))
)) (= (type $generated@@187) $generated@@175)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (= (type $generated@@189) $generated@@175) (= ($generated@@173 $generated@@189 $generated@@190) ($generated@@173 $generated@@187 $generated@@190)))
 :pattern ( ($generated@@173 ($generated@@186 $generated@@189) $generated@@190))
)))
(assert  (and (and (= ($generated@@1 $generated@@193) 12) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@U) ) (! (= (type ($generated@@192 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@192 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(= ($generated@@192 $generated@@198 ($generated@@191 $generated@@197)) $generated@@197))
 :pattern ( ($generated@@191 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (!  (=> (= (type $generated@@199) $generated@@175) (= ($generated@@173 ($generated@@174 $generated@@199) $generated@@200) ($generated@@173 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@201 Int) ($generated@@202 Int) ) (! (= ($generated@@47 $generated@@201 $generated@@202) (* $generated@@201 $generated@@202))
 :pattern ( ($generated@@47 $generated@@201 $generated@@202))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@203 Int) ) (!  (=> (or ($generated@@163 ($generated@@164 $generated@@203)) (and (not (= 0 $generated@@44)) (<= ($generated@@164 0) ($generated@@164 $generated@@203)))) (= ($generated@@162 ($generated@@164 $generated@@203)) (= ($generated@@164 ($generated@@47 ($generated@@164 ($generated@@165 $generated@@203 ($generated@@164 2))) ($generated@@164 2))) ($generated@@164 $generated@@203))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@164 $generated@@203)))
))))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@191 ($generated@@8 ($generated@@164 $generated@@204))) ($generated@@168 ($generated@@191 ($generated@@8 $generated@@204))))
 :pattern ( ($generated@@191 ($generated@@8 ($generated@@164 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@191 ($generated@@168 $generated@@205)) ($generated@@168 ($generated@@191 $generated@@205)))
 :pattern ( ($generated@@191 ($generated@@168 $generated@@205)))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@206 T@U) ($generated@@207 Int) ) (!  (=> (and (= (type $generated@@206) $generated@@175) (or ($generated@@176 $generated@@207) (and (not (= 0 $generated@@44)) (<= ($generated@@164 0) $generated@@207)))) (and (=> (not (= $generated@@207 ($generated@@164 0))) ($generated@@176 (- $generated@@207 1))) (= ($generated@@173 ($generated@@174 $generated@@206) $generated@@207) (ite (= $generated@@207 ($generated@@164 0)) 1 ($generated@@47 ($generated@@164 2) ($generated@@173 $generated@@206 (- $generated@@207 1)))))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@206) $generated@@207))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@211) ($generated@@53 $generated@@52 $generated@@54)) (= (type $generated@@213) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@214) ($generated@@62 $generated@@52 $generated@@4))) (= (type $generated@@215) $generated@@52)) (= (type $generated@@216) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@217) ($generated@@55 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@218  (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@173 ($generated@@174 ($generated@@174 $generated@@187)) $generated@@208) ($generated@@45 ($generated@@173 ($generated@@174 ($generated@@174 $generated@@187)) ($generated@@165 $generated@@208 ($generated@@164 2))))))))
(let (($generated@@219  (=> (and (= $generated@@208 0) (= (ControlFlow 0 8) 2)) $generated@@218)))
(let (($generated@@220  (=> (and (not (= $generated@@208 0)) (= $generated@@209 (- $generated@@208 2))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@208) (= $generated@@209 $generated@@208))) (=> (or (<= 0 $generated@@208) (= $generated@@209 $generated@@208)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< $generated@@209 $generated@@208)) (=> (< $generated@@209 $generated@@208) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@164 0) $generated@@209)) (=> (<= ($generated@@164 0) $generated@@209) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@163 $generated@@209) (or ($generated@@162 $generated@@209) (= ($generated@@47 ($generated@@165 $generated@@209 ($generated@@164 2)) ($generated@@164 2)) $generated@@209)))) (=> (=> ($generated@@163 $generated@@209) (or ($generated@@162 $generated@@209) (= ($generated@@47 ($generated@@165 $generated@@209 ($generated@@164 2)) ($generated@@164 2)) $generated@@209))) (=> (and ($generated@@210 $generated@@211) ($generated@@212 $generated@@211)) (=> (and (and (and ($generated@@176 $generated@@209) (and ($generated@@176 ($generated@@165 $generated@@209 ($generated@@164 2))) ($generated@@46 ($generated@@173 ($generated@@174 $generated@@187) ($generated@@165 $generated@@209 ($generated@@164 2)))))) (= ($generated@@173 ($generated@@174 ($generated@@174 $generated@@187)) $generated@@209) ($generated@@45 ($generated@@173 ($generated@@174 ($generated@@174 $generated@@187)) ($generated@@165 $generated@@209 ($generated@@164 2)))))) (and (= $generated@@213 $generated@@211) (= (ControlFlow 0 3) 2))) $generated@@218)))))))))))))
(let (($generated@@221  (=> (= $generated@@214 ($generated@@50 $generated@@215 $generated@@216 $generated@@217 false)) (=> (and (and ($generated@@210 $generated@@213) ($generated@@212 $generated@@213)) (and (= $generated@@216 $generated@@213) (forall (($generated@@222 Int) )  (=> (and (and (<= ($generated@@164 0) $generated@@222) ($generated@@162 $generated@@222)) (and (<= 0 $generated@@222) (< $generated@@222 $generated@@208))) (= ($generated@@173 ($generated@@174 $generated@@187) $generated@@222) ($generated@@45 ($generated@@173 ($generated@@174 $generated@@187) ($generated@@165 $generated@@222 ($generated@@164 2))))))))) (and (=> (= (ControlFlow 0 9) 3) $generated@@220) (=> (= (ControlFlow 0 9) 8) $generated@@219))))))
(let (($generated@@223  (=> (and (and (and ($generated@@210 $generated@@216) ($generated@@212 $generated@@216)) (and (= 1 $generated@@44) (<= ($generated@@164 0) $generated@@208))) (and (and ($generated@@163 $generated@@208) (and ($generated@@162 $generated@@208) (= ($generated@@47 ($generated@@165 $generated@@208 ($generated@@164 2)) ($generated@@164 2)) $generated@@208))) (= (ControlFlow 0 10) 9))) $generated@@221)))
$generated@@223))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Int)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@130 (Int Int) Int)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@188 (Int) Bool)
(declare-fun $generated@@189 (Int) Bool)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (Int Int) Int)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U Int) Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 (Int) Bool)
(declare-fun $generated@@206 (T@T) T@U)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@214 (T@U Int) Int)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@220 () T@T)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@T) T@U)
(declare-fun $generated@@229 (T@T T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@T T@T) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 () T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@U Int) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@409 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@131 Int) ) (!  (=> (or ($generated@@129 $generated@@131) (not (= 0 $generated@@127))) (= ($generated@@128 $generated@@131) ($generated@@130 $generated@@131 $generated@@131)))
 :pattern ( ($generated@@128 $generated@@131))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@138 $generated@@139)) 12)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@134 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@134 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@136 (type $generated@@144))))
(= (type ($generated@@132 $generated@@144 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@132 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(let (($generated@@153 (type $generated@@149)))
(= (type ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151)) ($generated@@134 $generated@@153 $generated@@152))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@136 (type $generated@@154))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@132 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@155 $generated@@156) $generated@@157)))
 :weight 0
))) (and (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@132 ($generated@@137 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@132 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@132 ($generated@@137 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@132 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or true (= ($generated@@132 ($generated@@137 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@132 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ) (! (= (type ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@72 $generated@@4))
 :pattern ( ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@64 (type $generated@@186))))
 (=> (and (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@183) ($generated@@63 $generated@@4))) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) ($generated@@63 $generated@@187))) (= ($generated@@0 ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (not (= $generated@@185 $generated@@181)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@182 $generated@@185) $generated@@183))) $generated@@184))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@189 $generated@@192) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@192))) (=> ($generated@@188 $generated@@192) (= $generated@@192 (+ ($generated@@191 $generated@@192 ($generated@@190 2)) ($generated@@191 $generated@@192 ($generated@@190 2))))))
 :pattern ( ($generated@@188 $generated@@192))
))))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@190 $generated@@193) $generated@@193)
 :pattern ( ($generated@@190 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 Int) ) (!  (=> (or ($generated@@129 $generated@@198) (not (= 0 $generated@@127))) true)
 :pattern ( ($generated@@128 $generated@@198))
))))
(assert  (and (= ($generated@@1 $generated@@201) 13) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@203)) $generated@@201)
 :pattern ( ($generated@@200 $generated@@203))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (and (= (type $generated@@204) $generated@@201) (or ($generated@@202 ($generated@@190 $generated@@205)) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@205))))) (and (=> (not (= ($generated@@190 $generated@@205) ($generated@@190 0))) ($generated@@202 ($generated@@190 (- $generated@@205 1)))) (= ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 $generated@@205)) (ite (= ($generated@@190 $generated@@205) ($generated@@190 0)) 1 ($generated@@130 ($generated@@190 2) ($generated@@190 ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 (- $generated@@205 1)))))))))
 :weight 3
 :pattern ( ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 $generated@@205)))
))))
(assert  (and (and (forall (($generated@@210 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@210)) 14)) (forall (($generated@@211 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@208 $generated@@211))
))) (forall (($generated@@212 T@T) ) (! (= (type ($generated@@206 $generated@@212)) ($generated@@208 $generated@@212))
 :pattern ( ($generated@@206 $generated@@212))
))))
(assert (forall (($generated@@213 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@213)) 0)
 :pattern ( ($generated@@206 $generated@@213))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ) (!  (=> (and (= (type $generated@@216) $generated@@201) (or ($generated@@215 $generated@@217) (and (not (= 1 $generated@@127)) (<= ($generated@@190 0) $generated@@217)))) (<= ($generated@@190 0) ($generated@@214 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
))))
(assert  (and (= ($generated@@1 $generated@@220) 15) (forall (($generated@@221 T@U) ) (! (= (type ($generated@@219 $generated@@221)) $generated@@220)
 :pattern ( ($generated@@219 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@61) (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@218 ($generated@@219 $generated@@222) $generated@@223 $generated@@224) ($generated@@69 $generated@@222 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@222) $generated@@223 $generated@@224))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@225 T@U) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@225) $generated@@201) (or ($generated@@215 ($generated@@190 $generated@@226)) (and (not (= 1 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@226))))) (and (=> (not (= ($generated@@190 $generated@@226) ($generated@@190 0))) (and (and ($generated@@189 ($generated@@190 $generated@@226)) (=> ($generated@@0 ($generated@@194 ($generated@@11 ($generated@@188 ($generated@@190 $generated@@226))))) (and ($generated@@215 ($generated@@190 ($generated@@191 $generated@@226 ($generated@@190 2)))) ($generated@@129 ($generated@@190 ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 ($generated@@191 $generated@@226 ($generated@@190 2))))))))) (=> (not ($generated@@0 ($generated@@194 ($generated@@11 ($generated@@188 ($generated@@190 $generated@@226)))))) ($generated@@215 ($generated@@190 (- $generated@@226 1)))))) (= ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 $generated@@226)) (ite (= ($generated@@190 $generated@@226) ($generated@@190 0)) 1 (ite ($generated@@188 ($generated@@190 $generated@@226)) ($generated@@128 ($generated@@190 ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 ($generated@@191 $generated@@226 ($generated@@190 2)))))) ($generated@@130 ($generated@@190 2) ($generated@@190 ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 (- $generated@@226 1))))))))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 $generated@@226)))
))))
(assert  (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@232 $generated@@233)) 16)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@229 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@229 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@227 $generated@@238)) ($generated@@71 $generated@@239 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@238))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= (type ($generated@@228 $generated@@240 $generated@@241)) ($generated@@229 $generated@@240 $generated@@241))
 :pattern ( ($generated@@228 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (let (($generated@@244 (type $generated@@242)))
 (not ($generated@@0 ($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242))))
 :pattern ( (let (($generated@@244 (type $generated@@242)))
($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242)))
)))
(assert  (and (and (and (and (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@250 $generated@@251)) 17)) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@252 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@247 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@247 $generated@@254 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@247 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@248 (type $generated@@256))))
(= (type ($generated@@245 $generated@@256)) ($generated@@71 $generated@@257 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@256))
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= (type ($generated@@246 $generated@@258 $generated@@259)) ($generated@@247 $generated@@258 $generated@@259))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (let (($generated@@262 (type $generated@@260)))
 (not ($generated@@0 ($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260))))
 :pattern ( (let (($generated@@262 (type $generated@@260)))
($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@263 Int) ) (!  (=> (or ($generated@@129 ($generated@@190 $generated@@263)) (not (= 0 $generated@@127))) (= ($generated@@128 ($generated@@190 $generated@@263)) ($generated@@190 ($generated@@130 ($generated@@190 $generated@@263) ($generated@@190 $generated@@263)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@190 $generated@@263)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@264 T@U) ($generated@@265 Int) ) (!  (=> (and (= (type $generated@@264) $generated@@201) (or ($generated@@215 $generated@@265) (and (not (= 1 $generated@@127)) (<= ($generated@@190 0) $generated@@265)))) (and (=> (not (= $generated@@265 ($generated@@190 0))) (and (and ($generated@@189 $generated@@265) (=> ($generated@@188 $generated@@265) (and ($generated@@215 ($generated@@191 $generated@@265 ($generated@@190 2))) ($generated@@129 ($generated@@214 $generated@@264 ($generated@@191 $generated@@265 ($generated@@190 2))))))) (=> (not ($generated@@188 $generated@@265)) ($generated@@215 (- $generated@@265 1))))) (= ($generated@@214 ($generated@@200 $generated@@264) $generated@@265) (ite (= $generated@@265 ($generated@@190 0)) 1 (ite ($generated@@188 $generated@@265) ($generated@@128 ($generated@@214 $generated@@264 ($generated@@191 $generated@@265 ($generated@@190 2)))) ($generated@@130 ($generated@@190 2) ($generated@@214 $generated@@264 (- $generated@@265 1))))))))
 :pattern ( ($generated@@214 ($generated@@200 $generated@@264) $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@231 (type $generated@@266))))
(let (($generated@@268 ($generated@@230 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@229 $generated@@268 $generated@@267)) (or (= $generated@@266 ($generated@@228 $generated@@268 $generated@@267)) (exists (($generated@@269 T@U) ) (!  (and (= (type $generated@@269) $generated@@268) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@266) $generated@@269)))
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
))))))
 :pattern ( ($generated@@227 $generated@@266))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@249 (type $generated@@270))))
(let (($generated@@272 ($generated@@248 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@247 $generated@@272 $generated@@271)) (or (= $generated@@270 ($generated@@246 $generated@@272 $generated@@271)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@270) $generated@@273)))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@245 $generated@@270))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@274 Int) ) (!  (=> (or ($generated@@189 $generated@@274) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@274))) (= ($generated@@188 $generated@@274) (= ($generated@@130 ($generated@@191 $generated@@274 ($generated@@190 2)) ($generated@@190 2)) $generated@@274)))
 :pattern ( ($generated@@188 $generated@@274))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@61)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) ($generated@@71 $generated@@220 $generated@@4)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@220) ($generated@@0 ($generated@@76 $generated@@277 $generated@@280))) ($generated@@218 $generated@@280 $generated@@278 $generated@@279))
 :pattern ( ($generated@@76 $generated@@277 $generated@@280))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@71 $generated@@220 $generated@@4)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@220) ($generated@@0 ($generated@@76 $generated@@283 $generated@@286))) ($generated@@218 $generated@@286 $generated@@284 $generated@@285))
 :pattern ( ($generated@@76 $generated@@283 $generated@@286))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@201) (or ($generated@@202 $generated@@288) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@288)))) true)
 :pattern ( ($generated@@199 $generated@@287 $generated@@288))
))))
(assert  (and (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@231 (type $generated@@293))))
(let (($generated@@295 ($generated@@230 (type $generated@@293))))
(= (type ($generated@@290 $generated@@293)) ($generated@@71 $generated@@295 $generated@@294))))
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@229 $generated@@220 $generated@@220)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@220) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@296) $generated@@300))) (and ($generated@@218 ($generated@@76 ($generated@@290 $generated@@296) $generated@@300) $generated@@298 $generated@@299) ($generated@@218 $generated@@300 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@76 ($generated@@290 $generated@@296) $generated@@300))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@296) $generated@@300))
))))
 :pattern ( ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299))
)))
(assert  (and (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (= (type ($generated@@301 $generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304))
)) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@249 (type $generated@@305))))
(let (($generated@@307 ($generated@@248 (type $generated@@305))))
(= (type ($generated@@302 $generated@@305)) ($generated@@71 $generated@@307 $generated@@306))))
 :pattern ( ($generated@@302 $generated@@305))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@247 $generated@@220 $generated@@220)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) $generated@@61)) (= (type $generated@@311) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@220) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@308) $generated@@312))) (and ($generated@@218 ($generated@@76 ($generated@@302 $generated@@308) $generated@@312) $generated@@310 $generated@@311) ($generated@@218 $generated@@312 $generated@@309 $generated@@311)))
 :pattern ( ($generated@@76 ($generated@@302 $generated@@308) $generated@@312))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@308) $generated@@312))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311))
)))
(assert (forall (($generated@@313 Int) ($generated@@314 Int) ) (! (= ($generated@@191 $generated@@313 $generated@@314) (div $generated@@313 $generated@@314))
 :pattern ( ($generated@@191 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@249 (type $generated@@317))))
(let (($generated@@319 ($generated@@248 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@247 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@246 $generated@@319 $generated@@318)) (= ($generated@@245 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@245 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@209 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@208 $generated@@321)) (<= 0 ($generated@@207 $generated@@320))))
 :pattern ( ($generated@@207 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@289 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@289 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@289 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@289 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@289 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@289 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@301 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@301 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@301 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@301 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@301 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@301 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@201)
 :pattern ( ($generated@@342 $generated@@344))
)) (= (type $generated@@343) $generated@@201)))
(assert (forall (($generated@@345 T@U) ($generated@@346 Int) ) (!  (=> (= (type $generated@@345) $generated@@201) (= ($generated@@214 $generated@@345 $generated@@346) ($generated@@214 $generated@@343 $generated@@346)))
 :pattern ( ($generated@@214 ($generated@@342 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ) (!  (=> (= (type $generated@@347) $generated@@201) (= ($generated@@199 $generated@@347 $generated@@348) ($generated@@199 $generated@@343 $generated@@348)))
 :pattern ( ($generated@@199 ($generated@@342 $generated@@347) $generated@@348))
)))
(assert  (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
)) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (! (let (($generated@@354 ($generated@@209 (type $generated@@352))))
(= (type ($generated@@350 $generated@@352 $generated@@353)) $generated@@354))
 :pattern ( ($generated@@350 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@208 $generated@@220)) (= (type $generated@@356) $generated@@61)) (= (type $generated@@357) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@355 ($generated@@349 $generated@@356) $generated@@357) (forall (($generated@@358 Int) ) (!  (=> (and (<= 0 $generated@@358) (< $generated@@358 ($generated@@207 $generated@@355))) ($generated@@218 ($generated@@350 $generated@@355 $generated@@358) $generated@@356 $generated@@357))
 :pattern ( ($generated@@350 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@69 $generated@@355 ($generated@@349 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@359 ($generated@@70 $generated@@360)) $generated@@360)
 :pattern ( ($generated@@70 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@61)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@361 ($generated@@275 $generated@@363)) $generated@@363))
 :pattern ( ($generated@@275 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@61) (= ($generated@@67 ($generated@@275 $generated@@364)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@365 ($generated@@281 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@281 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@281 $generated@@368)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@370 ($generated@@369 $generated@@373)) $generated@@373))
 :pattern ( ($generated@@369 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@61) (= ($generated@@67 ($generated@@369 $generated@@374)) $generated@@56))
 :pattern ( ($generated@@369 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) $generated@@61)
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@375 ($generated@@349 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@349 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@61) (= ($generated@@67 ($generated@@349 $generated@@378)) $generated@@57))
 :pattern ( ($generated@@349 $generated@@378))
)))
(assert (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated@@379 $generated@@383 ($generated@@219 $generated@@382)) $generated@@382))
 :pattern ( ($generated@@219 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 Int) ) (!  (=> (= (type $generated@@384) $generated@@201) (= ($generated@@214 ($generated@@200 $generated@@384) $generated@@385) ($generated@@214 $generated@@384 $generated@@385)))
 :pattern ( ($generated@@214 ($generated@@200 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 Int) ) (!  (=> (= (type $generated@@386) $generated@@201) (= ($generated@@199 ($generated@@200 $generated@@386) $generated@@387) ($generated@@199 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@389) $generated@@388))))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@76 ($generated@@315 $generated@@389) $generated@@388)))
)))
(assert (forall (($generated@@390 Int) ($generated@@391 Int) ) (! (= ($generated@@130 $generated@@390 $generated@@391) (* $generated@@390 $generated@@391))
 :pattern ( ($generated@@130 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@71 $generated@@220 $generated@@2)) (= (type $generated@@393) $generated@@61)) (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@392 ($generated@@369 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@220) (< 0 ($generated ($generated@@76 $generated@@392 $generated@@395)))) ($generated@@218 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@76 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@69 $generated@@392 ($generated@@369 $generated@@393) $generated@@394))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@396 Int) ) (!  (=> (or ($generated@@189 ($generated@@190 $generated@@396)) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@396)))) (= ($generated@@188 ($generated@@190 $generated@@396)) (= ($generated@@190 ($generated@@130 ($generated@@190 ($generated@@191 $generated@@396 ($generated@@190 2))) ($generated@@190 2))) ($generated@@190 $generated@@396))))
 :weight 3
 :pattern ( ($generated@@188 ($generated@@190 $generated@@396)))
))))
(assert (forall (($generated@@397 Int) ) (! (= ($generated@@219 ($generated@@8 ($generated@@190 $generated@@397))) ($generated@@194 ($generated@@219 ($generated@@8 $generated@@397))))
 :pattern ( ($generated@@219 ($generated@@8 ($generated@@190 $generated@@397))))
)))
(assert (forall (($generated@@398 T@U) ) (! (= ($generated@@219 ($generated@@194 $generated@@398)) ($generated@@194 ($generated@@219 $generated@@398)))
 :pattern ( ($generated@@219 ($generated@@194 $generated@@398)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@399 T@U) ($generated@@400 Int) ) (!  (=> (and (= (type $generated@@399) $generated@@201) (or ($generated@@202 $generated@@400) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@400)))) (and (=> (not (= $generated@@400 ($generated@@190 0))) ($generated@@202 (- $generated@@400 1))) (= ($generated@@199 ($generated@@200 $generated@@399) $generated@@400) (ite (= $generated@@400 ($generated@@190 0)) 1 ($generated@@130 ($generated@@190 2) ($generated@@199 $generated@@399 (- $generated@@400 1)))))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@399) $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@209 (type $generated@@401))))
 (=> (and (= (type $generated@@401) ($generated@@208 $generated@@402)) (= ($generated@@207 $generated@@401) 0)) (= $generated@@401 ($generated@@206 $generated@@402))))
 :pattern ( ($generated@@207 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@404) $generated@@2)) ($generated@@69 $generated@@404 $generated@@46 $generated@@403))
 :pattern ( ($generated@@69 $generated@@404 $generated@@46 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@406) $generated@@3)) ($generated@@69 $generated@@406 $generated@@47 $generated@@405))
 :pattern ( ($generated@@69 $generated@@406 $generated@@47 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@408) $generated@@4)) ($generated@@69 $generated@@408 $generated@@44 $generated@@407))
 :pattern ( ($generated@@69 $generated@@408 $generated@@44 $generated@@407))
)))
(assert (= ($generated@@1 $generated@@409) 18))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@411) $generated@@409)) ($generated@@69 $generated@@411 $generated@@45 $generated@@410))
 :pattern ( ($generated@@69 $generated@@411 $generated@@45 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@413) $generated@@220)) ($generated@@69 $generated@@413 $generated@@48 $generated@@412))
 :pattern ( ($generated@@69 $generated@@413 $generated@@48 $generated@@412))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@414 () T@U)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 () Int)
(declare-fun $generated@@418 (T@U) Bool)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@420 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@414) ($generated@@134 $generated@@72 $generated@@4)) (= (type $generated@@415) $generated@@72)) (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@421  (=> (and (= $generated@@414 ($generated@@133 $generated@@415 $generated@@416 $generated@@60 false)) (<= ($generated@@190 0) $generated@@417)) (=> (and (and ($generated@@418 $generated@@419) ($generated@@420 $generated@@419)) (and (= $generated@@416 $generated@@419) ($generated@@69 ($generated@@8 $generated@@417) $generated@@46 $generated@@419))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@190 0) $generated@@417)) (=> (and (and (<= ($generated@@190 0) $generated@@417) ($generated@@215 $generated@@417)) (and ($generated@@69 ($generated@@8 $generated@@417) $generated@@46 $generated@@419) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@190 0) $generated@@417)))))))
(let (($generated@@422  (=> (and (and ($generated@@418 $generated@@416) ($generated@@420 $generated@@416)) (and (= 2 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@421)))
$generated@@422)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Int)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@130 (Int Int) Int)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@188 (Int) Bool)
(declare-fun $generated@@189 (Int) Bool)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (Int Int) Int)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U Int) Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 (Int) Bool)
(declare-fun $generated@@206 (T@T) T@U)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@214 (T@U Int) Int)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@220 () T@T)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@T) T@U)
(declare-fun $generated@@229 (T@T T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@T T@T) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 () T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@U Int) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@409 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@131 Int) ) (!  (=> (or ($generated@@129 $generated@@131) (not (= 0 $generated@@127))) (= ($generated@@128 $generated@@131) ($generated@@130 $generated@@131 $generated@@131)))
 :pattern ( ($generated@@128 $generated@@131))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@138 $generated@@139)) 12)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@134 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@134 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@136 (type $generated@@144))))
(= (type ($generated@@132 $generated@@144 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@132 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(let (($generated@@153 (type $generated@@149)))
(= (type ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151)) ($generated@@134 $generated@@153 $generated@@152))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@136 (type $generated@@154))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@132 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@155 $generated@@156) $generated@@157)))
 :weight 0
))) (and (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@132 ($generated@@137 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@132 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@132 ($generated@@137 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@132 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or true (= ($generated@@132 ($generated@@137 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@132 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ) (! (= (type ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@72 $generated@@4))
 :pattern ( ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@64 (type $generated@@186))))
 (=> (and (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@183) ($generated@@63 $generated@@4))) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) ($generated@@63 $generated@@187))) (= ($generated@@0 ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (not (= $generated@@185 $generated@@181)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@182 $generated@@185) $generated@@183))) $generated@@184))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@189 $generated@@192) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@192))) (=> ($generated@@188 $generated@@192) (= $generated@@192 (+ ($generated@@191 $generated@@192 ($generated@@190 2)) ($generated@@191 $generated@@192 ($generated@@190 2))))))
 :pattern ( ($generated@@188 $generated@@192))
))))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@190 $generated@@193) $generated@@193)
 :pattern ( ($generated@@190 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 Int) ) (!  (=> (or ($generated@@129 $generated@@198) (not (= 0 $generated@@127))) true)
 :pattern ( ($generated@@128 $generated@@198))
))))
(assert  (and (= ($generated@@1 $generated@@201) 13) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@203)) $generated@@201)
 :pattern ( ($generated@@200 $generated@@203))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (and (= (type $generated@@204) $generated@@201) (or ($generated@@202 ($generated@@190 $generated@@205)) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@205))))) (and (=> (not (= ($generated@@190 $generated@@205) ($generated@@190 0))) ($generated@@202 ($generated@@190 (- $generated@@205 1)))) (= ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 $generated@@205)) (ite (= ($generated@@190 $generated@@205) ($generated@@190 0)) 1 ($generated@@130 ($generated@@190 2) ($generated@@190 ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 (- $generated@@205 1)))))))))
 :weight 3
 :pattern ( ($generated@@199 ($generated@@200 $generated@@204) ($generated@@190 $generated@@205)))
))))
(assert  (and (and (forall (($generated@@210 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@210)) 14)) (forall (($generated@@211 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@208 $generated@@211))
))) (forall (($generated@@212 T@T) ) (! (= (type ($generated@@206 $generated@@212)) ($generated@@208 $generated@@212))
 :pattern ( ($generated@@206 $generated@@212))
))))
(assert (forall (($generated@@213 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@213)) 0)
 :pattern ( ($generated@@206 $generated@@213))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ) (!  (=> (and (= (type $generated@@216) $generated@@201) (or ($generated@@215 $generated@@217) (and (not (= 1 $generated@@127)) (<= ($generated@@190 0) $generated@@217)))) (<= ($generated@@190 0) ($generated@@214 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
))))
(assert  (and (= ($generated@@1 $generated@@220) 15) (forall (($generated@@221 T@U) ) (! (= (type ($generated@@219 $generated@@221)) $generated@@220)
 :pattern ( ($generated@@219 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@61) (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@218 ($generated@@219 $generated@@222) $generated@@223 $generated@@224) ($generated@@69 $generated@@222 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@222) $generated@@223 $generated@@224))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@225 T@U) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@225) $generated@@201) (or ($generated@@215 ($generated@@190 $generated@@226)) (and (not (= 1 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@226))))) (and (=> (not (= ($generated@@190 $generated@@226) ($generated@@190 0))) (and (and ($generated@@189 ($generated@@190 $generated@@226)) (=> ($generated@@0 ($generated@@194 ($generated@@11 ($generated@@188 ($generated@@190 $generated@@226))))) (and ($generated@@215 ($generated@@190 ($generated@@191 $generated@@226 ($generated@@190 2)))) ($generated@@129 ($generated@@190 ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 ($generated@@191 $generated@@226 ($generated@@190 2))))))))) (=> (not ($generated@@0 ($generated@@194 ($generated@@11 ($generated@@188 ($generated@@190 $generated@@226)))))) ($generated@@215 ($generated@@190 (- $generated@@226 1)))))) (= ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 $generated@@226)) (ite (= ($generated@@190 $generated@@226) ($generated@@190 0)) 1 (ite ($generated@@188 ($generated@@190 $generated@@226)) ($generated@@128 ($generated@@190 ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 ($generated@@191 $generated@@226 ($generated@@190 2)))))) ($generated@@130 ($generated@@190 2) ($generated@@190 ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 (- $generated@@226 1))))))))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@200 $generated@@225) ($generated@@190 $generated@@226)))
))))
(assert  (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@232 $generated@@233)) 16)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@229 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@229 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@227 $generated@@238)) ($generated@@71 $generated@@239 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@238))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= (type ($generated@@228 $generated@@240 $generated@@241)) ($generated@@229 $generated@@240 $generated@@241))
 :pattern ( ($generated@@228 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (let (($generated@@244 (type $generated@@242)))
 (not ($generated@@0 ($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242))))
 :pattern ( (let (($generated@@244 (type $generated@@242)))
($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242)))
)))
(assert  (and (and (and (and (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@250 $generated@@251)) 17)) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@252 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@247 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@247 $generated@@254 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@247 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@248 (type $generated@@256))))
(= (type ($generated@@245 $generated@@256)) ($generated@@71 $generated@@257 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@256))
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= (type ($generated@@246 $generated@@258 $generated@@259)) ($generated@@247 $generated@@258 $generated@@259))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (let (($generated@@262 (type $generated@@260)))
 (not ($generated@@0 ($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260))))
 :pattern ( (let (($generated@@262 (type $generated@@260)))
($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@263 Int) ) (!  (=> (or ($generated@@129 ($generated@@190 $generated@@263)) (not (= 0 $generated@@127))) (= ($generated@@128 ($generated@@190 $generated@@263)) ($generated@@190 ($generated@@130 ($generated@@190 $generated@@263) ($generated@@190 $generated@@263)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@190 $generated@@263)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@264 T@U) ($generated@@265 Int) ) (!  (=> (and (= (type $generated@@264) $generated@@201) (or ($generated@@215 $generated@@265) (and (not (= 1 $generated@@127)) (<= ($generated@@190 0) $generated@@265)))) (and (=> (not (= $generated@@265 ($generated@@190 0))) (and (and ($generated@@189 $generated@@265) (=> ($generated@@188 $generated@@265) (and ($generated@@215 ($generated@@191 $generated@@265 ($generated@@190 2))) ($generated@@129 ($generated@@214 $generated@@264 ($generated@@191 $generated@@265 ($generated@@190 2))))))) (=> (not ($generated@@188 $generated@@265)) ($generated@@215 (- $generated@@265 1))))) (= ($generated@@214 ($generated@@200 $generated@@264) $generated@@265) (ite (= $generated@@265 ($generated@@190 0)) 1 (ite ($generated@@188 $generated@@265) ($generated@@128 ($generated@@214 $generated@@264 ($generated@@191 $generated@@265 ($generated@@190 2)))) ($generated@@130 ($generated@@190 2) ($generated@@214 $generated@@264 (- $generated@@265 1))))))))
 :pattern ( ($generated@@214 ($generated@@200 $generated@@264) $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@231 (type $generated@@266))))
(let (($generated@@268 ($generated@@230 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@229 $generated@@268 $generated@@267)) (or (= $generated@@266 ($generated@@228 $generated@@268 $generated@@267)) (exists (($generated@@269 T@U) ) (!  (and (= (type $generated@@269) $generated@@268) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@266) $generated@@269)))
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
))))))
 :pattern ( ($generated@@227 $generated@@266))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@249 (type $generated@@270))))
(let (($generated@@272 ($generated@@248 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@247 $generated@@272 $generated@@271)) (or (= $generated@@270 ($generated@@246 $generated@@272 $generated@@271)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@270) $generated@@273)))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@245 $generated@@270))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@274 Int) ) (!  (=> (or ($generated@@189 $generated@@274) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@274))) (= ($generated@@188 $generated@@274) (= ($generated@@130 ($generated@@191 $generated@@274 ($generated@@190 2)) ($generated@@190 2)) $generated@@274)))
 :pattern ( ($generated@@188 $generated@@274))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@61)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) ($generated@@71 $generated@@220 $generated@@4)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@220) ($generated@@0 ($generated@@76 $generated@@277 $generated@@280))) ($generated@@218 $generated@@280 $generated@@278 $generated@@279))
 :pattern ( ($generated@@76 $generated@@277 $generated@@280))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@71 $generated@@220 $generated@@4)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@220) ($generated@@0 ($generated@@76 $generated@@283 $generated@@286))) ($generated@@218 $generated@@286 $generated@@284 $generated@@285))
 :pattern ( ($generated@@76 $generated@@283 $generated@@286))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@201) (or ($generated@@202 $generated@@288) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@288)))) true)
 :pattern ( ($generated@@199 $generated@@287 $generated@@288))
))))
(assert  (and (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@231 (type $generated@@293))))
(let (($generated@@295 ($generated@@230 (type $generated@@293))))
(= (type ($generated@@290 $generated@@293)) ($generated@@71 $generated@@295 $generated@@294))))
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@229 $generated@@220 $generated@@220)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@220) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@296) $generated@@300))) (and ($generated@@218 ($generated@@76 ($generated@@290 $generated@@296) $generated@@300) $generated@@298 $generated@@299) ($generated@@218 $generated@@300 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@76 ($generated@@290 $generated@@296) $generated@@300))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@296) $generated@@300))
))))
 :pattern ( ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299))
)))
(assert  (and (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (= (type ($generated@@301 $generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304))
)) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@249 (type $generated@@305))))
(let (($generated@@307 ($generated@@248 (type $generated@@305))))
(= (type ($generated@@302 $generated@@305)) ($generated@@71 $generated@@307 $generated@@306))))
 :pattern ( ($generated@@302 $generated@@305))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@247 $generated@@220 $generated@@220)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) $generated@@61)) (= (type $generated@@311) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@220) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@308) $generated@@312))) (and ($generated@@218 ($generated@@76 ($generated@@302 $generated@@308) $generated@@312) $generated@@310 $generated@@311) ($generated@@218 $generated@@312 $generated@@309 $generated@@311)))
 :pattern ( ($generated@@76 ($generated@@302 $generated@@308) $generated@@312))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@308) $generated@@312))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311))
)))
(assert (forall (($generated@@313 Int) ($generated@@314 Int) ) (! (= ($generated@@191 $generated@@313 $generated@@314) (div $generated@@313 $generated@@314))
 :pattern ( ($generated@@191 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@249 (type $generated@@317))))
(let (($generated@@319 ($generated@@248 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@247 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@246 $generated@@319 $generated@@318)) (= ($generated@@245 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@245 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@209 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@208 $generated@@321)) (<= 0 ($generated@@207 $generated@@320))))
 :pattern ( ($generated@@207 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@289 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@289 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@289 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@289 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@289 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@289 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@301 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@301 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@301 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@301 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@301 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@301 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@201)
 :pattern ( ($generated@@342 $generated@@344))
)) (= (type $generated@@343) $generated@@201)))
(assert (forall (($generated@@345 T@U) ($generated@@346 Int) ) (!  (=> (= (type $generated@@345) $generated@@201) (= ($generated@@214 $generated@@345 $generated@@346) ($generated@@214 $generated@@343 $generated@@346)))
 :pattern ( ($generated@@214 ($generated@@342 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ) (!  (=> (= (type $generated@@347) $generated@@201) (= ($generated@@199 $generated@@347 $generated@@348) ($generated@@199 $generated@@343 $generated@@348)))
 :pattern ( ($generated@@199 ($generated@@342 $generated@@347) $generated@@348))
)))
(assert  (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
)) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (! (let (($generated@@354 ($generated@@209 (type $generated@@352))))
(= (type ($generated@@350 $generated@@352 $generated@@353)) $generated@@354))
 :pattern ( ($generated@@350 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@208 $generated@@220)) (= (type $generated@@356) $generated@@61)) (= (type $generated@@357) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@355 ($generated@@349 $generated@@356) $generated@@357) (forall (($generated@@358 Int) ) (!  (=> (and (<= 0 $generated@@358) (< $generated@@358 ($generated@@207 $generated@@355))) ($generated@@218 ($generated@@350 $generated@@355 $generated@@358) $generated@@356 $generated@@357))
 :pattern ( ($generated@@350 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@69 $generated@@355 ($generated@@349 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@359 ($generated@@70 $generated@@360)) $generated@@360)
 :pattern ( ($generated@@70 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@61)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@361 ($generated@@275 $generated@@363)) $generated@@363))
 :pattern ( ($generated@@275 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@61) (= ($generated@@67 ($generated@@275 $generated@@364)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@365 ($generated@@281 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@281 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@281 $generated@@368)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@370 ($generated@@369 $generated@@373)) $generated@@373))
 :pattern ( ($generated@@369 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@61) (= ($generated@@67 ($generated@@369 $generated@@374)) $generated@@56))
 :pattern ( ($generated@@369 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) $generated@@61)
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@375 ($generated@@349 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@349 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@61) (= ($generated@@67 ($generated@@349 $generated@@378)) $generated@@57))
 :pattern ( ($generated@@349 $generated@@378))
)))
(assert (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated@@379 $generated@@383 ($generated@@219 $generated@@382)) $generated@@382))
 :pattern ( ($generated@@219 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 Int) ) (!  (=> (= (type $generated@@384) $generated@@201) (= ($generated@@214 ($generated@@200 $generated@@384) $generated@@385) ($generated@@214 $generated@@384 $generated@@385)))
 :pattern ( ($generated@@214 ($generated@@200 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 Int) ) (!  (=> (= (type $generated@@386) $generated@@201) (= ($generated@@199 ($generated@@200 $generated@@386) $generated@@387) ($generated@@199 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@389) $generated@@388))))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@76 ($generated@@315 $generated@@389) $generated@@388)))
)))
(assert (forall (($generated@@390 Int) ($generated@@391 Int) ) (! (= ($generated@@130 $generated@@390 $generated@@391) (* $generated@@390 $generated@@391))
 :pattern ( ($generated@@130 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@71 $generated@@220 $generated@@2)) (= (type $generated@@393) $generated@@61)) (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@392 ($generated@@369 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@220) (< 0 ($generated ($generated@@76 $generated@@392 $generated@@395)))) ($generated@@218 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@76 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@69 $generated@@392 ($generated@@369 $generated@@393) $generated@@394))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@396 Int) ) (!  (=> (or ($generated@@189 ($generated@@190 $generated@@396)) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) ($generated@@190 $generated@@396)))) (= ($generated@@188 ($generated@@190 $generated@@396)) (= ($generated@@190 ($generated@@130 ($generated@@190 ($generated@@191 $generated@@396 ($generated@@190 2))) ($generated@@190 2))) ($generated@@190 $generated@@396))))
 :weight 3
 :pattern ( ($generated@@188 ($generated@@190 $generated@@396)))
))))
(assert (forall (($generated@@397 Int) ) (! (= ($generated@@219 ($generated@@8 ($generated@@190 $generated@@397))) ($generated@@194 ($generated@@219 ($generated@@8 $generated@@397))))
 :pattern ( ($generated@@219 ($generated@@8 ($generated@@190 $generated@@397))))
)))
(assert (forall (($generated@@398 T@U) ) (! (= ($generated@@219 ($generated@@194 $generated@@398)) ($generated@@194 ($generated@@219 $generated@@398)))
 :pattern ( ($generated@@219 ($generated@@194 $generated@@398)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@399 T@U) ($generated@@400 Int) ) (!  (=> (and (= (type $generated@@399) $generated@@201) (or ($generated@@202 $generated@@400) (and (not (= 0 $generated@@127)) (<= ($generated@@190 0) $generated@@400)))) (and (=> (not (= $generated@@400 ($generated@@190 0))) ($generated@@202 (- $generated@@400 1))) (= ($generated@@199 ($generated@@200 $generated@@399) $generated@@400) (ite (= $generated@@400 ($generated@@190 0)) 1 ($generated@@130 ($generated@@190 2) ($generated@@199 $generated@@399 (- $generated@@400 1)))))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@399) $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@209 (type $generated@@401))))
 (=> (and (= (type $generated@@401) ($generated@@208 $generated@@402)) (= ($generated@@207 $generated@@401) 0)) (= $generated@@401 ($generated@@206 $generated@@402))))
 :pattern ( ($generated@@207 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@404) $generated@@2)) ($generated@@69 $generated@@404 $generated@@46 $generated@@403))
 :pattern ( ($generated@@69 $generated@@404 $generated@@46 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@406) $generated@@3)) ($generated@@69 $generated@@406 $generated@@47 $generated@@405))
 :pattern ( ($generated@@69 $generated@@406 $generated@@47 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@408) $generated@@4)) ($generated@@69 $generated@@408 $generated@@44 $generated@@407))
 :pattern ( ($generated@@69 $generated@@408 $generated@@44 $generated@@407))
)))
(assert (= ($generated@@1 $generated@@409) 18))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@411) $generated@@409)) ($generated@@69 $generated@@411 $generated@@45 $generated@@410))
 :pattern ( ($generated@@69 $generated@@411 $generated@@45 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@413) $generated@@220)) ($generated@@69 $generated@@413 $generated@@48 $generated@@412))
 :pattern ( ($generated@@69 $generated@@413 $generated@@48 $generated@@412))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Int)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 () T@U)
(declare-fun $generated@@418 (T@U) Bool)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@420 () T@U)
(declare-fun $generated@@421 () Int)
(declare-fun $generated@@422 () T@U)
(declare-fun $generated@@423 () T@U)
(declare-fun $generated@@424 () T@U)
(declare-fun $generated@@425 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@422) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@417) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@423) ($generated@@134 $generated@@72 $generated@@4))) (= (type $generated@@424) $generated@@72)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@426  (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@214 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@414) ($generated@@199 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@414)))))
(let (($generated@@427  (=> (and (not ($generated@@188 $generated@@414)) (= $generated@@415 (- $generated@@414 1))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (or (<= 0 $generated@@414) (= $generated@@415 $generated@@414))) (=> (or (<= 0 $generated@@414) (= $generated@@415 $generated@@414)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (< $generated@@415 $generated@@414)) (=> (< $generated@@415 $generated@@414) (and (=> (= (ControlFlow 0 11) (- 0 12)) (<= ($generated@@190 0) $generated@@415)) (=> (<= ($generated@@190 0) $generated@@415) (=> (and ($generated@@416 $generated@@417) ($generated@@418 $generated@@417)) (=> (and (and (and ($generated@@215 $generated@@415) ($generated@@202 $generated@@415)) (= ($generated@@214 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@415) ($generated@@199 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@415))) (and (= $generated@@419 $generated@@417) (= (ControlFlow 0 11) 2))) $generated@@426)))))))))))
(let (($generated@@428  (=> ($generated@@188 $generated@@414) (and (=> (= (ControlFlow 0 4) (- 0 10)) (<= ($generated@@190 0) $generated@@414)) (=> (<= ($generated@@190 0) $generated@@414) (and (=> (= (ControlFlow 0 4) (- 0 9)) (=> ($generated@@189 $generated@@414) (or ($generated@@188 $generated@@414) (= ($generated@@130 ($generated@@191 $generated@@414 ($generated@@190 2)) ($generated@@190 2)) $generated@@414)))) (=> (=> ($generated@@189 $generated@@414) (or ($generated@@188 $generated@@414) (= ($generated@@130 ($generated@@191 $generated@@414 ($generated@@190 2)) ($generated@@190 2)) $generated@@414))) (=> (and ($generated@@416 $generated@@420) ($generated@@418 $generated@@420)) (=> (and (and ($generated@@202 $generated@@414) (and ($generated@@202 ($generated@@191 $generated@@414 ($generated@@190 2))) ($generated@@129 ($generated@@199 ($generated@@200 $generated@@343) ($generated@@191 $generated@@414 ($generated@@190 2)))))) (and (= ($generated@@199 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@414) ($generated@@128 ($generated@@199 ($generated@@200 ($generated@@200 $generated@@343)) ($generated@@191 $generated@@414 ($generated@@190 2))))) (= $generated@@419 $generated@@420))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (not (= ($generated@@190 2) 0))) (=> (not (= ($generated@@190 2) 0)) (=> (= $generated@@421 ($generated@@191 $generated@@414 ($generated@@190 2))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@414) (= $generated@@421 $generated@@414))) (=> (or (<= 0 $generated@@414) (= $generated@@421 $generated@@414)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< $generated@@421 $generated@@414)) (=> (< $generated@@421 $generated@@414) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@190 0) $generated@@421)) (=> (<= ($generated@@190 0) $generated@@421) (=> (and ($generated@@416 $generated@@422) ($generated@@418 $generated@@422)) (=> (and (and (and ($generated@@215 $generated@@421) ($generated@@202 $generated@@421)) (= ($generated@@214 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@421) ($generated@@199 ($generated@@200 ($generated@@200 $generated@@343)) $generated@@421))) (and (= $generated@@420 $generated@@422) (= (ControlFlow 0 4) 2))) $generated@@426))))))))))))))))))))
(let (($generated@@429  (=> (and (not (= $generated@@414 ($generated@@190 0))) ($generated@@69 ($generated@@8 $generated@@414) $generated@@46 $generated@@419)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= ($generated@@190 0) $generated@@414)) (=> (<= ($generated@@190 0) $generated@@414) (=> (and ($generated@@189 $generated@@414) ($generated@@189 $generated@@414)) (and (=> (= (ControlFlow 0 15) 4) $generated@@428) (=> (= (ControlFlow 0 15) 11) $generated@@427))))))))
(let (($generated@@430  (=> (and (= $generated@@414 ($generated@@190 0)) (= (ControlFlow 0 3) 2)) $generated@@426)))
(let (($generated@@431  (=> (= $generated@@423 ($generated@@133 $generated@@424 $generated@@425 $generated@@60 false)) (=> (and (and ($generated@@416 $generated@@419) ($generated@@418 $generated@@419)) (and (= $generated@@425 $generated@@419) (forall (($generated@@432 Int) )  (=> (and (<= ($generated@@190 0) $generated@@432) (and (<= 0 $generated@@432) (< $generated@@432 $generated@@414))) (= ($generated@@214 ($generated@@200 $generated@@343) $generated@@432) ($generated@@199 ($generated@@200 $generated@@343) $generated@@432)))))) (and (=> (= (ControlFlow 0 17) 3) $generated@@430) (=> (= (ControlFlow 0 17) 15) $generated@@429))))))
(let (($generated@@433  (=> (and (and (and ($generated@@416 $generated@@425) ($generated@@418 $generated@@425)) (= 2 $generated@@127)) (and (<= ($generated@@190 0) $generated@@414) (= (ControlFlow 0 18) 17))) $generated@@431)))
$generated@@433))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
