(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U Int Int) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (Int Int) Bool)
(declare-fun $generated@@281 (Int Int) Int)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@133 $generated@@136)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@136))
))) (= (type $generated@@135) $generated@@134)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 Int) ) (!  (=> (= (type $generated@@137) $generated@@134) (= ($generated@@132 $generated@@137 $generated@@138 $generated@@139) ($generated@@132 $generated@@135 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 16) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@67 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@77) (= (type $generated@@225) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@226) ($generated@@66 $generated@@4))) (= (type $generated@@228) $generated@@77)) (= (type $generated@@229) ($generated@@66 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@144)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) $generated@@64)) (= (type $generated@@237) $generated@@153)) (= (type $generated@@238) $generated@@153)) (= ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@144) (= (type $generated@@240) $generated@@144)) (= ($generated@@150 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@150 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@153) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@232 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@153) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@232 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) $generated@@64)) (= (type $generated@@261) $generated@@153)) (= (type $generated@@262) $generated@@153)) (= (type $generated@@263) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@257 $generated@@263)) (= ($generated@@74 ($generated@@231 $generated@@261 $generated@@262) ($generated@@143 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@74 ($generated@@231 $generated@@261 $generated@@262) ($generated@@143 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@144) (= ($generated@@142 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@144) ($generated@@142 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@153) (= (type $generated@@269) $generated@@153)) (= $generated@@267 ($generated@@231 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@142 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 18)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@282)) $generated@@134)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@278) (forall (($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (!  (=> (and (= (type $generated@@283) $generated@@134) (or ($generated@@280 $generated@@284 $generated@@285) (and (not (= 0 $generated@@278)) (and (<= ($generated@@251 0) $generated@@284) (<= $generated@@284 $generated@@285))))) (and (=> (not (= $generated@@285 $generated@@284)) ($generated@@280 (+ $generated@@284 1) $generated@@285)) (= ($generated@@132 ($generated@@279 $generated@@283) $generated@@284 $generated@@285) (ite (= $generated@@285 $generated@@284) 0 (+ ($generated@@281 ($generated@@281 $generated@@284 $generated@@284) $generated@@284) ($generated@@132 $generated@@283 (+ $generated@@284 1) $generated@@285))))))
 :pattern ( ($generated@@132 ($generated@@279 $generated@@283) $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@153)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@258 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@258 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@159 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@159 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 Int) ) (!  (=> (= (type $generated@@358) $generated@@134) (= ($generated@@132 ($generated@@279 $generated@@358) $generated@@359 $generated@@360) ($generated@@132 $generated@@358 $generated@@359 $generated@@360)))
 :pattern ( ($generated@@132 ($generated@@279 $generated@@358) $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@362) $generated@@64)) (= ($generated@@140 $generated@@361 ($generated@@158 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@361 $generated@@363)))) ($generated@@232 $generated@@363 $generated@@362))
 :pattern ( ($generated@@81 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@140 $generated@@361 ($generated@@158 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@241 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@153) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@258 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@241 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@246 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@153) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@258 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@246 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@292 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@301 (type $generated@@380))))
(let (($generated@@382 ($generated@@300 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@384) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@383) ($generated@@151 ($generated@@375 $generated@@144 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@151 ($generated@@375 $generated@@144 $generated@@384))) ($generated@@152 ($generated@@375 $generated@@144 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@319 (type $generated@@388))))
(let (($generated@@390 ($generated@@318 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@392) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@391) ($generated@@151 ($generated@@375 $generated@@144 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@151 ($generated@@375 $generated@@144 $generated@@392))) ($generated@@152 ($generated@@375 $generated@@144 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@300 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@299 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@318 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@317 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@406) $generated@@410))) (and ($generated@@258 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@258 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@414) $generated@@418))) (and ($generated@@258 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@258 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert  (=> (<= 0 $generated@@278) (forall (($generated@@419 T@U) ($generated@@420 Int) ($generated@@421 Int) ) (!  (=> (and (= (type $generated@@419) $generated@@134) (or ($generated@@280 $generated@@420 $generated@@421) (and (not (= 0 $generated@@278)) (and (<= ($generated@@251 0) $generated@@420) (<= $generated@@420 $generated@@421))))) true)
 :pattern ( ($generated@@132 $generated@@419 $generated@@420 $generated@@421))
))))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@315 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@315 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@351 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@351 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@319 (type $generated@@430))))
(let (($generated@@432 ($generated@@318 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@317 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@316 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@153))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@301 (type $generated@@433))))
(let (($generated@@435 ($generated@@300 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@299 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@298 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@153) (= (type $generated@@437) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@433) ($generated@@286 ($generated@@231 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@374 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@319 (type $generated@@438))))
(let (($generated@@440 ($generated@@318 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@317 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@316 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@153) (= (type $generated@@442) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@438) ($generated@@286 ($generated@@231 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@153) ($generated@@232 $generated@@443 $generated@@46)) (and (= ($generated@@286 ($generated@@375 $generated@@2 $generated@@443)) $generated@@443) ($generated@@140 ($generated@@375 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@153) ($generated@@232 $generated@@444 $generated@@47)) (and (= ($generated@@286 ($generated@@375 $generated@@3 $generated@@444)) $generated@@444) ($generated@@140 ($generated@@375 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@153) ($generated@@232 $generated@@445 $generated@@44)) (and (= ($generated@@286 ($generated@@375 $generated@@4 $generated@@445)) $generated@@445) ($generated@@140 ($generated@@375 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 21))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) ($generated@@232 $generated@@447 $generated@@45)) (and (= ($generated@@286 ($generated@@375 $generated@@446 $generated@@447)) $generated@@447) ($generated@@140 ($generated@@375 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@64) (= ($generated@@232 ($generated@@286 $generated@@448) $generated@@449) ($generated@@140 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@232 ($generated@@286 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@79 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@76 $generated@@451 $generated@@2)) (<= 0 ($generated@@291 $generated@@450))))
 :pattern ( ($generated@@291 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@273 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@272 $generated@@453)) (<= 0 ($generated@@271 $generated@@452))))
 :pattern ( ($generated@@271 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@403 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@403 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@403 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@403 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@411 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@411 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@153) (= (type $generated@@475) $generated@@153)) (= ($generated@@264 ($generated@@231 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@143 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@143 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@143 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@143 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@153) (= (type $generated@@485) $generated@@153)) (= ($generated@@151 ($generated@@231 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@153) (= (type $generated@@487) $generated@@153)) (= ($generated@@152 ($generated@@231 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@231 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@273 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@272 $generated@@153)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@271 $generated@@494))) ($generated@@258 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@75 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@75 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@241 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@241 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@246 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@246 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@158 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@158 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@375 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@140 $generated@@518 ($generated@@403 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@232 ($generated@@81 ($generated@@376 $generated@@518) $generated@@521) $generated@@520) ($generated@@232 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@140 $generated@@518 ($generated@@403 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@140 $generated@@522 ($generated@@411 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@232 ($generated@@81 ($generated@@386 $generated@@522) $generated@@525) $generated@@524) ($generated@@232 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@140 $generated@@522 ($generated@@411 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@153) (= (type $generated@@529) $generated@@153)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@231 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@231 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@153) (= (type $generated@@531) $generated@@153)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@231 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@231 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@232 $generated@@532 ($generated@@403 $generated@@533 $generated@@534))) (and (= ($generated@@286 ($generated@@375 ($generated@@299 $generated@@153 $generated@@153) $generated@@532)) $generated@@532) ($generated@@140 ($generated@@375 ($generated@@299 $generated@@153 $generated@@153) $generated@@532) ($generated@@403 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@232 $generated@@532 ($generated@@403 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@153) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) ($generated@@232 $generated@@535 ($generated@@411 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@375 ($generated@@317 $generated@@153 $generated@@153) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@375 ($generated@@317 $generated@@153 $generated@@153) $generated@@535) ($generated@@411 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@232 $generated@@535 ($generated@@411 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@153)) ($generated@@232 $generated@@540 ($generated@@143 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@375 $generated@@144 $generated@@540)) $generated@@540) ($generated@@140 ($generated@@375 $generated@@144 $generated@@540) ($generated@@143 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@232 $generated@@540 ($generated@@143 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@81 ($generated@@422 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@81 ($generated@@422 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@69)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@143 $generated@@545 $generated@@546)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ($generated@@548 Int) ) (! (= ($generated@@281 $generated@@547 $generated@@548) (* $generated@@547 $generated@@548))
 :pattern ( ($generated@@281 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@144) (= ($generated@@526 ($generated@@286 $generated@@549)) ($generated@@527 $generated@@549)))
 :pattern ( ($generated@@526 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@153) ($generated@@232 $generated@@550 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@375 $generated@@2 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@375 ($generated@@76 $generated@@153 $generated@@4) $generated@@550) ($generated@@75 0))))
 :pattern ( ($generated@@232 $generated@@550 ($generated@@75 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@153) (= (type $generated@@552) $generated@@64)) ($generated@@232 $generated@@551 ($generated@@241 $generated@@552))) (and (= ($generated@@286 ($generated@@375 ($generated@@76 $generated@@153 $generated@@4) $generated@@551)) $generated@@551) ($generated@@140 ($generated@@375 ($generated@@76 $generated@@153 $generated@@4) $generated@@551) ($generated@@241 $generated@@552))))
 :pattern ( ($generated@@232 $generated@@551 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@153) (= (type $generated@@554) $generated@@64)) ($generated@@232 $generated@@553 ($generated@@246 $generated@@554))) (and (= ($generated@@286 ($generated@@375 ($generated@@76 $generated@@153 $generated@@4) $generated@@553)) $generated@@553) ($generated@@140 ($generated@@375 ($generated@@76 $generated@@153 $generated@@4) $generated@@553) ($generated@@246 $generated@@554))))
 :pattern ( ($generated@@232 $generated@@553 ($generated@@246 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@153) (= (type $generated@@556) $generated@@64)) ($generated@@232 $generated@@555 ($generated@@158 $generated@@556))) (and (= ($generated@@286 ($generated@@375 ($generated@@76 $generated@@153 $generated@@2) $generated@@555)) $generated@@555) ($generated@@140 ($generated@@375 ($generated@@76 $generated@@153 $generated@@2) $generated@@555) ($generated@@158 $generated@@556))))
 :pattern ( ($generated@@232 $generated@@555 ($generated@@158 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@153) (= (type $generated@@558) $generated@@64)) ($generated@@232 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@286 ($generated@@375 ($generated@@272 $generated@@153) $generated@@557)) $generated@@557) ($generated@@140 ($generated@@375 ($generated@@272 $generated@@153) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@232 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@559 ($generated@@158 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@559 $generated@@562)))) ($generated@@258 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@158 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@144) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@565) (and ($generated@@142 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@258 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@258 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@144) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@569) (and ($generated@@142 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@258 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@258 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@153) (= (type $generated@@572) $generated@@153)) (= ($generated@@231 ($generated@@253 $generated@@571) ($generated@@253 $generated@@572)) ($generated@@253 ($generated@@231 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@231 ($generated@@253 $generated@@571) ($generated@@253 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@251 $generated@@573))) ($generated@@253 ($generated@@286 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@251 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@286 ($generated@@253 $generated@@574)) ($generated@@253 ($generated@@286 $generated@@574)))
 :pattern ( ($generated@@286 ($generated@@253 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@273 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@272 $generated@@576)) (= ($generated@@271 $generated@@575) 0)) (= $generated@@575 ($generated@@270 $generated@@576))))
 :pattern ( ($generated@@271 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@76 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@291 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@291 $generated@@577) ($generated ($generated@@81 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@2)) ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@3)) ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@4)) ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@446)) ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@153)) ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
)))
(assert  (=> (<= 0 $generated@@278) (forall (($generated@@591 T@U) ($generated@@592 Int) ($generated@@593 Int) ) (!  (=> (and (= (type $generated@@591) $generated@@134) (or ($generated@@280 ($generated@@251 $generated@@592) ($generated@@251 $generated@@593)) (and (not (= 0 $generated@@278)) (and (<= ($generated@@251 0) ($generated@@251 $generated@@592)) (<= ($generated@@251 $generated@@592) ($generated@@251 $generated@@593)))))) (and (=> (not (= ($generated@@251 $generated@@593) ($generated@@251 $generated@@592))) ($generated@@280 ($generated@@251 (+ $generated@@592 1)) ($generated@@251 $generated@@593))) (= ($generated@@132 ($generated@@279 $generated@@591) ($generated@@251 $generated@@592) ($generated@@251 $generated@@593)) (ite (= ($generated@@251 $generated@@593) ($generated@@251 $generated@@592)) 0 (+ ($generated@@281 ($generated@@251 ($generated@@281 ($generated@@251 $generated@@592) ($generated@@251 $generated@@592))) ($generated@@251 $generated@@592)) ($generated@@132 ($generated@@279 $generated@@591) ($generated@@251 (+ $generated@@592 1)) ($generated@@251 $generated@@593)))))))
 :weight 3
 :pattern ( ($generated@@132 ($generated@@279 $generated@@591) ($generated@@251 $generated@@592) ($generated@@251 $generated@@593)))
))))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@272 $generated@@153)) (= (type $generated@@595) $generated@@64)) (= ($generated@@140 $generated@@594 ($generated@@488 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@271 $generated@@594))) ($generated@@232 ($generated@@489 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@489 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@140 $generated@@594 ($generated@@488 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@272 $generated@@153)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@271 $generated@@598))) (< ($generated@@527 ($generated@@375 $generated@@144 ($generated@@489 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@527 ($generated@@375 $generated@@144 ($generated@@489 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@140 $generated@@600 ($generated@@403 $generated@@601 $generated@@602))) (and (and ($generated@@140 ($generated@@297 $generated@@600) ($generated@@241 $generated@@601)) ($generated@@140 ($generated@@340 $generated@@600) ($generated@@241 $generated@@602))) ($generated@@140 ($generated@@374 $generated@@600) ($generated@@241 ($generated@@143 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@140 $generated@@600 ($generated@@403 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@140 $generated@@603 ($generated@@411 $generated@@604 $generated@@605))) (and (and ($generated@@140 ($generated@@315 $generated@@603) ($generated@@246 $generated@@604)) ($generated@@140 ($generated@@351 $generated@@603) ($generated@@246 $generated@@605))) ($generated@@140 ($generated@@385 $generated@@603) ($generated@@246 ($generated@@143 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@140 $generated@@603 ($generated@@411 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@140 $generated@@606 $generated@@46))
 :pattern ( ($generated@@140 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@140 $generated@@607 $generated@@47))
 :pattern ( ($generated@@140 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@140 $generated@@608 $generated@@44))
 :pattern ( ($generated@@140 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@446) ($generated@@140 $generated@@609 $generated@@45))
 :pattern ( ($generated@@140 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@153) ($generated@@140 $generated@@610 $generated@@48))
 :pattern ( ($generated@@140 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@616) $generated@@77)) (= (type $generated@@617) ($generated@@165 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@619  (=> (and (and (not (= $generated@@611 $generated@@612)) (= $generated@@613 (+ $generated@@612 1))) (and ($generated@@74 ($generated@@8 $generated@@613) $generated@@46 $generated@@614) ($generated@@74 ($generated@@8 $generated@@611) $generated@@46 $generated@@614))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= ($generated@@251 0) $generated@@613)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= $generated@@613 $generated@@611)) (=> (and (<= ($generated@@251 0) $generated@@613) (<= $generated@@613 $generated@@611)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 (- $generated@@611 $generated@@612)) (= (- $generated@@611 $generated@@613) (- $generated@@611 $generated@@612)))) (=> (or (<= 0 (- $generated@@611 $generated@@612)) (= (- $generated@@611 $generated@@613) (- $generated@@611 $generated@@612))) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- $generated@@611 $generated@@613) (- $generated@@611 $generated@@612)))))))))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (= $generated@@615 ($generated@@219 $generated@@616 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@620) (=> (= (ControlFlow 0 8) 4) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@617 ($generated@@164 $generated@@616 $generated@@614 $generated@@60 false)) (=> (and (<= ($generated@@251 0) $generated@@612) (<= $generated@@612 $generated@@611)) (and (=> (= (ControlFlow 0 9) 1) $generated@@622) (=> (= (ControlFlow 0 9) 8) $generated@@621))))))
(let (($generated@@624  (=> (and (and ($generated@@257 $generated@@614) ($generated@@618 $generated@@614)) (and (= 0 $generated@@278) (= (ControlFlow 0 10) 9))) $generated@@623)))
$generated@@624)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (Int) Int)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@201 (T@T) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (Int Int) Bool)
(declare-fun $generated@@212 (Int Int) Int)
(declare-fun $generated@@217 (T@U T@U T@U) Bool)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (T@T T@T) T@U)
(declare-fun $generated@@252 (T@T T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@401 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@195 $generated@@196) $generated@@196)
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= (type ($generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@197 $generated@@200) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
)))
(assert  (and (and (forall (($generated@@205 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@205)) 14)) (forall (($generated@@206 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@203 $generated@@206))
))) (forall (($generated@@207 T@T) ) (! (= (type ($generated@@201 $generated@@207)) ($generated@@203 $generated@@207))
 :pattern ( ($generated@@201 $generated@@207))
))))
(assert (forall (($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@208)) 0)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@213)) $generated@@133)
 :pattern ( ($generated@@210 $generated@@213))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 Int) ) (!  (=> (and (= (type $generated@@214) $generated@@133) (or ($generated@@211 $generated@@215 $generated@@216) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@215) (<= $generated@@215 $generated@@216))))) (and (=> (not (= $generated@@216 $generated@@215)) ($generated@@211 (+ $generated@@215 1) $generated@@216)) (= ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216) (ite (= $generated@@216 $generated@@215) 0 (+ ($generated@@212 ($generated@@212 $generated@@215 $generated@@215) $generated@@215) ($generated@@131 $generated@@214 (+ $generated@@215 1) $generated@@216))))))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216))
))))
(assert  (and (= ($generated@@1 $generated@@219) 15) (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@218 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@61) (= (type $generated@@223) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@217 ($generated@@218 $generated@@221) $generated@@222 $generated@@223) ($generated@@69 $generated@@221 $generated@@222 $generated@@223)))
 :pattern ( ($generated@@217 ($generated@@218 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@225) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@226) $generated@@219)) (= (type $generated@@227) $generated@@61)) ($generated@@127 $generated@@224 $generated@@225)) ($generated@@217 $generated@@226 $generated@@227 $generated@@224)) ($generated@@217 $generated@@226 $generated@@227 $generated@@225))
 :pattern ( ($generated@@127 $generated@@224 $generated@@225) ($generated@@217 $generated@@226 $generated@@227 $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@229) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@231) $generated@@61)) ($generated@@127 $generated@@228 $generated@@229)) ($generated@@69 $generated@@230 $generated@@231 $generated@@228)) ($generated@@69 $generated@@230 $generated@@231 $generated@@229))
 :pattern ( ($generated@@127 $generated@@228 $generated@@229) ($generated@@69 $generated@@230 $generated@@231 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 16)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert  (and (and (and (and (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@255 $generated@@256)) 17)) (forall (($generated@@257 T@T) ($generated@@258 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@257 $generated@@258)) $generated@@257)
 :pattern ( ($generated@@252 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@252 $generated@@259 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@252 $generated@@259 $generated@@260))
))) (forall (($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@253 (type $generated@@261))))
(= (type ($generated@@250 $generated@@261)) ($generated@@71 $generated@@262 $generated@@4)))
 :pattern ( ($generated@@250 $generated@@261))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= (type ($generated@@251 $generated@@263 $generated@@264)) ($generated@@252 $generated@@263 $generated@@264))
 :pattern ( ($generated@@251 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@T) ) (! (let (($generated@@267 (type $generated@@265)))
 (not ($generated@@0 ($generated@@76 ($generated@@250 ($generated@@251 $generated@@267 $generated@@266)) $generated@@265))))
 :pattern ( (let (($generated@@267 (type $generated@@265)))
($generated@@76 ($generated@@250 ($generated@@251 $generated@@267 $generated@@266)) $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@236 (type $generated@@268))))
(let (($generated@@270 ($generated@@235 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@234 $generated@@270 $generated@@269)) (or (= $generated@@268 ($generated@@233 $generated@@270 $generated@@269)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@268) $generated@@271)))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@232 $generated@@268))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@254 (type $generated@@272))))
(let (($generated@@274 ($generated@@253 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@252 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@251 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@250 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@250 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (= (type $generated@@276) $generated@@133) (= ($generated@@131 ($generated@@210 $generated@@276) $generated@@277 $generated@@278) ($generated@@131 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@61)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@281) ($generated@@71 $generated@@219 $generated@@4)) (= (type $generated@@282) $generated@@61)) (= (type $generated@@283) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@281 ($generated@@279 $generated@@282) $generated@@283) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@219) ($generated@@0 ($generated@@76 $generated@@281 $generated@@284))) ($generated@@217 $generated@@284 $generated@@282 $generated@@283))
 :pattern ( ($generated@@76 $generated@@281 $generated@@284))
))))
 :pattern ( ($generated@@69 $generated@@281 ($generated@@279 $generated@@282) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@287) ($generated@@71 $generated@@219 $generated@@4)) (= (type $generated@@288) $generated@@61)) (= (type $generated@@289) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@287 ($generated@@285 $generated@@288) $generated@@289) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@219) ($generated@@0 ($generated@@76 $generated@@287 $generated@@290))) ($generated@@217 $generated@@290 $generated@@288 $generated@@289))
 :pattern ( ($generated@@76 $generated@@287 $generated@@290))
))))
 :pattern ( ($generated@@69 $generated@@287 ($generated@@285 $generated@@288) $generated@@289))
)))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@236 (type $generated@@295))))
(let (($generated@@297 ($generated@@235 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@234 $generated@@219 $generated@@219)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@219) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@298) $generated@@302))) (and ($generated@@217 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@217 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@254 (type $generated@@307))))
(let (($generated@@309 ($generated@@253 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@252 $generated@@219 $generated@@219)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@219) ($generated@@0 ($generated@@76 ($generated@@250 $generated@@310) $generated@@314))) (and ($generated@@217 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@217 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@250 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@316) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@317) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@315 $generated@@317))) (and ($generated@@127 $generated@@315 $generated@@316) ($generated@@127 $generated@@316 $generated@@317))) ($generated@@127 $generated@@315 $generated@@317))
 :pattern ( ($generated@@127 $generated@@315 $generated@@316) ($generated@@127 $generated@@316 $generated@@317))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@318 T@U) ($generated@@319 Int) ($generated@@320 Int) ) (!  (=> (and (= (type $generated@@318) $generated@@133) (or ($generated@@211 $generated@@319 $generated@@320) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@319) (<= $generated@@319 $generated@@320))))) true)
 :pattern ( ($generated@@131 $generated@@318 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@71 $generated@@322 $generated@@4))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@254 (type $generated@@323))))
(let (($generated@@325 ($generated@@253 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@252 $generated@@325 $generated@@324)) (= (= $generated@@323 ($generated@@251 $generated@@325 $generated@@324)) (= ($generated@@250 $generated@@323) ($generated@@321 $generated@@325))))))
 :pattern ( ($generated@@250 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@204 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@203 $generated@@327)) (<= 0 ($generated@@202 $generated@@326))))
 :pattern ( ($generated@@202 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@328 ($generated@@291 $generated@@330 $generated@@331)) $generated@@330))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@291 $generated@@334 $generated@@335)) $generated@@335))
 :pattern ( ($generated@@291 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@61) (= (type $generated@@337) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@336 $generated@@337)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@338 ($generated@@303 $generated@@340 $generated@@341)) $generated@@340))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@61) (= (type $generated@@345) $generated@@61)) (= ($generated@@342 ($generated@@303 $generated@@344 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@303 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@61) (= (type $generated@@347) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@346 $generated@@347)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@346 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@204 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@203 $generated@@219)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@202 $generated@@354))) ($generated@@217 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@279 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@279 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@279 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@279 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@285 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@285 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@285 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@285 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@218 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@218 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (not ($generated@@0 ($generated@@76 ($generated@@321 $generated@@384) $generated@@383))))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@76 ($generated@@321 $generated@@384) $generated@@383)))
)))
(assert (forall (($generated@@385 Int) ($generated@@386 Int) ) (! (= ($generated@@212 $generated@@385 $generated@@386) (* $generated@@385 $generated@@386))
 :pattern ( ($generated@@212 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@71 $generated@@219 $generated@@2)) (= (type $generated@@388) $generated@@61)) (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@387 ($generated@@368 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@219) (< 0 ($generated ($generated@@76 $generated@@387 $generated@@390)))) ($generated@@217 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@76 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@69 $generated@@387 ($generated@@368 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@218 ($generated@@8 ($generated@@195 $generated@@391))) ($generated@@197 ($generated@@218 ($generated@@8 $generated@@391))))
 :pattern ( ($generated@@218 ($generated@@8 ($generated@@195 $generated@@391))))
)))
(assert (forall (($generated@@392 T@U) ) (! (= ($generated@@218 ($generated@@197 $generated@@392)) ($generated@@197 ($generated@@218 $generated@@392)))
 :pattern ( ($generated@@218 ($generated@@197 $generated@@392)))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@204 (type $generated@@393))))
 (=> (and (= (type $generated@@393) ($generated@@203 $generated@@394)) (= ($generated@@202 $generated@@393) 0)) (= $generated@@393 ($generated@@201 $generated@@394))))
 :pattern ( ($generated@@202 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@2)) ($generated@@69 $generated@@396 $generated@@46 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@46 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@3)) ($generated@@69 $generated@@398 $generated@@47 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@47 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@400) $generated@@4)) ($generated@@69 $generated@@400 $generated@@44 $generated@@399))
 :pattern ( ($generated@@69 $generated@@400 $generated@@44 $generated@@399))
)))
(assert (= ($generated@@1 $generated@@401) 18))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@401)) ($generated@@69 $generated@@403 $generated@@45 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@45 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@405) $generated@@219)) ($generated@@69 $generated@@405 $generated@@48 $generated@@404))
 :pattern ( ($generated@@69 $generated@@405 $generated@@48 $generated@@404))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@406 T@U) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (and (= (type $generated@@406) $generated@@133) (or ($generated@@211 ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) ($generated@@195 $generated@@407)) (<= ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)))))) (and (=> (not (= ($generated@@195 $generated@@408) ($generated@@195 $generated@@407))) ($generated@@211 ($generated@@195 (+ $generated@@407 1)) ($generated@@195 $generated@@408))) (= ($generated@@131 ($generated@@210 $generated@@406) ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)) (ite (= ($generated@@195 $generated@@408) ($generated@@195 $generated@@407)) 0 (+ ($generated@@212 ($generated@@195 ($generated@@212 ($generated@@195 $generated@@407) ($generated@@195 $generated@@407))) ($generated@@195 $generated@@407)) ($generated@@131 ($generated@@210 $generated@@406) ($generated@@195 (+ $generated@@407 1)) ($generated@@195 $generated@@408)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@210 $generated@@406) ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Int)
(declare-fun $generated@@414 (T@U) Bool)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@409) ($generated@@141 $generated@@72 $generated@@4)) (= (type $generated@@410) $generated@@72)) (= (type $generated@@411) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@415) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@417  (=> (= $generated@@409 ($generated@@140 $generated@@410 $generated@@411 $generated@@60 false)) (=> (and (and (and (<= ($generated@@195 0) $generated@@412) (<= $generated@@412 $generated@@413)) (and ($generated@@414 $generated@@415) ($generated@@416 $generated@@415))) (and (and (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@72) (=> (and (not (= $generated@@418 $generated@@410)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@411 $generated@@418) $generated@@60))) (= ($generated@@76 $generated@@415 $generated@@418) ($generated@@76 $generated@@411 $generated@@418))))
 :pattern ( ($generated@@76 $generated@@415 $generated@@418))
)) ($generated@@127 $generated@@411 $generated@@415)) (and ($generated@@69 ($generated@@8 $generated@@412) $generated@@46 $generated@@415) ($generated@@69 ($generated@@8 $generated@@413) $generated@@46 $generated@@415)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@195 0) $generated@@412)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@412 $generated@@413)))))))
(let (($generated@@419  (=> (and (and ($generated@@414 $generated@@411) ($generated@@416 $generated@@411)) (and (= 4 $generated@@209) (= (ControlFlow 0 4) 2))) $generated@@417)))
$generated@@419)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U Int Int) Int)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@116 (T@T T@T) T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (Int) Int)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (Int Int) Bool)
(declare-fun $generated@@179 (Int Int) Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@T T@U) T@U)
(declare-fun $generated@@202 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (= ($generated@@1 $generated@@108) 10) (forall (($generated@@110 T@U) ) (! (= (type ($generated@@107 $generated@@110)) $generated@@108)
 :pattern ( ($generated@@107 $generated@@110))
))) (= (type $generated@@109) $generated@@108)))
(assert (forall (($generated@@111 T@U) ($generated@@112 Int) ($generated@@113 Int) ) (!  (=> (= (type $generated@@111) $generated@@108) (= ($generated@@106 $generated@@111 $generated@@112 $generated@@113) ($generated@@106 $generated@@109 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@111) $generated@@112 $generated@@113))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@1 ($generated@@116 $generated@@120 $generated@@121)) 11)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@117 ($generated@@116 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@116 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@118 ($generated@@116 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@116 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@118 (type $generated@@126))))
(= (type ($generated@@114 $generated@@126 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@114 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 (type $generated@@133)))
(let (($generated@@135 (type $generated@@131)))
(= (type ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@133)) ($generated@@116 $generated@@135 $generated@@134))))
 :pattern ( ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@118 (type $generated@@136))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@114 ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@137 $generated@@138) $generated@@139)))
 :weight 0
))) (and (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@114 ($generated@@119 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@114 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@114 ($generated@@119 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@114 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@114 ($generated@@119 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@114 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ) (! (= (type ($generated@@115 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@116 $generated@@46 $generated@@4))
 :pattern ( ($generated@@115 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@55 (type $generated@@168))))
 (=> (and (and (and (and (= (type $generated@@163) $generated@@46) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@165) ($generated@@54 $generated@@4))) (= (type $generated@@167) $generated@@46)) (= (type $generated@@168) ($generated@@54 $generated@@169))) (= ($generated@@0 ($generated@@114 ($generated@@115 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (not (= $generated@@167 $generated@@163)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@164 $generated@@167) $generated@@165))) $generated@@166))))
 :pattern ( ($generated@@114 ($generated@@115 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@170 $generated@@171) $generated@@171)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (let (($generated@@174 (type $generated@@173)))
(= (type ($generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@172 $generated@@175) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@108)
 :pattern ( ($generated@@177 $generated@@180))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@181 T@U) ($generated@@182 Int) ($generated@@183 Int) ) (!  (=> (and (= (type $generated@@181) $generated@@108) (or ($generated@@178 $generated@@182 $generated@@183) (and (not (= 0 $generated@@176)) (and (<= ($generated@@170 0) $generated@@182) (<= $generated@@182 $generated@@183))))) (and (=> (not (= $generated@@183 $generated@@182)) ($generated@@178 (+ $generated@@182 1) $generated@@183)) (= ($generated@@106 ($generated@@177 $generated@@181) $generated@@182 $generated@@183) (ite (= $generated@@183 $generated@@182) 0 (+ ($generated@@179 ($generated@@179 $generated@@182 $generated@@182) $generated@@182) ($generated@@106 $generated@@181 (+ $generated@@182 1) $generated@@183))))))
 :pattern ( ($generated@@106 ($generated@@177 $generated@@181) $generated@@182 $generated@@183))
))))
(assert ($generated@@184 $generated@@50))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@187) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@185 $generated@@186 $generated@@187)) (and ($generated@@44 $generated@@186 $generated@@187) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@55 (type $generated@@189))))
 (=> (and (and (= (type $generated@@188) $generated@@46) (= (type $generated@@189) ($generated@@54 $generated@@190))) (not ($generated@@184 $generated@@189))) (= ($generated@@48 ($generated@@49 $generated@@186 $generated@@188) $generated@@189) ($generated@@48 ($generated@@49 $generated@@187 $generated@@188) $generated@@189))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@187 $generated@@188) $generated@@189))
))))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 Int) ($generated@@193 Int) ) (!  (=> (= (type $generated@@191) $generated@@108) (= ($generated@@106 ($generated@@177 $generated@@191) $generated@@192 $generated@@193) ($generated@@106 $generated@@191 $generated@@192 $generated@@193)))
 :pattern ( ($generated@@106 ($generated@@177 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@195) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@196) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@194 $generated@@196))) (and ($generated@@44 $generated@@194 $generated@@195) ($generated@@44 $generated@@195 $generated@@196))) ($generated@@44 $generated@@194 $generated@@196))
 :pattern ( ($generated@@44 $generated@@194 $generated@@195) ($generated@@44 $generated@@195 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@108) (or ($generated@@178 $generated@@198 $generated@@199) (and (not (= 0 $generated@@176)) (and (<= ($generated@@170 0) $generated@@198) (<= $generated@@198 $generated@@199))))) true)
 :pattern ( ($generated@@106 $generated@@197 $generated@@198 $generated@@199))
))))
(assert  (and (and (= ($generated@@1 $generated@@202) 12) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@200 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@U) ) (! (= (type ($generated@@201 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= ($generated@@201 $generated@@207 ($generated@@200 $generated@@206)) $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
)))
(assert (forall (($generated@@208 Int) ($generated@@209 Int) ) (! (= ($generated@@179 $generated@@208 $generated@@209) (* $generated@@208 $generated@@209))
 :pattern ( ($generated@@179 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@200 ($generated@@8 ($generated@@170 $generated@@210))) ($generated@@172 ($generated@@200 ($generated@@8 $generated@@210))))
 :pattern ( ($generated@@200 ($generated@@8 ($generated@@170 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ) (! (= ($generated@@200 ($generated@@172 $generated@@211)) ($generated@@172 ($generated@@200 $generated@@211)))
 :pattern ( ($generated@@200 ($generated@@172 $generated@@211)))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) $generated@@108) (or ($generated@@178 ($generated@@170 $generated@@213) ($generated@@170 $generated@@214)) (and (not (= 0 $generated@@176)) (and (<= ($generated@@170 0) ($generated@@170 $generated@@213)) (<= ($generated@@170 $generated@@213) ($generated@@170 $generated@@214)))))) (and (=> (not (= ($generated@@170 $generated@@214) ($generated@@170 $generated@@213))) ($generated@@178 ($generated@@170 (+ $generated@@213 1)) ($generated@@170 $generated@@214))) (= ($generated@@106 ($generated@@177 $generated@@212) ($generated@@170 $generated@@213) ($generated@@170 $generated@@214)) (ite (= ($generated@@170 $generated@@214) ($generated@@170 $generated@@213)) 0 (+ ($generated@@179 ($generated@@170 ($generated@@179 ($generated@@170 $generated@@213) ($generated@@170 $generated@@213))) ($generated@@170 $generated@@213)) ($generated@@106 ($generated@@177 $generated@@212) ($generated@@170 (+ $generated@@213 1)) ($generated@@170 $generated@@214)))))))
 :weight 3
 :pattern ( ($generated@@106 ($generated@@177 $generated@@212) ($generated@@170 $generated@@213) ($generated@@170 $generated@@214)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@215) ($generated@@116 $generated@@46 $generated@@4)) (= (type $generated@@216) $generated@@46)) (= (type $generated@@217) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@220) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@224) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@227) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@228  (=> (= $generated@@215 ($generated@@115 $generated@@216 $generated@@217 $generated@@50 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= ($generated@@170 0) $generated@@218)) (=> (<= ($generated@@170 0) $generated@@218) (=> (and ($generated@@219 $generated@@220) ($generated@@221 $generated@@220)) (=> (and (and ($generated@@178 ($generated@@170 0) $generated@@218) (= $generated@@222 ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) ($generated@@170 0) $generated@@218))) (and (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@46) (=> (and (not (= $generated@@229 $generated@@216)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@217 $generated@@229) $generated@@50))) (= ($generated@@49 $generated@@220 $generated@@229) ($generated@@49 $generated@@217 $generated@@229))))
 :pattern ( ($generated@@49 $generated@@220 $generated@@229))
)) ($generated@@44 $generated@@217 $generated@@220))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@170 0) $generated@@223)) (=> (<= ($generated@@170 0) $generated@@223) (=> (and (and (and ($generated@@219 $generated@@224) ($generated@@221 $generated@@224)) ($generated@@178 ($generated@@170 0) $generated@@223)) (and (and (= $generated@@225 ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) ($generated@@170 0) $generated@@223)) (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@46) (=> (and (not (= $generated@@230 $generated@@216)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@220 $generated@@230) $generated@@50))) (= ($generated@@49 $generated@@224 $generated@@230) ($generated@@49 $generated@@220 $generated@@230))))
 :pattern ( ($generated@@49 $generated@@224 $generated@@230))
))) (and ($generated@@44 $generated@@220 $generated@@224) (= $generated@@226 (- $generated@@222 $generated@@225))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@170 0) $generated@@223)) (=> (<= ($generated@@170 0) $generated@@223) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@223 $generated@@218)) (=> (<= $generated@@223 $generated@@218) (=> (and (and (and ($generated@@219 $generated@@227) ($generated@@221 $generated@@227)) (and ($generated@@178 $generated@@223 $generated@@218) (and ($generated@@178 ($generated@@170 0) $generated@@218) ($generated@@178 ($generated@@170 0) $generated@@223)))) (and (and (= ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) $generated@@223 $generated@@218) (- ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) ($generated@@170 0) $generated@@218) ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) ($generated@@170 0) $generated@@223))) (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@46) (=> (and (not (= $generated@@231 $generated@@216)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@224 $generated@@231) $generated@@50))) (= ($generated@@49 $generated@@227 $generated@@231) ($generated@@49 $generated@@224 $generated@@231))))
 :pattern ( ($generated@@49 $generated@@227 $generated@@231))
))) (and ($generated@@185 $generated@@224 $generated@@227) (= (ControlFlow 0 2) (- 0 1))))) (= $generated@@226 ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) $generated@@223 $generated@@218)))))))))))))))))
(let (($generated@@232  (=> (and ($generated@@219 $generated@@217) ($generated@@221 $generated@@217)) (=> (and (and (= 4 $generated@@176) (<= ($generated@@170 0) $generated@@223)) (and (<= $generated@@223 $generated@@218) (= (ControlFlow 0 7) 2))) $generated@@228))))
$generated@@232)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (Int) Int)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@201 (T@T) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (Int Int) Bool)
(declare-fun $generated@@212 (Int Int) Int)
(declare-fun $generated@@217 (T@U T@U T@U) Bool)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (T@T T@T) T@U)
(declare-fun $generated@@252 (T@T T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@401 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@195 $generated@@196) $generated@@196)
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= (type ($generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@197 $generated@@200) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
)))
(assert  (and (and (forall (($generated@@205 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@205)) 14)) (forall (($generated@@206 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@203 $generated@@206))
))) (forall (($generated@@207 T@T) ) (! (= (type ($generated@@201 $generated@@207)) ($generated@@203 $generated@@207))
 :pattern ( ($generated@@201 $generated@@207))
))))
(assert (forall (($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@208)) 0)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@213)) $generated@@133)
 :pattern ( ($generated@@210 $generated@@213))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 Int) ) (!  (=> (and (= (type $generated@@214) $generated@@133) (or ($generated@@211 $generated@@215 $generated@@216) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@215) (<= $generated@@215 $generated@@216))))) (and (=> (not (= $generated@@216 $generated@@215)) ($generated@@211 (+ $generated@@215 1) $generated@@216)) (= ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216) (ite (= $generated@@216 $generated@@215) 0 (+ ($generated@@212 ($generated@@212 $generated@@215 $generated@@215) $generated@@215) ($generated@@131 $generated@@214 (+ $generated@@215 1) $generated@@216))))))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216))
))))
(assert  (and (= ($generated@@1 $generated@@219) 15) (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@218 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@61) (= (type $generated@@223) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@217 ($generated@@218 $generated@@221) $generated@@222 $generated@@223) ($generated@@69 $generated@@221 $generated@@222 $generated@@223)))
 :pattern ( ($generated@@217 ($generated@@218 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@225) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@226) $generated@@219)) (= (type $generated@@227) $generated@@61)) ($generated@@127 $generated@@224 $generated@@225)) ($generated@@217 $generated@@226 $generated@@227 $generated@@224)) ($generated@@217 $generated@@226 $generated@@227 $generated@@225))
 :pattern ( ($generated@@127 $generated@@224 $generated@@225) ($generated@@217 $generated@@226 $generated@@227 $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@229) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@231) $generated@@61)) ($generated@@127 $generated@@228 $generated@@229)) ($generated@@69 $generated@@230 $generated@@231 $generated@@228)) ($generated@@69 $generated@@230 $generated@@231 $generated@@229))
 :pattern ( ($generated@@127 $generated@@228 $generated@@229) ($generated@@69 $generated@@230 $generated@@231 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 16)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert  (and (and (and (and (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@255 $generated@@256)) 17)) (forall (($generated@@257 T@T) ($generated@@258 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@257 $generated@@258)) $generated@@257)
 :pattern ( ($generated@@252 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@252 $generated@@259 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@252 $generated@@259 $generated@@260))
))) (forall (($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@253 (type $generated@@261))))
(= (type ($generated@@250 $generated@@261)) ($generated@@71 $generated@@262 $generated@@4)))
 :pattern ( ($generated@@250 $generated@@261))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= (type ($generated@@251 $generated@@263 $generated@@264)) ($generated@@252 $generated@@263 $generated@@264))
 :pattern ( ($generated@@251 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@T) ) (! (let (($generated@@267 (type $generated@@265)))
 (not ($generated@@0 ($generated@@76 ($generated@@250 ($generated@@251 $generated@@267 $generated@@266)) $generated@@265))))
 :pattern ( (let (($generated@@267 (type $generated@@265)))
($generated@@76 ($generated@@250 ($generated@@251 $generated@@267 $generated@@266)) $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@236 (type $generated@@268))))
(let (($generated@@270 ($generated@@235 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@234 $generated@@270 $generated@@269)) (or (= $generated@@268 ($generated@@233 $generated@@270 $generated@@269)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@268) $generated@@271)))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@232 $generated@@268))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@254 (type $generated@@272))))
(let (($generated@@274 ($generated@@253 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@252 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@251 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@250 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@250 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (= (type $generated@@276) $generated@@133) (= ($generated@@131 ($generated@@210 $generated@@276) $generated@@277 $generated@@278) ($generated@@131 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@61)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@281) ($generated@@71 $generated@@219 $generated@@4)) (= (type $generated@@282) $generated@@61)) (= (type $generated@@283) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@281 ($generated@@279 $generated@@282) $generated@@283) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@219) ($generated@@0 ($generated@@76 $generated@@281 $generated@@284))) ($generated@@217 $generated@@284 $generated@@282 $generated@@283))
 :pattern ( ($generated@@76 $generated@@281 $generated@@284))
))))
 :pattern ( ($generated@@69 $generated@@281 ($generated@@279 $generated@@282) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@287) ($generated@@71 $generated@@219 $generated@@4)) (= (type $generated@@288) $generated@@61)) (= (type $generated@@289) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@287 ($generated@@285 $generated@@288) $generated@@289) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@219) ($generated@@0 ($generated@@76 $generated@@287 $generated@@290))) ($generated@@217 $generated@@290 $generated@@288 $generated@@289))
 :pattern ( ($generated@@76 $generated@@287 $generated@@290))
))))
 :pattern ( ($generated@@69 $generated@@287 ($generated@@285 $generated@@288) $generated@@289))
)))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@236 (type $generated@@295))))
(let (($generated@@297 ($generated@@235 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@234 $generated@@219 $generated@@219)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@219) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@298) $generated@@302))) (and ($generated@@217 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@217 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@254 (type $generated@@307))))
(let (($generated@@309 ($generated@@253 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@252 $generated@@219 $generated@@219)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@219) ($generated@@0 ($generated@@76 ($generated@@250 $generated@@310) $generated@@314))) (and ($generated@@217 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@217 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@250 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@316) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@317) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@315 $generated@@317))) (and ($generated@@127 $generated@@315 $generated@@316) ($generated@@127 $generated@@316 $generated@@317))) ($generated@@127 $generated@@315 $generated@@317))
 :pattern ( ($generated@@127 $generated@@315 $generated@@316) ($generated@@127 $generated@@316 $generated@@317))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@318 T@U) ($generated@@319 Int) ($generated@@320 Int) ) (!  (=> (and (= (type $generated@@318) $generated@@133) (or ($generated@@211 $generated@@319 $generated@@320) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@319) (<= $generated@@319 $generated@@320))))) true)
 :pattern ( ($generated@@131 $generated@@318 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@71 $generated@@322 $generated@@4))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@254 (type $generated@@323))))
(let (($generated@@325 ($generated@@253 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@252 $generated@@325 $generated@@324)) (= (= $generated@@323 ($generated@@251 $generated@@325 $generated@@324)) (= ($generated@@250 $generated@@323) ($generated@@321 $generated@@325))))))
 :pattern ( ($generated@@250 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@204 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@203 $generated@@327)) (<= 0 ($generated@@202 $generated@@326))))
 :pattern ( ($generated@@202 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@328 ($generated@@291 $generated@@330 $generated@@331)) $generated@@330))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@291 $generated@@334 $generated@@335)) $generated@@335))
 :pattern ( ($generated@@291 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@61) (= (type $generated@@337) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@336 $generated@@337)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@338 ($generated@@303 $generated@@340 $generated@@341)) $generated@@340))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@61) (= (type $generated@@345) $generated@@61)) (= ($generated@@342 ($generated@@303 $generated@@344 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@303 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@61) (= (type $generated@@347) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@346 $generated@@347)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@346 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@204 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@203 $generated@@219)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@202 $generated@@354))) ($generated@@217 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@279 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@279 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@279 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@279 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@285 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@285 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@285 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@285 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@218 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@218 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (not ($generated@@0 ($generated@@76 ($generated@@321 $generated@@384) $generated@@383))))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@76 ($generated@@321 $generated@@384) $generated@@383)))
)))
(assert (forall (($generated@@385 Int) ($generated@@386 Int) ) (! (= ($generated@@212 $generated@@385 $generated@@386) (* $generated@@385 $generated@@386))
 :pattern ( ($generated@@212 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@71 $generated@@219 $generated@@2)) (= (type $generated@@388) $generated@@61)) (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@387 ($generated@@368 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@219) (< 0 ($generated ($generated@@76 $generated@@387 $generated@@390)))) ($generated@@217 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@76 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@69 $generated@@387 ($generated@@368 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@218 ($generated@@8 ($generated@@195 $generated@@391))) ($generated@@197 ($generated@@218 ($generated@@8 $generated@@391))))
 :pattern ( ($generated@@218 ($generated@@8 ($generated@@195 $generated@@391))))
)))
(assert (forall (($generated@@392 T@U) ) (! (= ($generated@@218 ($generated@@197 $generated@@392)) ($generated@@197 ($generated@@218 $generated@@392)))
 :pattern ( ($generated@@218 ($generated@@197 $generated@@392)))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@204 (type $generated@@393))))
 (=> (and (= (type $generated@@393) ($generated@@203 $generated@@394)) (= ($generated@@202 $generated@@393) 0)) (= $generated@@393 ($generated@@201 $generated@@394))))
 :pattern ( ($generated@@202 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@2)) ($generated@@69 $generated@@396 $generated@@46 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@46 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@3)) ($generated@@69 $generated@@398 $generated@@47 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@47 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@400) $generated@@4)) ($generated@@69 $generated@@400 $generated@@44 $generated@@399))
 :pattern ( ($generated@@69 $generated@@400 $generated@@44 $generated@@399))
)))
(assert (= ($generated@@1 $generated@@401) 18))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@401)) ($generated@@69 $generated@@403 $generated@@45 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@45 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@405) $generated@@219)) ($generated@@69 $generated@@405 $generated@@48 $generated@@404))
 :pattern ( ($generated@@69 $generated@@405 $generated@@48 $generated@@404))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@406 T@U) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (and (= (type $generated@@406) $generated@@133) (or ($generated@@211 ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) ($generated@@195 $generated@@407)) (<= ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)))))) (and (=> (not (= ($generated@@195 $generated@@408) ($generated@@195 $generated@@407))) ($generated@@211 ($generated@@195 (+ $generated@@407 1)) ($generated@@195 $generated@@408))) (= ($generated@@131 ($generated@@210 $generated@@406) ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)) (ite (= ($generated@@195 $generated@@408) ($generated@@195 $generated@@407)) 0 (+ ($generated@@212 ($generated@@195 ($generated@@212 ($generated@@195 $generated@@407) ($generated@@195 $generated@@407))) ($generated@@195 $generated@@407)) ($generated@@131 ($generated@@210 $generated@@406) ($generated@@195 (+ $generated@@407 1)) ($generated@@195 $generated@@408)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@210 $generated@@406) ($generated@@195 $generated@@407) ($generated@@195 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 (T@U) Bool)
(declare-fun $generated@@414 () T@U)
(declare-fun $generated@@415 (T@U) Bool)
(declare-fun $generated@@416 () Int)
(assert  (and (and (and (= (type $generated@@409) ($generated@@141 $generated@@72 $generated@@4)) (= (type $generated@@410) $generated@@72)) (= (type $generated@@411) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@414) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@417  (=> (and (= $generated@@409 ($generated@@140 $generated@@410 $generated@@411 $generated@@60 false)) (<= ($generated@@195 0) $generated@@412)) (=> (and (and (and ($generated@@413 $generated@@414) ($generated@@415 $generated@@414)) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@72) (=> (and (not (= $generated@@418 $generated@@410)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@411 $generated@@418) $generated@@60))) (= ($generated@@76 $generated@@414 $generated@@418) ($generated@@76 $generated@@411 $generated@@418))))
 :pattern ( ($generated@@76 $generated@@414 $generated@@418))
))) (and (and ($generated@@127 $generated@@411 $generated@@414) (= $generated@@416 ($generated@@195 0))) (and ($generated@@69 ($generated@@8 $generated@@416) $generated@@46 $generated@@414) ($generated@@69 ($generated@@8 $generated@@412) $generated@@46 $generated@@414)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@195 0) $generated@@416)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@416 $generated@@412)))))))
(let (($generated@@419  (=> (and (and ($generated@@413 $generated@@411) ($generated@@415 $generated@@411)) (and (= 3 $generated@@209) (= (ControlFlow 0 4) 2))) $generated@@417)))
$generated@@419)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U Int Int) Int)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@116 (T@T T@T) T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (Int) Int)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (Int Int) Bool)
(declare-fun $generated@@179 (Int Int) Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U Int) Int)
(declare-fun $generated@@186 (Int) Bool)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@U) T@U)
(declare-fun $generated@@210 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (= ($generated@@1 $generated@@108) 10) (forall (($generated@@110 T@U) ) (! (= (type ($generated@@107 $generated@@110)) $generated@@108)
 :pattern ( ($generated@@107 $generated@@110))
))) (= (type $generated@@109) $generated@@108)))
(assert (forall (($generated@@111 T@U) ($generated@@112 Int) ($generated@@113 Int) ) (!  (=> (= (type $generated@@111) $generated@@108) (= ($generated@@106 $generated@@111 $generated@@112 $generated@@113) ($generated@@106 $generated@@109 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@111) $generated@@112 $generated@@113))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@1 ($generated@@116 $generated@@120 $generated@@121)) 11)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@117 ($generated@@116 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@116 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@118 ($generated@@116 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@116 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@118 (type $generated@@126))))
(= (type ($generated@@114 $generated@@126 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@114 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 (type $generated@@133)))
(let (($generated@@135 (type $generated@@131)))
(= (type ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@133)) ($generated@@116 $generated@@135 $generated@@134))))
 :pattern ( ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@118 (type $generated@@136))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@114 ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@137 $generated@@138) $generated@@139)))
 :weight 0
))) (and (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@114 ($generated@@119 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@114 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@114 ($generated@@119 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@114 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@114 ($generated@@119 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@114 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ) (! (= (type ($generated@@115 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@116 $generated@@46 $generated@@4))
 :pattern ( ($generated@@115 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@55 (type $generated@@168))))
 (=> (and (and (and (and (= (type $generated@@163) $generated@@46) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@165) ($generated@@54 $generated@@4))) (= (type $generated@@167) $generated@@46)) (= (type $generated@@168) ($generated@@54 $generated@@169))) (= ($generated@@0 ($generated@@114 ($generated@@115 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (not (= $generated@@167 $generated@@163)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@164 $generated@@167) $generated@@165))) $generated@@166))))
 :pattern ( ($generated@@114 ($generated@@115 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@170 $generated@@171) $generated@@171)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (let (($generated@@174 (type $generated@@173)))
(= (type ($generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@172 $generated@@175) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@108)
 :pattern ( ($generated@@177 $generated@@180))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@181 T@U) ($generated@@182 Int) ($generated@@183 Int) ) (!  (=> (and (= (type $generated@@181) $generated@@108) (or ($generated@@178 $generated@@182 $generated@@183) (and (not (= 0 $generated@@176)) (and (<= ($generated@@170 0) $generated@@182) (<= $generated@@182 $generated@@183))))) (and (=> (not (= $generated@@183 $generated@@182)) ($generated@@178 (+ $generated@@182 1) $generated@@183)) (= ($generated@@106 ($generated@@177 $generated@@181) $generated@@182 $generated@@183) (ite (= $generated@@183 $generated@@182) 0 (+ ($generated@@179 ($generated@@179 $generated@@182 $generated@@182) $generated@@182) ($generated@@106 $generated@@181 (+ $generated@@182 1) $generated@@183))))))
 :pattern ( ($generated@@106 ($generated@@177 $generated@@181) $generated@@182 $generated@@183))
))))
(assert ($generated@@184 $generated@@50))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@187 T@U) ($generated@@188 Int) ) (!  (=> (and (= (type $generated@@187) $generated@@108) (or ($generated@@186 ($generated@@170 $generated@@188)) (and (not (= 0 $generated@@176)) (<= ($generated@@170 0) ($generated@@170 $generated@@188))))) (and (=> (not (= ($generated@@170 $generated@@188) ($generated@@170 0))) ($generated@@186 ($generated@@170 (- $generated@@188 1)))) (= ($generated@@185 ($generated@@177 $generated@@187) ($generated@@170 $generated@@188)) (ite (= ($generated@@170 $generated@@188) ($generated@@170 0)) 0 (- (+ ($generated@@185 ($generated@@177 $generated@@187) ($generated@@170 (- $generated@@188 1))) $generated@@188) 1)))))
 :weight 3
 :pattern ( ($generated@@185 ($generated@@177 $generated@@187) ($generated@@170 $generated@@188)))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@191) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@189 $generated@@190 $generated@@191)) (and ($generated@@44 $generated@@190 $generated@@191) (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@55 (type $generated@@193))))
 (=> (and (and (= (type $generated@@192) $generated@@46) (= (type $generated@@193) ($generated@@54 $generated@@194))) (not ($generated@@184 $generated@@193))) (= ($generated@@48 ($generated@@49 $generated@@190 $generated@@192) $generated@@193) ($generated@@48 ($generated@@49 $generated@@191 $generated@@192) $generated@@193))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@191 $generated@@192) $generated@@193))
))))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 Int) ) (!  (=> (= (type $generated@@195) $generated@@108) (= ($generated@@106 ($generated@@177 $generated@@195) $generated@@196 $generated@@197) ($generated@@106 $generated@@195 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@106 ($generated@@177 $generated@@195) $generated@@196 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@108) (or ($generated@@186 $generated@@199) (and (not (= 0 $generated@@176)) (<= ($generated@@170 0) $generated@@199)))) true)
 :pattern ( ($generated@@185 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@200) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@201) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@202) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@200 $generated@@202))) (and ($generated@@44 $generated@@200 $generated@@201) ($generated@@44 $generated@@201 $generated@@202))) ($generated@@44 $generated@@200 $generated@@202))
 :pattern ( ($generated@@44 $generated@@200 $generated@@201) ($generated@@44 $generated@@201 $generated@@202))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 Int) ) (!  (=> (and (= (type $generated@@203) $generated@@108) (or ($generated@@178 $generated@@204 $generated@@205) (and (not (= 0 $generated@@176)) (and (<= ($generated@@170 0) $generated@@204) (<= $generated@@204 $generated@@205))))) true)
 :pattern ( ($generated@@106 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 Int) ) (!  (=> (= (type $generated@@206) $generated@@108) (= ($generated@@185 $generated@@206 $generated@@207) ($generated@@185 $generated@@109 $generated@@207)))
 :pattern ( ($generated@@185 ($generated@@107 $generated@@206) $generated@@207))
)))
(assert  (and (and (= ($generated@@1 $generated@@210) 12) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@208 $generated@@211))
))) (forall (($generated@@212 T@T) ($generated@@213 T@U) ) (! (= (type ($generated@@209 $generated@@212 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(= ($generated@@209 $generated@@215 ($generated@@208 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@208 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 Int) ) (!  (=> (= (type $generated@@216) $generated@@108) (= ($generated@@185 ($generated@@177 $generated@@216) $generated@@217) ($generated@@185 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@185 ($generated@@177 $generated@@216) $generated@@217))
)))
(assert (forall (($generated@@218 Int) ($generated@@219 Int) ) (! (= ($generated@@179 $generated@@218 $generated@@219) (* $generated@@218 $generated@@219))
 :pattern ( ($generated@@179 $generated@@218 $generated@@219))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@220 T@U) ($generated@@221 Int) ) (!  (=> (and (= (type $generated@@220) $generated@@108) (or ($generated@@186 $generated@@221) (and (not (= 0 $generated@@176)) (<= ($generated@@170 0) $generated@@221)))) (and (=> (not (= $generated@@221 ($generated@@170 0))) ($generated@@186 (- $generated@@221 1))) (= ($generated@@185 ($generated@@177 $generated@@220) $generated@@221) (ite (= $generated@@221 ($generated@@170 0)) 0 (- (+ ($generated@@185 $generated@@220 (- $generated@@221 1)) $generated@@221) 1)))))
 :pattern ( ($generated@@185 ($generated@@177 $generated@@220) $generated@@221))
))))
(assert (forall (($generated@@222 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@170 $generated@@222))) ($generated@@172 ($generated@@208 ($generated@@8 $generated@@222))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@170 $generated@@222))))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@208 ($generated@@172 $generated@@223)) ($generated@@172 ($generated@@208 $generated@@223)))
 :pattern ( ($generated@@208 ($generated@@172 $generated@@223)))
)))
(assert  (=> (<= 0 $generated@@176) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) $generated@@108) (or ($generated@@178 ($generated@@170 $generated@@225) ($generated@@170 $generated@@226)) (and (not (= 0 $generated@@176)) (and (<= ($generated@@170 0) ($generated@@170 $generated@@225)) (<= ($generated@@170 $generated@@225) ($generated@@170 $generated@@226)))))) (and (=> (not (= ($generated@@170 $generated@@226) ($generated@@170 $generated@@225))) ($generated@@178 ($generated@@170 (+ $generated@@225 1)) ($generated@@170 $generated@@226))) (= ($generated@@106 ($generated@@177 $generated@@224) ($generated@@170 $generated@@225) ($generated@@170 $generated@@226)) (ite (= ($generated@@170 $generated@@226) ($generated@@170 $generated@@225)) 0 (+ ($generated@@179 ($generated@@170 ($generated@@179 ($generated@@170 $generated@@225) ($generated@@170 $generated@@225))) ($generated@@170 $generated@@225)) ($generated@@106 ($generated@@177 $generated@@224) ($generated@@170 (+ $generated@@225 1)) ($generated@@170 $generated@@226)))))))
 :weight 3
 :pattern ( ($generated@@106 ($generated@@177 $generated@@224) ($generated@@170 $generated@@225) ($generated@@170 $generated@@226)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(assert  (and (and (and (and (= (type $generated@@227) ($generated@@116 $generated@@46 $generated@@4)) (= (type $generated@@228) $generated@@46)) (= (type $generated@@229) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@232) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@236) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@237  (=> (= $generated@@227 ($generated@@115 $generated@@228 $generated@@229 $generated@@50 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@170 0) $generated@@230)) (=> (<= ($generated@@170 0) $generated@@230) (=> (and (and (and ($generated@@231 $generated@@232) ($generated@@233 $generated@@232)) ($generated@@186 $generated@@230)) (and (and (= $generated@@234 ($generated@@185 ($generated@@177 ($generated@@177 $generated@@109)) $generated@@230)) (forall (($generated@@238 T@U) ) (!  (=> (= (type $generated@@238) $generated@@46) (=> (and (not (= $generated@@238 $generated@@228)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@229 $generated@@238) $generated@@50))) (= ($generated@@49 $generated@@232 $generated@@238) ($generated@@49 $generated@@229 $generated@@238))))
 :pattern ( ($generated@@49 $generated@@232 $generated@@238))
))) (and ($generated@@44 $generated@@229 $generated@@232) (= $generated@@235 ($generated@@179 $generated@@234 $generated@@234))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@170 0) $generated@@230)) (=> (<= ($generated@@170 0) $generated@@230) (=> (and (and (and ($generated@@231 $generated@@236) ($generated@@233 $generated@@236)) (and ($generated@@178 ($generated@@170 0) $generated@@230) (and ($generated@@186 $generated@@230) ($generated@@186 $generated@@230)))) (and (and (= ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) ($generated@@170 0) $generated@@230) ($generated@@179 ($generated@@185 ($generated@@177 ($generated@@177 $generated@@109)) $generated@@230) ($generated@@185 ($generated@@177 ($generated@@177 $generated@@109)) $generated@@230))) (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@46) (=> (and (not (= $generated@@239 $generated@@228)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@232 $generated@@239) $generated@@50))) (= ($generated@@49 $generated@@236 $generated@@239) ($generated@@49 $generated@@232 $generated@@239))))
 :pattern ( ($generated@@49 $generated@@236 $generated@@239))
))) (and ($generated@@189 $generated@@232 $generated@@236) (= (ControlFlow 0 2) (- 0 1))))) (= $generated@@235 ($generated@@106 ($generated@@177 ($generated@@177 $generated@@109)) ($generated@@170 0) $generated@@230)))))))))))
(let (($generated@@240  (=> (and (and (and ($generated@@231 $generated@@229) ($generated@@233 $generated@@229)) (= 3 $generated@@176)) (and (<= ($generated@@170 0) $generated@@230) (= (ControlFlow 0 5) 2))) $generated@@237)))
$generated@@240)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (Int) Int)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@201 (T@T) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (Int Int) Bool)
(declare-fun $generated@@212 (Int Int) Int)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@220 () T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U Int) T@U)
(declare-fun $generated@@365 (T@U) Int)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@U) T@U)
(declare-fun $generated@@408 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@195 $generated@@196) $generated@@196)
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= (type ($generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@197 $generated@@200) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
)))
(assert  (and (and (forall (($generated@@205 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@205)) 14)) (forall (($generated@@206 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@203 $generated@@206))
))) (forall (($generated@@207 T@T) ) (! (= (type ($generated@@201 $generated@@207)) ($generated@@203 $generated@@207))
 :pattern ( ($generated@@201 $generated@@207))
))))
(assert (forall (($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@208)) 0)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@213)) $generated@@133)
 :pattern ( ($generated@@210 $generated@@213))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 Int) ) (!  (=> (and (= (type $generated@@214) $generated@@133) (or ($generated@@211 $generated@@215 $generated@@216) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@215) (<= $generated@@215 $generated@@216))))) (and (=> (not (= $generated@@216 $generated@@215)) ($generated@@211 (+ $generated@@215 1) $generated@@216)) (= ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216) (ite (= $generated@@216 $generated@@215) 0 (+ ($generated@@212 ($generated@@212 $generated@@215 $generated@@215) $generated@@215) ($generated@@131 $generated@@214 (+ $generated@@215 1) $generated@@216))))))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216))
))))
(assert ($generated@@217 $generated@@60))
(assert  (and (= ($generated@@1 $generated@@220) 15) (forall (($generated@@221 T@U) ) (! (= (type ($generated@@219 $generated@@221)) $generated@@220)
 :pattern ( ($generated@@219 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@61) (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@218 ($generated@@219 $generated@@222) $generated@@223 $generated@@224) ($generated@@69 $generated@@222 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@225) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@226) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@227) $generated@@220)) (= (type $generated@@228) $generated@@61)) ($generated@@127 $generated@@225 $generated@@226)) ($generated@@218 $generated@@227 $generated@@228 $generated@@225)) ($generated@@218 $generated@@227 $generated@@228 $generated@@226))
 :pattern ( ($generated@@127 $generated@@225 $generated@@226) ($generated@@218 $generated@@227 $generated@@228 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@229) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@230) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@232) $generated@@61)) ($generated@@127 $generated@@229 $generated@@230)) ($generated@@69 $generated@@231 $generated@@232 $generated@@229)) ($generated@@69 $generated@@231 $generated@@232 $generated@@230))
 :pattern ( ($generated@@127 $generated@@229 $generated@@230) ($generated@@69 $generated@@231 $generated@@232 $generated@@229))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 16)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@71 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@76 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@76 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@271) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@269 $generated@@270 $generated@@271)) (and ($generated@@127 $generated@@270 $generated@@271) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@64 (type $generated@@273))))
 (=> (and (and (= (type $generated@@272) $generated@@72) (= (type $generated@@273) ($generated@@63 $generated@@274))) (not ($generated@@217 $generated@@273))) (= ($generated@@78 ($generated@@76 $generated@@270 $generated@@272) $generated@@273) ($generated@@78 ($generated@@76 $generated@@271 $generated@@272) $generated@@273))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@271 $generated@@272) $generated@@273))
))))
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@237 (type $generated@@275))))
(let (($generated@@277 ($generated@@236 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@235 $generated@@277 $generated@@276)) (or (= $generated@@275 ($generated@@234 $generated@@277 $generated@@276)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@275) $generated@@278)))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@233 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@255 (type $generated@@279))))
(let (($generated@@281 ($generated@@254 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@253 $generated@@281 $generated@@280)) (or (= $generated@@279 ($generated@@252 $generated@@281 $generated@@280)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) ($generated@@0 ($generated@@76 ($generated@@251 $generated@@279) $generated@@282)))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@251 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (!  (=> (= (type $generated@@283) $generated@@133) (= ($generated@@131 ($generated@@210 $generated@@283) $generated@@284 $generated@@285) ($generated@@131 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@220 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@220) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@218 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@71 $generated@@220 $generated@@4)) (= (type $generated@@295) $generated@@61)) (= (type $generated@@296) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@294 ($generated@@292 $generated@@295) $generated@@296) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@220) ($generated@@0 ($generated@@76 $generated@@294 $generated@@297))) ($generated@@218 $generated@@297 $generated@@295 $generated@@296))
 :pattern ( ($generated@@76 $generated@@294 $generated@@297))
))))
 :pattern ( ($generated@@69 $generated@@294 ($generated@@292 $generated@@295) $generated@@296))
)))
(assert  (and (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@298 $generated@@300 $generated@@301))
)) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@237 (type $generated@@302))))
(let (($generated@@304 ($generated@@236 (type $generated@@302))))
(= (type ($generated@@299 $generated@@302)) ($generated@@71 $generated@@304 $generated@@303))))
 :pattern ( ($generated@@299 $generated@@302))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (= (type $generated@@305) ($generated@@235 $generated@@220 $generated@@220)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) $generated@@61)) (= (type $generated@@308) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@298 $generated@@306 $generated@@307) $generated@@308) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@220) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@305) $generated@@309))) (and ($generated@@218 ($generated@@76 ($generated@@299 $generated@@305) $generated@@309) $generated@@307 $generated@@308) ($generated@@218 $generated@@309 $generated@@306 $generated@@308)))
 :pattern ( ($generated@@76 ($generated@@299 $generated@@305) $generated@@309))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@305) $generated@@309))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@298 $generated@@306 $generated@@307) $generated@@308))
)))
(assert  (and (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@255 (type $generated@@314))))
(let (($generated@@316 ($generated@@254 (type $generated@@314))))
(= (type ($generated@@311 $generated@@314)) ($generated@@71 $generated@@316 $generated@@315))))
 :pattern ( ($generated@@311 $generated@@314))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (= (type $generated@@317) ($generated@@253 $generated@@220 $generated@@220)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) $generated@@61)) (= (type $generated@@320) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@310 $generated@@318 $generated@@319) $generated@@320) (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@220) ($generated@@0 ($generated@@76 ($generated@@251 $generated@@317) $generated@@321))) (and ($generated@@218 ($generated@@76 ($generated@@311 $generated@@317) $generated@@321) $generated@@319 $generated@@320) ($generated@@218 $generated@@321 $generated@@318 $generated@@320)))
 :pattern ( ($generated@@76 ($generated@@311 $generated@@317) $generated@@321))
 :pattern ( ($generated@@76 ($generated@@251 $generated@@317) $generated@@321))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@310 $generated@@318 $generated@@319) $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@322) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@322 $generated@@324))) (and ($generated@@127 $generated@@322 $generated@@323) ($generated@@127 $generated@@323 $generated@@324))) ($generated@@127 $generated@@322 $generated@@324))
 :pattern ( ($generated@@127 $generated@@322 $generated@@323) ($generated@@127 $generated@@323 $generated@@324))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@325 T@U) ($generated@@326 Int) ($generated@@327 Int) ) (!  (=> (and (= (type $generated@@325) $generated@@133) (or ($generated@@211 $generated@@326 $generated@@327) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@326) (<= $generated@@326 $generated@@327))))) true)
 :pattern ( ($generated@@131 $generated@@325 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@71 $generated@@329 $generated@@4))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@255 (type $generated@@330))))
(let (($generated@@332 ($generated@@254 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@253 $generated@@332 $generated@@331)) (= (= $generated@@330 ($generated@@252 $generated@@332 $generated@@331)) (= ($generated@@251 $generated@@330) ($generated@@328 $generated@@332))))))
 :pattern ( ($generated@@251 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@204 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@203 $generated@@334)) (<= 0 ($generated@@202 $generated@@333))))
 :pattern ( ($generated@@202 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (= (type ($generated@@335 $generated@@336)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@61) (= (type $generated@@338) $generated@@61)) (= ($generated@@335 ($generated@@298 $generated@@337 $generated@@338)) $generated@@337))
 :pattern ( ($generated@@298 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@339 ($generated@@298 $generated@@341 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@298 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@61) (= (type $generated@@344) $generated@@61)) (= ($generated@@67 ($generated@@298 $generated@@343 $generated@@344)) $generated@@58))
 :pattern ( ($generated@@298 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@310 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@310 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@310 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@310 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@310 $generated@@353 $generated@@354)) $generated@@59))
 :pattern ( ($generated@@310 $generated@@353 $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ($generated@@359 Int) ) (! (let (($generated@@360 ($generated@@204 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358 $generated@@359)) $generated@@360))
 :pattern ( ($generated@@356 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@203 $generated@@220)) (= (type $generated@@362) $generated@@61)) (= (type $generated@@363) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@361 ($generated@@355 $generated@@362) $generated@@363) (forall (($generated@@364 Int) ) (!  (=> (and (<= 0 $generated@@364) (< $generated@@364 ($generated@@202 $generated@@361))) ($generated@@218 ($generated@@356 $generated@@361 $generated@@364) $generated@@362 $generated@@363))
 :pattern ( ($generated@@356 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@69 $generated@@361 ($generated@@355 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@366 Int) ) (! (= ($generated@@365 ($generated@@70 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@70 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@61)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@61) (= ($generated@@367 ($generated@@286 $generated@@369)) $generated@@369))
 :pattern ( ($generated@@286 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@370)) $generated@@54))
 :pattern ( ($generated@@286 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (= (type ($generated@@371 $generated@@372)) $generated@@61)
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@371 ($generated@@292 $generated@@373)) $generated@@373))
 :pattern ( ($generated@@292 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@61) (= ($generated@@67 ($generated@@292 $generated@@374)) $generated@@55))
 :pattern ( ($generated@@292 $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) $generated@@61)
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@376 ($generated@@375 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@375 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@375 $generated@@380)) $generated@@56))
 :pattern ( ($generated@@375 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@355 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@355 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@355 $generated@@384)) $generated@@57))
 :pattern ( ($generated@@355 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated@@385 $generated@@389 ($generated@@219 $generated@@388)) $generated@@388))
 :pattern ( ($generated@@219 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
 (not ($generated@@0 ($generated@@76 ($generated@@328 $generated@@391) $generated@@390))))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@76 ($generated@@328 $generated@@391) $generated@@390)))
)))
(assert (forall (($generated@@392 Int) ($generated@@393 Int) ) (! (= ($generated@@212 $generated@@392 $generated@@393) (* $generated@@392 $generated@@393))
 :pattern ( ($generated@@212 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@71 $generated@@220 $generated@@2)) (= (type $generated@@395) $generated@@61)) (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@394 ($generated@@375 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@220) (< 0 ($generated ($generated@@76 $generated@@394 $generated@@397)))) ($generated@@218 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@76 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@69 $generated@@394 ($generated@@375 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 Int) ) (! (= ($generated@@219 ($generated@@8 ($generated@@195 $generated@@398))) ($generated@@197 ($generated@@219 ($generated@@8 $generated@@398))))
 :pattern ( ($generated@@219 ($generated@@8 ($generated@@195 $generated@@398))))
)))
(assert (forall (($generated@@399 T@U) ) (! (= ($generated@@219 ($generated@@197 $generated@@399)) ($generated@@197 ($generated@@219 $generated@@399)))
 :pattern ( ($generated@@219 ($generated@@197 $generated@@399)))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@204 (type $generated@@400))))
 (=> (and (= (type $generated@@400) ($generated@@203 $generated@@401)) (= ($generated@@202 $generated@@400) 0)) (= $generated@@400 ($generated@@201 $generated@@401))))
 :pattern ( ($generated@@202 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@2)) ($generated@@69 $generated@@403 $generated@@46 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@46 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@405) $generated@@3)) ($generated@@69 $generated@@405 $generated@@47 $generated@@404))
 :pattern ( ($generated@@69 $generated@@405 $generated@@47 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@407) $generated@@4)) ($generated@@69 $generated@@407 $generated@@44 $generated@@406))
 :pattern ( ($generated@@69 $generated@@407 $generated@@44 $generated@@406))
)))
(assert (= ($generated@@1 $generated@@408) 18))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@410) $generated@@408)) ($generated@@69 $generated@@410 $generated@@45 $generated@@409))
 :pattern ( ($generated@@69 $generated@@410 $generated@@45 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@412) $generated@@220)) ($generated@@69 $generated@@412 $generated@@48 $generated@@411))
 :pattern ( ($generated@@69 $generated@@412 $generated@@48 $generated@@411))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@413 T@U) ($generated@@414 Int) ($generated@@415 Int) ) (!  (=> (and (= (type $generated@@413) $generated@@133) (or ($generated@@211 ($generated@@195 $generated@@414) ($generated@@195 $generated@@415)) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) ($generated@@195 $generated@@414)) (<= ($generated@@195 $generated@@414) ($generated@@195 $generated@@415)))))) (and (=> (not (= ($generated@@195 $generated@@415) ($generated@@195 $generated@@414))) ($generated@@211 ($generated@@195 (+ $generated@@414 1)) ($generated@@195 $generated@@415))) (= ($generated@@131 ($generated@@210 $generated@@413) ($generated@@195 $generated@@414) ($generated@@195 $generated@@415)) (ite (= ($generated@@195 $generated@@415) ($generated@@195 $generated@@414)) 0 (+ ($generated@@212 ($generated@@195 ($generated@@212 ($generated@@195 $generated@@414) ($generated@@195 $generated@@414))) ($generated@@195 $generated@@414)) ($generated@@131 ($generated@@210 $generated@@413) ($generated@@195 (+ $generated@@414 1)) ($generated@@195 $generated@@415)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@210 $generated@@413) ($generated@@195 $generated@@414) ($generated@@195 $generated@@415)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 () T@U)
(declare-fun $generated@@418 () T@U)
(declare-fun $generated@@419 () Int)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 (T@U) Bool)
(declare-fun $generated@@422 () T@U)
(declare-fun $generated@@423 (T@U) Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Int)
(assert  (and (and (and (= (type $generated@@416) ($generated@@141 $generated@@72 $generated@@4)) (= (type $generated@@417) $generated@@72)) (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@422) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@426  (=> (= $generated@@416 ($generated@@140 $generated@@417 $generated@@418 $generated@@60 false)) (=> (and (and (and (<= ($generated@@195 0) $generated@@419) (<= $generated@@419 $generated@@420)) (and ($generated@@421 $generated@@422) ($generated@@423 $generated@@422))) (and (and (forall (($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@72) (=> (and (not (= $generated@@427 $generated@@417)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@418 $generated@@427) $generated@@60))) (= ($generated@@76 $generated@@422 $generated@@427) ($generated@@76 $generated@@418 $generated@@427))))
 :pattern ( ($generated@@76 $generated@@422 $generated@@427))
)) ($generated@@269 $generated@@418 $generated@@422)) (and ($generated@@69 ($generated@@8 $generated@@419) $generated@@46 $generated@@422) ($generated@@69 ($generated@@8 $generated@@420) $generated@@46 $generated@@422)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@195 0) $generated@@419)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= $generated@@419 $generated@@420)) (=> (and (<= ($generated@@195 0) $generated@@419) (<= $generated@@419 $generated@@420)) (=> (and (and ($generated@@211 $generated@@419 $generated@@420) (= $generated@@424 ($generated@@195 0))) (and ($generated@@69 ($generated@@8 $generated@@424) $generated@@46 $generated@@422) ($generated@@69 ($generated@@8 $generated@@420) $generated@@46 $generated@@422))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@195 0) $generated@@424)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@424 $generated@@420)) (=> (and (<= ($generated@@195 0) $generated@@424) (<= $generated@@424 $generated@@420)) (=> (and (and ($generated@@211 ($generated@@195 0) $generated@@420) (= $generated@@425 ($generated@@195 0))) (and ($generated@@69 ($generated@@8 $generated@@425) $generated@@46 $generated@@422) ($generated@@69 ($generated@@8 $generated@@419) $generated@@46 $generated@@422))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@195 0) $generated@@425)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@425 $generated@@419)))))))))))))))
(let (($generated@@428  (=> (and (and ($generated@@421 $generated@@418) ($generated@@423 $generated@@418)) (and (= 2 $generated@@209) (= (ControlFlow 0 8) 2))) $generated@@426)))
$generated@@428)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U Int Int) Int)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (Int) Int)
(declare-fun $generated@@202 (Int Int) Bool)
(declare-fun $generated@@203 (Int Int) Int)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@T) T@U)
(declare-fun $generated@@214 (T@U) Int)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@221 (Int Int) Bool)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 () T@T)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 (T@T T@T) T@U)
(declare-fun $generated@@243 (T@T T@T) T@T)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@T T@T) T@U)
(declare-fun $generated@@261 (T@T T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U Int) T@U)
(declare-fun $generated@@382 (T@U) Int)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@U) T@U)
(declare-fun $generated@@425 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (= (type $generated@@140) $generated@@133) (= ($generated@@139 $generated@@140 $generated@@141 $generated@@142) ($generated@@139 $generated@@134 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@139 ($generated@@132 $generated@@140) $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@200 $generated@@204)) $generated@@133)
 :pattern ( ($generated@@200 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@205 T@U) ($generated@@206 Int) ($generated@@207 Int) ) (!  (=> (and (= (type $generated@@205) $generated@@133) (or ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@206)) (<= ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))))) (and (=> (not (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206))) ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1)))) (= ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (ite (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206)) 0 (+ ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1))) ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 (- $generated@@207 1)) ($generated@@201 (- $generated@@207 1)))) ($generated@@201 (- $generated@@207 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))
))))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@201 $generated@@208) $generated@@208)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert  (and (and (forall (($generated@@217 T@T) ) (= ($generated@@1 ($generated@@215 $generated@@217)) 14)) (forall (($generated@@218 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
))) (forall (($generated@@219 T@T) ) (! (= (type ($generated@@213 $generated@@219)) ($generated@@215 $generated@@219))
 :pattern ( ($generated@@213 $generated@@219))
))))
(assert (forall (($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@220)) 0)
 :pattern ( ($generated@@213 $generated@@220))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 Int) ) (!  (=> (and (= (type $generated@@222) $generated@@133) (or ($generated@@221 $generated@@223 $generated@@224) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@223) (<= $generated@@223 $generated@@224))))) (and (=> (not (= $generated@@224 $generated@@223)) ($generated@@221 (+ $generated@@223 1) $generated@@224)) (= ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224) (ite (= $generated@@224 $generated@@223) 0 (+ ($generated@@203 ($generated@@203 $generated@@223 $generated@@223) $generated@@223) ($generated@@131 $generated@@222 (+ $generated@@223 1) $generated@@224))))))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224))
))))
(assert ($generated@@225 $generated@@60))
(assert  (and (= ($generated@@1 $generated@@228) 15) (forall (($generated@@229 T@U) ) (! (= (type ($generated@@227 $generated@@229)) $generated@@228)
 :pattern ( ($generated@@227 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@61) (= (type $generated@@232) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@226 ($generated@@227 $generated@@230) $generated@@231 $generated@@232) ($generated@@69 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@234) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@235) $generated@@228)) (= (type $generated@@236) $generated@@61)) ($generated@@127 $generated@@233 $generated@@234)) ($generated@@226 $generated@@235 $generated@@236 $generated@@233)) ($generated@@226 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@127 $generated@@233 $generated@@234) ($generated@@226 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@238) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@240) $generated@@61)) ($generated@@127 $generated@@237 $generated@@238)) ($generated@@69 $generated@@239 $generated@@240 $generated@@237)) ($generated@@69 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@127 $generated@@237 $generated@@238) ($generated@@69 $generated@@239 $generated@@240 $generated@@237))
)))
(assert  (and (and (and (and (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (= ($generated@@1 ($generated@@243 $generated@@246 $generated@@247)) 16)) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@248 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@243 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@243 $generated@@250 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@243 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@244 (type $generated@@252))))
(= (type ($generated@@241 $generated@@252)) ($generated@@71 $generated@@253 $generated@@4)))
 :pattern ( ($generated@@241 $generated@@252))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= (type ($generated@@242 $generated@@254 $generated@@255)) ($generated@@243 $generated@@254 $generated@@255))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@T) ) (! (let (($generated@@258 (type $generated@@256)))
 (not ($generated@@0 ($generated@@76 ($generated@@241 ($generated@@242 $generated@@258 $generated@@257)) $generated@@256))))
 :pattern ( (let (($generated@@258 (type $generated@@256)))
($generated@@76 ($generated@@241 ($generated@@242 $generated@@258 $generated@@257)) $generated@@256)))
)))
(assert  (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@264 $generated@@265)) 17)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@261 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@261 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@259 $generated@@270)) ($generated@@71 $generated@@271 $generated@@4)))
 :pattern ( ($generated@@259 $generated@@270))
))) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= (type ($generated@@260 $generated@@272 $generated@@273)) ($generated@@261 $generated@@272 $generated@@273))
 :pattern ( ($generated@@260 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (let (($generated@@276 (type $generated@@274)))
 (not ($generated@@0 ($generated@@76 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274))))
 :pattern ( (let (($generated@@276 (type $generated@@274)))
($generated@@76 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274)))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@277 $generated@@278 $generated@@279)) (and ($generated@@127 $generated@@278 $generated@@279) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@64 (type $generated@@281))))
 (=> (and (and (= (type $generated@@280) $generated@@72) (= (type $generated@@281) ($generated@@63 $generated@@282))) (not ($generated@@225 $generated@@281))) (= ($generated@@78 ($generated@@76 $generated@@278 $generated@@280) $generated@@281) ($generated@@78 ($generated@@76 $generated@@279 $generated@@280) $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@279 $generated@@280) $generated@@281))
))))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@245 (type $generated@@283))))
(let (($generated@@285 ($generated@@244 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@243 $generated@@285 $generated@@284)) (or (= $generated@@283 ($generated@@242 $generated@@285 $generated@@284)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) ($generated@@0 ($generated@@76 ($generated@@241 $generated@@283) $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@241 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@263 (type $generated@@287))))
(let (($generated@@289 ($generated@@262 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@261 $generated@@289 $generated@@288)) (or (= $generated@@287 ($generated@@260 $generated@@289 $generated@@288)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) ($generated@@0 ($generated@@76 ($generated@@259 $generated@@287) $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@259 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (= (type $generated@@291) $generated@@133) (= ($generated@@131 ($generated@@200 $generated@@291) $generated@@292 $generated@@293) ($generated@@131 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 Int) ) (!  (=> (= (type $generated@@294) $generated@@133) (= ($generated@@139 ($generated@@200 $generated@@294) $generated@@295 $generated@@296) ($generated@@139 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@294) $generated@@295 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (!  (=> (and (= (type $generated@@297) $generated@@133) (or ($generated@@202 $generated@@298 $generated@@299) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@298) (<= $generated@@298 $generated@@299))))) (and (=> (not (= $generated@@299 $generated@@298)) ($generated@@202 $generated@@298 (- $generated@@299 1))) (= ($generated@@139 ($generated@@200 $generated@@297) $generated@@298 $generated@@299) (ite (= $generated@@299 $generated@@298) 0 (+ ($generated@@139 $generated@@297 $generated@@298 (- $generated@@299 1)) ($generated@@203 ($generated@@203 (- $generated@@299 1) (- $generated@@299 1)) (- $generated@@299 1)))))))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@297) $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@71 $generated@@228 $generated@@4)) (= (type $generated@@303) $generated@@61)) (= (type $generated@@304) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@302 ($generated@@300 $generated@@303) $generated@@304) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@228) ($generated@@0 ($generated@@76 $generated@@302 $generated@@305))) ($generated@@226 $generated@@305 $generated@@303 $generated@@304))
 :pattern ( ($generated@@76 $generated@@302 $generated@@305))
))))
 :pattern ( ($generated@@69 $generated@@302 ($generated@@300 $generated@@303) $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@308) ($generated@@71 $generated@@228 $generated@@4)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@306 $generated@@309) $generated@@310) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@228) ($generated@@0 ($generated@@76 $generated@@308 $generated@@311))) ($generated@@226 $generated@@311 $generated@@309 $generated@@310))
 :pattern ( ($generated@@76 $generated@@308 $generated@@311))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@306 $generated@@309) $generated@@310))
)))
(assert  (and (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (= (type ($generated@@312 $generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@314 $generated@@315))
)) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@245 (type $generated@@316))))
(let (($generated@@318 ($generated@@244 (type $generated@@316))))
(= (type ($generated@@313 $generated@@316)) ($generated@@71 $generated@@318 $generated@@317))))
 :pattern ( ($generated@@313 $generated@@316))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) ($generated@@243 $generated@@228 $generated@@228)) (= (type $generated@@320) $generated@@61)) (= (type $generated@@321) $generated@@61)) (= (type $generated@@322) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@319 ($generated@@312 $generated@@320 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@228) ($generated@@0 ($generated@@76 ($generated@@241 $generated@@319) $generated@@323))) (and ($generated@@226 ($generated@@76 ($generated@@313 $generated@@319) $generated@@323) $generated@@321 $generated@@322) ($generated@@226 $generated@@323 $generated@@320 $generated@@322)))
 :pattern ( ($generated@@76 ($generated@@313 $generated@@319) $generated@@323))
 :pattern ( ($generated@@76 ($generated@@241 $generated@@319) $generated@@323))
))))
 :pattern ( ($generated@@69 $generated@@319 ($generated@@312 $generated@@320 $generated@@321) $generated@@322))
)))
(assert  (and (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (! (= (type ($generated@@324 $generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@326 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@263 (type $generated@@328))))
(let (($generated@@330 ($generated@@262 (type $generated@@328))))
(= (type ($generated@@325 $generated@@328)) ($generated@@71 $generated@@330 $generated@@329))))
 :pattern ( ($generated@@325 $generated@@328))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@331) ($generated@@261 $generated@@228 $generated@@228)) (= (type $generated@@332) $generated@@61)) (= (type $generated@@333) $generated@@61)) (= (type $generated@@334) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@331 ($generated@@324 $generated@@332 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@228) ($generated@@0 ($generated@@76 ($generated@@259 $generated@@331) $generated@@335))) (and ($generated@@226 ($generated@@76 ($generated@@325 $generated@@331) $generated@@335) $generated@@333 $generated@@334) ($generated@@226 $generated@@335 $generated@@332 $generated@@334)))
 :pattern ( ($generated@@76 ($generated@@325 $generated@@331) $generated@@335))
 :pattern ( ($generated@@76 ($generated@@259 $generated@@331) $generated@@335))
))))
 :pattern ( ($generated@@69 $generated@@331 ($generated@@324 $generated@@332 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@337) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@338) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@336 $generated@@338))) (and ($generated@@127 $generated@@336 $generated@@337) ($generated@@127 $generated@@337 $generated@@338))) ($generated@@127 $generated@@336 $generated@@338))
 :pattern ( ($generated@@127 $generated@@336 $generated@@337) ($generated@@127 $generated@@337 $generated@@338))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@339 T@U) ($generated@@340 Int) ($generated@@341 Int) ) (!  (=> (and (= (type $generated@@339) $generated@@133) (or ($generated@@221 $generated@@340 $generated@@341) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@340) (<= $generated@@340 $generated@@341))))) true)
 :pattern ( ($generated@@131 $generated@@339 $generated@@340 $generated@@341))
))))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@342 T@U) ($generated@@343 Int) ($generated@@344 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@133) (or ($generated@@202 $generated@@343 $generated@@344) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@343) (<= $generated@@343 $generated@@344))))) true)
 :pattern ( ($generated@@139 $generated@@342 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@346 T@T) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@71 $generated@@346 $generated@@4))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@263 (type $generated@@347))))
(let (($generated@@349 ($generated@@262 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@261 $generated@@349 $generated@@348)) (= (= $generated@@347 ($generated@@260 $generated@@349 $generated@@348)) (= ($generated@@259 $generated@@347) ($generated@@345 $generated@@349))))))
 :pattern ( ($generated@@259 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@216 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@215 $generated@@351)) (<= 0 ($generated@@214 $generated@@350))))
 :pattern ( ($generated@@214 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@61) (= (type $generated@@355) $generated@@61)) (= ($generated@@352 ($generated@@312 $generated@@354 $generated@@355)) $generated@@354))
 :pattern ( ($generated@@312 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@61) (= (type $generated@@359) $generated@@61)) (= ($generated@@356 ($generated@@312 $generated@@358 $generated@@359)) $generated@@359))
 :pattern ( ($generated@@312 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@61) (= (type $generated@@361) $generated@@61)) (= ($generated@@67 ($generated@@312 $generated@@360 $generated@@361)) $generated@@58))
 :pattern ( ($generated@@312 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@61) (= (type $generated@@365) $generated@@61)) (= ($generated@@362 ($generated@@324 $generated@@364 $generated@@365)) $generated@@364))
 :pattern ( ($generated@@324 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@366 ($generated@@324 $generated@@368 $generated@@369)) $generated@@369))
 :pattern ( ($generated@@324 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@61) (= (type $generated@@371) $generated@@61)) (= ($generated@@67 ($generated@@324 $generated@@370 $generated@@371)) $generated@@59))
 :pattern ( ($generated@@324 $generated@@370 $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) $generated@@61)
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ($generated@@376 Int) ) (! (let (($generated@@377 ($generated@@216 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375 $generated@@376)) $generated@@377))
 :pattern ( ($generated@@373 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@215 $generated@@228)) (= (type $generated@@379) $generated@@61)) (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@378 ($generated@@372 $generated@@379) $generated@@380) (forall (($generated@@381 Int) ) (!  (=> (and (<= 0 $generated@@381) (< $generated@@381 ($generated@@214 $generated@@378))) ($generated@@226 ($generated@@373 $generated@@378 $generated@@381) $generated@@379 $generated@@380))
 :pattern ( ($generated@@373 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@69 $generated@@378 ($generated@@372 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@382 ($generated@@70 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@70 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (= (type ($generated@@384 $generated@@385)) $generated@@61)
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@61) (= ($generated@@384 ($generated@@300 $generated@@386)) $generated@@386))
 :pattern ( ($generated@@300 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@61) (= ($generated@@67 ($generated@@300 $generated@@387)) $generated@@54))
 :pattern ( ($generated@@300 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (= (type ($generated@@388 $generated@@389)) $generated@@61)
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@388 ($generated@@306 $generated@@390)) $generated@@390))
 :pattern ( ($generated@@306 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@61) (= ($generated@@67 ($generated@@306 $generated@@391)) $generated@@55))
 :pattern ( ($generated@@306 $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) $generated@@61)
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@61) (= ($generated@@393 ($generated@@392 $generated@@396)) $generated@@396))
 :pattern ( ($generated@@392 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@61) (= ($generated@@67 ($generated@@392 $generated@@397)) $generated@@56))
 :pattern ( ($generated@@392 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (= (type ($generated@@398 $generated@@399)) $generated@@61)
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@61) (= ($generated@@398 ($generated@@372 $generated@@400)) $generated@@400))
 :pattern ( ($generated@@372 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@61) (= ($generated@@67 ($generated@@372 $generated@@401)) $generated@@57))
 :pattern ( ($generated@@372 $generated@@401))
)))
(assert (forall (($generated@@403 T@T) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated@@402 $generated@@406 ($generated@@227 $generated@@405)) $generated@@405))
 :pattern ( ($generated@@227 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
 (not ($generated@@0 ($generated@@76 ($generated@@345 $generated@@408) $generated@@407))))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@76 ($generated@@345 $generated@@408) $generated@@407)))
)))
(assert (forall (($generated@@409 Int) ($generated@@410 Int) ) (! (= ($generated@@203 $generated@@409 $generated@@410) (* $generated@@409 $generated@@410))
 :pattern ( ($generated@@203 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@71 $generated@@228 $generated@@2)) (= (type $generated@@412) $generated@@61)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@411 ($generated@@392 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@228) (< 0 ($generated ($generated@@76 $generated@@411 $generated@@414)))) ($generated@@226 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@76 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@69 $generated@@411 ($generated@@392 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 Int) ) (! (= ($generated@@227 ($generated@@8 ($generated@@201 $generated@@415))) ($generated@@209 ($generated@@227 ($generated@@8 $generated@@415))))
 :pattern ( ($generated@@227 ($generated@@8 ($generated@@201 $generated@@415))))
)))
(assert (forall (($generated@@416 T@U) ) (! (= ($generated@@227 ($generated@@209 $generated@@416)) ($generated@@209 ($generated@@227 $generated@@416)))
 :pattern ( ($generated@@227 ($generated@@209 $generated@@416)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@216 (type $generated@@417))))
 (=> (and (= (type $generated@@417) ($generated@@215 $generated@@418)) (= ($generated@@214 $generated@@417) 0)) (= $generated@@417 ($generated@@213 $generated@@418))))
 :pattern ( ($generated@@214 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@420) $generated@@2)) ($generated@@69 $generated@@420 $generated@@46 $generated@@419))
 :pattern ( ($generated@@69 $generated@@420 $generated@@46 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@422) $generated@@3)) ($generated@@69 $generated@@422 $generated@@47 $generated@@421))
 :pattern ( ($generated@@69 $generated@@422 $generated@@47 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@4)) ($generated@@69 $generated@@424 $generated@@44 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@44 $generated@@423))
)))
(assert (= ($generated@@1 $generated@@425) 18))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@427) $generated@@425)) ($generated@@69 $generated@@427 $generated@@45 $generated@@426))
 :pattern ( ($generated@@69 $generated@@427 $generated@@45 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@429) $generated@@228)) ($generated@@69 $generated@@429 $generated@@48 $generated@@428))
 :pattern ( ($generated@@69 $generated@@429 $generated@@48 $generated@@428))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@430 T@U) ($generated@@431 Int) ($generated@@432 Int) ) (!  (=> (and (= (type $generated@@430) $generated@@133) (or ($generated@@221 ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@431)) (<= ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)))))) (and (=> (not (= ($generated@@201 $generated@@432) ($generated@@201 $generated@@431))) ($generated@@221 ($generated@@201 (+ $generated@@431 1)) ($generated@@201 $generated@@432))) (= ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)) (ite (= ($generated@@201 $generated@@432) ($generated@@201 $generated@@431)) 0 (+ ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 $generated@@431) ($generated@@201 $generated@@431))) ($generated@@201 $generated@@431)) ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 (+ $generated@@431 1)) ($generated@@201 $generated@@432)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@433 () Int)
(declare-fun $generated@@434 () Int)
(declare-fun $generated@@435 () Int)
(declare-fun $generated@@436 () Int)
(declare-fun $generated@@437 () T@U)
(declare-fun $generated@@438 () Int)
(declare-fun $generated@@439 () Bool)
(declare-fun $generated@@440 () Int)
(declare-fun $generated@@441 (T@U) Bool)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@443 (T@U) Bool)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 () T@U)
(declare-fun $generated@@446 () Int)
(declare-fun $generated@@447 () T@U)
(declare-fun $generated@@448 () Int)
(declare-fun $generated@@449 () Int)
(declare-fun $generated@@450 () T@U)
(declare-fun $generated@@451 () T@U)
(declare-fun $generated@@452 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@442) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@444) $generated@@72)) (= (type $generated@@437) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@445) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@447) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@450) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@451) ($generated@@145 $generated@@72 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 34) (let (($generated@@453  (=> (and (and (and (<= $generated@@433 $generated@@434) (<= $generated@@434 $generated@@435)) (= $generated@@436 ($generated@@201 0))) (and ($generated@@69 ($generated@@8 $generated@@436) $generated@@46 $generated@@437) ($generated@@69 ($generated@@8 $generated@@433) $generated@@46 $generated@@437))) (and (=> (= (ControlFlow 0 19) (- 0 24)) (<= ($generated@@201 0) $generated@@436)) (and (=> (= (ControlFlow 0 19) (- 0 23)) (<= $generated@@436 $generated@@433)) (=> ($generated@@202 ($generated@@201 0) $generated@@433) (=> (and ($generated@@69 ($generated@@8 $generated@@433) $generated@@46 $generated@@437) ($generated@@69 ($generated@@8 $generated@@434) $generated@@46 $generated@@437)) (and (=> (= (ControlFlow 0 19) (- 0 22)) (<= ($generated@@201 0) $generated@@433)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (<= $generated@@433 $generated@@434)) (=> (and (and ($generated@@202 $generated@@433 $generated@@434) (= $generated@@438 ($generated@@201 0))) (and ($generated@@69 ($generated@@8 $generated@@438) $generated@@46 $generated@@437) ($generated@@69 ($generated@@8 $generated@@434) $generated@@46 $generated@@437))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (<= ($generated@@201 0) $generated@@438)) (=> (= (ControlFlow 0 19) (- 0 18)) (<= $generated@@438 $generated@@434)))))))))))))
(let (($generated@@454  (=> (and (< $generated@@434 $generated@@433) (= (ControlFlow 0 26) 19)) $generated@@453)))
(let (($generated@@455  (=> (and (<= $generated@@433 $generated@@434) (= (ControlFlow 0 25) 19)) $generated@@453)))
(let (($generated@@456  (=> (not $generated@@439) (and (=> (= (ControlFlow 0 27) 25) $generated@@455) (=> (= (ControlFlow 0 27) 26) $generated@@454)))))
(let (($generated@@457  (=> (= (ControlFlow 0 9) (- 0 8)) (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435) (- ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@435) ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433))))))
(let (($generated@@458  (=> (and (<= $generated@@435 $generated@@434) (= $generated@@440 ($generated@@201 0))) (and (=> (= (ControlFlow 0 10) (- 0 16)) (<= ($generated@@201 0) $generated@@440)) (=> (<= ($generated@@201 0) $generated@@440) (and (=> (= (ControlFlow 0 10) (- 0 15)) (<= $generated@@440 $generated@@433)) (=> (<= $generated@@440 $generated@@433) (=> (and ($generated@@441 $generated@@442) ($generated@@443 $generated@@442)) (=> (and (and (and ($generated@@221 $generated@@440 $generated@@433) ($generated@@202 $generated@@440 $generated@@433)) (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@440 $generated@@433) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@440 $generated@@433))) (and (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@72) (=> (and (not (= $generated@@459 $generated@@444)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@437 $generated@@459) $generated@@60))) (= ($generated@@76 $generated@@442 $generated@@459) ($generated@@76 $generated@@437 $generated@@459))))
 :pattern ( ($generated@@76 $generated@@442 $generated@@459))
)) ($generated@@277 $generated@@437 $generated@@442))) (and (=> (= (ControlFlow 0 10) (- 0 14)) (<= ($generated@@201 0) $generated@@433)) (=> (<= ($generated@@201 0) $generated@@433) (and (=> (= (ControlFlow 0 10) (- 0 13)) (<= $generated@@433 $generated@@434)) (=> (<= $generated@@433 $generated@@434) (=> (and (and (and ($generated@@441 $generated@@445) ($generated@@443 $generated@@445)) (and ($generated@@221 $generated@@433 $generated@@434) ($generated@@202 $generated@@433 $generated@@434))) (and (and (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@434) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@434)) (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@72) (=> (and (not (= $generated@@460 $generated@@444)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@442 $generated@@460) $generated@@60))) (= ($generated@@76 $generated@@445 $generated@@460) ($generated@@76 $generated@@442 $generated@@460))))
 :pattern ( ($generated@@76 $generated@@445 $generated@@460))
))) (and ($generated@@277 $generated@@442 $generated@@445) (= $generated@@446 ($generated@@201 0))))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (<= ($generated@@201 0) $generated@@446)) (=> (<= ($generated@@201 0) $generated@@446) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= $generated@@446 $generated@@434)) (=> (<= $generated@@446 $generated@@434) (=> (and (and (and ($generated@@441 $generated@@447) ($generated@@443 $generated@@447)) (and ($generated@@221 $generated@@446 $generated@@434) ($generated@@202 $generated@@446 $generated@@434))) (and (and (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@446 $generated@@434) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@446 $generated@@434)) (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@72) (=> (and (not (= $generated@@461 $generated@@444)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@445 $generated@@461) $generated@@60))) (= ($generated@@76 $generated@@447 $generated@@461) ($generated@@76 $generated@@445 $generated@@461))))
 :pattern ( ($generated@@76 $generated@@447 $generated@@461))
))) (and ($generated@@277 $generated@@445 $generated@@447) (= (ControlFlow 0 10) 9)))) $generated@@457)))))))))))))))))))
(let (($generated@@462  (=> (< $generated@@434 $generated@@435) (=> (and (= $generated@@448 (- $generated@@435 $generated@@434)) (= $generated@@449 (+ $generated@@434 1))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@448) (= (- $generated@@435 $generated@@449) $generated@@448))) (=> (or (<= 0 $generated@@448) (= (- $generated@@435 $generated@@449) $generated@@448)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< (- $generated@@435 $generated@@449) $generated@@448)) (=> (< (- $generated@@435 $generated@@449) $generated@@448) (=> (=> (<= $generated@@433 $generated@@449) (=> (<= $generated@@449 $generated@@435) (and (and ($generated@@202 ($generated@@201 0) $generated@@433) ($generated@@202 $generated@@433 $generated@@449)) ($generated@@202 ($generated@@201 0) $generated@@449)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@439 (<= $generated@@433 $generated@@449))) (=> (=> $generated@@439 (<= $generated@@433 $generated@@449)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@439 (<= $generated@@449 $generated@@435))) (=> (=> $generated@@439 (<= $generated@@449 $generated@@435)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@439 (= (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@449)) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@449)))))))))))))))))
(let (($generated@@463  (=> $generated@@439 (and (=> (= (ControlFlow 0 17) 10) $generated@@458) (=> (= (ControlFlow 0 17) 3) $generated@@462)))))
(let (($generated@@464  (and (=> (= (ControlFlow 0 28) 27) $generated@@456) (=> (= (ControlFlow 0 28) 17) $generated@@463))))
(let (($generated@@465 true))
(let (($generated@@466  (=> (and (and (not false) (<= 0 $generated@@434)) (and (=> $generated@@439 true) (=> $generated@@439 (<= $generated@@433 $generated@@434)))) (=> (and (and (and (=> $generated@@439 (<= $generated@@434 $generated@@435)) (=> $generated@@439 (and (and ($generated@@202 ($generated@@201 0) $generated@@433) ($generated@@202 $generated@@433 $generated@@434)) ($generated@@202 ($generated@@201 0) $generated@@434)))) (and (=> $generated@@439 (= (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@434)) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@434))) (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@72) (=> (and (not (= $generated@@467 $generated@@444)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@450 $generated@@467) $generated@@60))) (= ($generated@@76 $generated@@437 $generated@@467) ($generated@@76 $generated@@437 $generated@@467))))
 :pattern ( ($generated@@76 $generated@@437 $generated@@467))
)))) (and (and ($generated@@277 $generated@@437 $generated@@437) (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@64 (type $generated@@469))))
 (=> (and (and (= (type $generated@@468) $generated@@72) (= (type $generated@@469) ($generated@@63 $generated@@470))) (and (not (= $generated@@468 $generated@@444)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@437 $generated@@468) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@437 $generated@@468) $generated@@469) ($generated@@78 ($generated@@76 $generated@@437 $generated@@468) $generated@@469)) ($generated@@0 ($generated@@143 $generated@@451 $generated@@468 $generated@@469)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@437 $generated@@468) $generated@@469))
))) (and (<= (- $generated@@435 $generated@@434) $generated@@452) (=> (= (- $generated@@435 $generated@@434) $generated@@452) true)))) (and (=> (= (ControlFlow 0 29) 1) $generated@@465) (=> (= (ControlFlow 0 29) 28) $generated@@464))))))
(let (($generated@@471  (=> (= $generated@@451 ($generated@@144 $generated@@444 $generated@@450 $generated@@60 false)) (=> (and ($generated@@441 $generated@@437) ($generated@@443 $generated@@437)) (=> (and (and (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@72) (=> (and (not (= $generated@@472 $generated@@444)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@450 $generated@@472) $generated@@60))) (= ($generated@@76 $generated@@437 $generated@@472) ($generated@@76 $generated@@450 $generated@@472))))
 :pattern ( ($generated@@76 $generated@@437 $generated@@472))
)) ($generated@@277 $generated@@450 $generated@@437)) (and (forall (($generated@@473 Int) ($generated@@474 Int) )  (=> (and (and (<= ($generated@@201 0) $generated@@473) (<= $generated@@473 $generated@@474)) (or (and (<= 0 $generated@@473) (< $generated@@473 $generated@@433)) (and (= $generated@@473 $generated@@433) (and (<= 0 $generated@@474) (< $generated@@474 $generated@@435))))) (= ($generated@@131 ($generated@@200 $generated@@134) $generated@@473 $generated@@474) (- ($generated@@131 ($generated@@200 $generated@@134) ($generated@@201 0) $generated@@474) ($generated@@131 ($generated@@200 $generated@@134) ($generated@@201 0) $generated@@473))))) (= $generated@@452 (- $generated@@435 $generated@@433)))) (and (=> (= (ControlFlow 0 30) (- 0 33)) (=> $generated@@439 (<= $generated@@433 $generated@@433))) (=> (=> $generated@@439 (<= $generated@@433 $generated@@433)) (and (=> (= (ControlFlow 0 30) (- 0 32)) (=> $generated@@439 (<= $generated@@433 $generated@@435))) (=> (=> $generated@@439 (<= $generated@@433 $generated@@435)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> $generated@@439 (= (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@433)) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433)))) (=> (=> $generated@@439 (= (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@433)) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@433))) (=> (= (ControlFlow 0 30) 29) $generated@@466))))))))))))
(let (($generated@@475  (=> (and ($generated@@441 $generated@@450) ($generated@@443 $generated@@450)) (=> (and (and (= 2 $generated@@199) (<= ($generated@@201 0) $generated@@433)) (and (<= $generated@@433 $generated@@435) (= (ControlFlow 0 34) 30))) $generated@@471))))
$generated@@475))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 (T@U Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 () T@T)
(declare-fun $generated@@274 (Int) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 () T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert  (and (= ($generated@@1 $generated@@273) 18) (forall (($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@275)) $generated@@273)
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@276 T@U) ($generated@@277 Int) ) (!  (=> (and (= (type $generated@@276) $generated@@273) (or ($generated@@274 ($generated@@243 $generated@@277)) (and (not (= 0 $generated@@270)) (<= ($generated@@243 0) ($generated@@243 $generated@@277))))) (and (=> (not (= ($generated@@243 $generated@@277) ($generated@@243 0))) ($generated@@274 ($generated@@243 (- $generated@@277 1)))) (= ($generated@@271 ($generated@@272 $generated@@276) ($generated@@243 $generated@@277)) (ite (= ($generated@@243 $generated@@277) ($generated@@243 0)) 0 (- (+ ($generated@@271 ($generated@@272 $generated@@276) ($generated@@243 (- $generated@@277 1))) $generated@@277) 1)))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@272 $generated@@276) ($generated@@243 $generated@@277)))
))))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@145)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@74 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@250 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@76 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@79 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@76 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@81 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 20)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@2)) (= ($generated@@151 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@81 $generated@@325 $generated@@327))) (<= ($generated ($generated@@81 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@81 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@151 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@289 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@293 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@293 (type $generated@@335))))
(let (($generated@@337 ($generated@@292 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@291 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@290 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@311 (type $generated@@339))))
(let (($generated@@341 ($generated@@310 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@309 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@308 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@307 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@311 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@224 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@233 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@250 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@233 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@238 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@250 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@238 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@284 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@284 $generated@@362) $generated@@361)))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (and (= (type $generated@@363) $generated@@273) (or ($generated@@274 $generated@@364) (and (not (= 0 $generated@@270)) (<= ($generated@@243 0) $generated@@364)))) true)
 :pattern ( ($generated@@271 $generated@@363 $generated@@364))
))))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@293 (type $generated@@371))))
(let (($generated@@373 ($generated@@292 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@375) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@311 (type $generated@@379))))
(let (($generated@@381 ($generated@@310 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@383) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@292 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@291 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@310 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@309 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@311 (type $generated@@412))))
(let (($generated@@414 ($generated@@310 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@309 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@308 $generated@@414 $generated@@413)) (= ($generated@@307 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@307 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@311 (type $generated@@415))))
(let (($generated@@417 ($generated@@310 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@309 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@308 $generated@@417 $generated@@416)) (= ($generated@@343 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@343 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@311 (type $generated@@418))))
(let (($generated@@420 ($generated@@310 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@309 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@308 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@145))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@293 (type $generated@@421))))
(let (($generated@@423 ($generated@@292 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@291 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@290 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@145) (= (type $generated@@425) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@278 ($generated@@223 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@311 (type $generated@@426))))
(let (($generated@@428 ($generated@@310 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@309 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@308 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@278 ($generated@@223 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@46)) (and (= ($generated@@278 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@224 $generated@@432 $generated@@47)) (and (= ($generated@@278 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@44)) (and (= ($generated@@278 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@224 $generated@@435 $generated@@45)) (and (= ($generated@@278 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@224 ($generated@@278 $generated@@436) $generated@@437) ($generated@@132 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@224 ($generated@@278 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@283 $generated@@438))))
 :pattern ( ($generated@@283 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@264 $generated@@441)) (<= 0 ($generated@@263 $generated@@440))))
 :pattern ( ($generated@@263 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@135 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@135 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@135 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@223 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@145) (= (type $generated@@475) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@223 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@273)
 :pattern ( ($generated@@476 $generated@@478))
)) (= (type $generated@@477) $generated@@273)))
(assert (forall (($generated@@479 T@U) ($generated@@480 Int) ) (!  (=> (= (type $generated@@479) $generated@@273) (= ($generated@@271 $generated@@479 $generated@@480) ($generated@@271 $generated@@477 $generated@@480)))
 :pattern ( ($generated@@271 ($generated@@476 $generated@@479) $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@264 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@263 $generated@@487))) ($generated@@250 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@233 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@233 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@238 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@150 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@150 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@366 $generated@@510 ($generated@@278 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@278 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@394 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@367 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@394 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@402 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@377 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@402 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@145)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@223 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@223 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@223 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@223 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 Int) ) (!  (=> (= (type $generated@@525) $generated@@273) (= ($generated@@271 ($generated@@272 $generated@@525) $generated@@526) ($generated@@271 $generated@@525 $generated@@526)))
 :pattern ( ($generated@@271 ($generated@@272 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@224 $generated@@527 ($generated@@394 $generated@@528 $generated@@529))) (and (= ($generated@@278 ($generated@@366 ($generated@@291 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@366 ($generated@@291 $generated@@145 $generated@@145) $generated@@527) ($generated@@394 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@527 ($generated@@394 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@224 $generated@@530 ($generated@@402 $generated@@531 $generated@@532))) (and (= ($generated@@278 ($generated@@366 ($generated@@309 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@366 ($generated@@309 $generated@@145 $generated@@145) $generated@@530) ($generated@@402 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@402 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@145)) ($generated@@224 $generated@@535 ($generated@@135 $generated@@533 $generated@@534))) (and (= ($generated@@278 ($generated@@366 $generated@@136 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@366 $generated@@136 $generated@@535) ($generated@@135 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@135 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@410 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@135 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@540 $generated@@541))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@542 T@U) ($generated@@543 Int) ) (!  (=> (and (= (type $generated@@542) $generated@@273) (or ($generated@@274 $generated@@543) (and (not (= 0 $generated@@270)) (<= ($generated@@243 0) $generated@@543)))) (and (=> (not (= $generated@@543 ($generated@@243 0))) ($generated@@274 (- $generated@@543 1))) (= ($generated@@271 ($generated@@272 $generated@@542) $generated@@543) (ite (= $generated@@543 ($generated@@243 0)) 0 (- (+ ($generated@@271 $generated@@542 (- $generated@@543 1)) $generated@@543) 1)))))
 :pattern ( ($generated@@271 ($generated@@272 $generated@@542) $generated@@543))
))))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@136) (= ($generated@@519 ($generated@@278 $generated@@544)) ($generated@@520 $generated@@544)))
 :pattern ( ($generated@@519 ($generated@@278 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@224 $generated@@545 ($generated@@75 0))) (and (= ($generated@@278 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@224 $generated@@546 ($generated@@233 $generated@@547))) (and (= ($generated@@278 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@233 $generated@@547))))
 :pattern ( ($generated@@224 $generated@@546 ($generated@@233 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@238 $generated@@549))) (and (= ($generated@@278 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@238 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@238 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@150 $generated@@551))) (and (= ($generated@@278 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@550) ($generated@@150 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@150 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@481 $generated@@553))) (and (= ($generated@@278 ($generated@@366 ($generated@@264 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@366 ($generated@@264 $generated@@145) $generated@@552) ($generated@@481 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@481 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@250 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@560) (and ($generated@@134 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@250 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@250 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@566) ($generated@@245 $generated@@567)) ($generated@@245 ($generated@@223 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@566) ($generated@@245 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@243 $generated@@568))) ($generated@@245 ($generated@@278 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@243 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@278 ($generated@@245 $generated@@569)) ($generated@@245 ($generated@@278 $generated@@569)))
 :pattern ( ($generated@@278 ($generated@@245 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@265 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@264 $generated@@571)) (= ($generated@@263 $generated@@570) 0)) (= $generated@@570 ($generated@@262 $generated@@571))))
 :pattern ( ($generated@@263 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@283 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@283 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@283 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@264 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@481 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@263 $generated@@586))) ($generated@@224 ($generated@@482 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@482 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@481 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@590))) (< ($generated@@520 ($generated@@366 $generated@@136 ($generated@@482 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@520 ($generated@@366 $generated@@136 ($generated@@482 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@289 $generated@@592) ($generated@@233 $generated@@593)) ($generated@@132 ($generated@@332 $generated@@592) ($generated@@233 $generated@@594))) ($generated@@132 ($generated@@365 $generated@@592) ($generated@@233 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@307 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@132 ($generated@@343 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@132 ($generated@@376 $generated@@595) ($generated@@238 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@132 $generated@@598 $generated@@46))
 :pattern ( ($generated@@132 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@132 $generated@@599 $generated@@47))
 :pattern ( ($generated@@132 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@132 $generated@@600 $generated@@44))
 :pattern ( ($generated@@132 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@132 $generated@@601 $generated@@45))
 :pattern ( ($generated@@132 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@145) ($generated@@132 $generated@@602 $generated@@48))
 :pattern ( ($generated@@132 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@610  (=> (not (= $generated@@603 ($generated@@243 0))) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@243 0) $generated@@604)) (=> (<= ($generated@@243 0) $generated@@604) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))))
(let (($generated@@611 true))
(let (($generated@@612  (=> (= $generated@@606 ($generated@@211 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@611) (=> (= (ControlFlow 0 7) 4) $generated@@610)))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (and (= $generated@@608 ($generated@@156 $generated@@607 $generated@@605 $generated@@60 false)) (<= ($generated@@243 0) $generated@@603)) (and (=> (= (ControlFlow 0 8) 1) $generated@@613) (=> (= (ControlFlow 0 8) 7) $generated@@612)))))
(let (($generated@@615  (=> (and (and ($generated@@249 $generated@@605) ($generated@@609 $generated@@605)) (and (= 0 $generated@@270) (= (ControlFlow 0 9) 8))) $generated@@614)))
$generated@@615)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 (T@U Int) Int)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 (Int) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@T T@T) T@U)
(declare-fun $generated@@226 (T@T T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 () T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U Int) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@396 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@204) 14) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@206))
))))
(assert  (=> (<= 0 $generated@@201) (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and (= (type $generated@@207) $generated@@204) (or ($generated@@205 ($generated@@187 $generated@@208)) (and (not (= 0 $generated@@201)) (<= ($generated@@187 0) ($generated@@187 $generated@@208))))) (and (=> (not (= ($generated@@187 $generated@@208) ($generated@@187 0))) ($generated@@205 ($generated@@187 (- $generated@@208 1)))) (= ($generated@@202 ($generated@@203 $generated@@207) ($generated@@187 $generated@@208)) (ite (= ($generated@@187 $generated@@208) ($generated@@187 0)) 0 (- (+ ($generated@@202 ($generated@@203 $generated@@207) ($generated@@187 (- $generated@@208 1))) $generated@@208) 1)))))
 :weight 3
 :pattern ( ($generated@@202 ($generated@@203 $generated@@207) ($generated@@187 $generated@@208)))
))))
(assert  (and (= ($generated@@1 $generated@@211) 15) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@210 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@61) (= (type $generated@@215) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215) ($generated@@69 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@217) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@218) $generated@@211)) (= (type $generated@@219) $generated@@61)) ($generated@@127 $generated@@216 $generated@@217)) ($generated@@209 $generated@@218 $generated@@219 $generated@@216)) ($generated@@209 $generated@@218 $generated@@219 $generated@@217))
 :pattern ( ($generated@@127 $generated@@216 $generated@@217) ($generated@@209 $generated@@218 $generated@@219 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@221) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@223) $generated@@61)) ($generated@@127 $generated@@220 $generated@@221)) ($generated@@69 $generated@@222 $generated@@223 $generated@@220)) ($generated@@69 $generated@@222 $generated@@223 $generated@@221))
 :pattern ( ($generated@@127 $generated@@220 $generated@@221) ($generated@@69 $generated@@222 $generated@@223 $generated@@220))
)))
(assert  (and (and (and (and (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@229 $generated@@230)) 16)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@231 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@226 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@226 $generated@@233 $generated@@234)) $generated@@234)
 :pattern ( ($generated@@226 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@227 (type $generated@@235))))
(= (type ($generated@@224 $generated@@235)) ($generated@@71 $generated@@236 $generated@@4)))
 :pattern ( ($generated@@224 $generated@@235))
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= (type ($generated@@225 $generated@@237 $generated@@238)) ($generated@@226 $generated@@237 $generated@@238))
 :pattern ( ($generated@@225 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (let (($generated@@241 (type $generated@@239)))
 (not ($generated@@0 ($generated@@76 ($generated@@224 ($generated@@225 $generated@@241 $generated@@240)) $generated@@239))))
 :pattern ( (let (($generated@@241 (type $generated@@239)))
($generated@@76 ($generated@@224 ($generated@@225 $generated@@241 $generated@@240)) $generated@@239)))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 17)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@228 (type $generated@@260))))
(let (($generated@@262 ($generated@@227 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@226 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@225 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@224 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@224 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@246 (type $generated@@264))))
(let (($generated@@266 ($generated@@245 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@244 $generated@@266 $generated@@265)) (or (= $generated@@264 ($generated@@243 $generated@@266 $generated@@265)) (exists (($generated@@267 T@U) ) (!  (and (= (type $generated@@267) $generated@@266) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@264) $generated@@267)))
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
))))))
 :pattern ( ($generated@@242 $generated@@264))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@61)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@270) ($generated@@71 $generated@@211 $generated@@4)) (= (type $generated@@271) $generated@@61)) (= (type $generated@@272) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@270 ($generated@@268 $generated@@271) $generated@@272) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@211) ($generated@@0 ($generated@@76 $generated@@270 $generated@@273))) ($generated@@209 $generated@@273 $generated@@271 $generated@@272))
 :pattern ( ($generated@@76 $generated@@270 $generated@@273))
))))
 :pattern ( ($generated@@69 $generated@@270 ($generated@@268 $generated@@271) $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@276) ($generated@@71 $generated@@211 $generated@@4)) (= (type $generated@@277) $generated@@61)) (= (type $generated@@278) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@276 ($generated@@274 $generated@@277) $generated@@278) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@211) ($generated@@0 ($generated@@76 $generated@@276 $generated@@279))) ($generated@@209 $generated@@279 $generated@@277 $generated@@278))
 :pattern ( ($generated@@76 $generated@@276 $generated@@279))
))))
 :pattern ( ($generated@@69 $generated@@276 ($generated@@274 $generated@@277) $generated@@278))
)))
(assert  (=> (<= 0 $generated@@201) (forall (($generated@@280 T@U) ($generated@@281 Int) ) (!  (=> (and (= (type $generated@@280) $generated@@204) (or ($generated@@205 $generated@@281) (and (not (= 0 $generated@@201)) (<= ($generated@@187 0) $generated@@281)))) true)
 :pattern ( ($generated@@202 $generated@@280 $generated@@281))
))))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@228 (type $generated@@286))))
(let (($generated@@288 ($generated@@227 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@226 $generated@@211 $generated@@211)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@211) ($generated@@0 ($generated@@76 ($generated@@224 $generated@@289) $generated@@293))) (and ($generated@@209 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@209 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@224 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert  (and (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@294 $generated@@296 $generated@@297)) $generated@@61)
 :pattern ( ($generated@@294 $generated@@296 $generated@@297))
)) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@246 (type $generated@@298))))
(let (($generated@@300 ($generated@@245 (type $generated@@298))))
(= (type ($generated@@295 $generated@@298)) ($generated@@71 $generated@@300 $generated@@299))))
 :pattern ( ($generated@@295 $generated@@298))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (= (type $generated@@301) ($generated@@244 $generated@@211 $generated@@211)) (= (type $generated@@302) $generated@@61)) (= (type $generated@@303) $generated@@61)) (= (type $generated@@304) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@301 ($generated@@294 $generated@@302 $generated@@303) $generated@@304) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@211) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@301) $generated@@305))) (and ($generated@@209 ($generated@@76 ($generated@@295 $generated@@301) $generated@@305) $generated@@303 $generated@@304) ($generated@@209 $generated@@305 $generated@@302 $generated@@304)))
 :pattern ( ($generated@@76 ($generated@@295 $generated@@301) $generated@@305))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@301) $generated@@305))
))))
 :pattern ( ($generated@@69 $generated@@301 ($generated@@294 $generated@@302 $generated@@303) $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@308) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@306 $generated@@308))) (and ($generated@@127 $generated@@306 $generated@@307) ($generated@@127 $generated@@307 $generated@@308))) ($generated@@127 $generated@@306 $generated@@308))
 :pattern ( ($generated@@127 $generated@@306 $generated@@307) ($generated@@127 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@71 $generated@@310 $generated@@4))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@246 (type $generated@@311))))
(let (($generated@@313 ($generated@@245 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@244 $generated@@313 $generated@@312)) (= (= $generated@@311 ($generated@@243 $generated@@313 $generated@@312)) (= ($generated@@242 $generated@@311) ($generated@@309 $generated@@313))))))
 :pattern ( ($generated@@242 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@196 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@195 $generated@@315)) (<= 0 ($generated@@194 $generated@@314))))
 :pattern ( ($generated@@194 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@282 $generated@@318 $generated@@319)) $generated@@318))
 :pattern ( ($generated@@282 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@61) (= (type $generated@@323) $generated@@61)) (= ($generated@@320 ($generated@@282 $generated@@322 $generated@@323)) $generated@@323))
 :pattern ( ($generated@@282 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@324 $generated@@325)) $generated@@58))
 :pattern ( ($generated@@282 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@294 $generated@@328 $generated@@329)) $generated@@328))
 :pattern ( ($generated@@294 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@61) (= (type $generated@@333) $generated@@61)) (= ($generated@@330 ($generated@@294 $generated@@332 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@294 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@67 ($generated@@294 $generated@@334 $generated@@335)) $generated@@59))
 :pattern ( ($generated@@294 $generated@@334 $generated@@335))
)))
(assert  (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@204)
 :pattern ( ($generated@@336 $generated@@338))
)) (= (type $generated@@337) $generated@@204)))
(assert (forall (($generated@@339 T@U) ($generated@@340 Int) ) (!  (=> (= (type $generated@@339) $generated@@204) (= ($generated@@202 $generated@@339 $generated@@340) ($generated@@202 $generated@@337 $generated@@340)))
 :pattern ( ($generated@@202 ($generated@@336 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ($generated@@345 Int) ) (! (let (($generated@@346 ($generated@@196 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344 $generated@@345)) $generated@@346))
 :pattern ( ($generated@@342 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@195 $generated@@211)) (= (type $generated@@348) $generated@@61)) (= (type $generated@@349) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@347 ($generated@@341 $generated@@348) $generated@@349) (forall (($generated@@350 Int) ) (!  (=> (and (<= 0 $generated@@350) (< $generated@@350 ($generated@@194 $generated@@347))) ($generated@@209 ($generated@@342 $generated@@347 $generated@@350) $generated@@348 $generated@@349))
 :pattern ( ($generated@@342 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@69 $generated@@347 ($generated@@341 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@352 Int) ) (! (= ($generated@@351 ($generated@@70 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@70 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@268 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@268 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@268 $generated@@356)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@61)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@61) (= ($generated@@357 ($generated@@274 $generated@@359)) $generated@@359))
 :pattern ( ($generated@@274 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@67 ($generated@@274 $generated@@360)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@360))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) $generated@@61)
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@61) (= ($generated@@362 ($generated@@361 $generated@@365)) $generated@@365))
 :pattern ( ($generated@@361 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@67 ($generated@@361 $generated@@366)) $generated@@56))
 :pattern ( ($generated@@361 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@61)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@61) (= ($generated@@367 ($generated@@341 $generated@@369)) $generated@@369))
 :pattern ( ($generated@@341 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@67 ($generated@@341 $generated@@370)) $generated@@57))
 :pattern ( ($generated@@341 $generated@@370))
)))
(assert (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@371 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated@@371 $generated@@375 ($generated@@210 $generated@@374)) $generated@@374))
 :pattern ( ($generated@@210 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (= (type $generated@@376) $generated@@204) (= ($generated@@202 ($generated@@203 $generated@@376) $generated@@377) ($generated@@202 $generated@@376 $generated@@377)))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@309 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@309 $generated@@379) $generated@@378)))
)))
(assert  (=> (<= 0 $generated@@201) (forall (($generated@@380 T@U) ($generated@@381 Int) ) (!  (=> (and (= (type $generated@@380) $generated@@204) (or ($generated@@205 $generated@@381) (and (not (= 0 $generated@@201)) (<= ($generated@@187 0) $generated@@381)))) (and (=> (not (= $generated@@381 ($generated@@187 0))) ($generated@@205 (- $generated@@381 1))) (= ($generated@@202 ($generated@@203 $generated@@380) $generated@@381) (ite (= $generated@@381 ($generated@@187 0)) 0 (- (+ ($generated@@202 $generated@@380 (- $generated@@381 1)) $generated@@381) 1)))))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@380) $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@71 $generated@@211 $generated@@2)) (= (type $generated@@383) $generated@@61)) (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@382 ($generated@@361 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@211) (< 0 ($generated ($generated@@76 $generated@@382 $generated@@385)))) ($generated@@209 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@76 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@69 $generated@@382 ($generated@@361 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 Int) ) (! (= ($generated@@210 ($generated@@8 ($generated@@187 $generated@@386))) ($generated@@189 ($generated@@210 ($generated@@8 $generated@@386))))
 :pattern ( ($generated@@210 ($generated@@8 ($generated@@187 $generated@@386))))
)))
(assert (forall (($generated@@387 T@U) ) (! (= ($generated@@210 ($generated@@189 $generated@@387)) ($generated@@189 ($generated@@210 $generated@@387)))
 :pattern ( ($generated@@210 ($generated@@189 $generated@@387)))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@196 (type $generated@@388))))
 (=> (and (= (type $generated@@388) ($generated@@195 $generated@@389)) (= ($generated@@194 $generated@@388) 0)) (= $generated@@388 ($generated@@193 $generated@@389))))
 :pattern ( ($generated@@194 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@2)) ($generated@@69 $generated@@391 $generated@@46 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@46 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@3)) ($generated@@69 $generated@@393 $generated@@47 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@47 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@395) $generated@@4)) ($generated@@69 $generated@@395 $generated@@44 $generated@@394))
 :pattern ( ($generated@@69 $generated@@395 $generated@@44 $generated@@394))
)))
(assert (= ($generated@@1 $generated@@396) 18))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@396)) ($generated@@69 $generated@@398 $generated@@45 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@45 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@400) $generated@@211)) ($generated@@69 $generated@@400 $generated@@48 $generated@@399))
 :pattern ( ($generated@@69 $generated@@400 $generated@@48 $generated@@399))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (T@U) Bool)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@407 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@401) ($generated@@133 $generated@@72 $generated@@4)) (= (type $generated@@402) $generated@@72)) (= (type $generated@@403) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@408  (=> (and (and (and (= $generated@@401 ($generated@@132 $generated@@402 $generated@@403 $generated@@60 false)) (<= ($generated@@187 0) $generated@@404)) (and ($generated@@405 $generated@@406) ($generated@@407 $generated@@406))) (and (and (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@72) (=> (and (not (= $generated@@409 $generated@@402)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@403 $generated@@409) $generated@@60))) (= ($generated@@76 $generated@@406 $generated@@409) ($generated@@76 $generated@@403 $generated@@409))))
 :pattern ( ($generated@@76 $generated@@406 $generated@@409))
)) ($generated@@127 $generated@@403 $generated@@406)) (and ($generated@@69 ($generated@@8 $generated@@404) $generated@@46 $generated@@406) (= (ControlFlow 0 2) (- 0 1))))) (<= ($generated@@187 0) $generated@@404))))
(let (($generated@@410  (=> (and (and ($generated@@405 $generated@@403) ($generated@@407 $generated@@403)) (and (= 2 $generated@@201) (= (ControlFlow 0 3) 2))) $generated@@408)))
$generated@@410)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U Int) Int)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@185 (Int Int) Int)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@T T@U) T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@206 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert ($generated@@168 $generated@@50))
(assert  (and (= ($generated@@1 $generated@@172) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (and (= (type $generated@@175) $generated@@172) (or ($generated@@173 ($generated@@162 $generated@@176)) (and (not (= 0 $generated@@169)) (<= ($generated@@162 0) ($generated@@162 $generated@@176))))) (and (=> (not (= ($generated@@162 $generated@@176) ($generated@@162 0))) ($generated@@173 ($generated@@162 (- $generated@@176 1)))) (= ($generated@@170 ($generated@@171 $generated@@175) ($generated@@162 $generated@@176)) (ite (= ($generated@@162 $generated@@176) ($generated@@162 0)) 0 (- (+ ($generated@@170 ($generated@@171 $generated@@175) ($generated@@162 (- $generated@@176 1))) $generated@@176) 1)))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@171 $generated@@175) ($generated@@162 $generated@@176)))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@179) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@177 $generated@@178 $generated@@179)) (and ($generated@@44 $generated@@178 $generated@@179) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@55 (type $generated@@181))))
 (=> (and (and (= (type $generated@@180) $generated@@46) (= (type $generated@@181) ($generated@@54 $generated@@182))) (not ($generated@@168 $generated@@181))) (= ($generated@@48 ($generated@@49 $generated@@178 $generated@@180) $generated@@181) ($generated@@48 ($generated@@49 $generated@@179 $generated@@180) $generated@@181))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@179 $generated@@180) $generated@@181))
))))
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@183 T@U) ($generated@@184 Int) ) (!  (=> (and (= (type $generated@@183) $generated@@172) (or ($generated@@173 $generated@@184) (and (not (= 0 $generated@@169)) (<= ($generated@@162 0) $generated@@184)))) true)
 :pattern ( ($generated@@170 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@186 Int) ($generated@@187 Int) ) (! (= ($generated@@185 $generated@@186 $generated@@187) (div $generated@@186 $generated@@187))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@188 $generated@@190))) (and ($generated@@44 $generated@@188 $generated@@189) ($generated@@44 $generated@@189 $generated@@190))) ($generated@@44 $generated@@188 $generated@@190))
 :pattern ( ($generated@@44 $generated@@188 $generated@@189) ($generated@@44 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@172)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@172)))
(assert (forall (($generated@@194 T@U) ($generated@@195 Int) ) (!  (=> (= (type $generated@@194) $generated@@172) (= ($generated@@170 $generated@@194 $generated@@195) ($generated@@170 $generated@@192 $generated@@195)))
 :pattern ( ($generated@@170 ($generated@@191 $generated@@194) $generated@@195))
)))
(assert  (and (and (= ($generated@@1 $generated@@198) 12) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@196 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@196 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@U) ) (! (= (type ($generated@@197 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(= ($generated@@197 $generated@@203 ($generated@@196 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@196 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (= (type $generated@@204) $generated@@172) (= ($generated@@170 ($generated@@171 $generated@@204) $generated@@205) ($generated@@170 $generated@@204 $generated@@205)))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@207 Int) ($generated@@208 Int) ) (! (= ($generated@@206 $generated@@207 $generated@@208) (* $generated@@207 $generated@@208))
 :pattern ( ($generated@@206 $generated@@207 $generated@@208))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (and (= (type $generated@@209) $generated@@172) (or ($generated@@173 $generated@@210) (and (not (= 0 $generated@@169)) (<= ($generated@@162 0) $generated@@210)))) (and (=> (not (= $generated@@210 ($generated@@162 0))) ($generated@@173 (- $generated@@210 1))) (= ($generated@@170 ($generated@@171 $generated@@209) $generated@@210) (ite (= $generated@@210 ($generated@@162 0)) 0 (- (+ ($generated@@170 $generated@@209 (- $generated@@210 1)) $generated@@210) 1)))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@209) $generated@@210))
))))
(assert (forall (($generated@@211 Int) ) (! (= ($generated@@196 ($generated@@8 ($generated@@162 $generated@@211))) ($generated@@164 ($generated@@196 ($generated@@8 $generated@@211))))
 :pattern ( ($generated@@196 ($generated@@8 ($generated@@162 $generated@@211))))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@196 ($generated@@164 $generated@@212)) ($generated@@164 ($generated@@196 $generated@@212)))
 :pattern ( ($generated@@196 ($generated@@164 $generated@@212)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@213) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@214) $generated@@46)) (= (type $generated@@215) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@219) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@221  (=> (= $generated@@213 ($generated@@107 $generated@@214 $generated@@215 $generated@@50 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= ($generated@@162 2) 0))) (=> (not (= ($generated@@162 2) 0)) (=> (= $generated@@216 ($generated@@185 ($generated@@206 $generated@@217 (- $generated@@217 1)) ($generated@@162 2))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@162 0) $generated@@217)) (=> (<= ($generated@@162 0) $generated@@217) (=> (and (and (and ($generated@@218 $generated@@219) ($generated@@220 $generated@@219)) ($generated@@173 $generated@@217)) (and (and (= ($generated@@206 ($generated@@162 2) ($generated@@170 ($generated@@171 ($generated@@171 $generated@@192)) $generated@@217)) ($generated@@206 $generated@@217 (- $generated@@217 1))) (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@46) (=> (and (not (= $generated@@222 $generated@@214)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@215 $generated@@222) $generated@@50))) (= ($generated@@49 $generated@@219 $generated@@222) ($generated@@49 $generated@@215 $generated@@222))))
 :pattern ( ($generated@@49 $generated@@219 $generated@@222))
))) (and ($generated@@177 $generated@@215 $generated@@219) (= (ControlFlow 0 2) (- 0 1))))) (= $generated@@216 ($generated@@170 ($generated@@171 ($generated@@171 $generated@@192)) $generated@@217)))))))))))
(let (($generated@@223  (=> (and (and (and ($generated@@218 $generated@@215) ($generated@@220 $generated@@215)) (= 2 $generated@@169)) (and (<= ($generated@@162 0) $generated@@217) (= (ControlFlow 0 5) 2))) $generated@@221)))
$generated@@223)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (Int) Int)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@201 (T@T) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (Int Int) Bool)
(declare-fun $generated@@212 (Int Int) Int)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 (T@U Int) Int)
(declare-fun $generated@@219 (Int) Bool)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@T T@T) T@U)
(declare-fun $generated@@239 (T@T T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@256 (T@T T@T) T@U)
(declare-fun $generated@@257 (T@T T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@U T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U Int) T@U)
(declare-fun $generated@@373 (T@U) Int)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@420 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@195 $generated@@196) $generated@@196)
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= (type ($generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@197 $generated@@200) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
)))
(assert  (and (and (forall (($generated@@205 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@205)) 14)) (forall (($generated@@206 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@203 $generated@@206))
))) (forall (($generated@@207 T@T) ) (! (= (type ($generated@@201 $generated@@207)) ($generated@@203 $generated@@207))
 :pattern ( ($generated@@201 $generated@@207))
))))
(assert (forall (($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@208)) 0)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@213)) $generated@@133)
 :pattern ( ($generated@@210 $generated@@213))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 Int) ) (!  (=> (and (= (type $generated@@214) $generated@@133) (or ($generated@@211 $generated@@215 $generated@@216) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@215) (<= $generated@@215 $generated@@216))))) (and (=> (not (= $generated@@216 $generated@@215)) ($generated@@211 (+ $generated@@215 1) $generated@@216)) (= ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216) (ite (= $generated@@216 $generated@@215) 0 (+ ($generated@@212 ($generated@@212 $generated@@215 $generated@@215) $generated@@215) ($generated@@131 $generated@@214 (+ $generated@@215 1) $generated@@216))))))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@214) $generated@@215 $generated@@216))
))))
(assert ($generated@@217 $generated@@60))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@220 T@U) ($generated@@221 Int) ) (!  (=> (and (= (type $generated@@220) $generated@@133) (or ($generated@@219 ($generated@@195 $generated@@221)) (and (not (= 0 $generated@@209)) (<= ($generated@@195 0) ($generated@@195 $generated@@221))))) (and (=> (not (= ($generated@@195 $generated@@221) ($generated@@195 0))) ($generated@@219 ($generated@@195 (- $generated@@221 1)))) (= ($generated@@218 ($generated@@210 $generated@@220) ($generated@@195 $generated@@221)) (ite (= ($generated@@195 $generated@@221) ($generated@@195 0)) 0 (- (+ ($generated@@218 ($generated@@210 $generated@@220) ($generated@@195 (- $generated@@221 1))) $generated@@221) 1)))))
 :weight 3
 :pattern ( ($generated@@218 ($generated@@210 $generated@@220) ($generated@@195 $generated@@221)))
))))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@229) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@230) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@231) $generated@@224)) (= (type $generated@@232) $generated@@61)) ($generated@@127 $generated@@229 $generated@@230)) ($generated@@222 $generated@@231 $generated@@232 $generated@@229)) ($generated@@222 $generated@@231 $generated@@232 $generated@@230))
 :pattern ( ($generated@@127 $generated@@229 $generated@@230) ($generated@@222 $generated@@231 $generated@@232 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@233) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@234) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@236) $generated@@61)) ($generated@@127 $generated@@233 $generated@@234)) ($generated@@69 $generated@@235 $generated@@236 $generated@@233)) ($generated@@69 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@127 $generated@@233 $generated@@234) ($generated@@69 $generated@@235 $generated@@236 $generated@@233))
)))
(assert  (and (and (and (and (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@242 $generated@@243)) 16)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@239 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@241 ($generated@@239 $generated@@246 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@239 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@240 (type $generated@@248))))
(= (type ($generated@@237 $generated@@248)) ($generated@@71 $generated@@249 $generated@@4)))
 :pattern ( ($generated@@237 $generated@@248))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= (type ($generated@@238 $generated@@250 $generated@@251)) ($generated@@239 $generated@@250 $generated@@251))
 :pattern ( ($generated@@238 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@T) ) (! (let (($generated@@254 (type $generated@@252)))
 (not ($generated@@0 ($generated@@76 ($generated@@237 ($generated@@238 $generated@@254 $generated@@253)) $generated@@252))))
 :pattern ( (let (($generated@@254 (type $generated@@252)))
($generated@@76 ($generated@@237 ($generated@@238 $generated@@254 $generated@@253)) $generated@@252)))
)))
(assert  (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@260 $generated@@261)) 17)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@257 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@257 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@257 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@255 $generated@@266)) ($generated@@71 $generated@@267 $generated@@4)))
 :pattern ( ($generated@@255 $generated@@266))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= (type ($generated@@256 $generated@@268 $generated@@269)) ($generated@@257 $generated@@268 $generated@@269))
 :pattern ( ($generated@@256 $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@T) ) (! (let (($generated@@272 (type $generated@@270)))
 (not ($generated@@0 ($generated@@76 ($generated@@255 ($generated@@256 $generated@@272 $generated@@271)) $generated@@270))))
 :pattern ( (let (($generated@@272 (type $generated@@270)))
($generated@@76 ($generated@@255 ($generated@@256 $generated@@272 $generated@@271)) $generated@@270)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@275) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@273 $generated@@274 $generated@@275)) (and ($generated@@127 $generated@@274 $generated@@275) (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@64 (type $generated@@277))))
 (=> (and (and (= (type $generated@@276) $generated@@72) (= (type $generated@@277) ($generated@@63 $generated@@278))) (not ($generated@@217 $generated@@277))) (= ($generated@@78 ($generated@@76 $generated@@274 $generated@@276) $generated@@277) ($generated@@78 ($generated@@76 $generated@@275 $generated@@276) $generated@@277))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@275 $generated@@276) $generated@@277))
))))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@241 (type $generated@@279))))
(let (($generated@@281 ($generated@@240 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@239 $generated@@281 $generated@@280)) (or (= $generated@@279 ($generated@@238 $generated@@281 $generated@@280)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) ($generated@@0 ($generated@@76 ($generated@@237 $generated@@279) $generated@@282)))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@237 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@259 (type $generated@@283))))
(let (($generated@@285 ($generated@@258 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@257 $generated@@285 $generated@@284)) (or (= $generated@@283 ($generated@@256 $generated@@285 $generated@@284)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) ($generated@@0 ($generated@@76 ($generated@@255 $generated@@283) $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@255 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 Int) ($generated@@289 Int) ) (!  (=> (= (type $generated@@287) $generated@@133) (= ($generated@@131 ($generated@@210 $generated@@287) $generated@@288 $generated@@289) ($generated@@131 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@131 ($generated@@210 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@61)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@292) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@293) $generated@@61)) (= (type $generated@@294) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@292 ($generated@@290 $generated@@293) $generated@@294) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@224) ($generated@@0 ($generated@@76 $generated@@292 $generated@@295))) ($generated@@222 $generated@@295 $generated@@293 $generated@@294))
 :pattern ( ($generated@@76 $generated@@292 $generated@@295))
))))
 :pattern ( ($generated@@69 $generated@@292 ($generated@@290 $generated@@293) $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@296 $generated@@299) $generated@@300) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@224) ($generated@@0 ($generated@@76 $generated@@298 $generated@@301))) ($generated@@222 $generated@@301 $generated@@299 $generated@@300))
 :pattern ( ($generated@@76 $generated@@298 $generated@@301))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@296 $generated@@299) $generated@@300))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@302 T@U) ($generated@@303 Int) ) (!  (=> (and (= (type $generated@@302) $generated@@133) (or ($generated@@219 $generated@@303) (and (not (= 0 $generated@@209)) (<= ($generated@@195 0) $generated@@303)))) true)
 :pattern ( ($generated@@218 $generated@@302 $generated@@303))
))))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@241 (type $generated@@308))))
(let (($generated@@310 ($generated@@240 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@239 $generated@@224 $generated@@224)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@237 $generated@@311) $generated@@315))) (and ($generated@@222 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@222 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@237 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert  (and (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
)) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@259 (type $generated@@320))))
(let (($generated@@322 ($generated@@258 (type $generated@@320))))
(= (type ($generated@@317 $generated@@320)) ($generated@@71 $generated@@322 $generated@@321))))
 :pattern ( ($generated@@317 $generated@@320))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) ($generated@@257 $generated@@224 $generated@@224)) (= (type $generated@@324) $generated@@61)) (= (type $generated@@325) $generated@@61)) (= (type $generated@@326) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@323 ($generated@@316 $generated@@324 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@255 $generated@@323) $generated@@327))) (and ($generated@@222 ($generated@@76 ($generated@@317 $generated@@323) $generated@@327) $generated@@325 $generated@@326) ($generated@@222 $generated@@327 $generated@@324 $generated@@326)))
 :pattern ( ($generated@@76 ($generated@@317 $generated@@323) $generated@@327))
 :pattern ( ($generated@@76 ($generated@@255 $generated@@323) $generated@@327))
))))
 :pattern ( ($generated@@69 $generated@@323 ($generated@@316 $generated@@324 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@328) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@329) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@330) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@328 $generated@@330))) (and ($generated@@127 $generated@@328 $generated@@329) ($generated@@127 $generated@@329 $generated@@330))) ($generated@@127 $generated@@328 $generated@@330))
 :pattern ( ($generated@@127 $generated@@328 $generated@@329) ($generated@@127 $generated@@329 $generated@@330))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 Int) ) (!  (=> (and (= (type $generated@@331) $generated@@133) (or ($generated@@211 $generated@@332 $generated@@333) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) $generated@@332) (<= $generated@@332 $generated@@333))))) true)
 :pattern ( ($generated@@131 $generated@@331 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@71 $generated@@335 $generated@@4))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@259 (type $generated@@336))))
(let (($generated@@338 ($generated@@258 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@257 $generated@@338 $generated@@337)) (= (= $generated@@336 ($generated@@256 $generated@@338 $generated@@337)) (= ($generated@@255 $generated@@336) ($generated@@334 $generated@@338))))))
 :pattern ( ($generated@@255 $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@204 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@203 $generated@@340)) (<= 0 ($generated@@202 $generated@@339))))
 :pattern ( ($generated@@202 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@61) (= (type $generated@@344) $generated@@61)) (= ($generated@@341 ($generated@@304 $generated@@343 $generated@@344)) $generated@@343))
 :pattern ( ($generated@@304 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@304 $generated@@347 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@304 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@61) (= (type $generated@@350) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@349 $generated@@350)) $generated@@58))
 :pattern ( ($generated@@304 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@351 ($generated@@316 $generated@@353 $generated@@354)) $generated@@353))
 :pattern ( ($generated@@316 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@316 $generated@@357 $generated@@358)) $generated@@358))
 :pattern ( ($generated@@316 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@61) (= (type $generated@@360) $generated@@61)) (= ($generated@@67 ($generated@@316 $generated@@359 $generated@@360)) $generated@@59))
 :pattern ( ($generated@@316 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 Int) ) (!  (=> (= (type $generated@@361) $generated@@133) (= ($generated@@218 $generated@@361 $generated@@362) ($generated@@218 $generated@@134 $generated@@362)))
 :pattern ( ($generated@@218 ($generated@@132 $generated@@361) $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ($generated@@367 Int) ) (! (let (($generated@@368 ($generated@@204 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366 $generated@@367)) $generated@@368))
 :pattern ( ($generated@@364 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@203 $generated@@224)) (= (type $generated@@370) $generated@@61)) (= (type $generated@@371) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@369 ($generated@@363 $generated@@370) $generated@@371) (forall (($generated@@372 Int) ) (!  (=> (and (<= 0 $generated@@372) (< $generated@@372 ($generated@@202 $generated@@369))) ($generated@@222 ($generated@@364 $generated@@369 $generated@@372) $generated@@370 $generated@@371))
 :pattern ( ($generated@@364 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@69 $generated@@369 ($generated@@363 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@374 Int) ) (! (= ($generated@@373 ($generated@@70 $generated@@374)) $generated@@374)
 :pattern ( ($generated@@70 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) $generated@@61)
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@375 ($generated@@290 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@290 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@61) (= ($generated@@67 ($generated@@290 $generated@@378)) $generated@@54))
 :pattern ( ($generated@@290 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (= (type ($generated@@379 $generated@@380)) $generated@@61)
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@61) (= ($generated@@379 ($generated@@296 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@296 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@61) (= ($generated@@67 ($generated@@296 $generated@@382)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) $generated@@61)
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) $generated@@61)
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@61) (= ($generated@@384 ($generated@@383 $generated@@387)) $generated@@387))
 :pattern ( ($generated@@383 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@61) (= ($generated@@67 ($generated@@383 $generated@@388)) $generated@@56))
 :pattern ( ($generated@@383 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) $generated@@61)
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@61) (= ($generated@@389 ($generated@@363 $generated@@391)) $generated@@391))
 :pattern ( ($generated@@363 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@392)) $generated@@57))
 :pattern ( ($generated@@363 $generated@@392))
)))
(assert (forall (($generated@@394 T@T) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated@@393 $generated@@397 ($generated@@223 $generated@@396)) $generated@@396))
 :pattern ( ($generated@@223 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 Int) ) (!  (=> (= (type $generated@@398) $generated@@133) (= ($generated@@218 ($generated@@210 $generated@@398) $generated@@399) ($generated@@218 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@218 ($generated@@210 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@334 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@334 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@212 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@212 $generated@@402 $generated@@403))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (and (= (type $generated@@404) $generated@@133) (or ($generated@@219 $generated@@405) (and (not (= 0 $generated@@209)) (<= ($generated@@195 0) $generated@@405)))) (and (=> (not (= $generated@@405 ($generated@@195 0))) ($generated@@219 (- $generated@@405 1))) (= ($generated@@218 ($generated@@210 $generated@@404) $generated@@405) (ite (= $generated@@405 ($generated@@195 0)) 0 (- (+ ($generated@@218 $generated@@404 (- $generated@@405 1)) $generated@@405) 1)))))
 :pattern ( ($generated@@218 ($generated@@210 $generated@@404) $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@407) $generated@@61)) (= (type $generated@@408) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@406 ($generated@@383 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@406 $generated@@409)))) ($generated@@222 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@76 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@69 $generated@@406 ($generated@@383 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@195 $generated@@410))) ($generated@@197 ($generated@@223 ($generated@@8 $generated@@410))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@195 $generated@@410))))
)))
(assert (forall (($generated@@411 T@U) ) (! (= ($generated@@223 ($generated@@197 $generated@@411)) ($generated@@197 ($generated@@223 $generated@@411)))
 :pattern ( ($generated@@223 ($generated@@197 $generated@@411)))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@204 (type $generated@@412))))
 (=> (and (= (type $generated@@412) ($generated@@203 $generated@@413)) (= ($generated@@202 $generated@@412) 0)) (= $generated@@412 ($generated@@201 $generated@@413))))
 :pattern ( ($generated@@202 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@415) $generated@@2)) ($generated@@69 $generated@@415 $generated@@46 $generated@@414))
 :pattern ( ($generated@@69 $generated@@415 $generated@@46 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@3)) ($generated@@69 $generated@@417 $generated@@47 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@47 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@4)) ($generated@@69 $generated@@419 $generated@@44 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@44 $generated@@418))
)))
(assert (= ($generated@@1 $generated@@420) 18))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@422) $generated@@420)) ($generated@@69 $generated@@422 $generated@@45 $generated@@421))
 :pattern ( ($generated@@69 $generated@@422 $generated@@45 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@224)) ($generated@@69 $generated@@424 $generated@@48 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@48 $generated@@423))
)))
(assert  (=> (<= 0 $generated@@209) (forall (($generated@@425 T@U) ($generated@@426 Int) ($generated@@427 Int) ) (!  (=> (and (= (type $generated@@425) $generated@@133) (or ($generated@@211 ($generated@@195 $generated@@426) ($generated@@195 $generated@@427)) (and (not (= 0 $generated@@209)) (and (<= ($generated@@195 0) ($generated@@195 $generated@@426)) (<= ($generated@@195 $generated@@426) ($generated@@195 $generated@@427)))))) (and (=> (not (= ($generated@@195 $generated@@427) ($generated@@195 $generated@@426))) ($generated@@211 ($generated@@195 (+ $generated@@426 1)) ($generated@@195 $generated@@427))) (= ($generated@@131 ($generated@@210 $generated@@425) ($generated@@195 $generated@@426) ($generated@@195 $generated@@427)) (ite (= ($generated@@195 $generated@@427) ($generated@@195 $generated@@426)) 0 (+ ($generated@@212 ($generated@@195 ($generated@@212 ($generated@@195 $generated@@426) ($generated@@195 $generated@@426))) ($generated@@195 $generated@@426)) ($generated@@131 ($generated@@210 $generated@@425) ($generated@@195 (+ $generated@@426 1)) ($generated@@195 $generated@@427)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@210 $generated@@425) ($generated@@195 $generated@@426) ($generated@@195 $generated@@427)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@428 () T@U)
(declare-fun $generated@@429 () T@U)
(declare-fun $generated@@430 () T@U)
(declare-fun $generated@@431 () Int)
(declare-fun $generated@@432 (T@U) Bool)
(declare-fun $generated@@433 () T@U)
(declare-fun $generated@@434 (T@U) Bool)
(declare-fun $generated@@435 () Int)
(assert  (and (and (and (= (type $generated@@428) ($generated@@141 $generated@@72 $generated@@4)) (= (type $generated@@429) $generated@@72)) (= (type $generated@@430) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@436  (=> (and (= $generated@@428 ($generated@@140 $generated@@429 $generated@@430 $generated@@60 false)) (<= ($generated@@195 0) $generated@@431)) (=> (and (and (and ($generated@@432 $generated@@433) ($generated@@434 $generated@@433)) (forall (($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@72) (=> (and (not (= $generated@@437 $generated@@429)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@430 $generated@@437) $generated@@60))) (= ($generated@@76 $generated@@433 $generated@@437) ($generated@@76 $generated@@430 $generated@@437))))
 :pattern ( ($generated@@76 $generated@@433 $generated@@437))
))) (and (and ($generated@@273 $generated@@430 $generated@@433) (= $generated@@435 ($generated@@195 0))) (and ($generated@@69 ($generated@@8 $generated@@435) $generated@@46 $generated@@433) ($generated@@69 ($generated@@8 $generated@@431) $generated@@46 $generated@@433)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@195 0) $generated@@435)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@435 $generated@@431)) (=> (and (and (<= ($generated@@195 0) $generated@@435) (<= $generated@@435 $generated@@431)) (and ($generated@@211 ($generated@@195 0) $generated@@431) ($generated@@69 ($generated@@8 $generated@@431) $generated@@46 $generated@@433))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@195 0) $generated@@431)) (=> (and (and (<= ($generated@@195 0) $generated@@431) ($generated@@219 $generated@@431)) (and ($generated@@69 ($generated@@8 $generated@@431) $generated@@46 $generated@@433) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@195 0) $generated@@431))))))))))
(let (($generated@@438  (=> (and (and ($generated@@432 $generated@@430) ($generated@@434 $generated@@430)) (and (= 2 $generated@@209) (= (ControlFlow 0 6) 2))) $generated@@436)))
$generated@@438)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U Int Int) Int)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (Int) Int)
(declare-fun $generated@@202 (Int Int) Bool)
(declare-fun $generated@@203 (Int Int) Int)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@T) T@U)
(declare-fun $generated@@214 (T@U) Int)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@221 (Int Int) Bool)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 (T@U Int) Int)
(declare-fun $generated@@227 (Int) Bool)
(declare-fun $generated@@230 (T@U T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 () T@T)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@T T@T) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@264 (T@T T@T) T@U)
(declare-fun $generated@@265 (T@T T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@318 (T@U T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@351 (T@T) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@437 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (= (type $generated@@140) $generated@@133) (= ($generated@@139 $generated@@140 $generated@@141 $generated@@142) ($generated@@139 $generated@@134 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@139 ($generated@@132 $generated@@140) $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@200 $generated@@204)) $generated@@133)
 :pattern ( ($generated@@200 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@205 T@U) ($generated@@206 Int) ($generated@@207 Int) ) (!  (=> (and (= (type $generated@@205) $generated@@133) (or ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@206)) (<= ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))))) (and (=> (not (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206))) ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1)))) (= ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (ite (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206)) 0 (+ ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1))) ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 (- $generated@@207 1)) ($generated@@201 (- $generated@@207 1)))) ($generated@@201 (- $generated@@207 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))
))))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@201 $generated@@208) $generated@@208)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert  (and (and (forall (($generated@@217 T@T) ) (= ($generated@@1 ($generated@@215 $generated@@217)) 14)) (forall (($generated@@218 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
))) (forall (($generated@@219 T@T) ) (! (= (type ($generated@@213 $generated@@219)) ($generated@@215 $generated@@219))
 :pattern ( ($generated@@213 $generated@@219))
))))
(assert (forall (($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@220)) 0)
 :pattern ( ($generated@@213 $generated@@220))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 Int) ) (!  (=> (and (= (type $generated@@222) $generated@@133) (or ($generated@@221 $generated@@223 $generated@@224) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@223) (<= $generated@@223 $generated@@224))))) (and (=> (not (= $generated@@224 $generated@@223)) ($generated@@221 (+ $generated@@223 1) $generated@@224)) (= ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224) (ite (= $generated@@224 $generated@@223) 0 (+ ($generated@@203 ($generated@@203 $generated@@223 $generated@@223) $generated@@223) ($generated@@131 $generated@@222 (+ $generated@@223 1) $generated@@224))))))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224))
))))
(assert ($generated@@225 $generated@@60))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@228 T@U) ($generated@@229 Int) ) (!  (=> (and (= (type $generated@@228) $generated@@133) (or ($generated@@227 ($generated@@201 $generated@@229)) (and (not (= 0 $generated@@199)) (<= ($generated@@201 0) ($generated@@201 $generated@@229))))) (and (=> (not (= ($generated@@201 $generated@@229) ($generated@@201 0))) ($generated@@227 ($generated@@201 (- $generated@@229 1)))) (= ($generated@@226 ($generated@@200 $generated@@228) ($generated@@201 $generated@@229)) (ite (= ($generated@@201 $generated@@229) ($generated@@201 0)) 0 (- (+ ($generated@@226 ($generated@@200 $generated@@228) ($generated@@201 (- $generated@@229 1))) $generated@@229) 1)))))
 :weight 3
 :pattern ( ($generated@@226 ($generated@@200 $generated@@228) ($generated@@201 $generated@@229)))
))))
(assert  (and (= ($generated@@1 $generated@@232) 15) (forall (($generated@@233 T@U) ) (! (= (type ($generated@@231 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@231 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@61) (= (type $generated@@236) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@230 ($generated@@231 $generated@@234) $generated@@235 $generated@@236) ($generated@@69 $generated@@234 $generated@@235 $generated@@236)))
 :pattern ( ($generated@@230 ($generated@@231 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@238) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@239) $generated@@232)) (= (type $generated@@240) $generated@@61)) ($generated@@127 $generated@@237 $generated@@238)) ($generated@@230 $generated@@239 $generated@@240 $generated@@237)) ($generated@@230 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@127 $generated@@237 $generated@@238) ($generated@@230 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@242) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@244) $generated@@61)) ($generated@@127 $generated@@241 $generated@@242)) ($generated@@69 $generated@@243 $generated@@244 $generated@@241)) ($generated@@69 $generated@@243 $generated@@244 $generated@@242))
 :pattern ( ($generated@@127 $generated@@241 $generated@@242) ($generated@@69 $generated@@243 $generated@@244 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@250 $generated@@251)) 16)) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@252 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@247 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@247 $generated@@254 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@247 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@248 (type $generated@@256))))
(= (type ($generated@@245 $generated@@256)) ($generated@@71 $generated@@257 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@256))
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= (type ($generated@@246 $generated@@258 $generated@@259)) ($generated@@247 $generated@@258 $generated@@259))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (let (($generated@@262 (type $generated@@260)))
 (not ($generated@@0 ($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260))))
 :pattern ( (let (($generated@@262 (type $generated@@260)))
($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260)))
)))
(assert  (and (and (and (and (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@268 $generated@@269)) 17)) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@270 $generated@@271)) $generated@@270)
 :pattern ( ($generated@@265 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@265 $generated@@272 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@265 $generated@@272 $generated@@273))
))) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@266 (type $generated@@274))))
(= (type ($generated@@263 $generated@@274)) ($generated@@71 $generated@@275 $generated@@4)))
 :pattern ( ($generated@@263 $generated@@274))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= (type ($generated@@264 $generated@@276 $generated@@277)) ($generated@@265 $generated@@276 $generated@@277))
 :pattern ( ($generated@@264 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@T) ) (! (let (($generated@@280 (type $generated@@278)))
 (not ($generated@@0 ($generated@@76 ($generated@@263 ($generated@@264 $generated@@280 $generated@@279)) $generated@@278))))
 :pattern ( (let (($generated@@280 (type $generated@@278)))
($generated@@76 ($generated@@263 ($generated@@264 $generated@@280 $generated@@279)) $generated@@278)))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@283) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@281 $generated@@282 $generated@@283)) (and ($generated@@127 $generated@@282 $generated@@283) (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@64 (type $generated@@285))))
 (=> (and (and (= (type $generated@@284) $generated@@72) (= (type $generated@@285) ($generated@@63 $generated@@286))) (not ($generated@@225 $generated@@285))) (= ($generated@@78 ($generated@@76 $generated@@282 $generated@@284) $generated@@285) ($generated@@78 ($generated@@76 $generated@@283 $generated@@284) $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@283 $generated@@284) $generated@@285))
))))
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@249 (type $generated@@287))))
(let (($generated@@289 ($generated@@248 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@247 $generated@@289 $generated@@288)) (or (= $generated@@287 ($generated@@246 $generated@@289 $generated@@288)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@287) $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@267 (type $generated@@291))))
(let (($generated@@293 ($generated@@266 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@265 $generated@@293 $generated@@292)) (or (= $generated@@291 ($generated@@264 $generated@@293 $generated@@292)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) ($generated@@0 ($generated@@76 ($generated@@263 $generated@@291) $generated@@294)))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@263 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 Int) ($generated@@297 Int) ) (!  (=> (= (type $generated@@295) $generated@@133) (= ($generated@@131 ($generated@@200 $generated@@295) $generated@@296 $generated@@297) ($generated@@131 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (= (type $generated@@298) $generated@@133) (= ($generated@@139 ($generated@@200 $generated@@298) $generated@@299 $generated@@300) ($generated@@139 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@298) $generated@@299 $generated@@300))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 Int) ) (!  (=> (and (= (type $generated@@301) $generated@@133) (or ($generated@@202 $generated@@302 $generated@@303) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@302) (<= $generated@@302 $generated@@303))))) (and (=> (not (= $generated@@303 $generated@@302)) ($generated@@202 $generated@@302 (- $generated@@303 1))) (= ($generated@@139 ($generated@@200 $generated@@301) $generated@@302 $generated@@303) (ite (= $generated@@303 $generated@@302) 0 (+ ($generated@@139 $generated@@301 $generated@@302 (- $generated@@303 1)) ($generated@@203 ($generated@@203 (- $generated@@303 1) (- $generated@@303 1)) (- $generated@@303 1)))))))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@301) $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) ($generated@@71 $generated@@232 $generated@@4)) (= (type $generated@@307) $generated@@61)) (= (type $generated@@308) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@306 ($generated@@304 $generated@@307) $generated@@308) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@232) ($generated@@0 ($generated@@76 $generated@@306 $generated@@309))) ($generated@@230 $generated@@309 $generated@@307 $generated@@308))
 :pattern ( ($generated@@76 $generated@@306 $generated@@309))
))))
 :pattern ( ($generated@@69 $generated@@306 ($generated@@304 $generated@@307) $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@312) ($generated@@71 $generated@@232 $generated@@4)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@312 ($generated@@310 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@232) ($generated@@0 ($generated@@76 $generated@@312 $generated@@315))) ($generated@@230 $generated@@315 $generated@@313 $generated@@314))
 :pattern ( ($generated@@76 $generated@@312 $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@312 ($generated@@310 $generated@@313) $generated@@314))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@316 T@U) ($generated@@317 Int) ) (!  (=> (and (= (type $generated@@316) $generated@@133) (or ($generated@@227 $generated@@317) (and (not (= 0 $generated@@199)) (<= ($generated@@201 0) $generated@@317)))) true)
 :pattern ( ($generated@@226 $generated@@316 $generated@@317))
))))
(assert  (and (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (= (type ($generated@@318 $generated@@320 $generated@@321)) $generated@@61)
 :pattern ( ($generated@@318 $generated@@320 $generated@@321))
)) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@249 (type $generated@@322))))
(let (($generated@@324 ($generated@@248 (type $generated@@322))))
(= (type ($generated@@319 $generated@@322)) ($generated@@71 $generated@@324 $generated@@323))))
 :pattern ( ($generated@@319 $generated@@322))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (= (type $generated@@325) ($generated@@247 $generated@@232 $generated@@232)) (= (type $generated@@326) $generated@@61)) (= (type $generated@@327) $generated@@61)) (= (type $generated@@328) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@325 ($generated@@318 $generated@@326 $generated@@327) $generated@@328) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@232) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@325) $generated@@329))) (and ($generated@@230 ($generated@@76 ($generated@@319 $generated@@325) $generated@@329) $generated@@327 $generated@@328) ($generated@@230 $generated@@329 $generated@@326 $generated@@328)))
 :pattern ( ($generated@@76 ($generated@@319 $generated@@325) $generated@@329))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@325) $generated@@329))
))))
 :pattern ( ($generated@@69 $generated@@325 ($generated@@318 $generated@@326 $generated@@327) $generated@@328))
)))
(assert  (and (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@332 $generated@@333))
)) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@267 (type $generated@@334))))
(let (($generated@@336 ($generated@@266 (type $generated@@334))))
(= (type ($generated@@331 $generated@@334)) ($generated@@71 $generated@@336 $generated@@335))))
 :pattern ( ($generated@@331 $generated@@334))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@337) ($generated@@265 $generated@@232 $generated@@232)) (= (type $generated@@338) $generated@@61)) (= (type $generated@@339) $generated@@61)) (= (type $generated@@340) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@337 ($generated@@330 $generated@@338 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@232) ($generated@@0 ($generated@@76 ($generated@@263 $generated@@337) $generated@@341))) (and ($generated@@230 ($generated@@76 ($generated@@331 $generated@@337) $generated@@341) $generated@@339 $generated@@340) ($generated@@230 $generated@@341 $generated@@338 $generated@@340)))
 :pattern ( ($generated@@76 ($generated@@331 $generated@@337) $generated@@341))
 :pattern ( ($generated@@76 ($generated@@263 $generated@@337) $generated@@341))
))))
 :pattern ( ($generated@@69 $generated@@337 ($generated@@330 $generated@@338 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@342) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@343) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@344) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@342 $generated@@344))) (and ($generated@@127 $generated@@342 $generated@@343) ($generated@@127 $generated@@343 $generated@@344))) ($generated@@127 $generated@@342 $generated@@344))
 :pattern ( ($generated@@127 $generated@@342 $generated@@343) ($generated@@127 $generated@@343 $generated@@344))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@345 T@U) ($generated@@346 Int) ($generated@@347 Int) ) (!  (=> (and (= (type $generated@@345) $generated@@133) (or ($generated@@221 $generated@@346 $generated@@347) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@346) (<= $generated@@346 $generated@@347))))) true)
 :pattern ( ($generated@@131 $generated@@345 $generated@@346 $generated@@347))
))))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@348 T@U) ($generated@@349 Int) ($generated@@350 Int) ) (!  (=> (and (= (type $generated@@348) $generated@@133) (or ($generated@@202 $generated@@349 $generated@@350) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@349) (<= $generated@@349 $generated@@350))))) true)
 :pattern ( ($generated@@139 $generated@@348 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@352 T@T) ) (! (= (type ($generated@@351 $generated@@352)) ($generated@@71 $generated@@352 $generated@@4))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@267 (type $generated@@353))))
(let (($generated@@355 ($generated@@266 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@265 $generated@@355 $generated@@354)) (= (= $generated@@353 ($generated@@264 $generated@@355 $generated@@354)) (= ($generated@@263 $generated@@353) ($generated@@351 $generated@@355))))))
 :pattern ( ($generated@@263 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@216 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@215 $generated@@357)) (<= 0 ($generated@@214 $generated@@356))))
 :pattern ( ($generated@@214 $generated@@356))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@61) (= (type $generated@@361) $generated@@61)) (= ($generated@@358 ($generated@@318 $generated@@360 $generated@@361)) $generated@@360))
 :pattern ( ($generated@@318 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@61) (= (type $generated@@365) $generated@@61)) (= ($generated@@362 ($generated@@318 $generated@@364 $generated@@365)) $generated@@365))
 :pattern ( ($generated@@318 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@67 ($generated@@318 $generated@@366 $generated@@367)) $generated@@58))
 :pattern ( ($generated@@318 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@61) (= (type $generated@@371) $generated@@61)) (= ($generated@@368 ($generated@@330 $generated@@370 $generated@@371)) $generated@@370))
 :pattern ( ($generated@@330 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@61)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@61) (= (type $generated@@375) $generated@@61)) (= ($generated@@372 ($generated@@330 $generated@@374 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@330 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@67 ($generated@@330 $generated@@376 $generated@@377)) $generated@@59))
 :pattern ( ($generated@@330 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 Int) ) (!  (=> (= (type $generated@@378) $generated@@133) (= ($generated@@226 $generated@@378 $generated@@379) ($generated@@226 $generated@@134 $generated@@379)))
 :pattern ( ($generated@@226 ($generated@@132 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@216 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@215 $generated@@232)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@214 $generated@@386))) ($generated@@230 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@304 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@304 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@304 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@304 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@310 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@310 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@310 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@310 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@231 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@231 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 Int) ) (!  (=> (= (type $generated@@415) $generated@@133) (= ($generated@@226 ($generated@@200 $generated@@415) $generated@@416) ($generated@@226 $generated@@415 $generated@@416)))
 :pattern ( ($generated@@226 ($generated@@200 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
 (not ($generated@@0 ($generated@@76 ($generated@@351 $generated@@418) $generated@@417))))
 :pattern ( (let (($generated@@418 (type $generated@@417)))
($generated@@76 ($generated@@351 $generated@@418) $generated@@417)))
)))
(assert (forall (($generated@@419 Int) ($generated@@420 Int) ) (! (= ($generated@@203 $generated@@419 $generated@@420) (* $generated@@419 $generated@@420))
 :pattern ( ($generated@@203 $generated@@419 $generated@@420))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@421 T@U) ($generated@@422 Int) ) (!  (=> (and (= (type $generated@@421) $generated@@133) (or ($generated@@227 $generated@@422) (and (not (= 0 $generated@@199)) (<= ($generated@@201 0) $generated@@422)))) (and (=> (not (= $generated@@422 ($generated@@201 0))) ($generated@@227 (- $generated@@422 1))) (= ($generated@@226 ($generated@@200 $generated@@421) $generated@@422) (ite (= $generated@@422 ($generated@@201 0)) 0 (- (+ ($generated@@226 $generated@@421 (- $generated@@422 1)) $generated@@422) 1)))))
 :pattern ( ($generated@@226 ($generated@@200 $generated@@421) $generated@@422))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@232 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@232) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@230 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@201 $generated@@427))) ($generated@@209 ($generated@@231 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@201 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@231 ($generated@@209 $generated@@428)) ($generated@@209 ($generated@@231 $generated@@428)))
 :pattern ( ($generated@@231 ($generated@@209 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@216 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@215 $generated@@430)) (= ($generated@@214 $generated@@429) 0)) (= $generated@@429 ($generated@@213 $generated@@430))))
 :pattern ( ($generated@@214 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@232)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@442 T@U) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (and (= (type $generated@@442) $generated@@133) (or ($generated@@221 ($generated@@201 $generated@@443) ($generated@@201 $generated@@444)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@443)) (<= ($generated@@201 $generated@@443) ($generated@@201 $generated@@444)))))) (and (=> (not (= ($generated@@201 $generated@@444) ($generated@@201 $generated@@443))) ($generated@@221 ($generated@@201 (+ $generated@@443 1)) ($generated@@201 $generated@@444))) (= ($generated@@131 ($generated@@200 $generated@@442) ($generated@@201 $generated@@443) ($generated@@201 $generated@@444)) (ite (= ($generated@@201 $generated@@444) ($generated@@201 $generated@@443)) 0 (+ ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 $generated@@443) ($generated@@201 $generated@@443))) ($generated@@201 $generated@@443)) ($generated@@131 ($generated@@200 $generated@@442) ($generated@@201 (+ $generated@@443 1)) ($generated@@201 $generated@@444)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@200 $generated@@442) ($generated@@201 $generated@@443) ($generated@@201 $generated@@444)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@445 () Int)
(declare-fun $generated@@446 () Int)
(declare-fun $generated@@447 () Int)
(declare-fun $generated@@448 (T@U) Bool)
(declare-fun $generated@@449 () T@U)
(declare-fun $generated@@450 (T@U) Bool)
(declare-fun $generated@@451 () T@U)
(declare-fun $generated@@452 () T@U)
(declare-fun $generated@@453 () Int)
(declare-fun $generated@@454 () T@U)
(declare-fun $generated@@455 () Int)
(declare-fun $generated@@456 () Bool)
(declare-fun $generated@@457 () Int)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () T@U)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 () T@U)
(declare-fun $generated@@462 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@452) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@454) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@451) $generated@@72)) (= (type $generated@@449) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@459) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@461) ($generated@@145 $generated@@72 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@463  (=> (= (ControlFlow 0 14) (- 0 13)) (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@445) ($generated@@203 ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@445) ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@445))))))
(let (($generated@@464  (=> (and (<= $generated@@445 $generated@@446) (= $generated@@447 ($generated@@201 0))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (<= ($generated@@201 0) $generated@@447)) (=> (<= ($generated@@201 0) $generated@@447) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= $generated@@447 $generated@@445)) (=> (<= $generated@@447 $generated@@445) (=> (and (and (and ($generated@@448 $generated@@449) ($generated@@450 $generated@@449)) (and ($generated@@221 $generated@@447 $generated@@445) ($generated@@202 $generated@@447 $generated@@445))) (and (and (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@447 $generated@@445) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@447 $generated@@445)) (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@72) (=> (and (not (= $generated@@465 $generated@@451)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@452 $generated@@465) $generated@@60))) (= ($generated@@76 $generated@@449 $generated@@465) ($generated@@76 $generated@@452 $generated@@465))))
 :pattern ( ($generated@@76 $generated@@449 $generated@@465))
))) (and ($generated@@281 $generated@@452 $generated@@449) (= (ControlFlow 0 15) 14)))) $generated@@463))))))))
(let (($generated@@466  (=> (and (< $generated@@446 $generated@@445) (= $generated@@453 (- $generated@@445 $generated@@446))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (<= ($generated@@201 0) $generated@@446)) (=> (<= ($generated@@201 0) $generated@@446) (=> (and (and (and ($generated@@448 $generated@@454) ($generated@@450 $generated@@454)) ($generated@@227 $generated@@446)) (and (and (= ($generated@@203 ($generated@@201 2) ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@446)) ($generated@@203 $generated@@446 (- $generated@@446 1))) (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@72) (=> (and (not (= $generated@@467 $generated@@451)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@452 $generated@@467) $generated@@60))) (= ($generated@@76 $generated@@454 $generated@@467) ($generated@@76 $generated@@452 $generated@@467))))
 :pattern ( ($generated@@76 $generated@@454 $generated@@467))
))) (and ($generated@@281 $generated@@452 $generated@@454) (= $generated@@455 (+ $generated@@446 1))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (<= 0 $generated@@453) (= (- $generated@@445 $generated@@455) $generated@@453))) (=> (or (<= 0 $generated@@453) (= (- $generated@@445 $generated@@455) $generated@@453)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< (- $generated@@445 $generated@@455) $generated@@453)) (=> (< (- $generated@@445 $generated@@455) $generated@@453) (=> (=> (<= $generated@@455 $generated@@445) (and ($generated@@202 ($generated@@201 0) $generated@@455) (and ($generated@@227 $generated@@455) ($generated@@227 $generated@@455)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (=> $generated@@456 (<= $generated@@455 $generated@@445))) (=> (=> $generated@@456 (<= $generated@@455 $generated@@445)) (=> (= (ControlFlow 0 8) (- 0 7)) (=> $generated@@456 (= ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@455) ($generated@@203 ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@455) ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@455))))))))))))))))))
(let (($generated@@468  (=> $generated@@456 (and (=> (= (ControlFlow 0 18) 15) $generated@@464) (=> (= (ControlFlow 0 18) 8) $generated@@466)))))
(let (($generated@@469  (=> (not $generated@@456) (=> (and (and (<= $generated@@446 $generated@@445) (= $generated@@457 ($generated@@201 0))) (and ($generated@@69 ($generated@@8 $generated@@457) $generated@@46 $generated@@452) ($generated@@69 ($generated@@8 $generated@@446) $generated@@46 $generated@@452))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= ($generated@@201 0) $generated@@457)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= $generated@@457 $generated@@446)) (=> (and ($generated@@202 ($generated@@201 0) $generated@@446) ($generated@@69 ($generated@@8 $generated@@446) $generated@@46 $generated@@452)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@201 0) $generated@@446)) (=> ($generated@@227 $generated@@446) (=> (and ($generated@@69 ($generated@@8 $generated@@446) $generated@@46 $generated@@452) (= (ControlFlow 0 3) (- 0 2))) (<= ($generated@@201 0) $generated@@446)))))))))))
(let (($generated@@470  (and (=> (= (ControlFlow 0 19) 3) $generated@@469) (=> (= (ControlFlow 0 19) 18) $generated@@468))))
(let (($generated@@471 true))
(let (($generated@@472  (=> (and ($generated@@448 $generated@@452) ($generated@@450 $generated@@452)) (=> (and (and (and (and (not false) (<= 0 $generated@@446)) (<= 0 $generated@@458)) (=> $generated@@456 true)) (and (and (and (=> $generated@@456 (<= $generated@@446 $generated@@445)) (=> $generated@@456 (and ($generated@@202 ($generated@@201 0) $generated@@446) (and ($generated@@227 $generated@@446) ($generated@@227 $generated@@446))))) (and (=> $generated@@456 (= ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@446) ($generated@@203 ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@446) ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@446)))) (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (=> (and (not (= $generated@@473 $generated@@451)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@459 $generated@@473) $generated@@60))) (= ($generated@@76 $generated@@452 $generated@@473) ($generated@@76 $generated@@460 $generated@@473))))
 :pattern ( ($generated@@76 $generated@@452 $generated@@473))
)))) (and (and ($generated@@281 $generated@@460 $generated@@452) (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@64 (type $generated@@475))))
 (=> (and (and (= (type $generated@@474) $generated@@72) (= (type $generated@@475) ($generated@@63 $generated@@476))) (and (not (= $generated@@474 $generated@@451)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@460 $generated@@474) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@452 $generated@@474) $generated@@475) ($generated@@78 ($generated@@76 $generated@@460 $generated@@474) $generated@@475)) ($generated@@0 ($generated@@143 $generated@@461 $generated@@474 $generated@@475)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@452 $generated@@474) $generated@@475))
))) (and (<= (- $generated@@445 $generated@@446) $generated@@458) (=> (= (- $generated@@445 $generated@@446) $generated@@458) true))))) (and (=> (= (ControlFlow 0 20) 1) $generated@@471) (=> (= (ControlFlow 0 20) 19) $generated@@470))))))
(let (($generated@@477  (=> (= $generated@@461 ($generated@@144 $generated@@451 $generated@@459 $generated@@60 false)) (=> (and (and (and ($generated@@448 $generated@@460) ($generated@@450 $generated@@460)) (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@72) (=> (and (not (= $generated@@478 $generated@@451)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@459 $generated@@478) $generated@@60))) (= ($generated@@76 $generated@@460 $generated@@478) ($generated@@76 $generated@@459 $generated@@478))))
 :pattern ( ($generated@@76 $generated@@460 $generated@@478))
))) (and (and ($generated@@281 $generated@@459 $generated@@460) (forall (($generated@@479 Int) )  (=> (and (<= ($generated@@201 0) $generated@@479) (and (<= 0 $generated@@479) (< $generated@@479 $generated@@445))) (= ($generated@@131 ($generated@@200 $generated@@134) ($generated@@201 0) $generated@@479) ($generated@@203 ($generated@@226 ($generated@@200 $generated@@134) $generated@@479) ($generated@@226 ($generated@@200 $generated@@134) $generated@@479)))))) (and (= $generated@@462 ($generated@@201 0)) (= $generated@@458 (- $generated@@445 $generated@@462))))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> $generated@@456 (<= $generated@@462 $generated@@445))) (=> (=> $generated@@456 (<= $generated@@462 $generated@@445)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@456 (= ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@462) ($generated@@203 ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@462) ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@462))))) (=> (=> $generated@@456 (= ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) ($generated@@201 0) $generated@@462) ($generated@@203 ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@462) ($generated@@226 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@462)))) (=> (= (ControlFlow 0 21) 20) $generated@@472)))))))))
(let (($generated@@480  (=> (and (and (and ($generated@@448 $generated@@459) ($generated@@450 $generated@@459)) (= 2 $generated@@199)) (and (<= ($generated@@201 0) $generated@@445) (= (ControlFlow 0 24) 21))) $generated@@477)))
$generated@@480)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 (T@U Int) Int)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 () T@T)
(declare-fun $generated@@206 (Int) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) Bool)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (T@T T@T) T@U)
(declare-fun $generated@@227 (T@T T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@T T@T) T@U)
(declare-fun $generated@@245 (T@T T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@T) T@T)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 () T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@387 (Int Int) Int)
(declare-fun $generated@@406 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert ($generated@@201 $generated@@60))
(assert  (and (= ($generated@@1 $generated@@205) 14) (forall (($generated@@207 T@U) ) (! (= (type ($generated@@204 $generated@@207)) $generated@@205)
 :pattern ( ($generated@@204 $generated@@207))
))))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@208 T@U) ($generated@@209 Int) ) (!  (=> (and (= (type $generated@@208) $generated@@205) (or ($generated@@206 ($generated@@187 $generated@@209)) (and (not (= 0 $generated@@202)) (<= ($generated@@187 0) ($generated@@187 $generated@@209))))) (and (=> (not (= ($generated@@187 $generated@@209) ($generated@@187 0))) ($generated@@206 ($generated@@187 (- $generated@@209 1)))) (= ($generated@@203 ($generated@@204 $generated@@208) ($generated@@187 $generated@@209)) (ite (= ($generated@@187 $generated@@209) ($generated@@187 0)) 0 (- (+ ($generated@@203 ($generated@@204 $generated@@208) ($generated@@187 (- $generated@@209 1))) $generated@@209) 1)))))
 :weight 3
 :pattern ( ($generated@@203 ($generated@@204 $generated@@208) ($generated@@187 $generated@@209)))
))))
(assert  (and (= ($generated@@1 $generated@@212) 15) (forall (($generated@@213 T@U) ) (! (= (type ($generated@@211 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@211 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@61) (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@210 ($generated@@211 $generated@@214) $generated@@215 $generated@@216) ($generated@@69 $generated@@214 $generated@@215 $generated@@216)))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@217) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@218) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@219) $generated@@212)) (= (type $generated@@220) $generated@@61)) ($generated@@127 $generated@@217 $generated@@218)) ($generated@@210 $generated@@219 $generated@@220 $generated@@217)) ($generated@@210 $generated@@219 $generated@@220 $generated@@218))
 :pattern ( ($generated@@127 $generated@@217 $generated@@218) ($generated@@210 $generated@@219 $generated@@220 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@221) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@222) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@224) $generated@@61)) ($generated@@127 $generated@@221 $generated@@222)) ($generated@@69 $generated@@223 $generated@@224 $generated@@221)) ($generated@@69 $generated@@223 $generated@@224 $generated@@222))
 :pattern ( ($generated@@127 $generated@@221 $generated@@222) ($generated@@69 $generated@@223 $generated@@224 $generated@@221))
)))
(assert  (and (and (and (and (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@230 $generated@@231)) 16)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@227 $generated@@234 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@227 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@228 (type $generated@@236))))
(= (type ($generated@@225 $generated@@236)) ($generated@@71 $generated@@237 $generated@@4)))
 :pattern ( ($generated@@225 $generated@@236))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= (type ($generated@@226 $generated@@238 $generated@@239)) ($generated@@227 $generated@@238 $generated@@239))
 :pattern ( ($generated@@226 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@T) ) (! (let (($generated@@242 (type $generated@@240)))
 (not ($generated@@0 ($generated@@76 ($generated@@225 ($generated@@226 $generated@@242 $generated@@241)) $generated@@240))))
 :pattern ( (let (($generated@@242 (type $generated@@240)))
($generated@@76 ($generated@@225 ($generated@@226 $generated@@242 $generated@@241)) $generated@@240)))
)))
(assert  (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@245 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@247 ($generated@@245 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@245 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@243 $generated@@254)) ($generated@@71 $generated@@255 $generated@@4)))
 :pattern ( ($generated@@243 $generated@@254))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= (type ($generated@@244 $generated@@256 $generated@@257)) ($generated@@245 $generated@@256 $generated@@257))
 :pattern ( ($generated@@244 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@T) ) (! (let (($generated@@260 (type $generated@@258)))
 (not ($generated@@0 ($generated@@76 ($generated@@243 ($generated@@244 $generated@@260 $generated@@259)) $generated@@258))))
 :pattern ( (let (($generated@@260 (type $generated@@258)))
($generated@@76 ($generated@@243 ($generated@@244 $generated@@260 $generated@@259)) $generated@@258)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@261 $generated@@262 $generated@@263)) (and ($generated@@127 $generated@@262 $generated@@263) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@64 (type $generated@@265))))
 (=> (and (and (= (type $generated@@264) $generated@@72) (= (type $generated@@265) ($generated@@63 $generated@@266))) (not ($generated@@201 $generated@@265))) (= ($generated@@78 ($generated@@76 $generated@@262 $generated@@264) $generated@@265) ($generated@@78 ($generated@@76 $generated@@263 $generated@@264) $generated@@265))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@263 $generated@@264) $generated@@265))
))))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@229 (type $generated@@267))))
(let (($generated@@269 ($generated@@228 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@227 $generated@@269 $generated@@268)) (or (= $generated@@267 ($generated@@226 $generated@@269 $generated@@268)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) ($generated@@0 ($generated@@76 ($generated@@225 $generated@@267) $generated@@270)))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@225 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@247 (type $generated@@271))))
(let (($generated@@273 ($generated@@246 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@245 $generated@@273 $generated@@272)) (or (= $generated@@271 ($generated@@244 $generated@@273 $generated@@272)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) ($generated@@0 ($generated@@76 ($generated@@243 $generated@@271) $generated@@274)))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@243 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@61)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) ($generated@@71 $generated@@212 $generated@@4)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@212) ($generated@@0 ($generated@@76 $generated@@277 $generated@@280))) ($generated@@210 $generated@@280 $generated@@278 $generated@@279))
 :pattern ( ($generated@@76 $generated@@277 $generated@@280))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@71 $generated@@212 $generated@@4)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@212) ($generated@@0 ($generated@@76 $generated@@283 $generated@@286))) ($generated@@210 $generated@@286 $generated@@284 $generated@@285))
 :pattern ( ($generated@@76 $generated@@283 $generated@@286))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@205) (or ($generated@@206 $generated@@288) (and (not (= 0 $generated@@202)) (<= ($generated@@187 0) $generated@@288)))) true)
 :pattern ( ($generated@@203 $generated@@287 $generated@@288))
))))
(assert  (and (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@229 (type $generated@@293))))
(let (($generated@@295 ($generated@@228 (type $generated@@293))))
(= (type ($generated@@290 $generated@@293)) ($generated@@71 $generated@@295 $generated@@294))))
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@227 $generated@@212 $generated@@212)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@212) ($generated@@0 ($generated@@76 ($generated@@225 $generated@@296) $generated@@300))) (and ($generated@@210 ($generated@@76 ($generated@@290 $generated@@296) $generated@@300) $generated@@298 $generated@@299) ($generated@@210 $generated@@300 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@76 ($generated@@290 $generated@@296) $generated@@300))
 :pattern ( ($generated@@76 ($generated@@225 $generated@@296) $generated@@300))
))))
 :pattern ( ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299))
)))
(assert  (and (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (= (type ($generated@@301 $generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304))
)) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@247 (type $generated@@305))))
(let (($generated@@307 ($generated@@246 (type $generated@@305))))
(= (type ($generated@@302 $generated@@305)) ($generated@@71 $generated@@307 $generated@@306))))
 :pattern ( ($generated@@302 $generated@@305))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@245 $generated@@212 $generated@@212)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) $generated@@61)) (= (type $generated@@311) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@212) ($generated@@0 ($generated@@76 ($generated@@243 $generated@@308) $generated@@312))) (and ($generated@@210 ($generated@@76 ($generated@@302 $generated@@308) $generated@@312) $generated@@310 $generated@@311) ($generated@@210 $generated@@312 $generated@@309 $generated@@311)))
 :pattern ( ($generated@@76 ($generated@@302 $generated@@308) $generated@@312))
 :pattern ( ($generated@@76 ($generated@@243 $generated@@308) $generated@@312))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@315) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@313 $generated@@315))) (and ($generated@@127 $generated@@313 $generated@@314) ($generated@@127 $generated@@314 $generated@@315))) ($generated@@127 $generated@@313 $generated@@315))
 :pattern ( ($generated@@127 $generated@@313 $generated@@314) ($generated@@127 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@247 (type $generated@@318))))
(let (($generated@@320 ($generated@@246 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@245 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@244 $generated@@320 $generated@@319)) (= ($generated@@243 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@243 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@196 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@195 $generated@@322)) (<= 0 ($generated@@194 $generated@@321))))
 :pattern ( ($generated@@194 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@289 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@289 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@289 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@289 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@289 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@289 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@301 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@301 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@301 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@301 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@301 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@301 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@205)
 :pattern ( ($generated@@343 $generated@@345))
)) (= (type $generated@@344) $generated@@205)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ) (!  (=> (= (type $generated@@346) $generated@@205) (= ($generated@@203 $generated@@346 $generated@@347) ($generated@@203 $generated@@344 $generated@@347)))
 :pattern ( ($generated@@203 ($generated@@343 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@196 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@195 $generated@@212)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@194 $generated@@354))) ($generated@@210 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@275 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@275 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@275 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@281 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@281 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@281 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@211 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@211 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 Int) ) (!  (=> (= (type $generated@@383) $generated@@205) (= ($generated@@203 ($generated@@204 $generated@@383) $generated@@384) ($generated@@203 $generated@@383 $generated@@384)))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@386) $generated@@385))))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@76 ($generated@@316 $generated@@386) $generated@@385)))
)))
(assert (forall (($generated@@388 Int) ($generated@@389 Int) ) (! (= ($generated@@387 $generated@@388 $generated@@389) (* $generated@@388 $generated@@389))
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@390 T@U) ($generated@@391 Int) ) (!  (=> (and (= (type $generated@@390) $generated@@205) (or ($generated@@206 $generated@@391) (and (not (= 0 $generated@@202)) (<= ($generated@@187 0) $generated@@391)))) (and (=> (not (= $generated@@391 ($generated@@187 0))) ($generated@@206 (- $generated@@391 1))) (= ($generated@@203 ($generated@@204 $generated@@390) $generated@@391) (ite (= $generated@@391 ($generated@@187 0)) 0 (- (+ ($generated@@203 $generated@@390 (- $generated@@391 1)) $generated@@391) 1)))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@390) $generated@@391))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@71 $generated@@212 $generated@@2)) (= (type $generated@@393) $generated@@61)) (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@392 ($generated@@368 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@212) (< 0 ($generated ($generated@@76 $generated@@392 $generated@@395)))) ($generated@@210 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@76 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@69 $generated@@392 ($generated@@368 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 Int) ) (! (= ($generated@@211 ($generated@@8 ($generated@@187 $generated@@396))) ($generated@@189 ($generated@@211 ($generated@@8 $generated@@396))))
 :pattern ( ($generated@@211 ($generated@@8 ($generated@@187 $generated@@396))))
)))
(assert (forall (($generated@@397 T@U) ) (! (= ($generated@@211 ($generated@@189 $generated@@397)) ($generated@@189 ($generated@@211 $generated@@397)))
 :pattern ( ($generated@@211 ($generated@@189 $generated@@397)))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@196 (type $generated@@398))))
 (=> (and (= (type $generated@@398) ($generated@@195 $generated@@399)) (= ($generated@@194 $generated@@398) 0)) (= $generated@@398 ($generated@@193 $generated@@399))))
 :pattern ( ($generated@@194 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@2)) ($generated@@69 $generated@@401 $generated@@46 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@46 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@3)) ($generated@@69 $generated@@403 $generated@@47 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@47 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@405) $generated@@4)) ($generated@@69 $generated@@405 $generated@@44 $generated@@404))
 :pattern ( ($generated@@69 $generated@@405 $generated@@44 $generated@@404))
)))
(assert (= ($generated@@1 $generated@@406) 18))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@408) $generated@@406)) ($generated@@69 $generated@@408 $generated@@45 $generated@@407))
 :pattern ( ($generated@@69 $generated@@408 $generated@@45 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@410) $generated@@212)) ($generated@@69 $generated@@410 $generated@@48 $generated@@409))
 :pattern ( ($generated@@69 $generated@@410 $generated@@48 $generated@@409))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 (T@U) Bool)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@411) ($generated@@133 $generated@@72 $generated@@4)) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@418  (=> (and (and (and (= $generated@@411 ($generated@@132 $generated@@412 $generated@@413 $generated@@60 false)) (<= ($generated@@187 0) $generated@@414)) (and ($generated@@415 $generated@@416) ($generated@@417 $generated@@416))) (and (and (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@72) (=> (and (not (= $generated@@419 $generated@@412)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@413 $generated@@419) $generated@@60))) (= ($generated@@76 $generated@@416 $generated@@419) ($generated@@76 $generated@@413 $generated@@419))))
 :pattern ( ($generated@@76 $generated@@416 $generated@@419))
)) ($generated@@261 $generated@@413 $generated@@416)) (and ($generated@@69 ($generated@@8 $generated@@414) $generated@@46 $generated@@416) (= (ControlFlow 0 2) (- 0 1))))) (<= ($generated@@187 0) $generated@@414))))
(let (($generated@@420  (=> (and (and ($generated@@415 $generated@@413) ($generated@@417 $generated@@413)) (and (= 1 $generated@@202) (= (ControlFlow 0 3) 2))) $generated@@418)))
$generated@@420)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 (T@U Int) Int)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 () T@T)
(declare-fun $generated@@206 (Int) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) Bool)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (T@T T@T) T@U)
(declare-fun $generated@@227 (T@T T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@T T@T) T@U)
(declare-fun $generated@@245 (T@T T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@T) T@T)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 () T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@387 (Int Int) Int)
(declare-fun $generated@@406 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert ($generated@@201 $generated@@60))
(assert  (and (= ($generated@@1 $generated@@205) 14) (forall (($generated@@207 T@U) ) (! (= (type ($generated@@204 $generated@@207)) $generated@@205)
 :pattern ( ($generated@@204 $generated@@207))
))))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@208 T@U) ($generated@@209 Int) ) (!  (=> (and (= (type $generated@@208) $generated@@205) (or ($generated@@206 ($generated@@187 $generated@@209)) (and (not (= 0 $generated@@202)) (<= ($generated@@187 0) ($generated@@187 $generated@@209))))) (and (=> (not (= ($generated@@187 $generated@@209) ($generated@@187 0))) ($generated@@206 ($generated@@187 (- $generated@@209 1)))) (= ($generated@@203 ($generated@@204 $generated@@208) ($generated@@187 $generated@@209)) (ite (= ($generated@@187 $generated@@209) ($generated@@187 0)) 0 (- (+ ($generated@@203 ($generated@@204 $generated@@208) ($generated@@187 (- $generated@@209 1))) $generated@@209) 1)))))
 :weight 3
 :pattern ( ($generated@@203 ($generated@@204 $generated@@208) ($generated@@187 $generated@@209)))
))))
(assert  (and (= ($generated@@1 $generated@@212) 15) (forall (($generated@@213 T@U) ) (! (= (type ($generated@@211 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@211 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@61) (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@210 ($generated@@211 $generated@@214) $generated@@215 $generated@@216) ($generated@@69 $generated@@214 $generated@@215 $generated@@216)))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@217) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@218) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@219) $generated@@212)) (= (type $generated@@220) $generated@@61)) ($generated@@127 $generated@@217 $generated@@218)) ($generated@@210 $generated@@219 $generated@@220 $generated@@217)) ($generated@@210 $generated@@219 $generated@@220 $generated@@218))
 :pattern ( ($generated@@127 $generated@@217 $generated@@218) ($generated@@210 $generated@@219 $generated@@220 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@221) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@222) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@224) $generated@@61)) ($generated@@127 $generated@@221 $generated@@222)) ($generated@@69 $generated@@223 $generated@@224 $generated@@221)) ($generated@@69 $generated@@223 $generated@@224 $generated@@222))
 :pattern ( ($generated@@127 $generated@@221 $generated@@222) ($generated@@69 $generated@@223 $generated@@224 $generated@@221))
)))
(assert  (and (and (and (and (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@230 $generated@@231)) 16)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@227 $generated@@234 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@227 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@228 (type $generated@@236))))
(= (type ($generated@@225 $generated@@236)) ($generated@@71 $generated@@237 $generated@@4)))
 :pattern ( ($generated@@225 $generated@@236))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= (type ($generated@@226 $generated@@238 $generated@@239)) ($generated@@227 $generated@@238 $generated@@239))
 :pattern ( ($generated@@226 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@T) ) (! (let (($generated@@242 (type $generated@@240)))
 (not ($generated@@0 ($generated@@76 ($generated@@225 ($generated@@226 $generated@@242 $generated@@241)) $generated@@240))))
 :pattern ( (let (($generated@@242 (type $generated@@240)))
($generated@@76 ($generated@@225 ($generated@@226 $generated@@242 $generated@@241)) $generated@@240)))
)))
(assert  (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@245 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@247 ($generated@@245 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@245 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@243 $generated@@254)) ($generated@@71 $generated@@255 $generated@@4)))
 :pattern ( ($generated@@243 $generated@@254))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= (type ($generated@@244 $generated@@256 $generated@@257)) ($generated@@245 $generated@@256 $generated@@257))
 :pattern ( ($generated@@244 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@T) ) (! (let (($generated@@260 (type $generated@@258)))
 (not ($generated@@0 ($generated@@76 ($generated@@243 ($generated@@244 $generated@@260 $generated@@259)) $generated@@258))))
 :pattern ( (let (($generated@@260 (type $generated@@258)))
($generated@@76 ($generated@@243 ($generated@@244 $generated@@260 $generated@@259)) $generated@@258)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@261 $generated@@262 $generated@@263)) (and ($generated@@127 $generated@@262 $generated@@263) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@64 (type $generated@@265))))
 (=> (and (and (= (type $generated@@264) $generated@@72) (= (type $generated@@265) ($generated@@63 $generated@@266))) (not ($generated@@201 $generated@@265))) (= ($generated@@78 ($generated@@76 $generated@@262 $generated@@264) $generated@@265) ($generated@@78 ($generated@@76 $generated@@263 $generated@@264) $generated@@265))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@263 $generated@@264) $generated@@265))
))))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@229 (type $generated@@267))))
(let (($generated@@269 ($generated@@228 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@227 $generated@@269 $generated@@268)) (or (= $generated@@267 ($generated@@226 $generated@@269 $generated@@268)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) ($generated@@0 ($generated@@76 ($generated@@225 $generated@@267) $generated@@270)))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@225 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@247 (type $generated@@271))))
(let (($generated@@273 ($generated@@246 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@245 $generated@@273 $generated@@272)) (or (= $generated@@271 ($generated@@244 $generated@@273 $generated@@272)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) ($generated@@0 ($generated@@76 ($generated@@243 $generated@@271) $generated@@274)))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@243 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@61)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) ($generated@@71 $generated@@212 $generated@@4)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@212) ($generated@@0 ($generated@@76 $generated@@277 $generated@@280))) ($generated@@210 $generated@@280 $generated@@278 $generated@@279))
 :pattern ( ($generated@@76 $generated@@277 $generated@@280))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@275 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@71 $generated@@212 $generated@@4)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@212) ($generated@@0 ($generated@@76 $generated@@283 $generated@@286))) ($generated@@210 $generated@@286 $generated@@284 $generated@@285))
 :pattern ( ($generated@@76 $generated@@283 $generated@@286))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@205) (or ($generated@@206 $generated@@288) (and (not (= 0 $generated@@202)) (<= ($generated@@187 0) $generated@@288)))) true)
 :pattern ( ($generated@@203 $generated@@287 $generated@@288))
))))
(assert  (and (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@229 (type $generated@@293))))
(let (($generated@@295 ($generated@@228 (type $generated@@293))))
(= (type ($generated@@290 $generated@@293)) ($generated@@71 $generated@@295 $generated@@294))))
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@227 $generated@@212 $generated@@212)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@212) ($generated@@0 ($generated@@76 ($generated@@225 $generated@@296) $generated@@300))) (and ($generated@@210 ($generated@@76 ($generated@@290 $generated@@296) $generated@@300) $generated@@298 $generated@@299) ($generated@@210 $generated@@300 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@76 ($generated@@290 $generated@@296) $generated@@300))
 :pattern ( ($generated@@76 ($generated@@225 $generated@@296) $generated@@300))
))))
 :pattern ( ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299))
)))
(assert  (and (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (= (type ($generated@@301 $generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304))
)) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@247 (type $generated@@305))))
(let (($generated@@307 ($generated@@246 (type $generated@@305))))
(= (type ($generated@@302 $generated@@305)) ($generated@@71 $generated@@307 $generated@@306))))
 :pattern ( ($generated@@302 $generated@@305))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@245 $generated@@212 $generated@@212)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) $generated@@61)) (= (type $generated@@311) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@212) ($generated@@0 ($generated@@76 ($generated@@243 $generated@@308) $generated@@312))) (and ($generated@@210 ($generated@@76 ($generated@@302 $generated@@308) $generated@@312) $generated@@310 $generated@@311) ($generated@@210 $generated@@312 $generated@@309 $generated@@311)))
 :pattern ( ($generated@@76 ($generated@@302 $generated@@308) $generated@@312))
 :pattern ( ($generated@@76 ($generated@@243 $generated@@308) $generated@@312))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@301 $generated@@309 $generated@@310) $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@315) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@313 $generated@@315))) (and ($generated@@127 $generated@@313 $generated@@314) ($generated@@127 $generated@@314 $generated@@315))) ($generated@@127 $generated@@313 $generated@@315))
 :pattern ( ($generated@@127 $generated@@313 $generated@@314) ($generated@@127 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@247 (type $generated@@318))))
(let (($generated@@320 ($generated@@246 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@245 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@244 $generated@@320 $generated@@319)) (= ($generated@@243 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@243 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@196 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@195 $generated@@322)) (<= 0 ($generated@@194 $generated@@321))))
 :pattern ( ($generated@@194 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@289 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@289 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@289 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@289 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@289 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@289 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@301 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@301 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@301 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@301 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@301 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@301 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@205)
 :pattern ( ($generated@@343 $generated@@345))
)) (= (type $generated@@344) $generated@@205)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ) (!  (=> (= (type $generated@@346) $generated@@205) (= ($generated@@203 $generated@@346 $generated@@347) ($generated@@203 $generated@@344 $generated@@347)))
 :pattern ( ($generated@@203 ($generated@@343 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@196 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@195 $generated@@212)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@194 $generated@@354))) ($generated@@210 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@275 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@275 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@275 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@281 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@281 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@281 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@211 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@211 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 Int) ) (!  (=> (= (type $generated@@383) $generated@@205) (= ($generated@@203 ($generated@@204 $generated@@383) $generated@@384) ($generated@@203 $generated@@383 $generated@@384)))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@386) $generated@@385))))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@76 ($generated@@316 $generated@@386) $generated@@385)))
)))
(assert (forall (($generated@@388 Int) ($generated@@389 Int) ) (! (= ($generated@@387 $generated@@388 $generated@@389) (* $generated@@388 $generated@@389))
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@390 T@U) ($generated@@391 Int) ) (!  (=> (and (= (type $generated@@390) $generated@@205) (or ($generated@@206 $generated@@391) (and (not (= 0 $generated@@202)) (<= ($generated@@187 0) $generated@@391)))) (and (=> (not (= $generated@@391 ($generated@@187 0))) ($generated@@206 (- $generated@@391 1))) (= ($generated@@203 ($generated@@204 $generated@@390) $generated@@391) (ite (= $generated@@391 ($generated@@187 0)) 0 (- (+ ($generated@@203 $generated@@390 (- $generated@@391 1)) $generated@@391) 1)))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@390) $generated@@391))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@71 $generated@@212 $generated@@2)) (= (type $generated@@393) $generated@@61)) (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@392 ($generated@@368 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@212) (< 0 ($generated ($generated@@76 $generated@@392 $generated@@395)))) ($generated@@210 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@76 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@69 $generated@@392 ($generated@@368 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 Int) ) (! (= ($generated@@211 ($generated@@8 ($generated@@187 $generated@@396))) ($generated@@189 ($generated@@211 ($generated@@8 $generated@@396))))
 :pattern ( ($generated@@211 ($generated@@8 ($generated@@187 $generated@@396))))
)))
(assert (forall (($generated@@397 T@U) ) (! (= ($generated@@211 ($generated@@189 $generated@@397)) ($generated@@189 ($generated@@211 $generated@@397)))
 :pattern ( ($generated@@211 ($generated@@189 $generated@@397)))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@196 (type $generated@@398))))
 (=> (and (= (type $generated@@398) ($generated@@195 $generated@@399)) (= ($generated@@194 $generated@@398) 0)) (= $generated@@398 ($generated@@193 $generated@@399))))
 :pattern ( ($generated@@194 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@2)) ($generated@@69 $generated@@401 $generated@@46 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@46 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@3)) ($generated@@69 $generated@@403 $generated@@47 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@47 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@405) $generated@@4)) ($generated@@69 $generated@@405 $generated@@44 $generated@@404))
 :pattern ( ($generated@@69 $generated@@405 $generated@@44 $generated@@404))
)))
(assert (= ($generated@@1 $generated@@406) 18))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@408) $generated@@406)) ($generated@@69 $generated@@408 $generated@@45 $generated@@407))
 :pattern ( ($generated@@69 $generated@@408 $generated@@45 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@410) $generated@@212)) ($generated@@69 $generated@@410 $generated@@48 $generated@@409))
 :pattern ( ($generated@@69 $generated@@410 $generated@@48 $generated@@409))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@411 () Int)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Int)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 () Int)
(declare-fun $generated@@418 () T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@420 () T@U)
(declare-fun $generated@@421 (T@U) Bool)
(declare-fun $generated@@422 (T@U) Bool)
(declare-fun $generated@@423 () Int)
(assert  (and (and (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@418) $generated@@72)) (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@420) ($generated@@133 $generated@@72 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@424  (=> (= (ControlFlow 0 10) (- 0 9)) (= ($generated@@387 ($generated@@187 2) ($generated@@203 ($generated@@204 ($generated@@204 $generated@@344)) $generated@@411)) ($generated@@387 $generated@@411 (- $generated@@411 1))))))
(let (($generated@@425  (=> (and (<= $generated@@411 $generated@@412) (= (ControlFlow 0 11) 10)) $generated@@424)))
(let (($generated@@426  (=> (< $generated@@412 $generated@@411) (=> (and (= $generated@@413 (- $generated@@411 $generated@@412)) (= $generated@@414 (+ $generated@@412 1))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (<= 0 $generated@@413) (= (- $generated@@411 $generated@@414) $generated@@413))) (=> (or (<= 0 $generated@@413) (= (- $generated@@411 $generated@@414) $generated@@413)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< (- $generated@@411 $generated@@414) $generated@@413)) (=> (< (- $generated@@411 $generated@@414) $generated@@413) (=> (=> (<= $generated@@414 $generated@@411) ($generated@@206 $generated@@414)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@415 (<= $generated@@414 $generated@@411))) (=> (=> $generated@@415 (<= $generated@@414 $generated@@411)) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@415 (= ($generated@@387 ($generated@@187 2) ($generated@@203 ($generated@@204 ($generated@@204 $generated@@344)) $generated@@414)) ($generated@@387 $generated@@414 (- $generated@@414 1))))))))))))))))
(let (($generated@@427  (=> $generated@@415 (and (=> (= (ControlFlow 0 12) 11) $generated@@425) (=> (= (ControlFlow 0 12) 5) $generated@@426)))))
(let (($generated@@428  (=> (and (and (not $generated@@415) (<= $generated@@412 $generated@@411)) (and ($generated@@69 ($generated@@8 $generated@@412) $generated@@46 $generated@@416) (= (ControlFlow 0 3) (- 0 2)))) (<= ($generated@@187 0) $generated@@412))))
(let (($generated@@429  (and (=> (= (ControlFlow 0 13) 3) $generated@@428) (=> (= (ControlFlow 0 13) 12) $generated@@427))))
(let (($generated@@430 true))
(let (($generated@@431  (=> (and (and (and (and (not false) (<= 0 $generated@@412)) (<= 0 $generated@@417)) (=> $generated@@415 true)) (and (and (and (=> $generated@@415 (<= $generated@@412 $generated@@411)) (=> $generated@@415 ($generated@@206 $generated@@412))) (and (=> $generated@@415 (= ($generated@@387 ($generated@@187 2) ($generated@@203 ($generated@@204 ($generated@@204 $generated@@344)) $generated@@412)) ($generated@@387 $generated@@412 (- $generated@@412 1)))) (forall (($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@72) (=> (and (not (= $generated@@432 $generated@@418)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@419 $generated@@432) $generated@@60))) (= ($generated@@76 $generated@@416 $generated@@432) ($generated@@76 $generated@@416 $generated@@432))))
 :pattern ( ($generated@@76 $generated@@416 $generated@@432))
)))) (and (and ($generated@@261 $generated@@416 $generated@@416) (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@64 (type $generated@@434))))
 (=> (and (and (= (type $generated@@433) $generated@@72) (= (type $generated@@434) ($generated@@63 $generated@@435))) (and (not (= $generated@@433 $generated@@418)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@416 $generated@@433) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@416 $generated@@433) $generated@@434) ($generated@@78 ($generated@@76 $generated@@416 $generated@@433) $generated@@434)) ($generated@@0 ($generated@@131 $generated@@420 $generated@@433 $generated@@434)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@416 $generated@@433) $generated@@434))
))) (and (<= (- $generated@@411 $generated@@412) $generated@@417) (=> (= (- $generated@@411 $generated@@412) $generated@@417) true))))) (and (=> (= (ControlFlow 0 14) 1) $generated@@430) (=> (= (ControlFlow 0 14) 13) $generated@@429)))))
(let (($generated@@436  (=> (= $generated@@420 ($generated@@132 $generated@@418 $generated@@419 $generated@@60 false)) (=> (and (and (and ($generated@@421 $generated@@416) ($generated@@422 $generated@@416)) (forall (($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@72) (=> (and (not (= $generated@@437 $generated@@418)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@419 $generated@@437) $generated@@60))) (= ($generated@@76 $generated@@416 $generated@@437) ($generated@@76 $generated@@419 $generated@@437))))
 :pattern ( ($generated@@76 $generated@@416 $generated@@437))
))) (and (and ($generated@@261 $generated@@419 $generated@@416) (forall (($generated@@438 Int) )  (=> (and (<= ($generated@@187 0) $generated@@438) (and (<= 0 $generated@@438) (< $generated@@438 $generated@@411))) (= ($generated@@387 ($generated@@187 2) ($generated@@203 ($generated@@204 $generated@@344) $generated@@438)) ($generated@@387 $generated@@438 (- $generated@@438 1)))))) (and (= $generated@@423 ($generated@@187 0)) (= $generated@@417 (- $generated@@411 $generated@@423))))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (=> $generated@@415 (<= $generated@@423 $generated@@411))) (=> (=> $generated@@415 (<= $generated@@423 $generated@@411)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (=> $generated@@415 (= ($generated@@387 ($generated@@187 2) ($generated@@203 ($generated@@204 ($generated@@204 $generated@@344)) $generated@@423)) ($generated@@387 $generated@@423 (- $generated@@423 1))))) (=> (=> $generated@@415 (= ($generated@@387 ($generated@@187 2) ($generated@@203 ($generated@@204 ($generated@@204 $generated@@344)) $generated@@423)) ($generated@@387 $generated@@423 (- $generated@@423 1)))) (=> (= (ControlFlow 0 15) 14) $generated@@431)))))))))
(let (($generated@@439  (=> (and (and (and ($generated@@421 $generated@@419) ($generated@@422 $generated@@419)) (= 1 $generated@@202)) (and (<= ($generated@@187 0) $generated@@411) (= (ControlFlow 0 18) 15))) $generated@@436)))
$generated@@439)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U Int Int) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (Int) Int)
(declare-fun $generated@@234 (Int Int) Bool)
(declare-fun $generated@@235 (Int Int) Int)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@133 $generated@@136)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@136))
))) (= (type $generated@@135) $generated@@134)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 Int) ) (!  (=> (= (type $generated@@137) $generated@@134) (= ($generated@@132 $generated@@137 $generated@@138 $generated@@139) ($generated@@132 $generated@@135 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 16) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@67 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@77) (= (type $generated@@225) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@226) ($generated@@66 $generated@@4))) (= (type $generated@@228) $generated@@77)) (= (type $generated@@229) ($generated@@66 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@232 $generated@@236)) $generated@@134)
 :pattern ( ($generated@@232 $generated@@236))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@237 T@U) ($generated@@238 Int) ($generated@@239 Int) ) (!  (=> (and (= (type $generated@@237) $generated@@134) (or ($generated@@234 ($generated@@233 $generated@@238) ($generated@@233 $generated@@239)) (and (not (= 0 $generated@@231)) (and (<= ($generated@@233 0) ($generated@@233 $generated@@238)) (<= ($generated@@233 $generated@@238) ($generated@@233 $generated@@239)))))) (and (=> (not (= ($generated@@233 $generated@@239) ($generated@@233 $generated@@238))) ($generated@@234 ($generated@@233 $generated@@238) ($generated@@233 (- $generated@@239 1)))) (= ($generated@@132 ($generated@@232 $generated@@237) ($generated@@233 $generated@@238) ($generated@@233 $generated@@239)) (ite (= ($generated@@233 $generated@@239) ($generated@@233 $generated@@238)) 0 (+ ($generated@@132 ($generated@@232 $generated@@237) ($generated@@233 $generated@@238) ($generated@@233 (- $generated@@239 1))) ($generated@@235 ($generated@@233 ($generated@@235 ($generated@@233 (- $generated@@239 1)) ($generated@@233 (- $generated@@239 1)))) ($generated@@233 (- $generated@@239 1))))))))
 :weight 3
 :pattern ( ($generated@@132 ($generated@@232 $generated@@237) ($generated@@233 $generated@@238) ($generated@@233 $generated@@239)))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@144)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@153)) (= (type $generated@@247) $generated@@153)) (= ($generated@@140 ($generated@@240 $generated@@246 $generated@@247) ($generated@@143 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@140 ($generated@@240 $generated@@246 $generated@@247) ($generated@@143 $generated@@244 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@144) (= (type $generated@@249) $generated@@144)) (= ($generated@@150 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@150 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@140 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@153) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@241 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@140 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@64)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@258) $generated@@64)) (= ($generated@@140 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@153) ($generated@@0 ($generated@@81 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@81 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@140 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@233 $generated@@260) $generated@@260)
 :pattern ( ($generated@@233 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) $generated@@153)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@240 $generated@@269 $generated@@270) ($generated@@143 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@240 $generated@@269 $generated@@270) ($generated@@143 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@144) (= ($generated@@142 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@144) ($generated@@142 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@153) (= (type $generated@@277) $generated@@153)) (= $generated@@275 ($generated@@240 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@142 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 18)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@153)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@159 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@159 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 Int) ) (!  (=> (= (type $generated@@358) $generated@@134) (= ($generated@@132 ($generated@@232 $generated@@358) $generated@@359 $generated@@360) ($generated@@132 $generated@@358 $generated@@359 $generated@@360)))
 :pattern ( ($generated@@132 ($generated@@232 $generated@@358) $generated@@359 $generated@@360))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@361 T@U) ($generated@@362 Int) ($generated@@363 Int) ) (!  (=> (and (= (type $generated@@361) $generated@@134) (or ($generated@@234 $generated@@362 $generated@@363) (and (not (= 0 $generated@@231)) (and (<= ($generated@@233 0) $generated@@362) (<= $generated@@362 $generated@@363))))) (and (=> (not (= $generated@@363 $generated@@362)) ($generated@@234 $generated@@362 (- $generated@@363 1))) (= ($generated@@132 ($generated@@232 $generated@@361) $generated@@362 $generated@@363) (ite (= $generated@@363 $generated@@362) 0 (+ ($generated@@132 $generated@@361 $generated@@362 (- $generated@@363 1)) ($generated@@235 ($generated@@235 (- $generated@@363 1) (- $generated@@363 1)) (- $generated@@363 1)))))))
 :pattern ( ($generated@@132 ($generated@@232 $generated@@361) $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@365) $generated@@64)) (= ($generated@@140 $generated@@364 ($generated@@158 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@364 $generated@@366)))) ($generated@@241 $generated@@366 $generated@@365))
 :pattern ( ($generated@@81 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@140 $generated@@364 ($generated@@158 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@368) $generated@@64)) (= (type $generated@@369) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@367 ($generated@@250 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@153) ($generated@@0 ($generated@@81 $generated@@367 $generated@@370))) ($generated@@266 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@81 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@74 $generated@@367 ($generated@@250 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@372) $generated@@64)) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@371 ($generated@@255 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@153) ($generated@@0 ($generated@@81 $generated@@371 $generated@@374))) ($generated@@266 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@81 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@74 $generated@@371 ($generated@@255 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@81 ($generated@@292 $generated@@376) $generated@@375)))
)))
(assert  (and (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@377 $generated@@380)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@377 $generated@@380))
)) (forall (($generated@@381 T@T) ($generated@@382 T@U) ) (! (= (type ($generated@@378 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@378 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@301 (type $generated@@383))))
(let (($generated@@385 ($generated@@300 (type $generated@@383))))
(= (type ($generated@@379 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@379 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@387) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@386) ($generated@@151 ($generated@@378 $generated@@144 $generated@@387)))) (= ($generated@@81 ($generated@@379 $generated@@386) ($generated@@151 ($generated@@378 $generated@@144 $generated@@387))) ($generated@@152 ($generated@@378 $generated@@144 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@319 (type $generated@@391))))
(let (($generated@@393 ($generated@@318 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@76 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@395) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@394) ($generated@@151 ($generated@@378 $generated@@144 $generated@@395)))) (= ($generated@@81 ($generated@@389 $generated@@394) ($generated@@151 ($generated@@378 $generated@@144 $generated@@395))) ($generated@@152 ($generated@@378 $generated@@144 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@300 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@299 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@81 ($generated@@379 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@318 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@317 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@409) $generated@@413))) (and ($generated@@266 ($generated@@81 ($generated@@379 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@266 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@81 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@422 T@U) ($generated@@423 Int) ($generated@@424 Int) ) (!  (=> (and (= (type $generated@@422) $generated@@134) (or ($generated@@234 $generated@@423 $generated@@424) (and (not (= 0 $generated@@231)) (and (<= ($generated@@233 0) $generated@@423) (<= $generated@@423 $generated@@424))))) true)
 :pattern ( ($generated@@132 $generated@@422 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@76 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@315 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@315 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@319 (type $generated@@430))))
(let (($generated@@432 ($generated@@318 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@317 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@316 $generated@@432 $generated@@431)) (= ($generated@@351 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@351 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@319 (type $generated@@433))))
(let (($generated@@435 ($generated@@318 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@317 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@316 $generated@@435 $generated@@434)) (= ($generated@@388 $generated@@433) ($generated@@425 $generated@@153))))))
 :pattern ( ($generated@@388 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@301 (type $generated@@436))))
(let (($generated@@438 ($generated@@300 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@299 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@298 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@153) (= (type $generated@@440) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@436) ($generated@@286 ($generated@@240 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@377 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@319 (type $generated@@441))))
(let (($generated@@443 ($generated@@318 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@317 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@316 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@153) (= (type $generated@@445) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@388 $generated@@441) ($generated@@286 ($generated@@240 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@153) ($generated@@241 $generated@@446 $generated@@46)) (and (= ($generated@@286 ($generated@@378 $generated@@2 $generated@@446)) $generated@@446) ($generated@@140 ($generated@@378 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) ($generated@@241 $generated@@447 $generated@@47)) (and (= ($generated@@286 ($generated@@378 $generated@@3 $generated@@447)) $generated@@447) ($generated@@140 ($generated@@378 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@153) ($generated@@241 $generated@@448 $generated@@44)) (and (= ($generated@@286 ($generated@@378 $generated@@4 $generated@@448)) $generated@@448) ($generated@@140 ($generated@@378 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 21))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@153) ($generated@@241 $generated@@450 $generated@@45)) (and (= ($generated@@286 ($generated@@378 $generated@@449 $generated@@450)) $generated@@450) ($generated@@140 ($generated@@378 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@64) (= ($generated@@241 ($generated@@286 $generated@@451) $generated@@452) ($generated@@140 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@241 ($generated@@286 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@79 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@76 $generated@@454 $generated@@2)) (<= 0 ($generated@@291 $generated@@453))))
 :pattern ( ($generated@@291 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@281 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@280 $generated@@456)) (<= 0 ($generated@@279 $generated@@455))))
 :pattern ( ($generated@@279 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@406 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@406 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@414 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@414 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@153) (= (type $generated@@478) $generated@@153)) (= ($generated@@272 ($generated@@240 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@143 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@143 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@143 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@143 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@153) (= (type $generated@@488) $generated@@153)) (= ($generated@@151 ($generated@@240 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@240 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@153) (= (type $generated@@490) $generated@@153)) (= ($generated@@152 ($generated@@240 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@240 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@281 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@280 $generated@@153)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@279 $generated@@497))) ($generated@@266 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@74 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@75 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@75 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@250 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@250 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@255 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@255 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@255 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@158 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@158 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@378 $generated@@520 ($generated@@286 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@286 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) (= ($generated@@140 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@521) $generated@@524))) (and ($generated@@241 ($generated@@81 ($generated@@379 $generated@@521) $generated@@524) $generated@@523) ($generated@@241 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@521) $generated@@524))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@140 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@140 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@525) $generated@@528))) (and ($generated@@241 ($generated@@81 ($generated@@389 $generated@@525) $generated@@528) $generated@@527) ($generated@@241 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@525) $generated@@528))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@140 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@153) (= (type $generated@@532) $generated@@153)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@240 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@240 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@153) (= (type $generated@@534) $generated@@153)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@240 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@240 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@153) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) ($generated@@241 $generated@@535 ($generated@@406 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@378 ($generated@@299 $generated@@153 $generated@@153) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@378 ($generated@@299 $generated@@153 $generated@@153) $generated@@535) ($generated@@406 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@241 $generated@@535 ($generated@@406 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@153) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) ($generated@@241 $generated@@538 ($generated@@414 $generated@@539 $generated@@540))) (and (= ($generated@@286 ($generated@@378 ($generated@@317 $generated@@153 $generated@@153) $generated@@538)) $generated@@538) ($generated@@140 ($generated@@378 ($generated@@317 $generated@@153 $generated@@153) $generated@@538) ($generated@@414 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@538 ($generated@@414 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@153)) ($generated@@241 $generated@@543 ($generated@@143 $generated@@541 $generated@@542))) (and (= ($generated@@286 ($generated@@378 $generated@@144 $generated@@543)) $generated@@543) ($generated@@140 ($generated@@378 $generated@@144 $generated@@543) ($generated@@143 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@543 ($generated@@143 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@81 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@81 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@69)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@143 $generated@@548 $generated@@549)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ($generated@@551 Int) ) (! (= ($generated@@235 $generated@@550 $generated@@551) (* $generated@@550 $generated@@551))
 :pattern ( ($generated@@235 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@144) (= ($generated@@529 ($generated@@286 $generated@@552)) ($generated@@530 $generated@@552)))
 :pattern ( ($generated@@529 ($generated@@286 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@153) ($generated@@241 $generated@@553 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@378 $generated@@2 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@378 ($generated@@76 $generated@@153 $generated@@4) $generated@@553) ($generated@@75 0))))
 :pattern ( ($generated@@241 $generated@@553 ($generated@@75 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@153) (= (type $generated@@555) $generated@@64)) ($generated@@241 $generated@@554 ($generated@@250 $generated@@555))) (and (= ($generated@@286 ($generated@@378 ($generated@@76 $generated@@153 $generated@@4) $generated@@554)) $generated@@554) ($generated@@140 ($generated@@378 ($generated@@76 $generated@@153 $generated@@4) $generated@@554) ($generated@@250 $generated@@555))))
 :pattern ( ($generated@@241 $generated@@554 ($generated@@250 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@153) (= (type $generated@@557) $generated@@64)) ($generated@@241 $generated@@556 ($generated@@255 $generated@@557))) (and (= ($generated@@286 ($generated@@378 ($generated@@76 $generated@@153 $generated@@4) $generated@@556)) $generated@@556) ($generated@@140 ($generated@@378 ($generated@@76 $generated@@153 $generated@@4) $generated@@556) ($generated@@255 $generated@@557))))
 :pattern ( ($generated@@241 $generated@@556 ($generated@@255 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@153) (= (type $generated@@559) $generated@@64)) ($generated@@241 $generated@@558 ($generated@@158 $generated@@559))) (and (= ($generated@@286 ($generated@@378 ($generated@@76 $generated@@153 $generated@@2) $generated@@558)) $generated@@558) ($generated@@140 ($generated@@378 ($generated@@76 $generated@@153 $generated@@2) $generated@@558) ($generated@@158 $generated@@559))))
 :pattern ( ($generated@@241 $generated@@558 ($generated@@158 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@153) (= (type $generated@@561) $generated@@64)) ($generated@@241 $generated@@560 ($generated@@491 $generated@@561))) (and (= ($generated@@286 ($generated@@378 ($generated@@280 $generated@@153) $generated@@560)) $generated@@560) ($generated@@140 ($generated@@378 ($generated@@280 $generated@@153) $generated@@560) ($generated@@491 $generated@@561))))
 :pattern ( ($generated@@241 $generated@@560 ($generated@@491 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@158 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@562 $generated@@565)))) ($generated@@266 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@81 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@158 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@144) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@568) (and ($generated@@142 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@64) ($generated@@74 $generated@@566 ($generated@@143 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@143 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@266 ($generated@@151 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@266 ($generated@@151 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@144) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@572) (and ($generated@@142 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@64) ($generated@@74 $generated@@570 ($generated@@143 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@74 $generated@@570 ($generated@@143 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@266 ($generated@@152 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@266 ($generated@@152 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@153) (= (type $generated@@575) $generated@@153)) (= ($generated@@240 ($generated@@261 $generated@@574) ($generated@@261 $generated@@575)) ($generated@@261 ($generated@@240 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@240 ($generated@@261 $generated@@574) ($generated@@261 $generated@@575)))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@233 $generated@@576))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@576))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@233 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@577)) ($generated@@261 ($generated@@286 $generated@@577)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@281 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@280 $generated@@579)) (= ($generated@@279 $generated@@578) 0)) (= $generated@@578 ($generated@@278 $generated@@579))))
 :pattern ( ($generated@@279 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@581)))
 (=> (and (and (= (type $generated@@580) ($generated@@76 $generated@@583 $generated@@2)) (= (type $generated@@582) $generated@@2)) (<= 0 ($generated $generated@@582))) (= ($generated@@291 ($generated@@82 $generated@@580 $generated@@581 $generated@@582)) (+ (- ($generated@@291 $generated@@580) ($generated ($generated@@81 $generated@@580 $generated@@581))) ($generated $generated@@582)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@580 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@2)) ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@3)) ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@4)) ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@449)) ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@153)) ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@280 $generated@@153)) (= (type $generated@@595) $generated@@64)) (= ($generated@@140 $generated@@594 ($generated@@491 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@279 $generated@@594))) ($generated@@241 ($generated@@492 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@492 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@140 $generated@@594 ($generated@@491 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@280 $generated@@153)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@279 $generated@@598))) (< ($generated@@530 ($generated@@378 $generated@@144 ($generated@@492 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@378 $generated@@144 ($generated@@492 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@299 $generated@@153 $generated@@153)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@140 $generated@@600 ($generated@@406 $generated@@601 $generated@@602))) (and (and ($generated@@140 ($generated@@297 $generated@@600) ($generated@@250 $generated@@601)) ($generated@@140 ($generated@@340 $generated@@600) ($generated@@250 $generated@@602))) ($generated@@140 ($generated@@377 $generated@@600) ($generated@@250 ($generated@@143 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@140 $generated@@600 ($generated@@406 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@317 $generated@@153 $generated@@153)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@140 $generated@@603 ($generated@@414 $generated@@604 $generated@@605))) (and (and ($generated@@140 ($generated@@315 $generated@@603) ($generated@@255 $generated@@604)) ($generated@@140 ($generated@@351 $generated@@603) ($generated@@255 $generated@@605))) ($generated@@140 ($generated@@388 $generated@@603) ($generated@@255 ($generated@@143 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@140 $generated@@603 ($generated@@414 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@140 $generated@@606 $generated@@46))
 :pattern ( ($generated@@140 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@140 $generated@@607 $generated@@47))
 :pattern ( ($generated@@140 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@140 $generated@@608 $generated@@44))
 :pattern ( ($generated@@140 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@449) ($generated@@140 $generated@@609 $generated@@45))
 :pattern ( ($generated@@140 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@153) ($generated@@140 $generated@@610 $generated@@48))
 :pattern ( ($generated@@140 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@616) $generated@@77)) (= (type $generated@@617) ($generated@@165 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@619  (=> (and (and (not (= $generated@@611 $generated@@612)) ($generated@@74 ($generated@@8 $generated@@612) $generated@@46 $generated@@613)) (and (= $generated@@614 (- $generated@@611 1)) ($generated@@74 ($generated@@8 $generated@@614) $generated@@46 $generated@@613))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (<= ($generated@@233 0) $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= $generated@@612 $generated@@614)) (=> (and (<= ($generated@@233 0) $generated@@612) (<= $generated@@612 $generated@@614)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@612) (= $generated@@612 $generated@@612))) (=> (or (<= 0 $generated@@612) (= $generated@@612 $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@611) (< $generated@@612 $generated@@612)) (= $generated@@614 $generated@@611))) (=> (or (or (<= 0 $generated@@611) (< $generated@@612 $generated@@612)) (= $generated@@614 $generated@@611)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@612 $generated@@612) (and (= $generated@@612 $generated@@612) (< $generated@@614 $generated@@611))))))))))))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (= $generated@@615 ($generated@@219 $generated@@616 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@620) (=> (= (ControlFlow 0 9) 4) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@617 ($generated@@164 $generated@@616 $generated@@613 $generated@@60 false)) (=> (and (<= ($generated@@233 0) $generated@@612) (<= $generated@@612 $generated@@611)) (and (=> (= (ControlFlow 0 10) 1) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621))))))
(let (($generated@@624  (=> (and (and ($generated@@265 $generated@@613) ($generated@@618 $generated@@613)) (and (= 0 $generated@@231) (= (ControlFlow 0 11) 10))) $generated@@623)))
$generated@@624)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U Int Int) Int)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (Int) Int)
(declare-fun $generated@@202 (Int Int) Bool)
(declare-fun $generated@@203 (Int Int) Int)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@T) T@U)
(declare-fun $generated@@214 (T@U) Int)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@221 (Int Int) Bool)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 () T@T)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 (T@T T@T) T@U)
(declare-fun $generated@@243 (T@T T@T) T@T)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@T T@T) T@U)
(declare-fun $generated@@261 (T@T T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U Int) T@U)
(declare-fun $generated@@382 (T@U) Int)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@U) T@U)
(declare-fun $generated@@425 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (= (type $generated@@140) $generated@@133) (= ($generated@@139 $generated@@140 $generated@@141 $generated@@142) ($generated@@139 $generated@@134 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@139 ($generated@@132 $generated@@140) $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@200 $generated@@204)) $generated@@133)
 :pattern ( ($generated@@200 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@205 T@U) ($generated@@206 Int) ($generated@@207 Int) ) (!  (=> (and (= (type $generated@@205) $generated@@133) (or ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@206)) (<= ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))))) (and (=> (not (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206))) ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1)))) (= ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (ite (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206)) 0 (+ ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1))) ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 (- $generated@@207 1)) ($generated@@201 (- $generated@@207 1)))) ($generated@@201 (- $generated@@207 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))
))))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@201 $generated@@208) $generated@@208)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert  (and (and (forall (($generated@@217 T@T) ) (= ($generated@@1 ($generated@@215 $generated@@217)) 14)) (forall (($generated@@218 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
))) (forall (($generated@@219 T@T) ) (! (= (type ($generated@@213 $generated@@219)) ($generated@@215 $generated@@219))
 :pattern ( ($generated@@213 $generated@@219))
))))
(assert (forall (($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@220)) 0)
 :pattern ( ($generated@@213 $generated@@220))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 Int) ) (!  (=> (and (= (type $generated@@222) $generated@@133) (or ($generated@@221 $generated@@223 $generated@@224) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@223) (<= $generated@@223 $generated@@224))))) (and (=> (not (= $generated@@224 $generated@@223)) ($generated@@221 (+ $generated@@223 1) $generated@@224)) (= ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224) (ite (= $generated@@224 $generated@@223) 0 (+ ($generated@@203 ($generated@@203 $generated@@223 $generated@@223) $generated@@223) ($generated@@131 $generated@@222 (+ $generated@@223 1) $generated@@224))))))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224))
))))
(assert ($generated@@225 $generated@@60))
(assert  (and (= ($generated@@1 $generated@@228) 15) (forall (($generated@@229 T@U) ) (! (= (type ($generated@@227 $generated@@229)) $generated@@228)
 :pattern ( ($generated@@227 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@61) (= (type $generated@@232) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@226 ($generated@@227 $generated@@230) $generated@@231 $generated@@232) ($generated@@69 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@234) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@235) $generated@@228)) (= (type $generated@@236) $generated@@61)) ($generated@@127 $generated@@233 $generated@@234)) ($generated@@226 $generated@@235 $generated@@236 $generated@@233)) ($generated@@226 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@127 $generated@@233 $generated@@234) ($generated@@226 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@238) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@240) $generated@@61)) ($generated@@127 $generated@@237 $generated@@238)) ($generated@@69 $generated@@239 $generated@@240 $generated@@237)) ($generated@@69 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@127 $generated@@237 $generated@@238) ($generated@@69 $generated@@239 $generated@@240 $generated@@237))
)))
(assert  (and (and (and (and (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (= ($generated@@1 ($generated@@243 $generated@@246 $generated@@247)) 16)) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@248 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@243 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@243 $generated@@250 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@243 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@244 (type $generated@@252))))
(= (type ($generated@@241 $generated@@252)) ($generated@@71 $generated@@253 $generated@@4)))
 :pattern ( ($generated@@241 $generated@@252))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= (type ($generated@@242 $generated@@254 $generated@@255)) ($generated@@243 $generated@@254 $generated@@255))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@T) ) (! (let (($generated@@258 (type $generated@@256)))
 (not ($generated@@0 ($generated@@76 ($generated@@241 ($generated@@242 $generated@@258 $generated@@257)) $generated@@256))))
 :pattern ( (let (($generated@@258 (type $generated@@256)))
($generated@@76 ($generated@@241 ($generated@@242 $generated@@258 $generated@@257)) $generated@@256)))
)))
(assert  (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@264 $generated@@265)) 17)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@261 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@261 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@259 $generated@@270)) ($generated@@71 $generated@@271 $generated@@4)))
 :pattern ( ($generated@@259 $generated@@270))
))) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= (type ($generated@@260 $generated@@272 $generated@@273)) ($generated@@261 $generated@@272 $generated@@273))
 :pattern ( ($generated@@260 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (let (($generated@@276 (type $generated@@274)))
 (not ($generated@@0 ($generated@@76 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274))))
 :pattern ( (let (($generated@@276 (type $generated@@274)))
($generated@@76 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274)))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@277 $generated@@278 $generated@@279)) (and ($generated@@127 $generated@@278 $generated@@279) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@64 (type $generated@@281))))
 (=> (and (and (= (type $generated@@280) $generated@@72) (= (type $generated@@281) ($generated@@63 $generated@@282))) (not ($generated@@225 $generated@@281))) (= ($generated@@78 ($generated@@76 $generated@@278 $generated@@280) $generated@@281) ($generated@@78 ($generated@@76 $generated@@279 $generated@@280) $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@279 $generated@@280) $generated@@281))
))))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@245 (type $generated@@283))))
(let (($generated@@285 ($generated@@244 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@243 $generated@@285 $generated@@284)) (or (= $generated@@283 ($generated@@242 $generated@@285 $generated@@284)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) ($generated@@0 ($generated@@76 ($generated@@241 $generated@@283) $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@241 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@263 (type $generated@@287))))
(let (($generated@@289 ($generated@@262 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@261 $generated@@289 $generated@@288)) (or (= $generated@@287 ($generated@@260 $generated@@289 $generated@@288)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) ($generated@@0 ($generated@@76 ($generated@@259 $generated@@287) $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@259 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (= (type $generated@@291) $generated@@133) (= ($generated@@131 ($generated@@200 $generated@@291) $generated@@292 $generated@@293) ($generated@@131 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 Int) ) (!  (=> (= (type $generated@@294) $generated@@133) (= ($generated@@139 ($generated@@200 $generated@@294) $generated@@295 $generated@@296) ($generated@@139 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@294) $generated@@295 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (!  (=> (and (= (type $generated@@297) $generated@@133) (or ($generated@@202 $generated@@298 $generated@@299) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@298) (<= $generated@@298 $generated@@299))))) (and (=> (not (= $generated@@299 $generated@@298)) ($generated@@202 $generated@@298 (- $generated@@299 1))) (= ($generated@@139 ($generated@@200 $generated@@297) $generated@@298 $generated@@299) (ite (= $generated@@299 $generated@@298) 0 (+ ($generated@@139 $generated@@297 $generated@@298 (- $generated@@299 1)) ($generated@@203 ($generated@@203 (- $generated@@299 1) (- $generated@@299 1)) (- $generated@@299 1)))))))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@297) $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@71 $generated@@228 $generated@@4)) (= (type $generated@@303) $generated@@61)) (= (type $generated@@304) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@302 ($generated@@300 $generated@@303) $generated@@304) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@228) ($generated@@0 ($generated@@76 $generated@@302 $generated@@305))) ($generated@@226 $generated@@305 $generated@@303 $generated@@304))
 :pattern ( ($generated@@76 $generated@@302 $generated@@305))
))))
 :pattern ( ($generated@@69 $generated@@302 ($generated@@300 $generated@@303) $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@308) ($generated@@71 $generated@@228 $generated@@4)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@306 $generated@@309) $generated@@310) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@228) ($generated@@0 ($generated@@76 $generated@@308 $generated@@311))) ($generated@@226 $generated@@311 $generated@@309 $generated@@310))
 :pattern ( ($generated@@76 $generated@@308 $generated@@311))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@306 $generated@@309) $generated@@310))
)))
(assert  (and (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (= (type ($generated@@312 $generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@314 $generated@@315))
)) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@245 (type $generated@@316))))
(let (($generated@@318 ($generated@@244 (type $generated@@316))))
(= (type ($generated@@313 $generated@@316)) ($generated@@71 $generated@@318 $generated@@317))))
 :pattern ( ($generated@@313 $generated@@316))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) ($generated@@243 $generated@@228 $generated@@228)) (= (type $generated@@320) $generated@@61)) (= (type $generated@@321) $generated@@61)) (= (type $generated@@322) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@319 ($generated@@312 $generated@@320 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@228) ($generated@@0 ($generated@@76 ($generated@@241 $generated@@319) $generated@@323))) (and ($generated@@226 ($generated@@76 ($generated@@313 $generated@@319) $generated@@323) $generated@@321 $generated@@322) ($generated@@226 $generated@@323 $generated@@320 $generated@@322)))
 :pattern ( ($generated@@76 ($generated@@313 $generated@@319) $generated@@323))
 :pattern ( ($generated@@76 ($generated@@241 $generated@@319) $generated@@323))
))))
 :pattern ( ($generated@@69 $generated@@319 ($generated@@312 $generated@@320 $generated@@321) $generated@@322))
)))
(assert  (and (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (! (= (type ($generated@@324 $generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@326 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@263 (type $generated@@328))))
(let (($generated@@330 ($generated@@262 (type $generated@@328))))
(= (type ($generated@@325 $generated@@328)) ($generated@@71 $generated@@330 $generated@@329))))
 :pattern ( ($generated@@325 $generated@@328))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@331) ($generated@@261 $generated@@228 $generated@@228)) (= (type $generated@@332) $generated@@61)) (= (type $generated@@333) $generated@@61)) (= (type $generated@@334) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@331 ($generated@@324 $generated@@332 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@228) ($generated@@0 ($generated@@76 ($generated@@259 $generated@@331) $generated@@335))) (and ($generated@@226 ($generated@@76 ($generated@@325 $generated@@331) $generated@@335) $generated@@333 $generated@@334) ($generated@@226 $generated@@335 $generated@@332 $generated@@334)))
 :pattern ( ($generated@@76 ($generated@@325 $generated@@331) $generated@@335))
 :pattern ( ($generated@@76 ($generated@@259 $generated@@331) $generated@@335))
))))
 :pattern ( ($generated@@69 $generated@@331 ($generated@@324 $generated@@332 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@337) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@338) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@336 $generated@@338))) (and ($generated@@127 $generated@@336 $generated@@337) ($generated@@127 $generated@@337 $generated@@338))) ($generated@@127 $generated@@336 $generated@@338))
 :pattern ( ($generated@@127 $generated@@336 $generated@@337) ($generated@@127 $generated@@337 $generated@@338))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@339 T@U) ($generated@@340 Int) ($generated@@341 Int) ) (!  (=> (and (= (type $generated@@339) $generated@@133) (or ($generated@@221 $generated@@340 $generated@@341) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@340) (<= $generated@@340 $generated@@341))))) true)
 :pattern ( ($generated@@131 $generated@@339 $generated@@340 $generated@@341))
))))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@342 T@U) ($generated@@343 Int) ($generated@@344 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@133) (or ($generated@@202 $generated@@343 $generated@@344) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@343) (<= $generated@@343 $generated@@344))))) true)
 :pattern ( ($generated@@139 $generated@@342 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@346 T@T) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@71 $generated@@346 $generated@@4))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@263 (type $generated@@347))))
(let (($generated@@349 ($generated@@262 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@261 $generated@@349 $generated@@348)) (= (= $generated@@347 ($generated@@260 $generated@@349 $generated@@348)) (= ($generated@@259 $generated@@347) ($generated@@345 $generated@@349))))))
 :pattern ( ($generated@@259 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@216 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@215 $generated@@351)) (<= 0 ($generated@@214 $generated@@350))))
 :pattern ( ($generated@@214 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@61) (= (type $generated@@355) $generated@@61)) (= ($generated@@352 ($generated@@312 $generated@@354 $generated@@355)) $generated@@354))
 :pattern ( ($generated@@312 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@61) (= (type $generated@@359) $generated@@61)) (= ($generated@@356 ($generated@@312 $generated@@358 $generated@@359)) $generated@@359))
 :pattern ( ($generated@@312 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@61) (= (type $generated@@361) $generated@@61)) (= ($generated@@67 ($generated@@312 $generated@@360 $generated@@361)) $generated@@58))
 :pattern ( ($generated@@312 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@61) (= (type $generated@@365) $generated@@61)) (= ($generated@@362 ($generated@@324 $generated@@364 $generated@@365)) $generated@@364))
 :pattern ( ($generated@@324 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@366 ($generated@@324 $generated@@368 $generated@@369)) $generated@@369))
 :pattern ( ($generated@@324 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@61) (= (type $generated@@371) $generated@@61)) (= ($generated@@67 ($generated@@324 $generated@@370 $generated@@371)) $generated@@59))
 :pattern ( ($generated@@324 $generated@@370 $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) $generated@@61)
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ($generated@@376 Int) ) (! (let (($generated@@377 ($generated@@216 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375 $generated@@376)) $generated@@377))
 :pattern ( ($generated@@373 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@215 $generated@@228)) (= (type $generated@@379) $generated@@61)) (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@378 ($generated@@372 $generated@@379) $generated@@380) (forall (($generated@@381 Int) ) (!  (=> (and (<= 0 $generated@@381) (< $generated@@381 ($generated@@214 $generated@@378))) ($generated@@226 ($generated@@373 $generated@@378 $generated@@381) $generated@@379 $generated@@380))
 :pattern ( ($generated@@373 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@69 $generated@@378 ($generated@@372 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@382 ($generated@@70 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@70 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (= (type ($generated@@384 $generated@@385)) $generated@@61)
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@61) (= ($generated@@384 ($generated@@300 $generated@@386)) $generated@@386))
 :pattern ( ($generated@@300 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@61) (= ($generated@@67 ($generated@@300 $generated@@387)) $generated@@54))
 :pattern ( ($generated@@300 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (= (type ($generated@@388 $generated@@389)) $generated@@61)
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@388 ($generated@@306 $generated@@390)) $generated@@390))
 :pattern ( ($generated@@306 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@61) (= ($generated@@67 ($generated@@306 $generated@@391)) $generated@@55))
 :pattern ( ($generated@@306 $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) $generated@@61)
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@61) (= ($generated@@393 ($generated@@392 $generated@@396)) $generated@@396))
 :pattern ( ($generated@@392 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@61) (= ($generated@@67 ($generated@@392 $generated@@397)) $generated@@56))
 :pattern ( ($generated@@392 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (= (type ($generated@@398 $generated@@399)) $generated@@61)
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@61) (= ($generated@@398 ($generated@@372 $generated@@400)) $generated@@400))
 :pattern ( ($generated@@372 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@61) (= ($generated@@67 ($generated@@372 $generated@@401)) $generated@@57))
 :pattern ( ($generated@@372 $generated@@401))
)))
(assert (forall (($generated@@403 T@T) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated@@402 $generated@@406 ($generated@@227 $generated@@405)) $generated@@405))
 :pattern ( ($generated@@227 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
 (not ($generated@@0 ($generated@@76 ($generated@@345 $generated@@408) $generated@@407))))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@76 ($generated@@345 $generated@@408) $generated@@407)))
)))
(assert (forall (($generated@@409 Int) ($generated@@410 Int) ) (! (= ($generated@@203 $generated@@409 $generated@@410) (* $generated@@409 $generated@@410))
 :pattern ( ($generated@@203 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@71 $generated@@228 $generated@@2)) (= (type $generated@@412) $generated@@61)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@411 ($generated@@392 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@228) (< 0 ($generated ($generated@@76 $generated@@411 $generated@@414)))) ($generated@@226 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@76 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@69 $generated@@411 ($generated@@392 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 Int) ) (! (= ($generated@@227 ($generated@@8 ($generated@@201 $generated@@415))) ($generated@@209 ($generated@@227 ($generated@@8 $generated@@415))))
 :pattern ( ($generated@@227 ($generated@@8 ($generated@@201 $generated@@415))))
)))
(assert (forall (($generated@@416 T@U) ) (! (= ($generated@@227 ($generated@@209 $generated@@416)) ($generated@@209 ($generated@@227 $generated@@416)))
 :pattern ( ($generated@@227 ($generated@@209 $generated@@416)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@216 (type $generated@@417))))
 (=> (and (= (type $generated@@417) ($generated@@215 $generated@@418)) (= ($generated@@214 $generated@@417) 0)) (= $generated@@417 ($generated@@213 $generated@@418))))
 :pattern ( ($generated@@214 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@420) $generated@@2)) ($generated@@69 $generated@@420 $generated@@46 $generated@@419))
 :pattern ( ($generated@@69 $generated@@420 $generated@@46 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@422) $generated@@3)) ($generated@@69 $generated@@422 $generated@@47 $generated@@421))
 :pattern ( ($generated@@69 $generated@@422 $generated@@47 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@4)) ($generated@@69 $generated@@424 $generated@@44 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@44 $generated@@423))
)))
(assert (= ($generated@@1 $generated@@425) 18))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@427) $generated@@425)) ($generated@@69 $generated@@427 $generated@@45 $generated@@426))
 :pattern ( ($generated@@69 $generated@@427 $generated@@45 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@429) $generated@@228)) ($generated@@69 $generated@@429 $generated@@48 $generated@@428))
 :pattern ( ($generated@@69 $generated@@429 $generated@@48 $generated@@428))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@430 T@U) ($generated@@431 Int) ($generated@@432 Int) ) (!  (=> (and (= (type $generated@@430) $generated@@133) (or ($generated@@221 ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@431)) (<= ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)))))) (and (=> (not (= ($generated@@201 $generated@@432) ($generated@@201 $generated@@431))) ($generated@@221 ($generated@@201 (+ $generated@@431 1)) ($generated@@201 $generated@@432))) (= ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)) (ite (= ($generated@@201 $generated@@432) ($generated@@201 $generated@@431)) 0 (+ ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 $generated@@431) ($generated@@201 $generated@@431))) ($generated@@201 $generated@@431)) ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 (+ $generated@@431 1)) ($generated@@201 $generated@@432)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@433 () T@U)
(declare-fun $generated@@434 () T@U)
(declare-fun $generated@@435 () T@U)
(declare-fun $generated@@436 () Int)
(declare-fun $generated@@437 () Int)
(declare-fun $generated@@438 (T@U) Bool)
(declare-fun $generated@@439 () T@U)
(declare-fun $generated@@440 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@433) ($generated@@145 $generated@@72 $generated@@4)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@439) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@441  (=> (= $generated@@433 ($generated@@144 $generated@@434 $generated@@435 $generated@@60 false)) (=> (and (and (and (<= ($generated@@201 0) $generated@@436) (<= $generated@@436 $generated@@437)) (and ($generated@@438 $generated@@439) ($generated@@440 $generated@@439))) (and (and (forall (($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@72) (=> (and (not (= $generated@@442 $generated@@434)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@435 $generated@@442) $generated@@60))) (= ($generated@@76 $generated@@439 $generated@@442) ($generated@@76 $generated@@435 $generated@@442))))
 :pattern ( ($generated@@76 $generated@@439 $generated@@442))
)) ($generated@@277 $generated@@435 $generated@@439)) (and ($generated@@69 ($generated@@8 $generated@@436) $generated@@46 $generated@@439) ($generated@@69 ($generated@@8 $generated@@437) $generated@@46 $generated@@439)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@201 0) $generated@@436)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@436 $generated@@437)) (=> (and (and (and (<= ($generated@@201 0) $generated@@436) (<= $generated@@436 $generated@@437)) ($generated@@221 $generated@@436 $generated@@437)) (and ($generated@@69 ($generated@@8 $generated@@436) $generated@@46 $generated@@439) ($generated@@69 ($generated@@8 $generated@@437) $generated@@46 $generated@@439))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@201 0) $generated@@436)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@436 $generated@@437))))))))))
(let (($generated@@443  (=> (and (and ($generated@@438 $generated@@435) ($generated@@440 $generated@@435)) (and (= 1 $generated@@199) (= (ControlFlow 0 6) 2))) $generated@@441)))
$generated@@443)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int Int) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@139 (T@U Int Int) Int)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (Int) Int)
(declare-fun $generated@@202 (Int Int) Bool)
(declare-fun $generated@@203 (Int Int) Int)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@T) T@U)
(declare-fun $generated@@214 (T@U) Int)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@221 (Int Int) Bool)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 () T@T)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 (T@T T@T) T@U)
(declare-fun $generated@@243 (T@T T@T) T@T)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@T T@T) T@U)
(declare-fun $generated@@261 (T@T T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U Int) T@U)
(declare-fun $generated@@382 (T@U) Int)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@U) T@U)
(declare-fun $generated@@425 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (= ($generated@@1 $generated@@133) 12) (forall (($generated@@135 T@U) ) (! (= (type ($generated@@132 $generated@@135)) $generated@@133)
 :pattern ( ($generated@@132 $generated@@135))
))) (= (type $generated@@134) $generated@@133)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (= (type $generated@@136) $generated@@133) (= ($generated@@131 $generated@@136 $generated@@137 $generated@@138) ($generated@@131 $generated@@134 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (= (type $generated@@140) $generated@@133) (= ($generated@@139 $generated@@140 $generated@@141 $generated@@142) ($generated@@139 $generated@@134 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@139 ($generated@@132 $generated@@140) $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@200 $generated@@204)) $generated@@133)
 :pattern ( ($generated@@200 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@205 T@U) ($generated@@206 Int) ($generated@@207 Int) ) (!  (=> (and (= (type $generated@@205) $generated@@133) (or ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@206)) (<= ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))))) (and (=> (not (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206))) ($generated@@202 ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1)))) (= ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (ite (= ($generated@@201 $generated@@207) ($generated@@201 $generated@@206)) 0 (+ ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 (- $generated@@207 1))) ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 (- $generated@@207 1)) ($generated@@201 (- $generated@@207 1)))) ($generated@@201 (- $generated@@207 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@200 $generated@@205) ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)))
))))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@201 $generated@@208) $generated@@208)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert  (and (and (forall (($generated@@217 T@T) ) (= ($generated@@1 ($generated@@215 $generated@@217)) 14)) (forall (($generated@@218 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
))) (forall (($generated@@219 T@T) ) (! (= (type ($generated@@213 $generated@@219)) ($generated@@215 $generated@@219))
 :pattern ( ($generated@@213 $generated@@219))
))))
(assert (forall (($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@220)) 0)
 :pattern ( ($generated@@213 $generated@@220))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 Int) ) (!  (=> (and (= (type $generated@@222) $generated@@133) (or ($generated@@221 $generated@@223 $generated@@224) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@223) (<= $generated@@223 $generated@@224))))) (and (=> (not (= $generated@@224 $generated@@223)) ($generated@@221 (+ $generated@@223 1) $generated@@224)) (= ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224) (ite (= $generated@@224 $generated@@223) 0 (+ ($generated@@203 ($generated@@203 $generated@@223 $generated@@223) $generated@@223) ($generated@@131 $generated@@222 (+ $generated@@223 1) $generated@@224))))))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@222) $generated@@223 $generated@@224))
))))
(assert ($generated@@225 $generated@@60))
(assert  (and (= ($generated@@1 $generated@@228) 15) (forall (($generated@@229 T@U) ) (! (= (type ($generated@@227 $generated@@229)) $generated@@228)
 :pattern ( ($generated@@227 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@61) (= (type $generated@@232) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@226 ($generated@@227 $generated@@230) $generated@@231 $generated@@232) ($generated@@69 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@234) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@235) $generated@@228)) (= (type $generated@@236) $generated@@61)) ($generated@@127 $generated@@233 $generated@@234)) ($generated@@226 $generated@@235 $generated@@236 $generated@@233)) ($generated@@226 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@127 $generated@@233 $generated@@234) ($generated@@226 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@238) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@240) $generated@@61)) ($generated@@127 $generated@@237 $generated@@238)) ($generated@@69 $generated@@239 $generated@@240 $generated@@237)) ($generated@@69 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@127 $generated@@237 $generated@@238) ($generated@@69 $generated@@239 $generated@@240 $generated@@237))
)))
(assert  (and (and (and (and (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (= ($generated@@1 ($generated@@243 $generated@@246 $generated@@247)) 16)) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@248 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@243 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@243 $generated@@250 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@243 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@244 (type $generated@@252))))
(= (type ($generated@@241 $generated@@252)) ($generated@@71 $generated@@253 $generated@@4)))
 :pattern ( ($generated@@241 $generated@@252))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= (type ($generated@@242 $generated@@254 $generated@@255)) ($generated@@243 $generated@@254 $generated@@255))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@T) ) (! (let (($generated@@258 (type $generated@@256)))
 (not ($generated@@0 ($generated@@76 ($generated@@241 ($generated@@242 $generated@@258 $generated@@257)) $generated@@256))))
 :pattern ( (let (($generated@@258 (type $generated@@256)))
($generated@@76 ($generated@@241 ($generated@@242 $generated@@258 $generated@@257)) $generated@@256)))
)))
(assert  (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@264 $generated@@265)) 17)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@261 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@261 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@259 $generated@@270)) ($generated@@71 $generated@@271 $generated@@4)))
 :pattern ( ($generated@@259 $generated@@270))
))) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= (type ($generated@@260 $generated@@272 $generated@@273)) ($generated@@261 $generated@@272 $generated@@273))
 :pattern ( ($generated@@260 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (let (($generated@@276 (type $generated@@274)))
 (not ($generated@@0 ($generated@@76 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274))))
 :pattern ( (let (($generated@@276 (type $generated@@274)))
($generated@@76 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274)))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@279) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@277 $generated@@278 $generated@@279)) (and ($generated@@127 $generated@@278 $generated@@279) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@64 (type $generated@@281))))
 (=> (and (and (= (type $generated@@280) $generated@@72) (= (type $generated@@281) ($generated@@63 $generated@@282))) (not ($generated@@225 $generated@@281))) (= ($generated@@78 ($generated@@76 $generated@@278 $generated@@280) $generated@@281) ($generated@@78 ($generated@@76 $generated@@279 $generated@@280) $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@279 $generated@@280) $generated@@281))
))))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@245 (type $generated@@283))))
(let (($generated@@285 ($generated@@244 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@243 $generated@@285 $generated@@284)) (or (= $generated@@283 ($generated@@242 $generated@@285 $generated@@284)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) ($generated@@0 ($generated@@76 ($generated@@241 $generated@@283) $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@241 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@263 (type $generated@@287))))
(let (($generated@@289 ($generated@@262 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@261 $generated@@289 $generated@@288)) (or (= $generated@@287 ($generated@@260 $generated@@289 $generated@@288)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) ($generated@@0 ($generated@@76 ($generated@@259 $generated@@287) $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@259 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (= (type $generated@@291) $generated@@133) (= ($generated@@131 ($generated@@200 $generated@@291) $generated@@292 $generated@@293) ($generated@@131 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@131 ($generated@@200 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 Int) ) (!  (=> (= (type $generated@@294) $generated@@133) (= ($generated@@139 ($generated@@200 $generated@@294) $generated@@295 $generated@@296) ($generated@@139 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@294) $generated@@295 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (!  (=> (and (= (type $generated@@297) $generated@@133) (or ($generated@@202 $generated@@298 $generated@@299) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@298) (<= $generated@@298 $generated@@299))))) (and (=> (not (= $generated@@299 $generated@@298)) ($generated@@202 $generated@@298 (- $generated@@299 1))) (= ($generated@@139 ($generated@@200 $generated@@297) $generated@@298 $generated@@299) (ite (= $generated@@299 $generated@@298) 0 (+ ($generated@@139 $generated@@297 $generated@@298 (- $generated@@299 1)) ($generated@@203 ($generated@@203 (- $generated@@299 1) (- $generated@@299 1)) (- $generated@@299 1)))))))
 :pattern ( ($generated@@139 ($generated@@200 $generated@@297) $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@71 $generated@@228 $generated@@4)) (= (type $generated@@303) $generated@@61)) (= (type $generated@@304) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@302 ($generated@@300 $generated@@303) $generated@@304) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@228) ($generated@@0 ($generated@@76 $generated@@302 $generated@@305))) ($generated@@226 $generated@@305 $generated@@303 $generated@@304))
 :pattern ( ($generated@@76 $generated@@302 $generated@@305))
))))
 :pattern ( ($generated@@69 $generated@@302 ($generated@@300 $generated@@303) $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@308) ($generated@@71 $generated@@228 $generated@@4)) (= (type $generated@@309) $generated@@61)) (= (type $generated@@310) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@308 ($generated@@306 $generated@@309) $generated@@310) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@228) ($generated@@0 ($generated@@76 $generated@@308 $generated@@311))) ($generated@@226 $generated@@311 $generated@@309 $generated@@310))
 :pattern ( ($generated@@76 $generated@@308 $generated@@311))
))))
 :pattern ( ($generated@@69 $generated@@308 ($generated@@306 $generated@@309) $generated@@310))
)))
(assert  (and (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (= (type ($generated@@312 $generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@314 $generated@@315))
)) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@245 (type $generated@@316))))
(let (($generated@@318 ($generated@@244 (type $generated@@316))))
(= (type ($generated@@313 $generated@@316)) ($generated@@71 $generated@@318 $generated@@317))))
 :pattern ( ($generated@@313 $generated@@316))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) ($generated@@243 $generated@@228 $generated@@228)) (= (type $generated@@320) $generated@@61)) (= (type $generated@@321) $generated@@61)) (= (type $generated@@322) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@319 ($generated@@312 $generated@@320 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@228) ($generated@@0 ($generated@@76 ($generated@@241 $generated@@319) $generated@@323))) (and ($generated@@226 ($generated@@76 ($generated@@313 $generated@@319) $generated@@323) $generated@@321 $generated@@322) ($generated@@226 $generated@@323 $generated@@320 $generated@@322)))
 :pattern ( ($generated@@76 ($generated@@313 $generated@@319) $generated@@323))
 :pattern ( ($generated@@76 ($generated@@241 $generated@@319) $generated@@323))
))))
 :pattern ( ($generated@@69 $generated@@319 ($generated@@312 $generated@@320 $generated@@321) $generated@@322))
)))
(assert  (and (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (! (= (type ($generated@@324 $generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@326 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@263 (type $generated@@328))))
(let (($generated@@330 ($generated@@262 (type $generated@@328))))
(= (type ($generated@@325 $generated@@328)) ($generated@@71 $generated@@330 $generated@@329))))
 :pattern ( ($generated@@325 $generated@@328))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@331) ($generated@@261 $generated@@228 $generated@@228)) (= (type $generated@@332) $generated@@61)) (= (type $generated@@333) $generated@@61)) (= (type $generated@@334) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@331 ($generated@@324 $generated@@332 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@228) ($generated@@0 ($generated@@76 ($generated@@259 $generated@@331) $generated@@335))) (and ($generated@@226 ($generated@@76 ($generated@@325 $generated@@331) $generated@@335) $generated@@333 $generated@@334) ($generated@@226 $generated@@335 $generated@@332 $generated@@334)))
 :pattern ( ($generated@@76 ($generated@@325 $generated@@331) $generated@@335))
 :pattern ( ($generated@@76 ($generated@@259 $generated@@331) $generated@@335))
))))
 :pattern ( ($generated@@69 $generated@@331 ($generated@@324 $generated@@332 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@337) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@338) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@336 $generated@@338))) (and ($generated@@127 $generated@@336 $generated@@337) ($generated@@127 $generated@@337 $generated@@338))) ($generated@@127 $generated@@336 $generated@@338))
 :pattern ( ($generated@@127 $generated@@336 $generated@@337) ($generated@@127 $generated@@337 $generated@@338))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@339 T@U) ($generated@@340 Int) ($generated@@341 Int) ) (!  (=> (and (= (type $generated@@339) $generated@@133) (or ($generated@@221 $generated@@340 $generated@@341) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@340) (<= $generated@@340 $generated@@341))))) true)
 :pattern ( ($generated@@131 $generated@@339 $generated@@340 $generated@@341))
))))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@342 T@U) ($generated@@343 Int) ($generated@@344 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@133) (or ($generated@@202 $generated@@343 $generated@@344) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) $generated@@343) (<= $generated@@343 $generated@@344))))) true)
 :pattern ( ($generated@@139 $generated@@342 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@346 T@T) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@71 $generated@@346 $generated@@4))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@263 (type $generated@@347))))
(let (($generated@@349 ($generated@@262 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@261 $generated@@349 $generated@@348)) (= (= $generated@@347 ($generated@@260 $generated@@349 $generated@@348)) (= ($generated@@259 $generated@@347) ($generated@@345 $generated@@349))))))
 :pattern ( ($generated@@259 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@216 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@215 $generated@@351)) (<= 0 ($generated@@214 $generated@@350))))
 :pattern ( ($generated@@214 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@61) (= (type $generated@@355) $generated@@61)) (= ($generated@@352 ($generated@@312 $generated@@354 $generated@@355)) $generated@@354))
 :pattern ( ($generated@@312 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@61) (= (type $generated@@359) $generated@@61)) (= ($generated@@356 ($generated@@312 $generated@@358 $generated@@359)) $generated@@359))
 :pattern ( ($generated@@312 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@61) (= (type $generated@@361) $generated@@61)) (= ($generated@@67 ($generated@@312 $generated@@360 $generated@@361)) $generated@@58))
 :pattern ( ($generated@@312 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@61) (= (type $generated@@365) $generated@@61)) (= ($generated@@362 ($generated@@324 $generated@@364 $generated@@365)) $generated@@364))
 :pattern ( ($generated@@324 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@366 ($generated@@324 $generated@@368 $generated@@369)) $generated@@369))
 :pattern ( ($generated@@324 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@61) (= (type $generated@@371) $generated@@61)) (= ($generated@@67 ($generated@@324 $generated@@370 $generated@@371)) $generated@@59))
 :pattern ( ($generated@@324 $generated@@370 $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) $generated@@61)
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ($generated@@376 Int) ) (! (let (($generated@@377 ($generated@@216 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375 $generated@@376)) $generated@@377))
 :pattern ( ($generated@@373 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@215 $generated@@228)) (= (type $generated@@379) $generated@@61)) (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@378 ($generated@@372 $generated@@379) $generated@@380) (forall (($generated@@381 Int) ) (!  (=> (and (<= 0 $generated@@381) (< $generated@@381 ($generated@@214 $generated@@378))) ($generated@@226 ($generated@@373 $generated@@378 $generated@@381) $generated@@379 $generated@@380))
 :pattern ( ($generated@@373 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@69 $generated@@378 ($generated@@372 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@382 ($generated@@70 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@70 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (= (type ($generated@@384 $generated@@385)) $generated@@61)
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@61) (= ($generated@@384 ($generated@@300 $generated@@386)) $generated@@386))
 :pattern ( ($generated@@300 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@61) (= ($generated@@67 ($generated@@300 $generated@@387)) $generated@@54))
 :pattern ( ($generated@@300 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (= (type ($generated@@388 $generated@@389)) $generated@@61)
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@388 ($generated@@306 $generated@@390)) $generated@@390))
 :pattern ( ($generated@@306 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@61) (= ($generated@@67 ($generated@@306 $generated@@391)) $generated@@55))
 :pattern ( ($generated@@306 $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) $generated@@61)
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@61) (= ($generated@@393 ($generated@@392 $generated@@396)) $generated@@396))
 :pattern ( ($generated@@392 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@61) (= ($generated@@67 ($generated@@392 $generated@@397)) $generated@@56))
 :pattern ( ($generated@@392 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (= (type ($generated@@398 $generated@@399)) $generated@@61)
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@61) (= ($generated@@398 ($generated@@372 $generated@@400)) $generated@@400))
 :pattern ( ($generated@@372 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@61) (= ($generated@@67 ($generated@@372 $generated@@401)) $generated@@57))
 :pattern ( ($generated@@372 $generated@@401))
)))
(assert (forall (($generated@@403 T@T) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated@@402 $generated@@406 ($generated@@227 $generated@@405)) $generated@@405))
 :pattern ( ($generated@@227 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
 (not ($generated@@0 ($generated@@76 ($generated@@345 $generated@@408) $generated@@407))))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@76 ($generated@@345 $generated@@408) $generated@@407)))
)))
(assert (forall (($generated@@409 Int) ($generated@@410 Int) ) (! (= ($generated@@203 $generated@@409 $generated@@410) (* $generated@@409 $generated@@410))
 :pattern ( ($generated@@203 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@71 $generated@@228 $generated@@2)) (= (type $generated@@412) $generated@@61)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@411 ($generated@@392 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@228) (< 0 ($generated ($generated@@76 $generated@@411 $generated@@414)))) ($generated@@226 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@76 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@69 $generated@@411 ($generated@@392 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 Int) ) (! (= ($generated@@227 ($generated@@8 ($generated@@201 $generated@@415))) ($generated@@209 ($generated@@227 ($generated@@8 $generated@@415))))
 :pattern ( ($generated@@227 ($generated@@8 ($generated@@201 $generated@@415))))
)))
(assert (forall (($generated@@416 T@U) ) (! (= ($generated@@227 ($generated@@209 $generated@@416)) ($generated@@209 ($generated@@227 $generated@@416)))
 :pattern ( ($generated@@227 ($generated@@209 $generated@@416)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@216 (type $generated@@417))))
 (=> (and (= (type $generated@@417) ($generated@@215 $generated@@418)) (= ($generated@@214 $generated@@417) 0)) (= $generated@@417 ($generated@@213 $generated@@418))))
 :pattern ( ($generated@@214 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@420) $generated@@2)) ($generated@@69 $generated@@420 $generated@@46 $generated@@419))
 :pattern ( ($generated@@69 $generated@@420 $generated@@46 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@422) $generated@@3)) ($generated@@69 $generated@@422 $generated@@47 $generated@@421))
 :pattern ( ($generated@@69 $generated@@422 $generated@@47 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@4)) ($generated@@69 $generated@@424 $generated@@44 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@44 $generated@@423))
)))
(assert (= ($generated@@1 $generated@@425) 18))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@427) $generated@@425)) ($generated@@69 $generated@@427 $generated@@45 $generated@@426))
 :pattern ( ($generated@@69 $generated@@427 $generated@@45 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@429) $generated@@228)) ($generated@@69 $generated@@429 $generated@@48 $generated@@428))
 :pattern ( ($generated@@69 $generated@@429 $generated@@48 $generated@@428))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@430 T@U) ($generated@@431 Int) ($generated@@432 Int) ) (!  (=> (and (= (type $generated@@430) $generated@@133) (or ($generated@@221 ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)) (and (not (= 0 $generated@@199)) (and (<= ($generated@@201 0) ($generated@@201 $generated@@431)) (<= ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)))))) (and (=> (not (= ($generated@@201 $generated@@432) ($generated@@201 $generated@@431))) ($generated@@221 ($generated@@201 (+ $generated@@431 1)) ($generated@@201 $generated@@432))) (= ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)) (ite (= ($generated@@201 $generated@@432) ($generated@@201 $generated@@431)) 0 (+ ($generated@@203 ($generated@@201 ($generated@@203 ($generated@@201 $generated@@431) ($generated@@201 $generated@@431))) ($generated@@201 $generated@@431)) ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 (+ $generated@@431 1)) ($generated@@201 $generated@@432)))))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@200 $generated@@430) ($generated@@201 $generated@@431) ($generated@@201 $generated@@432)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@433 () Int)
(declare-fun $generated@@434 () Int)
(declare-fun $generated@@435 () Int)
(declare-fun $generated@@436 () T@U)
(declare-fun $generated@@437 () Bool)
(declare-fun $generated@@438 () Int)
(declare-fun $generated@@439 () Int)
(declare-fun $generated@@440 () T@U)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@443 () Int)
(declare-fun $generated@@444 (T@U) Bool)
(declare-fun $generated@@445 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@436) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@440) $generated@@72)) (= (type $generated@@441) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@442) ($generated@@145 $generated@@72 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@446  (=> (and (and (<= $generated@@433 $generated@@434) (<= $generated@@434 $generated@@435)) (and ($generated@@69 ($generated@@8 $generated@@433) $generated@@46 $generated@@436) ($generated@@69 ($generated@@8 $generated@@435) $generated@@46 $generated@@436))) (and (=> (= (ControlFlow 0 13) (- 0 18)) (<= ($generated@@201 0) $generated@@433)) (and (=> (= (ControlFlow 0 13) (- 0 17)) (<= $generated@@433 $generated@@435)) (=> ($generated@@221 $generated@@433 $generated@@435) (=> (and ($generated@@69 ($generated@@8 $generated@@433) $generated@@46 $generated@@436) ($generated@@69 ($generated@@8 $generated@@434) $generated@@46 $generated@@436)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (<= ($generated@@201 0) $generated@@433)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (<= $generated@@433 $generated@@434)) (=> ($generated@@202 $generated@@433 $generated@@434) (=> (and ($generated@@69 ($generated@@8 $generated@@434) $generated@@46 $generated@@436) ($generated@@69 ($generated@@8 $generated@@435) $generated@@46 $generated@@436)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= ($generated@@201 0) $generated@@434)) (=> (= (ControlFlow 0 13) (- 0 12)) (<= $generated@@434 $generated@@435))))))))))))))
(let (($generated@@447  (=> (and (< $generated@@434 $generated@@433) (= (ControlFlow 0 20) 13)) $generated@@446)))
(let (($generated@@448  (=> (and (<= $generated@@433 $generated@@434) (= (ControlFlow 0 19) 13)) $generated@@446)))
(let (($generated@@449  (=> (not $generated@@437) (and (=> (= (ControlFlow 0 21) 19) $generated@@448) (=> (= (ControlFlow 0 21) 20) $generated@@447)))))
(let (($generated@@450  (=> (= (ControlFlow 0 9) (- 0 8)) (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435) ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435)))))
(let (($generated@@451  (=> (and (<= $generated@@435 $generated@@434) (= (ControlFlow 0 10) 9)) $generated@@450)))
(let (($generated@@452  (=> (< $generated@@434 $generated@@435) (=> (and (= $generated@@438 (- $generated@@435 $generated@@434)) (= $generated@@439 (+ $generated@@434 1))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@438) (= (- $generated@@435 $generated@@439) $generated@@438))) (=> (or (<= 0 $generated@@438) (= (- $generated@@435 $generated@@439) $generated@@438)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< (- $generated@@435 $generated@@439) $generated@@438)) (=> (< (- $generated@@435 $generated@@439) $generated@@438) (=> (=> (<= $generated@@433 $generated@@439) (=> (<= $generated@@439 $generated@@435) (and ($generated@@221 $generated@@433 $generated@@435) (and ($generated@@202 $generated@@433 $generated@@439) ($generated@@221 $generated@@439 $generated@@435))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@437 (<= $generated@@433 $generated@@439))) (=> (=> $generated@@437 (<= $generated@@433 $generated@@439)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@437 (<= $generated@@439 $generated@@435))) (=> (=> $generated@@437 (<= $generated@@439 $generated@@435)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@437 (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435) (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@439) ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@439 $generated@@435))))))))))))))))))
(let (($generated@@453  (=> $generated@@437 (and (=> (= (ControlFlow 0 11) 10) $generated@@451) (=> (= (ControlFlow 0 11) 3) $generated@@452)))))
(let (($generated@@454  (and (=> (= (ControlFlow 0 22) 21) $generated@@449) (=> (= (ControlFlow 0 22) 11) $generated@@453))))
(let (($generated@@455 true))
(let (($generated@@456  (=> (and (and (not false) (<= 0 $generated@@434)) (and (=> $generated@@437 true) (=> $generated@@437 (<= $generated@@433 $generated@@434)))) (=> (and (and (and (=> $generated@@437 (<= $generated@@434 $generated@@435)) (=> $generated@@437 (and ($generated@@221 $generated@@433 $generated@@435) (and ($generated@@202 $generated@@433 $generated@@434) ($generated@@221 $generated@@434 $generated@@435))))) (and (=> $generated@@437 (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435) (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@434) ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@434 $generated@@435)))) (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@72) (=> (and (not (= $generated@@457 $generated@@440)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@441 $generated@@457) $generated@@60))) (= ($generated@@76 $generated@@436 $generated@@457) ($generated@@76 $generated@@436 $generated@@457))))
 :pattern ( ($generated@@76 $generated@@436 $generated@@457))
)))) (and (and ($generated@@277 $generated@@436 $generated@@436) (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@64 (type $generated@@459))))
 (=> (and (and (= (type $generated@@458) $generated@@72) (= (type $generated@@459) ($generated@@63 $generated@@460))) (and (not (= $generated@@458 $generated@@440)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@436 $generated@@458) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@436 $generated@@458) $generated@@459) ($generated@@78 ($generated@@76 $generated@@436 $generated@@458) $generated@@459)) ($generated@@0 ($generated@@143 $generated@@442 $generated@@458 $generated@@459)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@436 $generated@@458) $generated@@459))
))) (and (<= (- $generated@@435 $generated@@434) $generated@@443) (=> (= (- $generated@@435 $generated@@434) $generated@@443) true)))) (and (=> (= (ControlFlow 0 23) 1) $generated@@455) (=> (= (ControlFlow 0 23) 22) $generated@@454))))))
(let (($generated@@461  (=> (= $generated@@442 ($generated@@144 $generated@@440 $generated@@441 $generated@@60 false)) (=> (and ($generated@@444 $generated@@436) ($generated@@445 $generated@@436)) (=> (and (and (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@72) (=> (and (not (= $generated@@462 $generated@@440)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@441 $generated@@462) $generated@@60))) (= ($generated@@76 $generated@@436 $generated@@462) ($generated@@76 $generated@@441 $generated@@462))))
 :pattern ( ($generated@@76 $generated@@436 $generated@@462))
)) ($generated@@277 $generated@@441 $generated@@436)) (and (forall (($generated@@463 Int) ($generated@@464 Int) )  (=> (and (and (<= ($generated@@201 0) $generated@@463) (<= $generated@@463 $generated@@464)) (or (and (<= 0 $generated@@463) (< $generated@@463 $generated@@433)) (and (= $generated@@463 $generated@@433) (and (<= 0 $generated@@464) (< $generated@@464 $generated@@435))))) (= ($generated@@131 ($generated@@200 $generated@@134) $generated@@463 $generated@@464) ($generated@@139 ($generated@@200 $generated@@134) $generated@@463 $generated@@464)))) (= $generated@@443 (- $generated@@435 $generated@@433)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (=> $generated@@437 (<= $generated@@433 $generated@@433))) (=> (=> $generated@@437 (<= $generated@@433 $generated@@433)) (and (=> (= (ControlFlow 0 24) (- 0 26)) (=> $generated@@437 (<= $generated@@433 $generated@@435))) (=> (=> $generated@@437 (<= $generated@@433 $generated@@435)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (=> $generated@@437 (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435) (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@433) ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435))))) (=> (=> $generated@@437 (= ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435) (+ ($generated@@139 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@433) ($generated@@131 ($generated@@200 ($generated@@200 $generated@@134)) $generated@@433 $generated@@435)))) (=> (= (ControlFlow 0 24) 23) $generated@@456))))))))))))
(let (($generated@@465  (=> (and ($generated@@444 $generated@@441) ($generated@@445 $generated@@441)) (=> (and (and (= 1 $generated@@199) (<= ($generated@@201 0) $generated@@433)) (and (<= $generated@@433 $generated@@435) (= (ControlFlow 0 28) 24))) $generated@@461))))
$generated@@465))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
