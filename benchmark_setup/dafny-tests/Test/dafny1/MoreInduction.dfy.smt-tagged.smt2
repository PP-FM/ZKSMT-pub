(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (Int) T@U)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 (T@U T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@225 (T@T T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) Bool)
(declare-fun $generated@@316 (T@U T@U) Bool)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@344 (T@U T@U T@U) Bool)
(declare-fun $generated@@352 (T@U) Bool)
(declare-fun $generated@@355 (T@U) Bool)
(declare-fun $generated@@370 (T@T) T@U)
(declare-fun $generated@@371 (T@U) Int)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@403 (T@U) Int)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@T T@T) T@U)
(declare-fun $generated@@415 (T@T T@T) T@T)
(declare-fun $generated@@416 (T@T) T@T)
(declare-fun $generated@@417 (T@T) T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@T T@T) T@U)
(declare-fun $generated@@433 (T@T T@T) T@T)
(declare-fun $generated@@434 (T@T) T@T)
(declare-fun $generated@@435 (T@T) T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@T T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@527 (T@U T@U) T@U)
(declare-fun $generated@@535 (T@U T@U) T@U)
(declare-fun $generated@@547 (T@T) T@U)
(declare-fun $generated@@571 () T@T)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@622 (T@U Int) T@U)
(declare-fun $generated@@631 (T@U) Int)
(declare-fun $generated@@633 (T@U) T@U)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(declare-fun $generated@@672 (T@U) Int)
(declare-fun $generated@@773 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@72) (= (type $generated@@154) $generated@@151)) (= (type $generated@@155) $generated@@85)) (= ($generated@@149 $generated@@153 ($generated@@150 $generated@@154) $generated@@155) ($generated@@149 $generated@@153 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@149 $generated@@153 ($generated@@150 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 Int) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@72)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@158 ($generated@@156 0) $generated@@159))
 :pattern ( ($generated@@82 $generated@@158 ($generated@@156 0) $generated@@159))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@161 $generated@@169 $generated@@170)) $generated@@85)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
)) (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= (type ($generated@@165 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@165 $generated@@171))
))) (= (type $generated@@166) $generated@@85)) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= (type ($generated@@167 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) $generated@@85)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (= (type $generated@@168) $generated@@151)))
(assert  (=> (<= 3 $generated@@160) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@72) (= (type $generated@@178) $generated@@85)) (or ($generated@@162 $generated@@177 $generated@@178) (and (not (= 3 $generated@@160)) ($generated@@163 $generated@@178 ($generated@@84 $generated@@177))))) (and ($generated@@164 $generated@@177 $generated@@178 ($generated@@165 $generated@@166)) (= ($generated@@161 $generated@@177 $generated@@178) ($generated@@167 $generated@@177 ($generated@@150 $generated@@168) $generated@@178 ($generated@@165 $generated@@166)))))
 :pattern ( ($generated@@161 $generated@@177 $generated@@178))
))))
(assert  (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@85) (= (type $generated@@185) $generated@@85)) (and ($generated@@180 $generated@@184) ($generated@@180 $generated@@185))) (= ($generated@@179 $generated@@184 $generated@@185) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185) ($generated@@180 $generated@@184))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185) ($generated@@180 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@2) ($generated@@163 $generated@@186 ($generated@@156 0)))
 :pattern ( ($generated@@163 $generated@@186 ($generated@@156 0)))
)))
(assert  (and (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@192)) $generated@@85)
 :pattern ( ($generated@@189 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@85)
 :pattern ( ($generated@@190 $generated@@193))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@85)
 :pattern ( ($generated@@191 $generated@@194))
))))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@195) $generated@@72) (= (type $generated@@196) $generated@@151)) (= (type $generated@@197) $generated@@85)) (or ($generated@@187 $generated@@195 $generated@@197) (and (not (= 1 $generated@@160)) ($generated@@163 $generated@@197 ($generated@@84 $generated@@195))))) (and (=> (not ($generated@@188 $generated@@197)) (let (($generated@@198 ($generated@@189 $generated@@197)))
(let (($generated@@199 ($generated@@190 $generated@@197)))
 (=> ($generated@@180 $generated@@199) ($generated@@187 $generated@@195 $generated@@198))))) (= ($generated@@149 $generated@@195 ($generated@@150 $generated@@196) $generated@@197) (ite ($generated@@188 $generated@@197) true (let (($generated@@200 ($generated@@189 $generated@@197)))
(let (($generated@@201 ($generated@@190 $generated@@197)))
(ite ($generated@@180 $generated@@201) ($generated@@149 $generated@@195 $generated@@196 $generated@@200) ($generated@@0 ($generated@@165 ($generated@@11 false))))))))))
 :pattern ( ($generated@@149 $generated@@195 ($generated@@150 $generated@@196) $generated@@197))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@204 $generated@@205)) $generated@@72)
 :pattern ( ($generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (and (= (type $generated@@206) $generated@@72) (= (type $generated@@207) $generated@@72)) (= (type $generated@@208) $generated@@85)) ($generated@@163 $generated@@208 ($generated@@203 $generated@@206 $generated@@207))) ($generated@@202 $generated@@208))
 :pattern ( ($generated@@202 $generated@@208) ($generated@@163 $generated@@208 ($generated@@203 $generated@@206 $generated@@207)))
)))
(assert  (and (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@182)
 :pattern ( ($generated@@210 $generated@@212))
)) (forall (($generated@@213 T@U) ) (! (= (type ($generated@@211 $generated@@213)) $generated@@182)
 :pattern ( ($generated@@211 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@214) $generated@@85) (= (type $generated@@215) $generated@@85)) true) (= ($generated@@209 $generated@@214 $generated@@215)  (and (= ($generated@@210 $generated@@214) ($generated@@210 $generated@@215)) (= ($generated@@211 $generated@@214) ($generated@@211 $generated@@215)))))
 :pattern ( ($generated@@209 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@216 $generated@@217)) $generated@@76)
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (= ($generated@@216 $generated@@166) $generated@@63))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@72)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@86 $generated@@182 $generated@@2)) (= (type $generated@@222) $generated@@72)) ($generated@@163 $generated@@221 ($generated@@218 $generated@@222))) ($generated@@219 $generated@@221))
 :pattern ( ($generated@@163 $generated@@221 ($generated@@218 $generated@@222)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (= ($generated@@1 ($generated@@225 $generated@@229 $generated@@230)) 17)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@231 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@225 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@227 ($generated@@225 $generated@@233 $generated@@234)) $generated@@234)
 :pattern ( ($generated@@225 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@227 (type $generated@@235))))
(= (type ($generated@@223 $generated@@235 $generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236 $generated@@237))
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(let (($generated@@244 (type $generated@@240)))
(= (type ($generated@@228 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@225 $generated@@244 $generated@@243))))
 :pattern ( ($generated@@228 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@227 (type $generated@@245))))
 (=> (= (type $generated@@248) $generated@@249) (= ($generated@@223 ($generated@@228 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@246 $generated@@247) $generated@@248)))
 :weight 0
))) (and (and (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or (= $generated@@252 $generated@@254) (= ($generated@@223 ($generated@@228 $generated@@251 $generated@@252 $generated@@253 $generated@@250) $generated@@254 $generated@@255) ($generated@@223 $generated@@251 $generated@@254 $generated@@255)))
 :weight 0
)) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (or (= $generated@@259 $generated@@261) (= ($generated@@223 ($generated@@228 $generated@@257 $generated@@258 $generated@@259 $generated@@256) $generated@@260 $generated@@261) ($generated@@223 $generated@@257 $generated@@260 $generated@@261)))
 :weight 0
))) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or true (= ($generated@@223 ($generated@@228 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@223 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
)))) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ) (! (= (type ($generated@@224 $generated@@268 $generated@@269 $generated@@270 $generated@@271)) ($generated@@225 $generated@@87 $generated@@4))
 :pattern ( ($generated@@224 $generated@@268 $generated@@269 $generated@@270 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 Bool) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@75 (type $generated@@277))))
 (=> (and (and (and (and (= (type $generated@@272) $generated@@87) (= (type $generated@@273) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@274) ($generated@@74 $generated@@4))) (= (type $generated@@276) $generated@@87)) (= (type $generated@@277) ($generated@@74 $generated@@278))) (= ($generated@@0 ($generated@@223 ($generated@@224 $generated@@272 $generated@@273 $generated@@274 $generated@@275) $generated@@276 $generated@@277))  (=> (and (not (= $generated@@276 $generated@@272)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@273 $generated@@276) $generated@@274))) $generated@@275))))
 :pattern ( ($generated@@223 ($generated@@224 $generated@@272 $generated@@273 $generated@@274 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Bool) ) (! (= (type ($generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283)) ($generated@@225 $generated@@87 $generated@@4))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 Bool) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@75 (type $generated@@289))))
 (=> (and (and (and (and (= (type $generated@@284) $generated@@87) (= (type $generated@@285) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@286) ($generated@@74 $generated@@4))) (= (type $generated@@288) $generated@@87)) (= (type $generated@@289) ($generated@@74 $generated@@290))) (= ($generated@@0 ($generated@@223 ($generated@@279 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))  (=> (and (not (= $generated@@288 $generated@@284)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@285 $generated@@288) $generated@@286))) $generated@@287))))
 :pattern ( ($generated@@223 ($generated@@279 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))
)))
(assert  (=> (<= 2 $generated@@160) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) $generated@@72) (= (type $generated@@292) $generated@@151)) (= (type $generated@@293) $generated@@85)) (= (type $generated@@294) $generated@@85)) (or ($generated@@164 $generated@@291 $generated@@293 $generated@@294) (and (not (= 2 $generated@@160)) (and (and ($generated@@163 $generated@@293 ($generated@@84 $generated@@291)) ($generated@@163 $generated@@294 ($generated@@84 $generated@@291))) ($generated@@149 $generated@@291 ($generated@@150 $generated@@168) $generated@@294))))) (and (=> (not ($generated@@188 $generated@@293)) (let (($generated@@295 ($generated@@189 $generated@@293)))
(let (($generated@@296 ($generated@@190 $generated@@293)))
 (and (=> ($generated@@180 $generated@@296) ($generated@@164 $generated@@291 $generated@@295 $generated@@294)) (=> (not ($generated@@180 $generated@@296)) (let (($generated@@297 ($generated@@191 $generated@@296)))
 (and ($generated@@164 $generated@@291 $generated@@295 $generated@@294) ($generated@@164 $generated@@291 $generated@@297 ($generated@@167 $generated@@291 $generated@@292 $generated@@295 $generated@@294))))))))) (= ($generated@@167 $generated@@291 ($generated@@150 $generated@@292) $generated@@293 $generated@@294) (ite ($generated@@188 $generated@@293) $generated@@294 (let (($generated@@298 ($generated@@189 $generated@@293)))
(let (($generated@@299 ($generated@@190 $generated@@293)))
(ite ($generated@@180 $generated@@299) ($generated@@83 $generated@@299 ($generated@@167 $generated@@291 $generated@@292 $generated@@298 $generated@@294)) (let (($generated@@300 ($generated@@191 $generated@@299)))
($generated@@167 $generated@@291 $generated@@292 $generated@@300 ($generated@@167 $generated@@291 $generated@@292 $generated@@298 $generated@@294))))))))))
 :pattern ( ($generated@@167 $generated@@291 ($generated@@150 $generated@@292) $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@72) (= (type $generated@@302) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@302)) ($generated@@82 $generated@@166 ($generated@@84 $generated@@301) $generated@@302))
 :pattern ( ($generated@@82 $generated@@166 ($generated@@84 $generated@@301) $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@85)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (= (type $generated@@307) $generated@@72) (= (type $generated@@308) $generated@@72)) (= (type $generated@@309) $generated@@182)) (= (type $generated@@310) $generated@@182)) (= ($generated@@163 ($generated@@303 $generated@@309 $generated@@310) ($generated@@203 $generated@@307 $generated@@308))  (and ($generated@@304 $generated@@309 $generated@@307) ($generated@@304 $generated@@310 $generated@@308))))
 :pattern ( ($generated@@163 ($generated@@303 $generated@@309 $generated@@310) ($generated@@203 $generated@@307 $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@72) ($generated@@163 $generated@@166 ($generated@@84 $generated@@311)))
 :pattern ( ($generated@@163 $generated@@166 ($generated@@84 $generated@@311)))
)))
(assert  (=> (<= 3 $generated@@160) (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@72) (= (type $generated@@313) $generated@@85)) (or ($generated@@162 $generated@@312 $generated@@313) (and (not (= 3 $generated@@160)) ($generated@@163 $generated@@313 ($generated@@84 $generated@@312))))) (and ($generated@@149 $generated@@312 ($generated@@150 $generated@@168) ($generated@@161 $generated@@312 $generated@@313)) ($generated@@163 ($generated@@161 $generated@@312 $generated@@313) ($generated@@84 $generated@@312))))
 :pattern ( ($generated@@161 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@85) (= (type $generated@@315) $generated@@85)) (= ($generated@@209 $generated@@314 $generated@@315) (= $generated@@314 $generated@@315)))
 :pattern ( ($generated@@209 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@85) (= (type $generated@@318) $generated@@85)) (= ($generated@@316 $generated@@317 $generated@@318) (= $generated@@317 $generated@@318)))
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@85) (= (type $generated@@320) $generated@@85)) (= ($generated@@179 $generated@@319 $generated@@320) (= $generated@@319 $generated@@320)))
 :pattern ( ($generated@@179 $generated@@319 $generated@@320))
)))
(assert  (=> (<= 2 $generated@@160) (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@321) $generated@@72) (= (type $generated@@322) $generated@@151)) (= (type $generated@@323) $generated@@85)) (= (type $generated@@324) $generated@@85)) (or ($generated@@164 $generated@@321 ($generated@@165 $generated@@323) ($generated@@165 $generated@@324)) (and (not (= 2 $generated@@160)) (and (and ($generated@@163 $generated@@323 ($generated@@84 $generated@@321)) ($generated@@163 $generated@@324 ($generated@@84 $generated@@321))) ($generated@@0 ($generated@@165 ($generated@@11 ($generated@@149 $generated@@321 ($generated@@150 $generated@@168) ($generated@@165 $generated@@324))))))))) (and (=> (not ($generated@@0 ($generated@@165 ($generated@@11 ($generated@@188 ($generated@@165 $generated@@323)))))) (let (($generated@@325 ($generated@@165 ($generated@@189 ($generated@@165 $generated@@323)))))
(let (($generated@@326 ($generated@@165 ($generated@@190 ($generated@@165 $generated@@323)))))
 (and (=> ($generated@@180 $generated@@326) ($generated@@164 $generated@@321 $generated@@325 ($generated@@165 $generated@@324))) (=> (not ($generated@@180 $generated@@326)) (let (($generated@@327 ($generated@@191 $generated@@326)))
 (and ($generated@@164 $generated@@321 $generated@@325 ($generated@@165 $generated@@324)) ($generated@@164 $generated@@321 $generated@@327 ($generated@@167 $generated@@321 ($generated@@150 $generated@@322) $generated@@325 ($generated@@165 $generated@@324)))))))))) (= ($generated@@167 $generated@@321 ($generated@@150 $generated@@322) ($generated@@165 $generated@@323) ($generated@@165 $generated@@324)) (ite ($generated@@188 ($generated@@165 $generated@@323)) $generated@@324 (let (($generated@@328 ($generated@@165 ($generated@@189 ($generated@@165 $generated@@323)))))
(let (($generated@@329 ($generated@@165 ($generated@@190 ($generated@@165 $generated@@323)))))
(ite ($generated@@180 $generated@@329) ($generated@@165 ($generated@@83 $generated@@329 ($generated@@165 ($generated@@167 $generated@@321 ($generated@@150 $generated@@322) $generated@@328 ($generated@@165 $generated@@324))))) (let (($generated@@330 ($generated@@165 ($generated@@191 $generated@@329))))
($generated@@165 ($generated@@167 $generated@@321 ($generated@@150 $generated@@322) $generated@@330 ($generated@@165 ($generated@@167 $generated@@321 ($generated@@150 $generated@@322) $generated@@328 ($generated@@165 $generated@@324)))))))))))))
 :weight 3
 :pattern ( ($generated@@167 $generated@@321 ($generated@@150 $generated@@322) ($generated@@165 $generated@@323) ($generated@@165 $generated@@324)))
))))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@72)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@86 $generated@@182 $generated@@4)) (= (type $generated@@334) $generated@@72)) (= ($generated@@163 $generated@@333 ($generated@@331 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@182) ($generated@@0 ($generated@@93 $generated@@333 $generated@@335))) ($generated@@304 $generated@@335 $generated@@334))
 :pattern ( ($generated@@93 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@163 $generated@@333 ($generated@@331 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@72)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@86 $generated@@182 $generated@@4)) (= (type $generated@@339) $generated@@72)) (= ($generated@@163 $generated@@338 ($generated@@336 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@182) ($generated@@0 ($generated@@93 $generated@@338 $generated@@340))) ($generated@@304 $generated@@340 $generated@@339))
 :pattern ( ($generated@@93 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@163 $generated@@338 ($generated@@336 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ) (! (= ($generated@@165 $generated@@341) $generated@@341)
 :pattern ( ($generated@@165 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@342) $generated@@85) (= (type $generated@@343) $generated@@85)) (and ($generated@@188 $generated@@342) ($generated@@188 $generated@@343))) (= ($generated@@316 $generated@@342 $generated@@343) true))
 :pattern ( ($generated@@316 $generated@@342 $generated@@343) ($generated@@188 $generated@@342))
 :pattern ( ($generated@@316 $generated@@342 $generated@@343) ($generated@@188 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@345) $generated@@72) (= (type $generated@@346) $generated@@72)) (= (type $generated@@347) $generated@@182)) (= (type $generated@@348) $generated@@182)) (= (type $generated@@349) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@349)) (= ($generated@@82 ($generated@@303 $generated@@347 $generated@@348) ($generated@@203 $generated@@345 $generated@@346) $generated@@349)  (and ($generated@@344 $generated@@347 $generated@@345 $generated@@349) ($generated@@344 $generated@@348 $generated@@346 $generated@@349))))
 :pattern ( ($generated@@82 ($generated@@303 $generated@@347 $generated@@348) ($generated@@203 $generated@@345 $generated@@346) $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@85) (= ($generated@@202 $generated@@350) (= ($generated@@216 $generated@@350) $generated@@61)))
 :pattern ( ($generated@@202 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@85) (= ($generated@@188 $generated@@351) (= ($generated@@216 $generated@@351) $generated@@63)))
 :pattern ( ($generated@@188 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@85) (= ($generated@@352 $generated@@353) (= ($generated@@216 $generated@@353) $generated@@65)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@85) (= ($generated@@180 $generated@@354) (= ($generated@@216 $generated@@354) $generated@@67)))
 :pattern ( ($generated@@180 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@85) (= ($generated@@355 $generated@@356) (= ($generated@@216 $generated@@356) $generated@@68)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (and (= (type $generated@@357) $generated@@72) (= (type $generated@@358) $generated@@151)) (= (type $generated@@359) $generated@@85)) (or ($generated@@187 $generated@@357 ($generated@@165 $generated@@359)) (and (not (= 1 $generated@@160)) ($generated@@163 $generated@@359 ($generated@@84 $generated@@357))))) (and (=> (not ($generated@@0 ($generated@@165 ($generated@@11 ($generated@@188 ($generated@@165 $generated@@359)))))) (let (($generated@@360 ($generated@@165 ($generated@@189 ($generated@@165 $generated@@359)))))
(let (($generated@@361 ($generated@@165 ($generated@@190 ($generated@@165 $generated@@359)))))
 (=> ($generated@@180 $generated@@361) ($generated@@187 $generated@@357 $generated@@360))))) (= ($generated@@149 $generated@@357 ($generated@@150 $generated@@358) ($generated@@165 $generated@@359)) (ite ($generated@@188 ($generated@@165 $generated@@359)) true (let (($generated@@362 ($generated@@165 ($generated@@189 ($generated@@165 $generated@@359)))))
(let (($generated@@363 ($generated@@165 ($generated@@190 ($generated@@165 $generated@@359)))))
(ite ($generated@@180 $generated@@363) ($generated@@0 ($generated@@165 ($generated@@11 ($generated@@149 $generated@@357 ($generated@@150 $generated@@358) $generated@@362)))) ($generated@@0 ($generated@@165 ($generated@@11 false))))))))))
 :weight 3
 :pattern ( ($generated@@149 $generated@@357 ($generated@@150 $generated@@358) ($generated@@165 $generated@@359)))
))))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@85) ($generated@@202 $generated@@364)) (exists (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (and (and (= (type $generated@@365) $generated@@182) (= (type $generated@@366) $generated@@182)) (= $generated@@364 ($generated@@303 $generated@@365 $generated@@366)))
 :no-pattern (type $generated@@365)
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
)))
 :pattern ( ($generated@@202 $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@85) ($generated@@352 $generated@@367)) (exists (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (and (and (= (type $generated@@368) $generated@@85) (= (type $generated@@369) $generated@@85)) (= $generated@@367 ($generated@@83 $generated@@368 $generated@@369)))
 :no-pattern (type $generated@@368)
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
)))
 :pattern ( ($generated@@352 $generated@@367))
)))
(assert  (and (and (forall (($generated@@374 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@374)) 18)) (forall (($generated@@375 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375))
))) (forall (($generated@@376 T@T) ) (! (= (type ($generated@@370 $generated@@376)) ($generated@@372 $generated@@376))
 :pattern ( ($generated@@370 $generated@@376))
))))
(assert (forall (($generated@@377 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@377)) 0)
 :pattern ( ($generated@@370 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@72) (= (type $generated@@379) $generated@@85)) (= (type $generated@@380) $generated@@85)) (= ($generated@@163 ($generated@@83 $generated@@379 $generated@@380) ($generated@@84 $generated@@378))  (and ($generated@@163 $generated@@379 ($generated@@90 $generated@@378)) ($generated@@163 $generated@@380 ($generated@@84 $generated@@378)))))
 :pattern ( ($generated@@163 ($generated@@83 $generated@@379 $generated@@380) ($generated@@84 $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@85) ($generated@@188 $generated@@381)) (= $generated@@381 $generated@@166))
 :pattern ( ($generated@@188 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) $generated@@85)
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@85) ($generated@@180 $generated@@384)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@182) (= $generated@@384 ($generated@@382 $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
)))
 :pattern ( ($generated@@180 $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ) (! (= (type ($generated@@386 $generated@@387)) $generated@@85)
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@85) ($generated@@355 $generated@@388)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@85) (= $generated@@388 ($generated@@386 $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
)))
 :pattern ( ($generated@@355 $generated@@388))
)))
(assert  (=> (<= 3 $generated@@160) (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) $generated@@72) (= (type $generated@@391) $generated@@85)) (or ($generated@@162 $generated@@390 ($generated@@165 $generated@@391)) (and (not (= 3 $generated@@160)) ($generated@@163 $generated@@391 ($generated@@84 $generated@@390))))) (and ($generated@@164 $generated@@390 ($generated@@165 $generated@@391) ($generated@@165 $generated@@166)) (= ($generated@@161 $generated@@390 ($generated@@165 $generated@@391)) ($generated@@165 ($generated@@167 $generated@@390 ($generated@@150 $generated@@168) ($generated@@165 $generated@@391) ($generated@@165 $generated@@166))))))
 :weight 3
 :pattern ( ($generated@@161 $generated@@390 ($generated@@165 $generated@@391)))
))))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@151)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) $generated@@72) (= (type $generated@@395) $generated@@151)) (= (type $generated@@396) $generated@@85)) (= (type $generated@@397) $generated@@85)) (= ($generated@@167 $generated@@394 $generated@@395 $generated@@396 $generated@@397) ($generated@@167 $generated@@394 $generated@@168 $generated@@396 $generated@@397)))
 :pattern ( ($generated@@167 $generated@@394 ($generated@@392 $generated@@395) $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (= (type ($generated@@398 $generated@@399)) $generated@@182)
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@72) (= (type $generated@@402) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@344 ($generated@@398 $generated@@400) $generated@@401 $generated@@402) ($generated@@82 $generated@@400 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@344 ($generated@@398 $generated@@400) $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@86 $generated@@405 $generated@@2))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@91 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@86 $generated@@407 $generated@@2)) (and (= (= ($generated@@403 $generated@@406) 0) (= $generated@@406 ($generated@@404 $generated@@407))) (=> (not (= ($generated@@403 $generated@@406) 0)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (< 0 ($generated ($generated@@93 $generated@@406 $generated@@408))))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@403 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ) (! (= (type ($generated@@409 $generated@@410)) $generated@@77)
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@411)) $generated@@64) (= ($generated@@409 ($generated@@84 $generated@@411)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@412)) $generated@@66) (= ($generated@@409 ($generated@@90 $generated@@412)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@412))
)))
(assert  (and (and (and (and (forall (($generated@@418 T@T) ($generated@@419 T@T) ) (= ($generated@@1 ($generated@@415 $generated@@418 $generated@@419)) 19)) (forall (($generated@@420 T@T) ($generated@@421 T@T) ) (! (= ($generated@@416 ($generated@@415 $generated@@420 $generated@@421)) $generated@@420)
 :pattern ( ($generated@@415 $generated@@420 $generated@@421))
))) (forall (($generated@@422 T@T) ($generated@@423 T@T) ) (! (= ($generated@@417 ($generated@@415 $generated@@422 $generated@@423)) $generated@@423)
 :pattern ( ($generated@@415 $generated@@422 $generated@@423))
))) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@416 (type $generated@@424))))
(= (type ($generated@@413 $generated@@424)) ($generated@@86 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@413 $generated@@424))
))) (forall (($generated@@426 T@T) ($generated@@427 T@T) ) (! (= (type ($generated@@414 $generated@@426 $generated@@427)) ($generated@@415 $generated@@426 $generated@@427))
 :pattern ( ($generated@@414 $generated@@426 $generated@@427))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@T) ) (! (let (($generated@@430 (type $generated@@428)))
 (not ($generated@@0 ($generated@@93 ($generated@@413 ($generated@@414 $generated@@430 $generated@@429)) $generated@@428))))
 :pattern ( (let (($generated@@430 (type $generated@@428)))
($generated@@93 ($generated@@413 ($generated@@414 $generated@@430 $generated@@429)) $generated@@428)))
)))
(assert  (and (and (and (and (forall (($generated@@436 T@T) ($generated@@437 T@T) ) (= ($generated@@1 ($generated@@433 $generated@@436 $generated@@437)) 20)) (forall (($generated@@438 T@T) ($generated@@439 T@T) ) (! (= ($generated@@434 ($generated@@433 $generated@@438 $generated@@439)) $generated@@438)
 :pattern ( ($generated@@433 $generated@@438 $generated@@439))
))) (forall (($generated@@440 T@T) ($generated@@441 T@T) ) (! (= ($generated@@435 ($generated@@433 $generated@@440 $generated@@441)) $generated@@441)
 :pattern ( ($generated@@433 $generated@@440 $generated@@441))
))) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@434 (type $generated@@442))))
(= (type ($generated@@431 $generated@@442)) ($generated@@86 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@442))
))) (forall (($generated@@444 T@T) ($generated@@445 T@T) ) (! (= (type ($generated@@432 $generated@@444 $generated@@445)) ($generated@@433 $generated@@444 $generated@@445))
 :pattern ( ($generated@@432 $generated@@444 $generated@@445))
))))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@T) ) (! (let (($generated@@448 (type $generated@@446)))
 (not ($generated@@0 ($generated@@93 ($generated@@431 ($generated@@432 $generated@@448 $generated@@447)) $generated@@446))))
 :pattern ( (let (($generated@@448 (type $generated@@446)))
($generated@@93 ($generated@@431 ($generated@@432 $generated@@448 $generated@@447)) $generated@@446)))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) $generated@@72) (= (type $generated@@450) $generated@@151)) (= (type $generated@@451) $generated@@85)) (or ($generated@@187 $generated@@449 $generated@@451) (and (not (= 1 $generated@@160)) ($generated@@163 $generated@@451 ($generated@@84 $generated@@449))))) true)
 :pattern ( ($generated@@149 $generated@@449 $generated@@450 $generated@@451))
))))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@91 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@86 $generated@@453 $generated@@2)) (= ($generated@@219 $generated@@452) (forall (($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@453) (and (<= 0 ($generated ($generated@@93 $generated@@452 $generated@@454))) (<= ($generated ($generated@@93 $generated@@452 $generated@@454)) ($generated@@403 $generated@@452))))
 :pattern ( ($generated@@93 $generated@@452 $generated@@454))
)))))
 :pattern ( ($generated@@219 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@455) $generated@@85) (= (type $generated@@456) $generated@@85)) (and ($generated@@355 $generated@@455) ($generated@@355 $generated@@456))) (= ($generated@@179 $generated@@455 $generated@@456) ($generated@@316 ($generated@@191 $generated@@455) ($generated@@191 $generated@@456))))
 :pattern ( ($generated@@179 $generated@@455 $generated@@456) ($generated@@355 $generated@@455))
 :pattern ( ($generated@@179 $generated@@455 $generated@@456) ($generated@@355 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@417 (type $generated@@457))))
(let (($generated@@459 ($generated@@416 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@415 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@414 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) ($generated@@0 ($generated@@93 ($generated@@413 $generated@@457) $generated@@460)))
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@413 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@417 (type $generated@@462))))
(= (type ($generated@@461 $generated@@462)) ($generated@@86 $generated@@463 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@417 (type $generated@@464))))
(let (($generated@@466 ($generated@@416 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@415 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@414 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@465) ($generated@@0 ($generated@@93 ($generated@@461 $generated@@464) $generated@@467)))
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@461 $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@435 (type $generated@@468))))
(let (($generated@@470 ($generated@@434 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@433 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@432 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) ($generated@@0 ($generated@@93 ($generated@@431 $generated@@468) $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@431 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@435 (type $generated@@473))))
(= (type ($generated@@472 $generated@@473)) ($generated@@86 $generated@@474 $generated@@4)))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@435 (type $generated@@475))))
(let (($generated@@477 ($generated@@434 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@433 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@432 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@476) ($generated@@0 ($generated@@93 ($generated@@472 $generated@@475) $generated@@478)))
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@472 $generated@@475))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@86 $generated@@182 $generated@@2)) (= (type $generated@@480) $generated@@72)) (= ($generated@@163 $generated@@479 ($generated@@218 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@182) (< 0 ($generated ($generated@@93 $generated@@479 $generated@@481)))) ($generated@@304 $generated@@481 $generated@@480))
 :pattern ( ($generated@@93 $generated@@479 $generated@@481))
))))
 :pattern ( ($generated@@163 $generated@@479 ($generated@@218 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) $generated@@72) (= (type $generated@@483) $generated@@182)) (= (type $generated@@484) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@484)) (= ($generated@@82 ($generated@@382 $generated@@483) ($generated@@90 $generated@@482) $generated@@484) ($generated@@344 $generated@@483 $generated@@482 $generated@@484)))
 :pattern ( ($generated@@82 ($generated@@382 $generated@@483) ($generated@@90 $generated@@482) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (= (type $generated@@485) $generated@@72) (= (type $generated@@486) $generated@@85)) (= (type $generated@@487) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@487)) (= ($generated@@82 ($generated@@386 $generated@@486) ($generated@@90 $generated@@485) $generated@@487) ($generated@@82 $generated@@486 ($generated@@84 $generated@@485) $generated@@487)))
 :pattern ( ($generated@@82 ($generated@@386 $generated@@486) ($generated@@90 $generated@@485) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@86 $generated@@182 $generated@@4)) (= (type $generated@@489) $generated@@72)) (= (type $generated@@490) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@488 ($generated@@331 $generated@@489) $generated@@490) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@182) ($generated@@0 ($generated@@93 $generated@@488 $generated@@491))) ($generated@@344 $generated@@491 $generated@@489 $generated@@490))
 :pattern ( ($generated@@93 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@82 $generated@@488 ($generated@@331 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@86 $generated@@182 $generated@@4)) (= (type $generated@@493) $generated@@72)) (= (type $generated@@494) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@492 ($generated@@336 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@182) ($generated@@0 ($generated@@93 $generated@@492 $generated@@495))) ($generated@@344 $generated@@495 $generated@@493 $generated@@494))
 :pattern ( ($generated@@93 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@82 $generated@@492 ($generated@@336 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(= ($generated ($generated@@93 ($generated@@404 $generated@@497) $generated@@496)) 0))
 :pattern ( (let (($generated@@497 (type $generated@@496)))
($generated@@93 ($generated@@404 $generated@@497) $generated@@496)))
)))
(assert  (and (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@498 $generated@@501)) ($generated@@86 $generated@@182 $generated@@4))
 :pattern ( ($generated@@498 $generated@@501))
)) (forall (($generated@@502 T@T) ($generated@@503 T@U) ) (! (= (type ($generated@@499 $generated@@502 $generated@@503)) $generated@@502)
 :pattern ( ($generated@@499 $generated@@502 $generated@@503))
))) (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@417 (type $generated@@504))))
(let (($generated@@506 ($generated@@416 (type $generated@@504))))
(= (type ($generated@@500 $generated@@504)) ($generated@@86 $generated@@506 $generated@@505))))
 :pattern ( ($generated@@500 $generated@@504))
))))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) ($generated@@415 $generated@@182 $generated@@182)) (= (type $generated@@508) $generated@@182)) (= ($generated@@0 ($generated@@93 ($generated@@498 $generated@@507) $generated@@508))  (and ($generated@@0 ($generated@@93 ($generated@@413 $generated@@507) ($generated@@210 ($generated@@499 $generated@@85 $generated@@508)))) (= ($generated@@93 ($generated@@500 $generated@@507) ($generated@@210 ($generated@@499 $generated@@85 $generated@@508))) ($generated@@211 ($generated@@499 $generated@@85 $generated@@508))))))
 :pattern ( ($generated@@93 ($generated@@498 $generated@@507) $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) ($generated@@86 $generated@@182 $generated@@4))
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@435 (type $generated@@512))))
(let (($generated@@514 ($generated@@434 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512)) ($generated@@86 $generated@@514 $generated@@513))))
 :pattern ( ($generated@@510 $generated@@512))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) ($generated@@433 $generated@@182 $generated@@182)) (= (type $generated@@516) $generated@@182)) (= ($generated@@0 ($generated@@93 ($generated@@509 $generated@@515) $generated@@516))  (and ($generated@@0 ($generated@@93 ($generated@@431 $generated@@515) ($generated@@210 ($generated@@499 $generated@@85 $generated@@516)))) (= ($generated@@93 ($generated@@510 $generated@@515) ($generated@@210 ($generated@@499 $generated@@85 $generated@@516))) ($generated@@211 ($generated@@499 $generated@@85 $generated@@516))))))
 :pattern ( ($generated@@93 ($generated@@509 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(let (($generated@@520 ($generated@@416 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@415 $generated@@520 $generated@@519)) (= ($generated@@0 ($generated@@93 ($generated@@461 $generated@@517) $generated@@518)) (exists (($generated@@521 T@U) ) (!  (and (= (type $generated@@521) $generated@@520) (and ($generated@@0 ($generated@@93 ($generated@@413 $generated@@517) $generated@@521)) (= $generated@@518 ($generated@@93 ($generated@@500 $generated@@517) $generated@@521))))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@517) $generated@@521))
 :pattern ( ($generated@@93 ($generated@@500 $generated@@517) $generated@@521))
))))))
 :pattern ( ($generated@@93 ($generated@@461 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(let (($generated@@525 ($generated@@434 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@433 $generated@@525 $generated@@524)) (= ($generated@@0 ($generated@@93 ($generated@@472 $generated@@522) $generated@@523)) (exists (($generated@@526 T@U) ) (!  (and (= (type $generated@@526) $generated@@525) (and ($generated@@0 ($generated@@93 ($generated@@431 $generated@@522) $generated@@526)) (= $generated@@523 ($generated@@93 ($generated@@510 $generated@@522) $generated@@526))))
 :pattern ( ($generated@@93 ($generated@@431 $generated@@522) $generated@@526))
 :pattern ( ($generated@@93 ($generated@@510 $generated@@522) $generated@@526))
))))))
 :pattern ( ($generated@@93 ($generated@@472 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (! (= (type ($generated@@527 $generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@527 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) ($generated@@415 $generated@@182 $generated@@182)) (= (type $generated@@531) $generated@@72)) (= (type $generated@@532) $generated@@72)) (= (type $generated@@533) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@530 ($generated@@527 $generated@@531 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@182) ($generated@@0 ($generated@@93 ($generated@@413 $generated@@530) $generated@@534))) (and ($generated@@344 ($generated@@93 ($generated@@500 $generated@@530) $generated@@534) $generated@@532 $generated@@533) ($generated@@344 $generated@@534 $generated@@531 $generated@@533)))
 :pattern ( ($generated@@93 ($generated@@500 $generated@@530) $generated@@534))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@530) $generated@@534))
))))
 :pattern ( ($generated@@82 $generated@@530 ($generated@@527 $generated@@531 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@535 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) ($generated@@433 $generated@@182 $generated@@182)) (= (type $generated@@539) $generated@@72)) (= (type $generated@@540) $generated@@72)) (= (type $generated@@541) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@538 ($generated@@535 $generated@@539 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@182) ($generated@@0 ($generated@@93 ($generated@@431 $generated@@538) $generated@@542))) (and ($generated@@344 ($generated@@93 ($generated@@510 $generated@@538) $generated@@542) $generated@@540 $generated@@541) ($generated@@344 $generated@@542 $generated@@539 $generated@@541)))
 :pattern ( ($generated@@93 ($generated@@510 $generated@@538) $generated@@542))
 :pattern ( ($generated@@93 ($generated@@431 $generated@@538) $generated@@542))
))))
 :pattern ( ($generated@@82 $generated@@538 ($generated@@535 $generated@@539 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@72) (= (type $generated@@544) $generated@@85)) ($generated@@163 $generated@@544 ($generated@@84 $generated@@543))) (or ($generated@@188 $generated@@544) ($generated@@352 $generated@@544)))
 :pattern ( ($generated@@352 $generated@@544) ($generated@@163 $generated@@544 ($generated@@84 $generated@@543)))
 :pattern ( ($generated@@188 $generated@@544) ($generated@@163 $generated@@544 ($generated@@84 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@72) (= (type $generated@@546) $generated@@85)) ($generated@@163 $generated@@546 ($generated@@90 $generated@@545))) (or ($generated@@180 $generated@@546) ($generated@@355 $generated@@546)))
 :pattern ( ($generated@@355 $generated@@546) ($generated@@163 $generated@@546 ($generated@@90 $generated@@545)))
 :pattern ( ($generated@@180 $generated@@546) ($generated@@163 $generated@@546 ($generated@@90 $generated@@545)))
)))
(assert (forall (($generated@@548 T@T) ) (! (= (type ($generated@@547 $generated@@548)) ($generated@@86 $generated@@548 $generated@@4))
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@435 (type $generated@@549))))
(let (($generated@@551 ($generated@@434 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@433 $generated@@551 $generated@@550)) (= (= $generated@@549 ($generated@@432 $generated@@551 $generated@@550)) (= ($generated@@431 $generated@@549) ($generated@@547 $generated@@551))))))
 :pattern ( ($generated@@431 $generated@@549))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@435 (type $generated@@552))))
(let (($generated@@554 ($generated@@434 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@433 $generated@@554 $generated@@553)) (= (= $generated@@552 ($generated@@432 $generated@@554 $generated@@553)) (= ($generated@@472 $generated@@552) ($generated@@547 $generated@@553))))))
 :pattern ( ($generated@@472 $generated@@552))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@435 (type $generated@@555))))
(let (($generated@@557 ($generated@@434 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@433 $generated@@557 $generated@@556)) (= (= $generated@@555 ($generated@@432 $generated@@557 $generated@@556)) (= ($generated@@509 $generated@@555) ($generated@@547 $generated@@182))))))
 :pattern ( ($generated@@509 $generated@@555))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@417 (type $generated@@558))))
(let (($generated@@560 ($generated@@416 (type $generated@@558))))
 (=> (= (type $generated@@558) ($generated@@415 $generated@@560 $generated@@559)) (or (= $generated@@558 ($generated@@414 $generated@@560 $generated@@559)) (exists (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (and (and (= (type $generated@@561) $generated@@182) (= (type $generated@@562) $generated@@182)) ($generated@@0 ($generated@@93 ($generated@@498 $generated@@558) ($generated@@398 ($generated@@303 $generated@@561 $generated@@562)))))
 :no-pattern (type $generated@@561)
 :no-pattern (type $generated@@562)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
))))))
 :pattern ( ($generated@@498 $generated@@558))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@435 (type $generated@@563))))
(let (($generated@@565 ($generated@@434 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@433 $generated@@565 $generated@@564)) (or (= $generated@@563 ($generated@@432 $generated@@565 $generated@@564)) (exists (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (and (and (= (type $generated@@566) $generated@@182) (= (type $generated@@567) $generated@@182)) ($generated@@0 ($generated@@93 ($generated@@509 $generated@@563) ($generated@@398 ($generated@@303 $generated@@566 $generated@@567)))))
 :no-pattern (type $generated@@566)
 :no-pattern (type $generated@@567)
 :no-pattern ($generated $generated@@566)
 :no-pattern ($generated@@0 $generated@@566)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
))))))
 :pattern ( ($generated@@509 $generated@@563))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@182) ($generated@@304 $generated@@568 $generated@@46)) (and (= ($generated@@398 ($generated@@499 $generated@@2 $generated@@568)) $generated@@568) ($generated@@163 ($generated@@499 $generated@@2 $generated@@568) $generated@@46)))
 :pattern ( ($generated@@304 $generated@@568 $generated@@46))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@182) ($generated@@304 $generated@@569 $generated@@47)) (and (= ($generated@@398 ($generated@@499 $generated@@3 $generated@@569)) $generated@@569) ($generated@@163 ($generated@@499 $generated@@3 $generated@@569) $generated@@47)))
 :pattern ( ($generated@@304 $generated@@569 $generated@@47))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@182) ($generated@@304 $generated@@570 $generated@@44)) (and (= ($generated@@398 ($generated@@499 $generated@@4 $generated@@570)) $generated@@570) ($generated@@163 ($generated@@499 $generated@@4 $generated@@570) $generated@@44)))
 :pattern ( ($generated@@304 $generated@@570 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@571) 21))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@182) ($generated@@304 $generated@@572 $generated@@45)) (and (= ($generated@@398 ($generated@@499 $generated@@571 $generated@@572)) $generated@@572) ($generated@@163 ($generated@@499 $generated@@571 $generated@@572) $generated@@45)))
 :pattern ( ($generated@@304 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@85) (= (type $generated@@574) $generated@@85)) (and ($generated@@352 $generated@@573) ($generated@@352 $generated@@574))) (= ($generated@@316 $generated@@573 $generated@@574)  (and ($generated@@179 ($generated@@190 $generated@@573) ($generated@@190 $generated@@574)) ($generated@@316 ($generated@@189 $generated@@573) ($generated@@189 $generated@@574)))))
 :pattern ( ($generated@@316 $generated@@573 $generated@@574) ($generated@@352 $generated@@573))
 :pattern ( ($generated@@316 $generated@@573 $generated@@574) ($generated@@352 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@72) (= ($generated@@304 ($generated@@398 $generated@@575) $generated@@576) ($generated@@163 $generated@@575 $generated@@576)))
 :pattern ( ($generated@@304 ($generated@@398 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@91 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@86 $generated@@578 $generated@@2)) (<= 0 ($generated@@403 $generated@@577))))
 :pattern ( ($generated@@403 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@373 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@372 $generated@@580)) (<= 0 ($generated@@371 $generated@@579))))
 :pattern ( ($generated@@371 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@72)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@72) (= (type $generated@@584) $generated@@72)) (= ($generated@@581 ($generated@@527 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@527 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@72)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@72) (= (type $generated@@588) $generated@@72)) (= ($generated@@585 ($generated@@527 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@527 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@72) (= (type $generated@@590) $generated@@72)) (= ($generated@@80 ($generated@@527 $generated@@589 $generated@@590)) $generated@@58))
 :pattern ( ($generated@@527 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@72)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@72) (= (type $generated@@594) $generated@@72)) (= ($generated@@591 ($generated@@535 $generated@@593 $generated@@594)) $generated@@593))
 :pattern ( ($generated@@535 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@72)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@72) (= (type $generated@@598) $generated@@72)) (= ($generated@@595 ($generated@@535 $generated@@597 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@535 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@72) (= (type $generated@@600) $generated@@72)) (= ($generated@@80 ($generated@@535 $generated@@599 $generated@@600)) $generated@@59))
 :pattern ( ($generated@@535 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@182) (= (type $generated@@602) $generated@@182)) (= ($generated@@216 ($generated@@303 $generated@@601 $generated@@602)) $generated@@61))
 :pattern ( ($generated@@303 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@72)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@72) (= (type $generated@@606) $generated@@72)) (= ($generated@@603 ($generated@@203 $generated@@605 $generated@@606)) $generated@@605))
 :pattern ( ($generated@@203 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@72)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@72) (= (type $generated@@610) $generated@@72)) (= ($generated@@607 ($generated@@203 $generated@@609 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@203 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@182) (= (type $generated@@612) $generated@@182)) (= ($generated@@210 ($generated@@303 $generated@@611 $generated@@612)) $generated@@611))
 :pattern ( ($generated@@303 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@182) (= (type $generated@@614) $generated@@182)) (= ($generated@@211 ($generated@@303 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@303 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@85) (= (type $generated@@616) $generated@@85)) (= ($generated@@216 ($generated@@83 $generated@@615 $generated@@616)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@85) (= (type $generated@@618) $generated@@85)) (= ($generated@@190 ($generated@@83 $generated@@617 $generated@@618)) $generated@@617))
 :pattern ( ($generated@@83 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@85) (= (type $generated@@620) $generated@@85)) (= ($generated@@189 ($generated@@83 $generated@@619 $generated@@620)) $generated@@620))
 :pattern ( ($generated@@83 $generated@@619 $generated@@620))
)))
(assert  (and (forall (($generated@@623 T@U) ) (! (= (type ($generated@@621 $generated@@623)) $generated@@72)
 :pattern ( ($generated@@621 $generated@@623))
)) (forall (($generated@@624 T@U) ($generated@@625 Int) ) (! (let (($generated@@626 ($generated@@373 (type $generated@@624))))
(= (type ($generated@@622 $generated@@624 $generated@@625)) $generated@@626))
 :pattern ( ($generated@@622 $generated@@624 $generated@@625))
))))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@372 $generated@@182)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@627 ($generated@@621 $generated@@628) $generated@@629) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@371 $generated@@627))) ($generated@@344 ($generated@@622 $generated@@627 $generated@@630) $generated@@628 $generated@@629))
 :pattern ( ($generated@@622 $generated@@627 $generated@@630))
))))
 :pattern ( ($generated@@82 $generated@@627 ($generated@@621 $generated@@628) $generated@@629))
)))
(assert (forall (($generated@@632 Int) ) (! (= ($generated@@631 ($generated@@156 $generated@@632)) $generated@@632)
 :pattern ( ($generated@@156 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ) (! (= (type ($generated@@633 $generated@@634)) $generated@@72)
 :pattern ( ($generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@72) (= ($generated@@633 ($generated@@331 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@331 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@72) (= ($generated@@80 ($generated@@331 $generated@@636)) $generated@@54))
 :pattern ( ($generated@@331 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@72)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@72) (= ($generated@@637 ($generated@@336 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@336 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@72) (= ($generated@@80 ($generated@@336 $generated@@640)) $generated@@55))
 :pattern ( ($generated@@336 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@72)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@72) (= ($generated@@641 ($generated@@218 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@218 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@72) (= ($generated@@80 ($generated@@218 $generated@@644)) $generated@@56))
 :pattern ( ($generated@@218 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@72)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@72) (= ($generated@@645 ($generated@@621 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@621 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@72) (= ($generated@@80 ($generated@@621 $generated@@648)) $generated@@57))
 :pattern ( ($generated@@621 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@72)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@72) (= ($generated@@649 ($generated@@84 $generated@@651)) $generated@@651))
 :pattern ( ($generated@@84 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@72)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@72) (= ($generated@@652 ($generated@@90 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@90 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@182) (= ($generated@@216 ($generated@@382 $generated@@655)) $generated@@67))
 :pattern ( ($generated@@382 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@182) (= ($generated@@181 ($generated@@382 $generated@@656)) $generated@@656))
 :pattern ( ($generated@@382 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@85) (= ($generated@@216 ($generated@@386 $generated@@657)) $generated@@68))
 :pattern ( ($generated@@386 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@85) (= ($generated@@191 ($generated@@386 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@386 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@659)))
(= ($generated@@499 $generated@@660 ($generated@@398 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@398 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@415 $generated@@182 $generated@@182)) (= (type $generated@@662) $generated@@72)) (= (type $generated@@663) $generated@@72)) (= ($generated@@163 $generated@@661 ($generated@@527 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@182) ($generated@@0 ($generated@@93 ($generated@@413 $generated@@661) $generated@@664))) (and ($generated@@304 ($generated@@93 ($generated@@500 $generated@@661) $generated@@664) $generated@@663) ($generated@@304 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@93 ($generated@@500 $generated@@661) $generated@@664))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@163 $generated@@661 ($generated@@527 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@433 $generated@@182 $generated@@182)) (= (type $generated@@666) $generated@@72)) (= (type $generated@@667) $generated@@72)) (= ($generated@@163 $generated@@665 ($generated@@535 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@182) ($generated@@0 ($generated@@93 ($generated@@431 $generated@@665) $generated@@668))) (and ($generated@@304 ($generated@@93 ($generated@@510 $generated@@665) $generated@@668) $generated@@667) ($generated@@304 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@93 ($generated@@510 $generated@@665) $generated@@668))
 :pattern ( ($generated@@93 ($generated@@431 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@163 $generated@@665 ($generated@@535 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@72) (= (type $generated@@670) $generated@@182)) (= ($generated@@163 ($generated@@382 $generated@@670) ($generated@@90 $generated@@669)) ($generated@@304 $generated@@670 $generated@@669)))
 :pattern ( ($generated@@163 ($generated@@382 $generated@@670) ($generated@@90 $generated@@669)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@182) (= (type $generated@@674) $generated@@182)) (< ($generated@@671 $generated@@673) ($generated@@672 ($generated@@303 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@303 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@182) (= (type $generated@@676) $generated@@182)) (< ($generated@@671 $generated@@676) ($generated@@672 ($generated@@303 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@303 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@85) (= (type $generated@@678) $generated@@85)) (< ($generated@@672 $generated@@677) ($generated@@672 ($generated@@83 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@83 $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@85) (= (type $generated@@680) $generated@@85)) (< ($generated@@672 $generated@@680) ($generated@@672 ($generated@@83 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@83 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) $generated@@182) (= (type $generated@@682) $generated@@72)) (= (type $generated@@683) $generated@@72)) ($generated@@304 $generated@@681 ($generated@@527 $generated@@682 $generated@@683))) (and (= ($generated@@398 ($generated@@499 ($generated@@415 $generated@@182 $generated@@182) $generated@@681)) $generated@@681) ($generated@@163 ($generated@@499 ($generated@@415 $generated@@182 $generated@@182) $generated@@681) ($generated@@527 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@304 $generated@@681 ($generated@@527 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (and (= (type $generated@@684) $generated@@182) (= (type $generated@@685) $generated@@72)) (= (type $generated@@686) $generated@@72)) ($generated@@304 $generated@@684 ($generated@@535 $generated@@685 $generated@@686))) (and (= ($generated@@398 ($generated@@499 ($generated@@433 $generated@@182 $generated@@182) $generated@@684)) $generated@@684) ($generated@@163 ($generated@@499 ($generated@@433 $generated@@182 $generated@@182) $generated@@684) ($generated@@535 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@304 $generated@@684 ($generated@@535 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@72) (= (type $generated@@688) $generated@@72)) (= (type $generated@@689) $generated@@182)) ($generated@@304 $generated@@689 ($generated@@203 $generated@@687 $generated@@688))) (and (= ($generated@@398 ($generated@@499 $generated@@85 $generated@@689)) $generated@@689) ($generated@@163 ($generated@@499 $generated@@85 $generated@@689) ($generated@@203 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@304 $generated@@689 ($generated@@203 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@182) (< ($generated@@671 $generated@@690) ($generated@@672 ($generated@@382 $generated@@690))))
 :pattern ( ($generated@@382 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@85) (< ($generated@@672 $generated@@691) ($generated@@672 ($generated@@386 $generated@@691))))
 :pattern ( ($generated@@386 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@85) (= (type $generated@@693) $generated@@72)) (= (type $generated@@694) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@694) (and ($generated@@180 $generated@@692) ($generated@@82 $generated@@692 ($generated@@90 $generated@@693) $generated@@694)))) ($generated@@344 ($generated@@181 $generated@@692) $generated@@693 $generated@@694))
 :pattern ( ($generated@@344 ($generated@@181 $generated@@692) $generated@@693 $generated@@694))
)))
(assert (forall (($generated@@695 T@U) ) (! (let (($generated@@696 (type $generated@@695)))
 (not ($generated@@0 ($generated@@93 ($generated@@547 $generated@@696) $generated@@695))))
 :pattern ( (let (($generated@@696 (type $generated@@695)))
($generated@@93 ($generated@@547 $generated@@696) $generated@@695)))
)))
(assert  (=> (<= 2 $generated@@160) (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@697) $generated@@72) (= (type $generated@@698) $generated@@151)) (= (type $generated@@699) $generated@@85)) (= (type $generated@@700) $generated@@85)) (or ($generated@@164 $generated@@697 $generated@@699 $generated@@700) (and (not (= 2 $generated@@160)) (and (and ($generated@@163 $generated@@699 ($generated@@84 $generated@@697)) ($generated@@163 $generated@@700 ($generated@@84 $generated@@697))) ($generated@@149 $generated@@697 ($generated@@150 $generated@@168) $generated@@700))))) (and ($generated@@149 $generated@@697 ($generated@@150 $generated@@168) ($generated@@167 $generated@@697 $generated@@698 $generated@@699 $generated@@700)) ($generated@@163 ($generated@@167 $generated@@697 $generated@@698 $generated@@699 $generated@@700) ($generated@@84 $generated@@697))))
 :pattern ( ($generated@@167 $generated@@697 $generated@@698 $generated@@699 $generated@@700))
))))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@72) (= (type $generated@@702) $generated@@72)) (and (= ($generated@@80 ($generated@@203 $generated@@701 $generated@@702)) $generated@@62) (= ($generated@@409 ($generated@@203 $generated@@701 $generated@@702)) $generated@@69)))
 :pattern ( ($generated@@203 $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@85) (= ($generated@@671 ($generated@@398 $generated@@703)) ($generated@@672 $generated@@703)))
 :pattern ( ($generated@@671 ($generated@@398 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) $generated@@72) (= (type $generated@@705) $generated@@151)) (= (type $generated@@706) $generated@@85)) (= (type $generated@@707) $generated@@85)) (= ($generated@@167 $generated@@704 ($generated@@150 $generated@@705) $generated@@706 $generated@@707) ($generated@@167 $generated@@704 $generated@@705 $generated@@706 $generated@@707)))
 :pattern ( ($generated@@167 $generated@@704 ($generated@@150 $generated@@705) $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@182) ($generated@@304 $generated@@708 ($generated@@156 0))) (and (= ($generated@@398 ($generated@@499 $generated@@2 $generated@@708)) $generated@@708) ($generated@@163 ($generated@@499 ($generated@@86 $generated@@182 $generated@@4) $generated@@708) ($generated@@156 0))))
 :pattern ( ($generated@@304 $generated@@708 ($generated@@156 0)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@182) (= (type $generated@@710) $generated@@72)) ($generated@@304 $generated@@709 ($generated@@331 $generated@@710))) (and (= ($generated@@398 ($generated@@499 ($generated@@86 $generated@@182 $generated@@4) $generated@@709)) $generated@@709) ($generated@@163 ($generated@@499 ($generated@@86 $generated@@182 $generated@@4) $generated@@709) ($generated@@331 $generated@@710))))
 :pattern ( ($generated@@304 $generated@@709 ($generated@@331 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@711) $generated@@182) (= (type $generated@@712) $generated@@72)) ($generated@@304 $generated@@711 ($generated@@336 $generated@@712))) (and (= ($generated@@398 ($generated@@499 ($generated@@86 $generated@@182 $generated@@4) $generated@@711)) $generated@@711) ($generated@@163 ($generated@@499 ($generated@@86 $generated@@182 $generated@@4) $generated@@711) ($generated@@336 $generated@@712))))
 :pattern ( ($generated@@304 $generated@@711 ($generated@@336 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@182) (= (type $generated@@714) $generated@@72)) ($generated@@304 $generated@@713 ($generated@@218 $generated@@714))) (and (= ($generated@@398 ($generated@@499 ($generated@@86 $generated@@182 $generated@@2) $generated@@713)) $generated@@713) ($generated@@163 ($generated@@499 ($generated@@86 $generated@@182 $generated@@2) $generated@@713) ($generated@@218 $generated@@714))))
 :pattern ( ($generated@@304 $generated@@713 ($generated@@218 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@182) (= (type $generated@@716) $generated@@72)) ($generated@@304 $generated@@715 ($generated@@621 $generated@@716))) (and (= ($generated@@398 ($generated@@499 ($generated@@372 $generated@@182) $generated@@715)) $generated@@715) ($generated@@163 ($generated@@499 ($generated@@372 $generated@@182) $generated@@715) ($generated@@621 $generated@@716))))
 :pattern ( ($generated@@304 $generated@@715 ($generated@@621 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) $generated@@72) (= (type $generated@@718) $generated@@182)) ($generated@@304 $generated@@718 ($generated@@84 $generated@@717))) (and (= ($generated@@398 ($generated@@499 $generated@@85 $generated@@718)) $generated@@718) ($generated@@163 ($generated@@499 $generated@@85 $generated@@718) ($generated@@84 $generated@@717))))
 :pattern ( ($generated@@304 $generated@@718 ($generated@@84 $generated@@717)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@72) (= (type $generated@@720) $generated@@182)) ($generated@@304 $generated@@720 ($generated@@90 $generated@@719))) (and (= ($generated@@398 ($generated@@499 $generated@@85 $generated@@720)) $generated@@720) ($generated@@163 ($generated@@499 $generated@@85 $generated@@720) ($generated@@90 $generated@@719))))
 :pattern ( ($generated@@304 $generated@@720 ($generated@@90 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@72) (= (type $generated@@722) $generated@@85)) (= ($generated@@163 ($generated@@386 $generated@@722) ($generated@@90 $generated@@721)) ($generated@@163 $generated@@722 ($generated@@84 $generated@@721))))
 :pattern ( ($generated@@163 ($generated@@386 $generated@@722) ($generated@@90 $generated@@721)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (= (type $generated@@723) $generated@@85) (= (type $generated@@724) $generated@@72)) (= (type $generated@@725) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@725) (and ($generated@@352 $generated@@723) ($generated@@82 $generated@@723 ($generated@@84 $generated@@724) $generated@@725)))) ($generated@@82 ($generated@@190 $generated@@723) ($generated@@90 $generated@@724) $generated@@725))
 :pattern ( ($generated@@82 ($generated@@190 $generated@@723) ($generated@@90 $generated@@724) $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (and (= (type $generated@@726) $generated@@85) (= (type $generated@@727) $generated@@72)) (= (type $generated@@728) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@728) (and ($generated@@352 $generated@@726) ($generated@@82 $generated@@726 ($generated@@84 $generated@@727) $generated@@728)))) ($generated@@82 ($generated@@189 $generated@@726) ($generated@@84 $generated@@727) $generated@@728))
 :pattern ( ($generated@@82 ($generated@@189 $generated@@726) ($generated@@84 $generated@@727) $generated@@728))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (= (type $generated@@729) $generated@@85) (= (type $generated@@730) $generated@@72)) (= (type $generated@@731) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@731) (and ($generated@@355 $generated@@729) ($generated@@82 $generated@@729 ($generated@@90 $generated@@730) $generated@@731)))) ($generated@@82 ($generated@@191 $generated@@729) ($generated@@84 $generated@@730) $generated@@731))
 :pattern ( ($generated@@82 ($generated@@191 $generated@@729) ($generated@@84 $generated@@730) $generated@@731))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (= (type $generated@@732) ($generated@@86 $generated@@182 $generated@@2)) (= (type $generated@@733) $generated@@72)) (= (type $generated@@734) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@732 ($generated@@218 $generated@@733) $generated@@734) (forall (($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@735) $generated@@182) (< 0 ($generated ($generated@@93 $generated@@732 $generated@@735)))) ($generated@@344 $generated@@735 $generated@@733 $generated@@734))
 :pattern ( ($generated@@93 $generated@@732 $generated@@735))
))))
 :pattern ( ($generated@@82 $generated@@732 ($generated@@218 $generated@@733) $generated@@734))
)))
(assert (= $generated@@166 ($generated@@165 $generated@@166)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (and (= (type $generated@@736) $generated@@85) (= (type $generated@@737) $generated@@72)) (= (type $generated@@738) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@738) (and ($generated@@202 $generated@@736) (exists (($generated@@739 T@U) ) (!  (and (= (type $generated@@739) $generated@@72) ($generated@@82 $generated@@736 ($generated@@203 $generated@@737 $generated@@739) $generated@@738))
 :pattern ( ($generated@@82 $generated@@736 ($generated@@203 $generated@@737 $generated@@739) $generated@@738))
))))) ($generated@@344 ($generated@@210 $generated@@736) $generated@@737 $generated@@738))
 :pattern ( ($generated@@344 ($generated@@210 $generated@@736) $generated@@737 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) $generated@@85) (= (type $generated@@741) $generated@@72)) (= (type $generated@@742) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@742) (and ($generated@@202 $generated@@740) (exists (($generated@@743 T@U) ) (!  (and (= (type $generated@@743) $generated@@72) ($generated@@82 $generated@@740 ($generated@@203 $generated@@743 $generated@@741) $generated@@742))
 :pattern ( ($generated@@82 $generated@@740 ($generated@@203 $generated@@743 $generated@@741) $generated@@742))
))))) ($generated@@344 ($generated@@211 $generated@@740) $generated@@741 $generated@@742))
 :pattern ( ($generated@@344 ($generated@@211 $generated@@740) $generated@@741 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@182) (= (type $generated@@745) $generated@@182)) (= ($generated@@303 ($generated@@165 $generated@@744) ($generated@@165 $generated@@745)) ($generated@@165 ($generated@@303 $generated@@744 $generated@@745))))
 :pattern ( ($generated@@303 ($generated@@165 $generated@@744) ($generated@@165 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) $generated@@85) (= (type $generated@@747) $generated@@85)) (= ($generated@@83 ($generated@@165 $generated@@746) ($generated@@165 $generated@@747)) ($generated@@165 ($generated@@83 $generated@@746 $generated@@747))))
 :pattern ( ($generated@@83 ($generated@@165 $generated@@746) ($generated@@165 $generated@@747)))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@182) (= ($generated@@382 ($generated@@165 $generated@@748)) ($generated@@165 ($generated@@382 $generated@@748))))
 :pattern ( ($generated@@382 ($generated@@165 $generated@@748)))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@85) (= ($generated@@386 ($generated@@165 $generated@@749)) ($generated@@165 ($generated@@386 $generated@@749))))
 :pattern ( ($generated@@386 ($generated@@165 $generated@@749)))
)))
(assert (forall (($generated@@750 T@U) ) (! (= ($generated@@398 ($generated@@165 $generated@@750)) ($generated@@165 ($generated@@398 $generated@@750)))
 :pattern ( ($generated@@398 ($generated@@165 $generated@@750)))
)))
(assert (forall (($generated@@751 T@U) ) (! (let (($generated@@752 ($generated@@373 (type $generated@@751))))
 (=> (and (= (type $generated@@751) ($generated@@372 $generated@@752)) (= ($generated@@371 $generated@@751) 0)) (= $generated@@751 ($generated@@370 $generated@@752))))
 :pattern ( ($generated@@371 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (! (let (($generated@@756 (type $generated@@754)))
 (=> (and (and (= (type $generated@@753) ($generated@@86 $generated@@756 $generated@@2)) (= (type $generated@@755) $generated@@2)) (<= 0 ($generated $generated@@755))) (= ($generated@@403 ($generated@@94 $generated@@753 $generated@@754 $generated@@755)) (+ (- ($generated@@403 $generated@@753) ($generated ($generated@@93 $generated@@753 $generated@@754))) ($generated $generated@@755)))))
 :pattern ( ($generated@@403 ($generated@@94 $generated@@753 $generated@@754 $generated@@755)))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@758) $generated@@2)) ($generated@@82 $generated@@758 $generated@@46 $generated@@757))
 :pattern ( ($generated@@82 $generated@@758 $generated@@46 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@760) $generated@@3)) ($generated@@82 $generated@@760 $generated@@47 $generated@@759))
 :pattern ( ($generated@@82 $generated@@760 $generated@@47 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@762) $generated@@4)) ($generated@@82 $generated@@762 $generated@@44 $generated@@761))
 :pattern ( ($generated@@82 $generated@@762 $generated@@44 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@764) $generated@@571)) ($generated@@82 $generated@@764 $generated@@45 $generated@@763))
 :pattern ( ($generated@@82 $generated@@764 $generated@@45 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@766) $generated@@182)) ($generated@@82 $generated@@766 $generated@@48 $generated@@765))
 :pattern ( ($generated@@82 $generated@@766 $generated@@48 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) ($generated@@372 $generated@@182)) (= (type $generated@@768) $generated@@72)) (= ($generated@@163 $generated@@767 ($generated@@621 $generated@@768)) (forall (($generated@@769 Int) ) (!  (=> (and (<= 0 $generated@@769) (< $generated@@769 ($generated@@371 $generated@@767))) ($generated@@304 ($generated@@622 $generated@@767 $generated@@769) $generated@@768))
 :pattern ( ($generated@@622 $generated@@767 $generated@@769))
))))
 :pattern ( ($generated@@163 $generated@@767 ($generated@@621 $generated@@768)))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@770) $generated@@72) (= (type $generated@@771) $generated@@151)) (= (type $generated@@772) $generated@@85)) (= ($generated@@149 $generated@@770 $generated@@771 $generated@@772) ($generated@@149 $generated@@770 $generated@@168 $generated@@772)))
 :pattern ( ($generated@@149 $generated@@770 ($generated@@392 $generated@@771) $generated@@772))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 Int) ) (!  (=> (= (type $generated@@774) ($generated@@372 $generated@@182)) (=> (and (<= 0 $generated@@775) (< $generated@@775 ($generated@@371 $generated@@774))) (< ($generated@@672 ($generated@@499 $generated@@85 ($generated@@622 $generated@@774 $generated@@775))) ($generated@@773 $generated@@774))))
 :pattern ( ($generated@@672 ($generated@@499 $generated@@85 ($generated@@622 $generated@@774 $generated@@775))))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) ($generated@@415 $generated@@182 $generated@@182)) (= (type $generated@@777) $generated@@72)) (= (type $generated@@778) $generated@@72)) ($generated@@163 $generated@@776 ($generated@@527 $generated@@777 $generated@@778))) (and (and ($generated@@163 ($generated@@413 $generated@@776) ($generated@@331 $generated@@777)) ($generated@@163 ($generated@@461 $generated@@776) ($generated@@331 $generated@@778))) ($generated@@163 ($generated@@498 $generated@@776) ($generated@@331 ($generated@@203 $generated@@777 $generated@@778)))))
 :pattern ( ($generated@@163 $generated@@776 ($generated@@527 $generated@@777 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (and (and (= (type $generated@@779) ($generated@@433 $generated@@182 $generated@@182)) (= (type $generated@@780) $generated@@72)) (= (type $generated@@781) $generated@@72)) ($generated@@163 $generated@@779 ($generated@@535 $generated@@780 $generated@@781))) (and (and ($generated@@163 ($generated@@431 $generated@@779) ($generated@@336 $generated@@780)) ($generated@@163 ($generated@@472 $generated@@779) ($generated@@336 $generated@@781))) ($generated@@163 ($generated@@509 $generated@@779) ($generated@@336 ($generated@@203 $generated@@780 $generated@@781)))))
 :pattern ( ($generated@@163 $generated@@779 ($generated@@535 $generated@@780 $generated@@781)))
)))
(assert (forall (($generated@@782 T@U) ) (!  (=> (= (type $generated@@782) $generated@@2) ($generated@@163 $generated@@782 $generated@@46))
 :pattern ( ($generated@@163 $generated@@782 $generated@@46))
)))
(assert (forall (($generated@@783 T@U) ) (!  (=> (= (type $generated@@783) $generated@@3) ($generated@@163 $generated@@783 $generated@@47))
 :pattern ( ($generated@@163 $generated@@783 $generated@@47))
)))
(assert (forall (($generated@@784 T@U) ) (!  (=> (= (type $generated@@784) $generated@@4) ($generated@@163 $generated@@784 $generated@@44))
 :pattern ( ($generated@@163 $generated@@784 $generated@@44))
)))
(assert (forall (($generated@@785 T@U) ) (!  (=> (= (type $generated@@785) $generated@@571) ($generated@@163 $generated@@785 $generated@@45))
 :pattern ( ($generated@@163 $generated@@785 $generated@@45))
)))
(assert (forall (($generated@@786 T@U) ) (!  (=> (= (type $generated@@786) $generated@@182) ($generated@@163 $generated@@786 $generated@@48))
 :pattern ( ($generated@@163 $generated@@786 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@787) $generated@@72) (= (type $generated@@788) $generated@@85)) (= (type $generated@@791) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@789) ($generated@@225 $generated@@87 $generated@@4))) (= (type $generated@@790) $generated@@87)) (= (type $generated@@792) $generated@@85)) (= (type $generated@@793) ($generated@@225 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@795  (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@187 $generated@@787 ($generated@@161 $generated@@787 $generated@@788)) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) ($generated@@161 $generated@@787 $generated@@788)) (=> ($generated@@188 ($generated@@161 $generated@@787 $generated@@788)) ($generated@@0 ($generated@@165 ($generated@@11 true))))))) (=> (=> ($generated@@187 $generated@@787 ($generated@@161 $generated@@787 $generated@@788)) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) ($generated@@161 $generated@@787 $generated@@788)) (=> ($generated@@188 ($generated@@161 $generated@@787 $generated@@788)) ($generated@@0 ($generated@@165 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@187 $generated@@787 ($generated@@161 $generated@@787 $generated@@788)) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) ($generated@@161 $generated@@787 $generated@@788)) (=> (not ($generated@@188 ($generated@@161 $generated@@787 $generated@@788))) (let (($generated@@796 ($generated@@189 ($generated@@161 $generated@@787 $generated@@788))))
(let (($generated@@797 ($generated@@190 ($generated@@161 $generated@@787 $generated@@788))))
 (=> ($generated@@180 $generated@@797) ($generated@@149 $generated@@787 ($generated@@150 ($generated@@150 $generated@@168)) $generated@@796)))))))) (=> (=> ($generated@@187 $generated@@787 ($generated@@161 $generated@@787 $generated@@788)) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) ($generated@@161 $generated@@787 $generated@@788)) (=> (not ($generated@@188 ($generated@@161 $generated@@787 $generated@@788))) (let (($generated@@798 ($generated@@189 ($generated@@161 $generated@@787 $generated@@788))))
(let (($generated@@799 ($generated@@190 ($generated@@161 $generated@@787 $generated@@788))))
 (=> ($generated@@180 $generated@@799) ($generated@@149 $generated@@787 ($generated@@150 ($generated@@150 $generated@@168)) $generated@@798))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@187 $generated@@787 ($generated@@161 $generated@@787 $generated@@788)) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) ($generated@@161 $generated@@787 $generated@@788)) (=> (not ($generated@@188 ($generated@@161 $generated@@787 $generated@@788))) (let (($generated@@800 ($generated@@190 ($generated@@161 $generated@@787 $generated@@788))))
 (=> (not ($generated@@180 $generated@@800)) ($generated@@0 ($generated@@165 ($generated@@11 false)))))))))))))))
(let (($generated@@801  (=> (and (and (= $generated@@789 ($generated@@279 $generated@@790 $generated@@791 $generated@@60 false)) ($generated@@82 $generated@@788 ($generated@@84 $generated@@787) $generated@@791)) (and (= $generated@@792 ($generated@@165 $generated@@166)) ($generated@@82 $generated@@792 ($generated@@84 $generated@@787) $generated@@791))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> ($generated@@187 $generated@@787 $generated@@792) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) $generated@@792) (=> ($generated@@188 $generated@@792) ($generated@@0 ($generated@@165 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> ($generated@@187 $generated@@787 $generated@@792) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) $generated@@792) (=> (not ($generated@@188 $generated@@792)) (let (($generated@@802 ($generated@@189 $generated@@792)))
(let (($generated@@803 ($generated@@190 $generated@@792)))
 (=> ($generated@@180 $generated@@803) ($generated@@149 $generated@@787 ($generated@@150 ($generated@@150 $generated@@168)) $generated@@802)))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@187 $generated@@787 $generated@@792) (or ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) $generated@@792) (=> (not ($generated@@188 $generated@@792)) (let (($generated@@804 ($generated@@190 $generated@@792)))
 (=> (not ($generated@@180 $generated@@804)) ($generated@@0 ($generated@@165 ($generated@@11 false))))))))) (=> (and ($generated@@149 $generated@@787 ($generated@@150 $generated@@168) $generated@@792) ($generated@@164 $generated@@787 $generated@@788 ($generated@@165 $generated@@166))) (=> (and (and (= ($generated@@161 $generated@@787 $generated@@788) ($generated@@167 $generated@@787 ($generated@@150 $generated@@168) $generated@@788 ($generated@@165 $generated@@166))) ($generated@@164 $generated@@787 $generated@@788 ($generated@@165 $generated@@166))) (and ($generated@@163 ($generated@@161 $generated@@787 $generated@@788) ($generated@@84 $generated@@787)) (= (ControlFlow 0 7) 4))) $generated@@795))))))))
(let (($generated@@805  (=> ($generated@@163 ($generated@@161 $generated@@787 $generated@@788) ($generated@@84 $generated@@787)) (=> (and ($generated@@82 $generated@@788 ($generated@@84 $generated@@787) $generated@@791) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@788 $generated@@788) (< ($generated@@672 $generated@@788) ($generated@@672 $generated@@788)))))))
(let (($generated@@806  (=> (= $generated@@793 ($generated@@224 $generated@@790 $generated@@791 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@805) (=> (= (ControlFlow 0 11) 7) $generated@@801)))))
(let (($generated@@807  (=> (and (and (and ($generated@@89 $generated@@791) ($generated@@794 $generated@@791)) ($generated@@163 $generated@@788 ($generated@@84 $generated@@787))) (and (= 3 $generated@@160) (= (ControlFlow 0 12) 11))) $generated@@806)))
$generated@@807))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (Int) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@278 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@297 (T@U T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) Bool)
(declare-fun $generated@@308 (T@U T@U) Bool)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@336 (T@U T@U T@U) Bool)
(declare-fun $generated@@344 (T@U) Bool)
(declare-fun $generated@@347 (T@U) Bool)
(declare-fun $generated@@362 (T@T) T@U)
(declare-fun $generated@@363 (T@U) Int)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@393 (T@U) Int)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@T T@T) T@U)
(declare-fun $generated@@405 (T@T T@T) T@T)
(declare-fun $generated@@406 (T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@T T@T) T@U)
(declare-fun $generated@@423 (T@T T@T) T@T)
(declare-fun $generated@@424 (T@T) T@T)
(declare-fun $generated@@425 (T@T) T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@T T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@517 (T@U T@U) T@U)
(declare-fun $generated@@525 (T@U T@U) T@U)
(declare-fun $generated@@537 (T@T) T@U)
(declare-fun $generated@@561 () T@T)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@612 (T@U Int) T@U)
(declare-fun $generated@@621 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(declare-fun $generated@@662 (T@U) Int)
(declare-fun $generated@@763 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@72) (= (type $generated@@154) $generated@@151)) (= (type $generated@@155) $generated@@85)) (= ($generated@@149 $generated@@153 ($generated@@150 $generated@@154) $generated@@155) ($generated@@149 $generated@@153 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@149 $generated@@153 ($generated@@150 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 Int) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@72)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@158 ($generated@@156 0) $generated@@159))
 :pattern ( ($generated@@82 $generated@@158 ($generated@@156 0) $generated@@159))
)))
(assert  (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@85) (= (type $generated@@166) $generated@@85)) (and ($generated@@161 $generated@@165) ($generated@@161 $generated@@166))) (= ($generated@@160 $generated@@165 $generated@@166) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166) ($generated@@161 $generated@@165))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166) ($generated@@161 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@156 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@156 0)))
)))
(assert  (and (and (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@176)) $generated@@85)
 :pattern ( ($generated@@172 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@85)
 :pattern ( ($generated@@173 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@85)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(= (type ($generated@@174 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@174 $generated@@179))
))))
(assert  (=> (<= 1 $generated@@169) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) $generated@@151)) (= (type $generated@@183) $generated@@85)) (or ($generated@@170 $generated@@181 $generated@@183) (and (not (= 1 $generated@@169)) ($generated@@167 $generated@@183 ($generated@@84 $generated@@181))))) (and (=> (not ($generated@@171 $generated@@183)) (let (($generated@@184 ($generated@@172 $generated@@183)))
(let (($generated@@185 ($generated@@173 $generated@@183)))
 (=> ($generated@@161 $generated@@185) ($generated@@170 $generated@@181 $generated@@184))))) (= ($generated@@149 $generated@@181 ($generated@@150 $generated@@182) $generated@@183) (ite ($generated@@171 $generated@@183) true (let (($generated@@186 ($generated@@172 $generated@@183)))
(let (($generated@@187 ($generated@@173 $generated@@183)))
(ite ($generated@@161 $generated@@187) ($generated@@149 $generated@@181 $generated@@182 $generated@@186) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))))
 :pattern ( ($generated@@149 $generated@@181 ($generated@@150 $generated@@182) $generated@@183))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@72)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) $generated@@72)) (= (type $generated@@194) $generated@@85)) ($generated@@167 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@167 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@163)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@163)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@85) (= (type $generated@@201) $generated@@85)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@76)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@85)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@72)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@86 $generated@@163 $generated@@2)) (= (type $generated@@209) $generated@@72)) ($generated@@167 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@167 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@87 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@75 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@87) (= (type $generated@@260) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@261) ($generated@@74 $generated@@4))) (= (type $generated@@263) $generated@@87)) (= (type $generated@@264) ($generated@@74 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@212 $generated@@87 $generated@@4))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@75 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@87) (= (type $generated@@272) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@273) ($generated@@74 $generated@@4))) (= (type $generated@@275) $generated@@87)) (= (type $generated@@276) ($generated@@74 $generated@@277))) (= ($generated@@0 ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert  (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@278 $generated@@281 $generated@@282 $generated@@283 $generated@@284)) $generated@@85)
 :pattern ( ($generated@@278 $generated@@281 $generated@@282 $generated@@283 $generated@@284))
)) (= (type $generated@@280) $generated@@151)))
(assert  (=> (<= 2 $generated@@169) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@151)) (= (type $generated@@287) $generated@@85)) (= (type $generated@@288) $generated@@85)) (or ($generated@@279 $generated@@285 $generated@@287 $generated@@288) (and (not (= 2 $generated@@169)) (and (and ($generated@@167 $generated@@287 ($generated@@84 $generated@@285)) ($generated@@167 $generated@@288 ($generated@@84 $generated@@285))) ($generated@@149 $generated@@285 ($generated@@150 $generated@@280) $generated@@288))))) (and (=> (not ($generated@@171 $generated@@287)) (let (($generated@@289 ($generated@@172 $generated@@287)))
(let (($generated@@290 ($generated@@173 $generated@@287)))
 (and (=> ($generated@@161 $generated@@290) ($generated@@279 $generated@@285 $generated@@289 $generated@@288)) (=> (not ($generated@@161 $generated@@290)) (let (($generated@@291 ($generated@@175 $generated@@290)))
 (and ($generated@@279 $generated@@285 $generated@@289 $generated@@288) ($generated@@279 $generated@@285 $generated@@291 ($generated@@278 $generated@@285 $generated@@286 $generated@@289 $generated@@288))))))))) (= ($generated@@278 $generated@@285 ($generated@@150 $generated@@286) $generated@@287 $generated@@288) (ite ($generated@@171 $generated@@287) $generated@@288 (let (($generated@@292 ($generated@@172 $generated@@287)))
(let (($generated@@293 ($generated@@173 $generated@@287)))
(ite ($generated@@161 $generated@@293) ($generated@@83 $generated@@293 ($generated@@278 $generated@@285 $generated@@286 $generated@@292 $generated@@288)) (let (($generated@@294 ($generated@@175 $generated@@293)))
($generated@@278 $generated@@285 $generated@@286 $generated@@294 ($generated@@278 $generated@@285 $generated@@286 $generated@@292 $generated@@288))))))))))
 :pattern ( ($generated@@278 $generated@@285 ($generated@@150 $generated@@286) $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@72) (= (type $generated@@296) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@296)) ($generated@@82 $generated@@203 ($generated@@84 $generated@@295) $generated@@296))
 :pattern ( ($generated@@82 $generated@@203 ($generated@@84 $generated@@295) $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (= (type ($generated@@297 $generated@@299 $generated@@300)) $generated@@85)
 :pattern ( ($generated@@297 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (= (type $generated@@301) $generated@@72) (= (type $generated@@302) $generated@@72)) (= (type $generated@@303) $generated@@163)) (= (type $generated@@304) $generated@@163)) (= ($generated@@167 ($generated@@297 $generated@@303 $generated@@304) ($generated@@189 $generated@@301 $generated@@302))  (and ($generated@@298 $generated@@303 $generated@@301) ($generated@@298 $generated@@304 $generated@@302))))
 :pattern ( ($generated@@167 ($generated@@297 $generated@@303 $generated@@304) ($generated@@189 $generated@@301 $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@72) ($generated@@167 $generated@@203 ($generated@@84 $generated@@305)))
 :pattern ( ($generated@@167 $generated@@203 ($generated@@84 $generated@@305)))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@85) (= (type $generated@@307) $generated@@85)) (= ($generated@@195 $generated@@306 $generated@@307) (= $generated@@306 $generated@@307)))
 :pattern ( ($generated@@195 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@85) (= (type $generated@@310) $generated@@85)) (= ($generated@@308 $generated@@309 $generated@@310) (= $generated@@309 $generated@@310)))
 :pattern ( ($generated@@308 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@85) (= (type $generated@@312) $generated@@85)) (= ($generated@@160 $generated@@311 $generated@@312) (= $generated@@311 $generated@@312)))
 :pattern ( ($generated@@160 $generated@@311 $generated@@312))
)))
(assert  (=> (<= 2 $generated@@169) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) $generated@@72) (= (type $generated@@314) $generated@@151)) (= (type $generated@@315) $generated@@85)) (= (type $generated@@316) $generated@@85)) (or ($generated@@279 $generated@@313 ($generated@@174 $generated@@315) ($generated@@174 $generated@@316)) (and (not (= 2 $generated@@169)) (and (and ($generated@@167 $generated@@315 ($generated@@84 $generated@@313)) ($generated@@167 $generated@@316 ($generated@@84 $generated@@313))) ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@149 $generated@@313 ($generated@@150 $generated@@280) ($generated@@174 $generated@@316))))))))) (and (=> (not ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@171 ($generated@@174 $generated@@315)))))) (let (($generated@@317 ($generated@@174 ($generated@@172 ($generated@@174 $generated@@315)))))
(let (($generated@@318 ($generated@@174 ($generated@@173 ($generated@@174 $generated@@315)))))
 (and (=> ($generated@@161 $generated@@318) ($generated@@279 $generated@@313 $generated@@317 ($generated@@174 $generated@@316))) (=> (not ($generated@@161 $generated@@318)) (let (($generated@@319 ($generated@@175 $generated@@318)))
 (and ($generated@@279 $generated@@313 $generated@@317 ($generated@@174 $generated@@316)) ($generated@@279 $generated@@313 $generated@@319 ($generated@@278 $generated@@313 ($generated@@150 $generated@@314) $generated@@317 ($generated@@174 $generated@@316)))))))))) (= ($generated@@278 $generated@@313 ($generated@@150 $generated@@314) ($generated@@174 $generated@@315) ($generated@@174 $generated@@316)) (ite ($generated@@171 ($generated@@174 $generated@@315)) $generated@@316 (let (($generated@@320 ($generated@@174 ($generated@@172 ($generated@@174 $generated@@315)))))
(let (($generated@@321 ($generated@@174 ($generated@@173 ($generated@@174 $generated@@315)))))
(ite ($generated@@161 $generated@@321) ($generated@@174 ($generated@@83 $generated@@321 ($generated@@174 ($generated@@278 $generated@@313 ($generated@@150 $generated@@314) $generated@@320 ($generated@@174 $generated@@316))))) (let (($generated@@322 ($generated@@174 ($generated@@175 $generated@@321))))
($generated@@174 ($generated@@278 $generated@@313 ($generated@@150 $generated@@314) $generated@@322 ($generated@@174 ($generated@@278 $generated@@313 ($generated@@150 $generated@@314) $generated@@320 ($generated@@174 $generated@@316)))))))))))))
 :weight 3
 :pattern ( ($generated@@278 $generated@@313 ($generated@@150 $generated@@314) ($generated@@174 $generated@@315) ($generated@@174 $generated@@316)))
))))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@72)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@326) $generated@@72)) (= ($generated@@167 $generated@@325 ($generated@@323 $generated@@326)) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@163) ($generated@@0 ($generated@@93 $generated@@325 $generated@@327))) ($generated@@298 $generated@@327 $generated@@326))
 :pattern ( ($generated@@93 $generated@@325 $generated@@327))
))))
 :pattern ( ($generated@@167 $generated@@325 ($generated@@323 $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@72)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@331) $generated@@72)) (= ($generated@@167 $generated@@330 ($generated@@328 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@163) ($generated@@0 ($generated@@93 $generated@@330 $generated@@332))) ($generated@@298 $generated@@332 $generated@@331))
 :pattern ( ($generated@@93 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@167 $generated@@330 ($generated@@328 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ) (! (= ($generated@@174 $generated@@333) $generated@@333)
 :pattern ( ($generated@@174 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@334) $generated@@85) (= (type $generated@@335) $generated@@85)) (and ($generated@@171 $generated@@334) ($generated@@171 $generated@@335))) (= ($generated@@308 $generated@@334 $generated@@335) true))
 :pattern ( ($generated@@308 $generated@@334 $generated@@335) ($generated@@171 $generated@@334))
 :pattern ( ($generated@@308 $generated@@334 $generated@@335) ($generated@@171 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@337) $generated@@72) (= (type $generated@@338) $generated@@72)) (= (type $generated@@339) $generated@@163)) (= (type $generated@@340) $generated@@163)) (= (type $generated@@341) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@341)) (= ($generated@@82 ($generated@@297 $generated@@339 $generated@@340) ($generated@@189 $generated@@337 $generated@@338) $generated@@341)  (and ($generated@@336 $generated@@339 $generated@@337 $generated@@341) ($generated@@336 $generated@@340 $generated@@338 $generated@@341))))
 :pattern ( ($generated@@82 ($generated@@297 $generated@@339 $generated@@340) ($generated@@189 $generated@@337 $generated@@338) $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@85) (= ($generated@@188 $generated@@342) (= ($generated@@202 $generated@@342) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@85) (= ($generated@@171 $generated@@343) (= ($generated@@202 $generated@@343) $generated@@63)))
 :pattern ( ($generated@@171 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@85) (= ($generated@@344 $generated@@345) (= ($generated@@202 $generated@@345) $generated@@65)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@85) (= ($generated@@161 $generated@@346) (= ($generated@@202 $generated@@346) $generated@@67)))
 :pattern ( ($generated@@161 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@85) (= ($generated@@347 $generated@@348) (= ($generated@@202 $generated@@348) $generated@@68)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert  (=> (<= 1 $generated@@169) (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (= (type $generated@@349) $generated@@72) (= (type $generated@@350) $generated@@151)) (= (type $generated@@351) $generated@@85)) (or ($generated@@170 $generated@@349 ($generated@@174 $generated@@351)) (and (not (= 1 $generated@@169)) ($generated@@167 $generated@@351 ($generated@@84 $generated@@349))))) (and (=> (not ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@171 ($generated@@174 $generated@@351)))))) (let (($generated@@352 ($generated@@174 ($generated@@172 ($generated@@174 $generated@@351)))))
(let (($generated@@353 ($generated@@174 ($generated@@173 ($generated@@174 $generated@@351)))))
 (=> ($generated@@161 $generated@@353) ($generated@@170 $generated@@349 $generated@@352))))) (= ($generated@@149 $generated@@349 ($generated@@150 $generated@@350) ($generated@@174 $generated@@351)) (ite ($generated@@171 ($generated@@174 $generated@@351)) true (let (($generated@@354 ($generated@@174 ($generated@@172 ($generated@@174 $generated@@351)))))
(let (($generated@@355 ($generated@@174 ($generated@@173 ($generated@@174 $generated@@351)))))
(ite ($generated@@161 $generated@@355) ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@149 $generated@@349 ($generated@@150 $generated@@350) $generated@@354)))) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))))
 :weight 3
 :pattern ( ($generated@@149 $generated@@349 ($generated@@150 $generated@@350) ($generated@@174 $generated@@351)))
))))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@85) ($generated@@188 $generated@@356)) (exists (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (and (and (= (type $generated@@357) $generated@@163) (= (type $generated@@358) $generated@@163)) (= $generated@@356 ($generated@@297 $generated@@357 $generated@@358)))
 :no-pattern (type $generated@@357)
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
)))
 :pattern ( ($generated@@188 $generated@@356))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@85) ($generated@@344 $generated@@359)) (exists (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (and (and (= (type $generated@@360) $generated@@85) (= (type $generated@@361) $generated@@85)) (= $generated@@359 ($generated@@83 $generated@@360 $generated@@361)))
 :no-pattern (type $generated@@360)
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
)))
 :pattern ( ($generated@@344 $generated@@359))
)))
(assert  (and (and (forall (($generated@@366 T@T) ) (= ($generated@@1 ($generated@@364 $generated@@366)) 18)) (forall (($generated@@367 T@T) ) (! (= ($generated@@365 ($generated@@364 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367))
))) (forall (($generated@@368 T@T) ) (! (= (type ($generated@@362 $generated@@368)) ($generated@@364 $generated@@368))
 :pattern ( ($generated@@362 $generated@@368))
))))
(assert (forall (($generated@@369 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@369)) 0)
 :pattern ( ($generated@@362 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@72) (= (type $generated@@371) $generated@@85)) (= (type $generated@@372) $generated@@85)) (= ($generated@@167 ($generated@@83 $generated@@371 $generated@@372) ($generated@@84 $generated@@370))  (and ($generated@@167 $generated@@371 ($generated@@90 $generated@@370)) ($generated@@167 $generated@@372 ($generated@@84 $generated@@370)))))
 :pattern ( ($generated@@167 ($generated@@83 $generated@@371 $generated@@372) ($generated@@84 $generated@@370)))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@85) ($generated@@171 $generated@@373)) (= $generated@@373 $generated@@203))
 :pattern ( ($generated@@171 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@85)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@85) ($generated@@161 $generated@@376)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@163) (= $generated@@376 ($generated@@374 $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
)))
 :pattern ( ($generated@@161 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) $generated@@85)
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@85) ($generated@@347 $generated@@380)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@85) (= $generated@@380 ($generated@@378 $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
)))
 :pattern ( ($generated@@347 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) $generated@@151)
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) $generated@@72) (= (type $generated@@385) $generated@@151)) (= (type $generated@@386) $generated@@85)) (= (type $generated@@387) $generated@@85)) (= ($generated@@278 $generated@@384 $generated@@385 $generated@@386 $generated@@387) ($generated@@278 $generated@@384 $generated@@280 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@278 $generated@@384 ($generated@@382 $generated@@385) $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (= (type ($generated@@388 $generated@@389)) $generated@@163)
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@72) (= (type $generated@@392) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@336 ($generated@@388 $generated@@390) $generated@@391 $generated@@392) ($generated@@82 $generated@@390 $generated@@391 $generated@@392)))
 :pattern ( ($generated@@336 ($generated@@388 $generated@@390) $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@86 $generated@@395 $generated@@2))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@91 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@86 $generated@@397 $generated@@2)) (and (= (= ($generated@@393 $generated@@396) 0) (= $generated@@396 ($generated@@394 $generated@@397))) (=> (not (= ($generated@@393 $generated@@396) 0)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (< 0 ($generated ($generated@@93 $generated@@396 $generated@@398))))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ) (! (= (type ($generated@@399 $generated@@400)) $generated@@77)
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@401)) $generated@@64) (= ($generated@@399 ($generated@@84 $generated@@401)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@402)) $generated@@66) (= ($generated@@399 ($generated@@90 $generated@@402)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@402))
)))
(assert  (and (and (and (and (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (= ($generated@@1 ($generated@@405 $generated@@408 $generated@@409)) 19)) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= ($generated@@406 ($generated@@405 $generated@@410 $generated@@411)) $generated@@410)
 :pattern ( ($generated@@405 $generated@@410 $generated@@411))
))) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= ($generated@@407 ($generated@@405 $generated@@412 $generated@@413)) $generated@@413)
 :pattern ( ($generated@@405 $generated@@412 $generated@@413))
))) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@406 (type $generated@@414))))
(= (type ($generated@@403 $generated@@414)) ($generated@@86 $generated@@415 $generated@@4)))
 :pattern ( ($generated@@403 $generated@@414))
))) (forall (($generated@@416 T@T) ($generated@@417 T@T) ) (! (= (type ($generated@@404 $generated@@416 $generated@@417)) ($generated@@405 $generated@@416 $generated@@417))
 :pattern ( ($generated@@404 $generated@@416 $generated@@417))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@T) ) (! (let (($generated@@420 (type $generated@@418)))
 (not ($generated@@0 ($generated@@93 ($generated@@403 ($generated@@404 $generated@@420 $generated@@419)) $generated@@418))))
 :pattern ( (let (($generated@@420 (type $generated@@418)))
($generated@@93 ($generated@@403 ($generated@@404 $generated@@420 $generated@@419)) $generated@@418)))
)))
(assert  (and (and (and (and (forall (($generated@@426 T@T) ($generated@@427 T@T) ) (= ($generated@@1 ($generated@@423 $generated@@426 $generated@@427)) 20)) (forall (($generated@@428 T@T) ($generated@@429 T@T) ) (! (= ($generated@@424 ($generated@@423 $generated@@428 $generated@@429)) $generated@@428)
 :pattern ( ($generated@@423 $generated@@428 $generated@@429))
))) (forall (($generated@@430 T@T) ($generated@@431 T@T) ) (! (= ($generated@@425 ($generated@@423 $generated@@430 $generated@@431)) $generated@@431)
 :pattern ( ($generated@@423 $generated@@430 $generated@@431))
))) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@424 (type $generated@@432))))
(= (type ($generated@@421 $generated@@432)) ($generated@@86 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@432))
))) (forall (($generated@@434 T@T) ($generated@@435 T@T) ) (! (= (type ($generated@@422 $generated@@434 $generated@@435)) ($generated@@423 $generated@@434 $generated@@435))
 :pattern ( ($generated@@422 $generated@@434 $generated@@435))
))))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@T) ) (! (let (($generated@@438 (type $generated@@436)))
 (not ($generated@@0 ($generated@@93 ($generated@@421 ($generated@@422 $generated@@438 $generated@@437)) $generated@@436))))
 :pattern ( (let (($generated@@438 (type $generated@@436)))
($generated@@93 ($generated@@421 ($generated@@422 $generated@@438 $generated@@437)) $generated@@436)))
)))
(assert  (=> (<= 1 $generated@@169) (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) $generated@@72) (= (type $generated@@440) $generated@@151)) (= (type $generated@@441) $generated@@85)) (or ($generated@@170 $generated@@439 $generated@@441) (and (not (= 1 $generated@@169)) ($generated@@167 $generated@@441 ($generated@@84 $generated@@439))))) true)
 :pattern ( ($generated@@149 $generated@@439 $generated@@440 $generated@@441))
))))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@91 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@86 $generated@@443 $generated@@2)) (= ($generated@@206 $generated@@442) (forall (($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@443) (and (<= 0 ($generated ($generated@@93 $generated@@442 $generated@@444))) (<= ($generated ($generated@@93 $generated@@442 $generated@@444)) ($generated@@393 $generated@@442))))
 :pattern ( ($generated@@93 $generated@@442 $generated@@444))
)))))
 :pattern ( ($generated@@206 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@445) $generated@@85) (= (type $generated@@446) $generated@@85)) (and ($generated@@347 $generated@@445) ($generated@@347 $generated@@446))) (= ($generated@@160 $generated@@445 $generated@@446) ($generated@@308 ($generated@@175 $generated@@445) ($generated@@175 $generated@@446))))
 :pattern ( ($generated@@160 $generated@@445 $generated@@446) ($generated@@347 $generated@@445))
 :pattern ( ($generated@@160 $generated@@445 $generated@@446) ($generated@@347 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@407 (type $generated@@447))))
(let (($generated@@449 ($generated@@406 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@405 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@404 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) ($generated@@0 ($generated@@93 ($generated@@403 $generated@@447) $generated@@450)))
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@403 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@407 (type $generated@@452))))
(= (type ($generated@@451 $generated@@452)) ($generated@@86 $generated@@453 $generated@@4)))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@407 (type $generated@@454))))
(let (($generated@@456 ($generated@@406 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@405 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@404 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ) (!  (and (= (type $generated@@457) $generated@@455) ($generated@@0 ($generated@@93 ($generated@@451 $generated@@454) $generated@@457)))
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@451 $generated@@454))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@425 (type $generated@@458))))
(let (($generated@@460 ($generated@@424 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@423 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@422 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) ($generated@@0 ($generated@@93 ($generated@@421 $generated@@458) $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@421 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@425 (type $generated@@463))))
(= (type ($generated@@462 $generated@@463)) ($generated@@86 $generated@@464 $generated@@4)))
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@425 (type $generated@@465))))
(let (($generated@@467 ($generated@@424 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@423 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@422 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ) (!  (and (= (type $generated@@468) $generated@@466) ($generated@@0 ($generated@@93 ($generated@@462 $generated@@465) $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@462 $generated@@465))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@86 $generated@@163 $generated@@2)) (= (type $generated@@470) $generated@@72)) (= ($generated@@167 $generated@@469 ($generated@@205 $generated@@470)) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@469 $generated@@471)))) ($generated@@298 $generated@@471 $generated@@470))
 :pattern ( ($generated@@93 $generated@@469 $generated@@471))
))))
 :pattern ( ($generated@@167 $generated@@469 ($generated@@205 $generated@@470)))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) $generated@@72) (= (type $generated@@473) $generated@@163)) (= (type $generated@@474) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@474)) (= ($generated@@82 ($generated@@374 $generated@@473) ($generated@@90 $generated@@472) $generated@@474) ($generated@@336 $generated@@473 $generated@@472 $generated@@474)))
 :pattern ( ($generated@@82 ($generated@@374 $generated@@473) ($generated@@90 $generated@@472) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) $generated@@72) (= (type $generated@@476) $generated@@85)) (= (type $generated@@477) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@477)) (= ($generated@@82 ($generated@@378 $generated@@476) ($generated@@90 $generated@@475) $generated@@477) ($generated@@82 $generated@@476 ($generated@@84 $generated@@475) $generated@@477)))
 :pattern ( ($generated@@82 ($generated@@378 $generated@@476) ($generated@@90 $generated@@475) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@479) $generated@@72)) (= (type $generated@@480) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@478 ($generated@@323 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@163) ($generated@@0 ($generated@@93 $generated@@478 $generated@@481))) ($generated@@336 $generated@@481 $generated@@479 $generated@@480))
 :pattern ( ($generated@@93 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@82 $generated@@478 ($generated@@323 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@483) $generated@@72)) (= (type $generated@@484) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@482 ($generated@@328 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) ($generated@@0 ($generated@@93 $generated@@482 $generated@@485))) ($generated@@336 $generated@@485 $generated@@483 $generated@@484))
 :pattern ( ($generated@@93 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@82 $generated@@482 ($generated@@328 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated ($generated@@93 ($generated@@394 $generated@@487) $generated@@486)) 0))
 :pattern ( (let (($generated@@487 (type $generated@@486)))
($generated@@93 ($generated@@394 $generated@@487) $generated@@486)))
)))
(assert  (and (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@488 $generated@@491)) ($generated@@86 $generated@@163 $generated@@4))
 :pattern ( ($generated@@488 $generated@@491))
)) (forall (($generated@@492 T@T) ($generated@@493 T@U) ) (! (= (type ($generated@@489 $generated@@492 $generated@@493)) $generated@@492)
 :pattern ( ($generated@@489 $generated@@492 $generated@@493))
))) (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@407 (type $generated@@494))))
(let (($generated@@496 ($generated@@406 (type $generated@@494))))
(= (type ($generated@@490 $generated@@494)) ($generated@@86 $generated@@496 $generated@@495))))
 :pattern ( ($generated@@490 $generated@@494))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) ($generated@@405 $generated@@163 $generated@@163)) (= (type $generated@@498) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@488 $generated@@497) $generated@@498))  (and ($generated@@0 ($generated@@93 ($generated@@403 $generated@@497) ($generated@@196 ($generated@@489 $generated@@85 $generated@@498)))) (= ($generated@@93 ($generated@@490 $generated@@497) ($generated@@196 ($generated@@489 $generated@@85 $generated@@498))) ($generated@@197 ($generated@@489 $generated@@85 $generated@@498))))))
 :pattern ( ($generated@@93 ($generated@@488 $generated@@497) $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) ($generated@@86 $generated@@163 $generated@@4))
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@425 (type $generated@@502))))
(let (($generated@@504 ($generated@@424 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502)) ($generated@@86 $generated@@504 $generated@@503))))
 :pattern ( ($generated@@500 $generated@@502))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) ($generated@@423 $generated@@163 $generated@@163)) (= (type $generated@@506) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@499 $generated@@505) $generated@@506))  (and ($generated@@0 ($generated@@93 ($generated@@421 $generated@@505) ($generated@@196 ($generated@@489 $generated@@85 $generated@@506)))) (= ($generated@@93 ($generated@@500 $generated@@505) ($generated@@196 ($generated@@489 $generated@@85 $generated@@506))) ($generated@@197 ($generated@@489 $generated@@85 $generated@@506))))))
 :pattern ( ($generated@@93 ($generated@@499 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(let (($generated@@510 ($generated@@406 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@405 $generated@@510 $generated@@509)) (= ($generated@@0 ($generated@@93 ($generated@@451 $generated@@507) $generated@@508)) (exists (($generated@@511 T@U) ) (!  (and (= (type $generated@@511) $generated@@510) (and ($generated@@0 ($generated@@93 ($generated@@403 $generated@@507) $generated@@511)) (= $generated@@508 ($generated@@93 ($generated@@490 $generated@@507) $generated@@511))))
 :pattern ( ($generated@@93 ($generated@@403 $generated@@507) $generated@@511))
 :pattern ( ($generated@@93 ($generated@@490 $generated@@507) $generated@@511))
))))))
 :pattern ( ($generated@@93 ($generated@@451 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(let (($generated@@515 ($generated@@424 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@423 $generated@@515 $generated@@514)) (= ($generated@@0 ($generated@@93 ($generated@@462 $generated@@512) $generated@@513)) (exists (($generated@@516 T@U) ) (!  (and (= (type $generated@@516) $generated@@515) (and ($generated@@0 ($generated@@93 ($generated@@421 $generated@@512) $generated@@516)) (= $generated@@513 ($generated@@93 ($generated@@500 $generated@@512) $generated@@516))))
 :pattern ( ($generated@@93 ($generated@@421 $generated@@512) $generated@@516))
 :pattern ( ($generated@@93 ($generated@@500 $generated@@512) $generated@@516))
))))))
 :pattern ( ($generated@@93 ($generated@@462 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@518 $generated@@519)) $generated@@72)
 :pattern ( ($generated@@517 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) ($generated@@405 $generated@@163 $generated@@163)) (= (type $generated@@521) $generated@@72)) (= (type $generated@@522) $generated@@72)) (= (type $generated@@523) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@520 ($generated@@517 $generated@@521 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@403 $generated@@520) $generated@@524))) (and ($generated@@336 ($generated@@93 ($generated@@490 $generated@@520) $generated@@524) $generated@@522 $generated@@523) ($generated@@336 $generated@@524 $generated@@521 $generated@@523)))
 :pattern ( ($generated@@93 ($generated@@490 $generated@@520) $generated@@524))
 :pattern ( ($generated@@93 ($generated@@403 $generated@@520) $generated@@524))
))))
 :pattern ( ($generated@@82 $generated@@520 ($generated@@517 $generated@@521 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@526 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) ($generated@@423 $generated@@163 $generated@@163)) (= (type $generated@@529) $generated@@72)) (= (type $generated@@530) $generated@@72)) (= (type $generated@@531) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@528 ($generated@@525 $generated@@529 $generated@@530) $generated@@531) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@421 $generated@@528) $generated@@532))) (and ($generated@@336 ($generated@@93 ($generated@@500 $generated@@528) $generated@@532) $generated@@530 $generated@@531) ($generated@@336 $generated@@532 $generated@@529 $generated@@531)))
 :pattern ( ($generated@@93 ($generated@@500 $generated@@528) $generated@@532))
 :pattern ( ($generated@@93 ($generated@@421 $generated@@528) $generated@@532))
))))
 :pattern ( ($generated@@82 $generated@@528 ($generated@@525 $generated@@529 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@72) (= (type $generated@@534) $generated@@85)) ($generated@@167 $generated@@534 ($generated@@84 $generated@@533))) (or ($generated@@171 $generated@@534) ($generated@@344 $generated@@534)))
 :pattern ( ($generated@@344 $generated@@534) ($generated@@167 $generated@@534 ($generated@@84 $generated@@533)))
 :pattern ( ($generated@@171 $generated@@534) ($generated@@167 $generated@@534 ($generated@@84 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@72) (= (type $generated@@536) $generated@@85)) ($generated@@167 $generated@@536 ($generated@@90 $generated@@535))) (or ($generated@@161 $generated@@536) ($generated@@347 $generated@@536)))
 :pattern ( ($generated@@347 $generated@@536) ($generated@@167 $generated@@536 ($generated@@90 $generated@@535)))
 :pattern ( ($generated@@161 $generated@@536) ($generated@@167 $generated@@536 ($generated@@90 $generated@@535)))
)))
(assert (forall (($generated@@538 T@T) ) (! (= (type ($generated@@537 $generated@@538)) ($generated@@86 $generated@@538 $generated@@4))
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@425 (type $generated@@539))))
(let (($generated@@541 ($generated@@424 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@423 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@422 $generated@@541 $generated@@540)) (= ($generated@@421 $generated@@539) ($generated@@537 $generated@@541))))))
 :pattern ( ($generated@@421 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@425 (type $generated@@542))))
(let (($generated@@544 ($generated@@424 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@423 $generated@@544 $generated@@543)) (= (= $generated@@542 ($generated@@422 $generated@@544 $generated@@543)) (= ($generated@@462 $generated@@542) ($generated@@537 $generated@@543))))))
 :pattern ( ($generated@@462 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@425 (type $generated@@545))))
(let (($generated@@547 ($generated@@424 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@423 $generated@@547 $generated@@546)) (= (= $generated@@545 ($generated@@422 $generated@@547 $generated@@546)) (= ($generated@@499 $generated@@545) ($generated@@537 $generated@@163))))))
 :pattern ( ($generated@@499 $generated@@545))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@407 (type $generated@@548))))
(let (($generated@@550 ($generated@@406 (type $generated@@548))))
 (=> (= (type $generated@@548) ($generated@@405 $generated@@550 $generated@@549)) (or (= $generated@@548 ($generated@@404 $generated@@550 $generated@@549)) (exists (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (and (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@488 $generated@@548) ($generated@@388 ($generated@@297 $generated@@551 $generated@@552)))))
 :no-pattern (type $generated@@551)
 :no-pattern (type $generated@@552)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
 :no-pattern ($generated $generated@@552)
 :no-pattern ($generated@@0 $generated@@552)
))))))
 :pattern ( ($generated@@488 $generated@@548))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@425 (type $generated@@553))))
(let (($generated@@555 ($generated@@424 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@423 $generated@@555 $generated@@554)) (or (= $generated@@553 ($generated@@422 $generated@@555 $generated@@554)) (exists (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (and (and (= (type $generated@@556) $generated@@163) (= (type $generated@@557) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@499 $generated@@553) ($generated@@388 ($generated@@297 $generated@@556 $generated@@557)))))
 :no-pattern (type $generated@@556)
 :no-pattern (type $generated@@557)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
 :no-pattern ($generated $generated@@557)
 :no-pattern ($generated@@0 $generated@@557)
))))))
 :pattern ( ($generated@@499 $generated@@553))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@163) ($generated@@298 $generated@@558 $generated@@46)) (and (= ($generated@@388 ($generated@@489 $generated@@2 $generated@@558)) $generated@@558) ($generated@@167 ($generated@@489 $generated@@2 $generated@@558) $generated@@46)))
 :pattern ( ($generated@@298 $generated@@558 $generated@@46))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@298 $generated@@559 $generated@@47)) (and (= ($generated@@388 ($generated@@489 $generated@@3 $generated@@559)) $generated@@559) ($generated@@167 ($generated@@489 $generated@@3 $generated@@559) $generated@@47)))
 :pattern ( ($generated@@298 $generated@@559 $generated@@47))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@163) ($generated@@298 $generated@@560 $generated@@44)) (and (= ($generated@@388 ($generated@@489 $generated@@4 $generated@@560)) $generated@@560) ($generated@@167 ($generated@@489 $generated@@4 $generated@@560) $generated@@44)))
 :pattern ( ($generated@@298 $generated@@560 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@561) 21))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@163) ($generated@@298 $generated@@562 $generated@@45)) (and (= ($generated@@388 ($generated@@489 $generated@@561 $generated@@562)) $generated@@562) ($generated@@167 ($generated@@489 $generated@@561 $generated@@562) $generated@@45)))
 :pattern ( ($generated@@298 $generated@@562 $generated@@45))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@85) (= (type $generated@@564) $generated@@85)) (and ($generated@@344 $generated@@563) ($generated@@344 $generated@@564))) (= ($generated@@308 $generated@@563 $generated@@564)  (and ($generated@@160 ($generated@@173 $generated@@563) ($generated@@173 $generated@@564)) ($generated@@308 ($generated@@172 $generated@@563) ($generated@@172 $generated@@564)))))
 :pattern ( ($generated@@308 $generated@@563 $generated@@564) ($generated@@344 $generated@@563))
 :pattern ( ($generated@@308 $generated@@563 $generated@@564) ($generated@@344 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@72) (= ($generated@@298 ($generated@@388 $generated@@565) $generated@@566) ($generated@@167 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@298 ($generated@@388 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@91 (type $generated@@567))))
 (=> (= (type $generated@@567) ($generated@@86 $generated@@568 $generated@@2)) (<= 0 ($generated@@393 $generated@@567))))
 :pattern ( ($generated@@393 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@365 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@364 $generated@@570)) (<= 0 ($generated@@363 $generated@@569))))
 :pattern ( ($generated@@363 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@72)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@72) (= (type $generated@@574) $generated@@72)) (= ($generated@@571 ($generated@@517 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@517 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@72)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@72) (= (type $generated@@578) $generated@@72)) (= ($generated@@575 ($generated@@517 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@517 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@72) (= (type $generated@@580) $generated@@72)) (= ($generated@@80 ($generated@@517 $generated@@579 $generated@@580)) $generated@@58))
 :pattern ( ($generated@@517 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@72)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@72) (= (type $generated@@584) $generated@@72)) (= ($generated@@581 ($generated@@525 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@525 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@72)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@72) (= (type $generated@@588) $generated@@72)) (= ($generated@@585 ($generated@@525 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@525 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@72) (= (type $generated@@590) $generated@@72)) (= ($generated@@80 ($generated@@525 $generated@@589 $generated@@590)) $generated@@59))
 :pattern ( ($generated@@525 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@163) (= (type $generated@@592) $generated@@163)) (= ($generated@@202 ($generated@@297 $generated@@591 $generated@@592)) $generated@@61))
 :pattern ( ($generated@@297 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@72)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@72) (= (type $generated@@596) $generated@@72)) (= ($generated@@593 ($generated@@189 $generated@@595 $generated@@596)) $generated@@595))
 :pattern ( ($generated@@189 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@72)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@72) (= (type $generated@@600) $generated@@72)) (= ($generated@@597 ($generated@@189 $generated@@599 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@189 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@163) (= (type $generated@@602) $generated@@163)) (= ($generated@@196 ($generated@@297 $generated@@601 $generated@@602)) $generated@@601))
 :pattern ( ($generated@@297 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@163) (= (type $generated@@604) $generated@@163)) (= ($generated@@197 ($generated@@297 $generated@@603 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@297 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@85) (= (type $generated@@606) $generated@@85)) (= ($generated@@202 ($generated@@83 $generated@@605 $generated@@606)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@85) (= (type $generated@@608) $generated@@85)) (= ($generated@@173 ($generated@@83 $generated@@607 $generated@@608)) $generated@@607))
 :pattern ( ($generated@@83 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@85) (= (type $generated@@610) $generated@@85)) (= ($generated@@172 ($generated@@83 $generated@@609 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@83 $generated@@609 $generated@@610))
)))
(assert  (and (forall (($generated@@613 T@U) ) (! (= (type ($generated@@611 $generated@@613)) $generated@@72)
 :pattern ( ($generated@@611 $generated@@613))
)) (forall (($generated@@614 T@U) ($generated@@615 Int) ) (! (let (($generated@@616 ($generated@@365 (type $generated@@614))))
(= (type ($generated@@612 $generated@@614 $generated@@615)) $generated@@616))
 :pattern ( ($generated@@612 $generated@@614 $generated@@615))
))))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@364 $generated@@163)) (= (type $generated@@618) $generated@@72)) (= (type $generated@@619) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@617 ($generated@@611 $generated@@618) $generated@@619) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@363 $generated@@617))) ($generated@@336 ($generated@@612 $generated@@617 $generated@@620) $generated@@618 $generated@@619))
 :pattern ( ($generated@@612 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@82 $generated@@617 ($generated@@611 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@621 ($generated@@156 $generated@@622)) $generated@@622)
 :pattern ( ($generated@@156 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@72)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@72) (= ($generated@@623 ($generated@@323 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@323 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@72) (= ($generated@@80 ($generated@@323 $generated@@626)) $generated@@54))
 :pattern ( ($generated@@323 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@72)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@72) (= ($generated@@627 ($generated@@328 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@328 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@72) (= ($generated@@80 ($generated@@328 $generated@@630)) $generated@@55))
 :pattern ( ($generated@@328 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@72)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@72) (= ($generated@@631 ($generated@@205 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@205 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@72) (= ($generated@@80 ($generated@@205 $generated@@634)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@72)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@72) (= ($generated@@635 ($generated@@611 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@611 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@72) (= ($generated@@80 ($generated@@611 $generated@@638)) $generated@@57))
 :pattern ( ($generated@@611 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@72)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@72) (= ($generated@@639 ($generated@@84 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@84 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@72)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@72) (= ($generated@@642 ($generated@@90 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@90 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@163) (= ($generated@@202 ($generated@@374 $generated@@645)) $generated@@67))
 :pattern ( ($generated@@374 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@163) (= ($generated@@162 ($generated@@374 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@374 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@85) (= ($generated@@202 ($generated@@378 $generated@@647)) $generated@@68))
 :pattern ( ($generated@@378 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@85) (= ($generated@@175 ($generated@@378 $generated@@648)) $generated@@648))
 :pattern ( ($generated@@378 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@649)))
(= ($generated@@489 $generated@@650 ($generated@@388 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@388 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@651) ($generated@@405 $generated@@163 $generated@@163)) (= (type $generated@@652) $generated@@72)) (= (type $generated@@653) $generated@@72)) (= ($generated@@167 $generated@@651 ($generated@@517 $generated@@652 $generated@@653)) (forall (($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@403 $generated@@651) $generated@@654))) (and ($generated@@298 ($generated@@93 ($generated@@490 $generated@@651) $generated@@654) $generated@@653) ($generated@@298 $generated@@654 $generated@@652)))
 :pattern ( ($generated@@93 ($generated@@490 $generated@@651) $generated@@654))
 :pattern ( ($generated@@93 ($generated@@403 $generated@@651) $generated@@654))
))))
 :pattern ( ($generated@@167 $generated@@651 ($generated@@517 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@655) ($generated@@423 $generated@@163 $generated@@163)) (= (type $generated@@656) $generated@@72)) (= (type $generated@@657) $generated@@72)) (= ($generated@@167 $generated@@655 ($generated@@525 $generated@@656 $generated@@657)) (forall (($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@421 $generated@@655) $generated@@658))) (and ($generated@@298 ($generated@@93 ($generated@@500 $generated@@655) $generated@@658) $generated@@657) ($generated@@298 $generated@@658 $generated@@656)))
 :pattern ( ($generated@@93 ($generated@@500 $generated@@655) $generated@@658))
 :pattern ( ($generated@@93 ($generated@@421 $generated@@655) $generated@@658))
))))
 :pattern ( ($generated@@167 $generated@@655 ($generated@@525 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@72) (= (type $generated@@660) $generated@@163)) (= ($generated@@167 ($generated@@374 $generated@@660) ($generated@@90 $generated@@659)) ($generated@@298 $generated@@660 $generated@@659)))
 :pattern ( ($generated@@167 ($generated@@374 $generated@@660) ($generated@@90 $generated@@659)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@163) (= (type $generated@@664) $generated@@163)) (< ($generated@@661 $generated@@663) ($generated@@662 ($generated@@297 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@297 $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@163) (= (type $generated@@666) $generated@@163)) (< ($generated@@661 $generated@@666) ($generated@@662 ($generated@@297 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@297 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@85) (= (type $generated@@668) $generated@@85)) (< ($generated@@662 $generated@@667) ($generated@@662 ($generated@@83 $generated@@667 $generated@@668))))
 :pattern ( ($generated@@83 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@85) (= (type $generated@@670) $generated@@85)) (< ($generated@@662 $generated@@670) ($generated@@662 ($generated@@83 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@83 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@163) (= (type $generated@@672) $generated@@72)) (= (type $generated@@673) $generated@@72)) ($generated@@298 $generated@@671 ($generated@@517 $generated@@672 $generated@@673))) (and (= ($generated@@388 ($generated@@489 ($generated@@405 $generated@@163 $generated@@163) $generated@@671)) $generated@@671) ($generated@@167 ($generated@@489 ($generated@@405 $generated@@163 $generated@@163) $generated@@671) ($generated@@517 $generated@@672 $generated@@673))))
 :pattern ( ($generated@@298 $generated@@671 ($generated@@517 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) $generated@@163) (= (type $generated@@675) $generated@@72)) (= (type $generated@@676) $generated@@72)) ($generated@@298 $generated@@674 ($generated@@525 $generated@@675 $generated@@676))) (and (= ($generated@@388 ($generated@@489 ($generated@@423 $generated@@163 $generated@@163) $generated@@674)) $generated@@674) ($generated@@167 ($generated@@489 ($generated@@423 $generated@@163 $generated@@163) $generated@@674) ($generated@@525 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@298 $generated@@674 ($generated@@525 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@72) (= (type $generated@@678) $generated@@72)) (= (type $generated@@679) $generated@@163)) ($generated@@298 $generated@@679 ($generated@@189 $generated@@677 $generated@@678))) (and (= ($generated@@388 ($generated@@489 $generated@@85 $generated@@679)) $generated@@679) ($generated@@167 ($generated@@489 $generated@@85 $generated@@679) ($generated@@189 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@298 $generated@@679 ($generated@@189 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@163) (< ($generated@@661 $generated@@680) ($generated@@662 ($generated@@374 $generated@@680))))
 :pattern ( ($generated@@374 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@85) (< ($generated@@662 $generated@@681) ($generated@@662 ($generated@@378 $generated@@681))))
 :pattern ( ($generated@@378 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@85) (= (type $generated@@683) $generated@@72)) (= (type $generated@@684) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@684) (and ($generated@@161 $generated@@682) ($generated@@82 $generated@@682 ($generated@@90 $generated@@683) $generated@@684)))) ($generated@@336 ($generated@@162 $generated@@682) $generated@@683 $generated@@684))
 :pattern ( ($generated@@336 ($generated@@162 $generated@@682) $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@685)))
 (not ($generated@@0 ($generated@@93 ($generated@@537 $generated@@686) $generated@@685))))
 :pattern ( (let (($generated@@686 (type $generated@@685)))
($generated@@93 ($generated@@537 $generated@@686) $generated@@685)))
)))
(assert  (=> (<= 2 $generated@@169) (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@687) $generated@@72) (= (type $generated@@688) $generated@@151)) (= (type $generated@@689) $generated@@85)) (= (type $generated@@690) $generated@@85)) (or ($generated@@279 $generated@@687 $generated@@689 $generated@@690) (and (not (= 2 $generated@@169)) (and (and ($generated@@167 $generated@@689 ($generated@@84 $generated@@687)) ($generated@@167 $generated@@690 ($generated@@84 $generated@@687))) ($generated@@149 $generated@@687 ($generated@@150 $generated@@280) $generated@@690))))) (and ($generated@@149 $generated@@687 ($generated@@150 $generated@@280) ($generated@@278 $generated@@687 $generated@@688 $generated@@689 $generated@@690)) ($generated@@167 ($generated@@278 $generated@@687 $generated@@688 $generated@@689 $generated@@690) ($generated@@84 $generated@@687))))
 :pattern ( ($generated@@278 $generated@@687 $generated@@688 $generated@@689 $generated@@690))
))))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@72) (= (type $generated@@692) $generated@@72)) (and (= ($generated@@80 ($generated@@189 $generated@@691 $generated@@692)) $generated@@62) (= ($generated@@399 ($generated@@189 $generated@@691 $generated@@692)) $generated@@69)))
 :pattern ( ($generated@@189 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@85) (= ($generated@@661 ($generated@@388 $generated@@693)) ($generated@@662 $generated@@693)))
 :pattern ( ($generated@@661 ($generated@@388 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@694) $generated@@72) (= (type $generated@@695) $generated@@151)) (= (type $generated@@696) $generated@@85)) (= (type $generated@@697) $generated@@85)) (= ($generated@@278 $generated@@694 ($generated@@150 $generated@@695) $generated@@696 $generated@@697) ($generated@@278 $generated@@694 $generated@@695 $generated@@696 $generated@@697)))
 :pattern ( ($generated@@278 $generated@@694 ($generated@@150 $generated@@695) $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@163) ($generated@@298 $generated@@698 ($generated@@156 0))) (and (= ($generated@@388 ($generated@@489 $generated@@2 $generated@@698)) $generated@@698) ($generated@@167 ($generated@@489 ($generated@@86 $generated@@163 $generated@@4) $generated@@698) ($generated@@156 0))))
 :pattern ( ($generated@@298 $generated@@698 ($generated@@156 0)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@163) (= (type $generated@@700) $generated@@72)) ($generated@@298 $generated@@699 ($generated@@323 $generated@@700))) (and (= ($generated@@388 ($generated@@489 ($generated@@86 $generated@@163 $generated@@4) $generated@@699)) $generated@@699) ($generated@@167 ($generated@@489 ($generated@@86 $generated@@163 $generated@@4) $generated@@699) ($generated@@323 $generated@@700))))
 :pattern ( ($generated@@298 $generated@@699 ($generated@@323 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@163) (= (type $generated@@702) $generated@@72)) ($generated@@298 $generated@@701 ($generated@@328 $generated@@702))) (and (= ($generated@@388 ($generated@@489 ($generated@@86 $generated@@163 $generated@@4) $generated@@701)) $generated@@701) ($generated@@167 ($generated@@489 ($generated@@86 $generated@@163 $generated@@4) $generated@@701) ($generated@@328 $generated@@702))))
 :pattern ( ($generated@@298 $generated@@701 ($generated@@328 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@703) $generated@@163) (= (type $generated@@704) $generated@@72)) ($generated@@298 $generated@@703 ($generated@@205 $generated@@704))) (and (= ($generated@@388 ($generated@@489 ($generated@@86 $generated@@163 $generated@@2) $generated@@703)) $generated@@703) ($generated@@167 ($generated@@489 ($generated@@86 $generated@@163 $generated@@2) $generated@@703) ($generated@@205 $generated@@704))))
 :pattern ( ($generated@@298 $generated@@703 ($generated@@205 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) $generated@@163) (= (type $generated@@706) $generated@@72)) ($generated@@298 $generated@@705 ($generated@@611 $generated@@706))) (and (= ($generated@@388 ($generated@@489 ($generated@@364 $generated@@163) $generated@@705)) $generated@@705) ($generated@@167 ($generated@@489 ($generated@@364 $generated@@163) $generated@@705) ($generated@@611 $generated@@706))))
 :pattern ( ($generated@@298 $generated@@705 ($generated@@611 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) $generated@@72) (= (type $generated@@708) $generated@@163)) ($generated@@298 $generated@@708 ($generated@@84 $generated@@707))) (and (= ($generated@@388 ($generated@@489 $generated@@85 $generated@@708)) $generated@@708) ($generated@@167 ($generated@@489 $generated@@85 $generated@@708) ($generated@@84 $generated@@707))))
 :pattern ( ($generated@@298 $generated@@708 ($generated@@84 $generated@@707)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@72) (= (type $generated@@710) $generated@@163)) ($generated@@298 $generated@@710 ($generated@@90 $generated@@709))) (and (= ($generated@@388 ($generated@@489 $generated@@85 $generated@@710)) $generated@@710) ($generated@@167 ($generated@@489 $generated@@85 $generated@@710) ($generated@@90 $generated@@709))))
 :pattern ( ($generated@@298 $generated@@710 ($generated@@90 $generated@@709)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@72) (= (type $generated@@712) $generated@@85)) (= ($generated@@167 ($generated@@378 $generated@@712) ($generated@@90 $generated@@711)) ($generated@@167 $generated@@712 ($generated@@84 $generated@@711))))
 :pattern ( ($generated@@167 ($generated@@378 $generated@@712) ($generated@@90 $generated@@711)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (and (= (type $generated@@713) $generated@@85) (= (type $generated@@714) $generated@@72)) (= (type $generated@@715) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@715) (and ($generated@@344 $generated@@713) ($generated@@82 $generated@@713 ($generated@@84 $generated@@714) $generated@@715)))) ($generated@@82 ($generated@@173 $generated@@713) ($generated@@90 $generated@@714) $generated@@715))
 :pattern ( ($generated@@82 ($generated@@173 $generated@@713) ($generated@@90 $generated@@714) $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (and (= (type $generated@@716) $generated@@85) (= (type $generated@@717) $generated@@72)) (= (type $generated@@718) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@718) (and ($generated@@344 $generated@@716) ($generated@@82 $generated@@716 ($generated@@84 $generated@@717) $generated@@718)))) ($generated@@82 ($generated@@172 $generated@@716) ($generated@@84 $generated@@717) $generated@@718))
 :pattern ( ($generated@@82 ($generated@@172 $generated@@716) ($generated@@84 $generated@@717) $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (and (= (type $generated@@719) $generated@@85) (= (type $generated@@720) $generated@@72)) (= (type $generated@@721) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@721) (and ($generated@@347 $generated@@719) ($generated@@82 $generated@@719 ($generated@@90 $generated@@720) $generated@@721)))) ($generated@@82 ($generated@@175 $generated@@719) ($generated@@84 $generated@@720) $generated@@721))
 :pattern ( ($generated@@82 ($generated@@175 $generated@@719) ($generated@@84 $generated@@720) $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@722) ($generated@@86 $generated@@163 $generated@@2)) (= (type $generated@@723) $generated@@72)) (= (type $generated@@724) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@722 ($generated@@205 $generated@@723) $generated@@724) (forall (($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@725) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@722 $generated@@725)))) ($generated@@336 $generated@@725 $generated@@723 $generated@@724))
 :pattern ( ($generated@@93 $generated@@722 $generated@@725))
))))
 :pattern ( ($generated@@82 $generated@@722 ($generated@@205 $generated@@723) $generated@@724))
)))
(assert (= $generated@@203 ($generated@@174 $generated@@203)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (and (= (type $generated@@726) $generated@@85) (= (type $generated@@727) $generated@@72)) (= (type $generated@@728) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@728) (and ($generated@@188 $generated@@726) (exists (($generated@@729 T@U) ) (!  (and (= (type $generated@@729) $generated@@72) ($generated@@82 $generated@@726 ($generated@@189 $generated@@727 $generated@@729) $generated@@728))
 :pattern ( ($generated@@82 $generated@@726 ($generated@@189 $generated@@727 $generated@@729) $generated@@728))
))))) ($generated@@336 ($generated@@196 $generated@@726) $generated@@727 $generated@@728))
 :pattern ( ($generated@@336 ($generated@@196 $generated@@726) $generated@@727 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) $generated@@85) (= (type $generated@@731) $generated@@72)) (= (type $generated@@732) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@732) (and ($generated@@188 $generated@@730) (exists (($generated@@733 T@U) ) (!  (and (= (type $generated@@733) $generated@@72) ($generated@@82 $generated@@730 ($generated@@189 $generated@@733 $generated@@731) $generated@@732))
 :pattern ( ($generated@@82 $generated@@730 ($generated@@189 $generated@@733 $generated@@731) $generated@@732))
))))) ($generated@@336 ($generated@@197 $generated@@730) $generated@@731 $generated@@732))
 :pattern ( ($generated@@336 ($generated@@197 $generated@@730) $generated@@731 $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@163) (= (type $generated@@735) $generated@@163)) (= ($generated@@297 ($generated@@174 $generated@@734) ($generated@@174 $generated@@735)) ($generated@@174 ($generated@@297 $generated@@734 $generated@@735))))
 :pattern ( ($generated@@297 ($generated@@174 $generated@@734) ($generated@@174 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@85) (= (type $generated@@737) $generated@@85)) (= ($generated@@83 ($generated@@174 $generated@@736) ($generated@@174 $generated@@737)) ($generated@@174 ($generated@@83 $generated@@736 $generated@@737))))
 :pattern ( ($generated@@83 ($generated@@174 $generated@@736) ($generated@@174 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@163) (= ($generated@@374 ($generated@@174 $generated@@738)) ($generated@@174 ($generated@@374 $generated@@738))))
 :pattern ( ($generated@@374 ($generated@@174 $generated@@738)))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@85) (= ($generated@@378 ($generated@@174 $generated@@739)) ($generated@@174 ($generated@@378 $generated@@739))))
 :pattern ( ($generated@@378 ($generated@@174 $generated@@739)))
)))
(assert (forall (($generated@@740 T@U) ) (! (= ($generated@@388 ($generated@@174 $generated@@740)) ($generated@@174 ($generated@@388 $generated@@740)))
 :pattern ( ($generated@@388 ($generated@@174 $generated@@740)))
)))
(assert (forall (($generated@@741 T@U) ) (! (let (($generated@@742 ($generated@@365 (type $generated@@741))))
 (=> (and (= (type $generated@@741) ($generated@@364 $generated@@742)) (= ($generated@@363 $generated@@741) 0)) (= $generated@@741 ($generated@@362 $generated@@742))))
 :pattern ( ($generated@@363 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (! (let (($generated@@746 (type $generated@@744)))
 (=> (and (and (= (type $generated@@743) ($generated@@86 $generated@@746 $generated@@2)) (= (type $generated@@745) $generated@@2)) (<= 0 ($generated $generated@@745))) (= ($generated@@393 ($generated@@94 $generated@@743 $generated@@744 $generated@@745)) (+ (- ($generated@@393 $generated@@743) ($generated ($generated@@93 $generated@@743 $generated@@744))) ($generated $generated@@745)))))
 :pattern ( ($generated@@393 ($generated@@94 $generated@@743 $generated@@744 $generated@@745)))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@748) $generated@@2)) ($generated@@82 $generated@@748 $generated@@46 $generated@@747))
 :pattern ( ($generated@@82 $generated@@748 $generated@@46 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@750) $generated@@3)) ($generated@@82 $generated@@750 $generated@@47 $generated@@749))
 :pattern ( ($generated@@82 $generated@@750 $generated@@47 $generated@@749))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@751) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@752) $generated@@4)) ($generated@@82 $generated@@752 $generated@@44 $generated@@751))
 :pattern ( ($generated@@82 $generated@@752 $generated@@44 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@754) $generated@@561)) ($generated@@82 $generated@@754 $generated@@45 $generated@@753))
 :pattern ( ($generated@@82 $generated@@754 $generated@@45 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@755) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@756) $generated@@163)) ($generated@@82 $generated@@756 $generated@@48 $generated@@755))
 :pattern ( ($generated@@82 $generated@@756 $generated@@48 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@364 $generated@@163)) (= (type $generated@@758) $generated@@72)) (= ($generated@@167 $generated@@757 ($generated@@611 $generated@@758)) (forall (($generated@@759 Int) ) (!  (=> (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@363 $generated@@757))) ($generated@@298 ($generated@@612 $generated@@757 $generated@@759) $generated@@758))
 :pattern ( ($generated@@612 $generated@@757 $generated@@759))
))))
 :pattern ( ($generated@@167 $generated@@757 ($generated@@611 $generated@@758)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) $generated@@72) (= (type $generated@@761) $generated@@151)) (= (type $generated@@762) $generated@@85)) (= ($generated@@149 $generated@@760 $generated@@761 $generated@@762) ($generated@@149 $generated@@760 $generated@@280 $generated@@762)))
 :pattern ( ($generated@@149 $generated@@760 ($generated@@382 $generated@@761) $generated@@762))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 Int) ) (!  (=> (= (type $generated@@764) ($generated@@364 $generated@@163)) (=> (and (<= 0 $generated@@765) (< $generated@@765 ($generated@@363 $generated@@764))) (< ($generated@@662 ($generated@@489 $generated@@85 ($generated@@612 $generated@@764 $generated@@765))) ($generated@@763 $generated@@764))))
 :pattern ( ($generated@@662 ($generated@@489 $generated@@85 ($generated@@612 $generated@@764 $generated@@765))))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (and (= (type $generated@@766) ($generated@@405 $generated@@163 $generated@@163)) (= (type $generated@@767) $generated@@72)) (= (type $generated@@768) $generated@@72)) ($generated@@167 $generated@@766 ($generated@@517 $generated@@767 $generated@@768))) (and (and ($generated@@167 ($generated@@403 $generated@@766) ($generated@@323 $generated@@767)) ($generated@@167 ($generated@@451 $generated@@766) ($generated@@323 $generated@@768))) ($generated@@167 ($generated@@488 $generated@@766) ($generated@@323 ($generated@@189 $generated@@767 $generated@@768)))))
 :pattern ( ($generated@@167 $generated@@766 ($generated@@517 $generated@@767 $generated@@768)))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (and (= (type $generated@@769) ($generated@@423 $generated@@163 $generated@@163)) (= (type $generated@@770) $generated@@72)) (= (type $generated@@771) $generated@@72)) ($generated@@167 $generated@@769 ($generated@@525 $generated@@770 $generated@@771))) (and (and ($generated@@167 ($generated@@421 $generated@@769) ($generated@@328 $generated@@770)) ($generated@@167 ($generated@@462 $generated@@769) ($generated@@328 $generated@@771))) ($generated@@167 ($generated@@499 $generated@@769) ($generated@@328 ($generated@@189 $generated@@770 $generated@@771)))))
 :pattern ( ($generated@@167 $generated@@769 ($generated@@525 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@772 T@U) ) (!  (=> (= (type $generated@@772) $generated@@2) ($generated@@167 $generated@@772 $generated@@46))
 :pattern ( ($generated@@167 $generated@@772 $generated@@46))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (= (type $generated@@773) $generated@@3) ($generated@@167 $generated@@773 $generated@@47))
 :pattern ( ($generated@@167 $generated@@773 $generated@@47))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@4) ($generated@@167 $generated@@774 $generated@@44))
 :pattern ( ($generated@@167 $generated@@774 $generated@@44))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@561) ($generated@@167 $generated@@775 $generated@@45))
 :pattern ( ($generated@@167 $generated@@775 $generated@@45))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@163) ($generated@@167 $generated@@776 $generated@@48))
 :pattern ( ($generated@@167 $generated@@776 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@777 () T@U)
(declare-fun $generated@@778 () T@U)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () T@U)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@777) $generated@@72) (= (type $generated@@778) $generated@@85)) (= (type $generated@@779) $generated@@85)) (= (type $generated@@783) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@780) $generated@@85)) (= (type $generated@@787) $generated@@163)) (= (type $generated@@788) $generated@@163)) (= (type $generated@@789) $generated@@163)) (= (type $generated@@785) $generated@@85)) (= (type $generated@@781) $generated@@85)) (= (type $generated@@782) $generated@@85)) (= (type $generated@@784) $generated@@85)) (= (type $generated@@786) $generated@@85)) (= (type $generated@@790) $generated@@85)) (= (type $generated@@791) $generated@@85)) (= (type $generated@@792) $generated@@85)) (= (type $generated@@793) $generated@@85)) (= (type $generated@@794) ($generated@@212 $generated@@87 $generated@@4))) (= (type $generated@@795) $generated@@87)) (= (type $generated@@796) ($generated@@212 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@798  (and (=> (= (ControlFlow 0 9) (- 0 11)) (=> ($generated@@170 $generated@@777 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (=> ($generated@@171 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) ($generated@@0 ($generated@@174 ($generated@@11 true))))))) (=> (=> ($generated@@170 $generated@@777 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (=> ($generated@@171 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) ($generated@@0 ($generated@@174 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (=> ($generated@@170 $generated@@777 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (=> (not ($generated@@171 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779))) (let (($generated@@799 ($generated@@172 ($generated@@278 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@778 $generated@@779))))
(let (($generated@@800 ($generated@@173 ($generated@@278 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@778 $generated@@779))))
 (=> ($generated@@161 $generated@@800) ($generated@@149 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@799)))))))) (=> (=> ($generated@@170 $generated@@777 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (=> (not ($generated@@171 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779))) (let (($generated@@801 ($generated@@172 ($generated@@278 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@778 $generated@@779))))
(let (($generated@@802 ($generated@@173 ($generated@@278 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@778 $generated@@779))))
 (=> ($generated@@161 $generated@@802) ($generated@@149 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@801))))))) (=> (= (ControlFlow 0 9) (- 0 8)) (=> ($generated@@170 $generated@@777 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779)) (=> (not ($generated@@171 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779))) (let (($generated@@803 ($generated@@173 ($generated@@278 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@778 $generated@@779))))
 (=> (not ($generated@@161 $generated@@803)) ($generated@@0 ($generated@@174 ($generated@@11 false)))))))))))))))
(let (($generated@@804  (=> (and (= $generated@@780 ($generated@@378 $generated@@781)) ($generated@@167 $generated@@781 ($generated@@84 $generated@@777))) (=> (and (and (and ($generated@@167 $generated@@782 ($generated@@84 $generated@@777)) ($generated@@82 $generated@@782 ($generated@@84 $generated@@777) $generated@@783)) (= $generated@@784 $generated@@781)) (and (and ($generated@@167 $generated@@784 ($generated@@84 $generated@@777)) (= $generated@@782 $generated@@784)) (and ($generated@@82 $generated@@785 ($generated@@84 $generated@@777) $generated@@783) ($generated@@82 $generated@@779 ($generated@@84 $generated@@777) $generated@@783)))) (and (=> (= (ControlFlow 0 18) (- 0 26)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> ($generated@@171 $generated@@779) ($generated@@0 ($generated@@174 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 18) (- 0 25)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> (not ($generated@@171 $generated@@779)) (let (($generated@@805 ($generated@@172 $generated@@779)))
(let (($generated@@806 ($generated@@173 $generated@@779)))
 (=> ($generated@@161 $generated@@806) ($generated@@149 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@805)))))))) (and (=> (= (ControlFlow 0 18) (- 0 24)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> (not ($generated@@171 $generated@@779)) (let (($generated@@807 ($generated@@173 $generated@@779)))
 (=> (not ($generated@@161 $generated@@807)) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))) (=> ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (and (=> (= (ControlFlow 0 18) (- 0 23)) (or (< ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@779) ($generated@@662 $generated@@779))))) (=> (or (< ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@779) ($generated@@662 $generated@@779)))) (=> (and (and ($generated@@279 $generated@@777 $generated@@785 $generated@@779) ($generated@@82 $generated@@782 ($generated@@84 $generated@@777) $generated@@783)) (and (= $generated@@786 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@785 $generated@@779)) ($generated@@82 $generated@@786 ($generated@@84 $generated@@777) $generated@@783))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (=> ($generated@@170 $generated@@777 $generated@@786) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@786) (=> ($generated@@171 $generated@@786) ($generated@@0 ($generated@@174 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (=> ($generated@@170 $generated@@777 $generated@@786) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@786) (=> (not ($generated@@171 $generated@@786)) (let (($generated@@808 ($generated@@172 $generated@@786)))
(let (($generated@@809 ($generated@@173 $generated@@786)))
 (=> ($generated@@161 $generated@@809) ($generated@@149 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@808)))))))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> ($generated@@170 $generated@@777 $generated@@786) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@786) (=> (not ($generated@@171 $generated@@786)) (let (($generated@@810 ($generated@@173 $generated@@786)))
 (=> (not ($generated@@161 $generated@@810)) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))) (=> ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@786) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (< ($generated@@662 $generated@@782) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@782) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@786) ($generated@@662 $generated@@779))))) (=> (or (< ($generated@@662 $generated@@782) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@782) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@786) ($generated@@662 $generated@@779)))) (=> (and ($generated@@279 $generated@@777 $generated@@782 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@785 $generated@@779)) (= ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@782 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@785 $generated@@779)))) (=> (and (and ($generated@@279 $generated@@777 $generated@@785 $generated@@779) ($generated@@279 $generated@@777 $generated@@782 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@785 $generated@@779))) (and ($generated@@167 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) ($generated@@84 $generated@@777)) (= (ControlFlow 0 18) 9))) $generated@@798)))))))))))))))))))
(let (($generated@@811  (=> (and (= $generated@@780 ($generated@@374 $generated@@787)) ($generated@@298 $generated@@787 $generated@@777)) (=> (and (and (and ($generated@@298 $generated@@788 $generated@@777) ($generated@@336 $generated@@788 $generated@@777 $generated@@783)) (= $generated@@789 $generated@@787)) (and (and ($generated@@298 $generated@@789 $generated@@777) (= $generated@@788 $generated@@789)) (and ($generated@@82 $generated@@785 ($generated@@84 $generated@@777) $generated@@783) ($generated@@82 $generated@@779 ($generated@@84 $generated@@777) $generated@@783)))) (and (=> (= (ControlFlow 0 13) (- 0 17)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> ($generated@@171 $generated@@779) ($generated@@0 ($generated@@174 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> (not ($generated@@171 $generated@@779)) (let (($generated@@812 ($generated@@172 $generated@@779)))
(let (($generated@@813 ($generated@@173 $generated@@779)))
 (=> ($generated@@161 $generated@@813) ($generated@@149 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@812)))))))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> (not ($generated@@171 $generated@@779)) (let (($generated@@814 ($generated@@173 $generated@@779)))
 (=> (not ($generated@@161 $generated@@814)) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))) (=> ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (< ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@779) ($generated@@662 $generated@@779))))) (=> (or (< ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@785) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@779) ($generated@@662 $generated@@779)))) (=> ($generated@@279 $generated@@777 $generated@@785 $generated@@779) (=> (and (and (= ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) ($generated@@83 $generated@@780 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@785 $generated@@779))) ($generated@@279 $generated@@777 $generated@@785 $generated@@779)) (and ($generated@@167 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) ($generated@@84 $generated@@777)) (= (ControlFlow 0 13) 9))) $generated@@798))))))))))))
(let (($generated@@815  (=> (and (and (= $generated@@778 $generated@@203) (= ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) $generated@@779)) (and ($generated@@167 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) ($generated@@84 $generated@@777)) (= (ControlFlow 0 12) 9))) $generated@@798)))
(let (($generated@@816 true))
(let (($generated@@817  (=> (not (= $generated@@780 ($generated@@374 $generated@@787))) (and (=> (= (ControlFlow 0 27) 18) $generated@@804) (=> (= (ControlFlow 0 27) 7) $generated@@816)))))
(let (($generated@@818  (=> (= $generated@@778 ($generated@@83 $generated@@790 $generated@@791)) (=> (and ($generated@@167 $generated@@790 ($generated@@90 $generated@@777)) ($generated@@167 $generated@@791 ($generated@@84 $generated@@777))) (=> (and (and (and (and ($generated@@167 $generated@@785 ($generated@@84 $generated@@777)) ($generated@@82 $generated@@785 ($generated@@84 $generated@@777) $generated@@783)) (= $generated@@792 $generated@@791)) (and ($generated@@167 $generated@@792 ($generated@@84 $generated@@777)) (= $generated@@785 $generated@@792))) (and (and (and ($generated@@167 $generated@@780 ($generated@@90 $generated@@777)) ($generated@@82 $generated@@780 ($generated@@90 $generated@@777) $generated@@783)) (= $generated@@793 $generated@@790)) (and ($generated@@167 $generated@@793 ($generated@@90 $generated@@777)) (= $generated@@780 $generated@@793)))) (and (=> (= (ControlFlow 0 28) 13) $generated@@811) (=> (= (ControlFlow 0 28) 27) $generated@@817)))))))
(let (($generated@@819 true))
(let (($generated@@820  (=> (not (= $generated@@778 $generated@@203)) (and (=> (= (ControlFlow 0 29) 28) $generated@@818) (=> (= (ControlFlow 0 29) 6) $generated@@819)))))
(let (($generated@@821  (=> (= $generated@@794 ($generated@@266 $generated@@795 $generated@@783 $generated@@60 false)) (and (=> (= (ControlFlow 0 30) 12) $generated@@815) (=> (= (ControlFlow 0 30) 29) $generated@@820)))))
(let (($generated@@822  (=> ($generated@@167 ($generated@@278 $generated@@777 ($generated@@150 $generated@@280) $generated@@778 $generated@@779) ($generated@@84 $generated@@777)) (=> (and ($generated@@82 $generated@@778 ($generated@@84 $generated@@777) $generated@@783) ($generated@@82 $generated@@779 ($generated@@84 $generated@@777) $generated@@783)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> ($generated@@171 $generated@@779) ($generated@@0 ($generated@@174 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> (not ($generated@@171 $generated@@779)) (let (($generated@@823 ($generated@@172 $generated@@779)))
(let (($generated@@824 ($generated@@173 $generated@@779)))
 (=> ($generated@@161 $generated@@824) ($generated@@149 $generated@@777 ($generated@@150 ($generated@@150 $generated@@280)) $generated@@823)))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@170 $generated@@777 $generated@@779) (or ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (=> (not ($generated@@171 $generated@@779)) (let (($generated@@825 ($generated@@173 $generated@@779)))
 (=> (not ($generated@@161 $generated@@825)) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))) (=> (and ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779) (= (ControlFlow 0 2) (- 0 1))) (or (and (= $generated@@778 $generated@@778) (= $generated@@779 $generated@@779)) (or (< ($generated@@662 $generated@@778) ($generated@@662 $generated@@778)) (and (= ($generated@@662 $generated@@778) ($generated@@662 $generated@@778)) (< ($generated@@662 $generated@@779) ($generated@@662 $generated@@779)))))))))))))
(let (($generated@@826  (=> (and (and (= $generated@@796 ($generated@@211 $generated@@795 $generated@@783 $generated@@60 false)) ($generated@@82 $generated@@779 ($generated@@84 $generated@@777) $generated@@783)) (and ($generated@@170 $generated@@777 $generated@@779) ($generated@@149 $generated@@777 ($generated@@150 $generated@@280) $generated@@779))) (and (=> (= (ControlFlow 0 31) 2) $generated@@822) (=> (= (ControlFlow 0 31) 30) $generated@@821)))))
(let (($generated@@827  (=> (and ($generated@@89 $generated@@783) ($generated@@797 $generated@@783)) (=> (and (and ($generated@@167 $generated@@778 ($generated@@84 $generated@@777)) ($generated@@167 $generated@@779 ($generated@@84 $generated@@777))) (and (= 2 $generated@@169) (= (ControlFlow 0 32) 31))) $generated@@826))))
$generated@@827))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (Int) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@280 (T@U T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U T@U) Bool)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U) Bool)
(declare-fun $generated@@317 (T@U) Bool)
(declare-fun $generated@@320 (T@U) Bool)
(declare-fun $generated@@335 (T@T) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@360 (T@U) Int)
(declare-fun $generated@@361 (T@T) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@T) T@U)
(declare-fun $generated@@390 (T@T T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@392 (T@T) T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@T T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@484 (T@U T@U) T@U)
(declare-fun $generated@@492 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@T) T@U)
(declare-fun $generated@@528 () T@T)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@579 (T@U Int) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(declare-fun $generated@@629 (T@U) Int)
(declare-fun $generated@@719 (T@U) T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@725 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@72) (= (type $generated@@154) $generated@@151)) (= (type $generated@@155) $generated@@85)) (= ($generated@@149 $generated@@153 ($generated@@150 $generated@@154) $generated@@155) ($generated@@149 $generated@@153 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@149 $generated@@153 ($generated@@150 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 Int) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@72)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@158 ($generated@@156 0) $generated@@159))
 :pattern ( ($generated@@82 $generated@@158 ($generated@@156 0) $generated@@159))
)))
(assert  (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@85) (= (type $generated@@166) $generated@@85)) (and ($generated@@161 $generated@@165) ($generated@@161 $generated@@166))) (= ($generated@@160 $generated@@165 $generated@@166) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166) ($generated@@161 $generated@@165))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166) ($generated@@161 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@156 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@156 0)))
)))
(assert  (and (and (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@176)) $generated@@85)
 :pattern ( ($generated@@172 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@85)
 :pattern ( ($generated@@173 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@85)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(= (type ($generated@@174 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@174 $generated@@179))
))))
(assert  (=> (<= 1 $generated@@169) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) $generated@@151)) (= (type $generated@@183) $generated@@85)) (or ($generated@@170 $generated@@181 $generated@@183) (and (not (= 1 $generated@@169)) ($generated@@167 $generated@@183 ($generated@@84 $generated@@181))))) (and (=> (not ($generated@@171 $generated@@183)) (let (($generated@@184 ($generated@@172 $generated@@183)))
(let (($generated@@185 ($generated@@173 $generated@@183)))
 (=> ($generated@@161 $generated@@185) ($generated@@170 $generated@@181 $generated@@184))))) (= ($generated@@149 $generated@@181 ($generated@@150 $generated@@182) $generated@@183) (ite ($generated@@171 $generated@@183) true (let (($generated@@186 ($generated@@172 $generated@@183)))
(let (($generated@@187 ($generated@@173 $generated@@183)))
(ite ($generated@@161 $generated@@187) ($generated@@149 $generated@@181 $generated@@182 $generated@@186) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))))
 :pattern ( ($generated@@149 $generated@@181 ($generated@@150 $generated@@182) $generated@@183))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@72)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) $generated@@72)) (= (type $generated@@194) $generated@@85)) ($generated@@167 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@167 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@163)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@163)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@85) (= (type $generated@@201) $generated@@85)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@76)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@85)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@72)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@86 $generated@@163 $generated@@2)) (= (type $generated@@209) $generated@@72)) ($generated@@167 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@167 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@87 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@75 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@87) (= (type $generated@@260) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@261) ($generated@@74 $generated@@4))) (= (type $generated@@263) $generated@@87)) (= (type $generated@@264) ($generated@@74 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@212 $generated@@87 $generated@@4))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@75 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@87) (= (type $generated@@272) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@273) ($generated@@74 $generated@@4))) (= (type $generated@@275) $generated@@87)) (= (type $generated@@276) ($generated@@74 $generated@@277))) (= ($generated@@0 ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@72) (= (type $generated@@279) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@279)) ($generated@@82 $generated@@203 ($generated@@84 $generated@@278) $generated@@279))
 :pattern ( ($generated@@82 $generated@@203 ($generated@@84 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (= (type ($generated@@280 $generated@@282 $generated@@283)) $generated@@85)
 :pattern ( ($generated@@280 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) $generated@@72) (= (type $generated@@285) $generated@@72)) (= (type $generated@@286) $generated@@163)) (= (type $generated@@287) $generated@@163)) (= ($generated@@167 ($generated@@280 $generated@@286 $generated@@287) ($generated@@189 $generated@@284 $generated@@285))  (and ($generated@@281 $generated@@286 $generated@@284) ($generated@@281 $generated@@287 $generated@@285))))
 :pattern ( ($generated@@167 ($generated@@280 $generated@@286 $generated@@287) ($generated@@189 $generated@@284 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@72) ($generated@@167 $generated@@203 ($generated@@84 $generated@@288)))
 :pattern ( ($generated@@167 $generated@@203 ($generated@@84 $generated@@288)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@85) (= (type $generated@@290) $generated@@85)) (= ($generated@@195 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@195 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@85) (= (type $generated@@293) $generated@@85)) (= ($generated@@291 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@291 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@85) (= (type $generated@@295) $generated@@85)) (= ($generated@@160 $generated@@294 $generated@@295) (= $generated@@294 $generated@@295)))
 :pattern ( ($generated@@160 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@72)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@299) $generated@@72)) (= ($generated@@167 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@163) ($generated@@0 ($generated@@93 $generated@@298 $generated@@300))) ($generated@@281 $generated@@300 $generated@@299))
 :pattern ( ($generated@@93 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@167 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@72)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@304) $generated@@72)) (= ($generated@@167 $generated@@303 ($generated@@301 $generated@@304)) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@163) ($generated@@0 ($generated@@93 $generated@@303 $generated@@305))) ($generated@@281 $generated@@305 $generated@@304))
 :pattern ( ($generated@@93 $generated@@303 $generated@@305))
))))
 :pattern ( ($generated@@167 $generated@@303 ($generated@@301 $generated@@304)))
)))
(assert (forall (($generated@@306 T@U) ) (! (= ($generated@@174 $generated@@306) $generated@@306)
 :pattern ( ($generated@@174 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) $generated@@85) (= (type $generated@@308) $generated@@85)) (and ($generated@@171 $generated@@307) ($generated@@171 $generated@@308))) (= ($generated@@291 $generated@@307 $generated@@308) true))
 :pattern ( ($generated@@291 $generated@@307 $generated@@308) ($generated@@171 $generated@@307))
 :pattern ( ($generated@@291 $generated@@307 $generated@@308) ($generated@@171 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) $generated@@72)) (= (type $generated@@312) $generated@@163)) (= (type $generated@@313) $generated@@163)) (= (type $generated@@314) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@314)) (= ($generated@@82 ($generated@@280 $generated@@312 $generated@@313) ($generated@@189 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@309 $generated@@312 $generated@@310 $generated@@314) ($generated@@309 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@82 ($generated@@280 $generated@@312 $generated@@313) ($generated@@189 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@85) (= ($generated@@188 $generated@@315) (= ($generated@@202 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@85) (= ($generated@@171 $generated@@316) (= ($generated@@202 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@171 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@85) (= ($generated@@317 $generated@@318) (= ($generated@@202 $generated@@318) $generated@@65)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@85) (= ($generated@@161 $generated@@319) (= ($generated@@202 $generated@@319) $generated@@67)))
 :pattern ( ($generated@@161 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@85) (= ($generated@@320 $generated@@321) (= ($generated@@202 $generated@@321) $generated@@68)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 1 $generated@@169) (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@322) $generated@@72) (= (type $generated@@323) $generated@@151)) (= (type $generated@@324) $generated@@85)) (or ($generated@@170 $generated@@322 ($generated@@174 $generated@@324)) (and (not (= 1 $generated@@169)) ($generated@@167 $generated@@324 ($generated@@84 $generated@@322))))) (and (=> (not ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@171 ($generated@@174 $generated@@324)))))) (let (($generated@@325 ($generated@@174 ($generated@@172 ($generated@@174 $generated@@324)))))
(let (($generated@@326 ($generated@@174 ($generated@@173 ($generated@@174 $generated@@324)))))
 (=> ($generated@@161 $generated@@326) ($generated@@170 $generated@@322 $generated@@325))))) (= ($generated@@149 $generated@@322 ($generated@@150 $generated@@323) ($generated@@174 $generated@@324)) (ite ($generated@@171 ($generated@@174 $generated@@324)) true (let (($generated@@327 ($generated@@174 ($generated@@172 ($generated@@174 $generated@@324)))))
(let (($generated@@328 ($generated@@174 ($generated@@173 ($generated@@174 $generated@@324)))))
(ite ($generated@@161 $generated@@328) ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@149 $generated@@322 ($generated@@150 $generated@@323) $generated@@327)))) ($generated@@0 ($generated@@174 ($generated@@11 false))))))))))
 :weight 3
 :pattern ( ($generated@@149 $generated@@322 ($generated@@150 $generated@@323) ($generated@@174 $generated@@324)))
))))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@85) ($generated@@188 $generated@@329)) (exists (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (and (and (= (type $generated@@330) $generated@@163) (= (type $generated@@331) $generated@@163)) (= $generated@@329 ($generated@@280 $generated@@330 $generated@@331)))
 :no-pattern (type $generated@@330)
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
)))
 :pattern ( ($generated@@188 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@85) ($generated@@317 $generated@@332)) (exists (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (and (and (= (type $generated@@333) $generated@@85) (= (type $generated@@334) $generated@@85)) (= $generated@@332 ($generated@@83 $generated@@333 $generated@@334)))
 :no-pattern (type $generated@@333)
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
)))
 :pattern ( ($generated@@317 $generated@@332))
)))
(assert  (and (and (forall (($generated@@339 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@339)) 18)) (forall (($generated@@340 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@337 $generated@@340))
))) (forall (($generated@@341 T@T) ) (! (= (type ($generated@@335 $generated@@341)) ($generated@@337 $generated@@341))
 :pattern ( ($generated@@335 $generated@@341))
))))
(assert (forall (($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@342)) 0)
 :pattern ( ($generated@@335 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) $generated@@72) (= (type $generated@@344) $generated@@85)) (= (type $generated@@345) $generated@@85)) (= ($generated@@167 ($generated@@83 $generated@@344 $generated@@345) ($generated@@84 $generated@@343))  (and ($generated@@167 $generated@@344 ($generated@@90 $generated@@343)) ($generated@@167 $generated@@345 ($generated@@84 $generated@@343)))))
 :pattern ( ($generated@@167 ($generated@@83 $generated@@344 $generated@@345) ($generated@@84 $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@85) ($generated@@171 $generated@@346)) (= $generated@@346 $generated@@203))
 :pattern ( ($generated@@171 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@85)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@85) ($generated@@161 $generated@@349)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@163) (= $generated@@349 ($generated@@347 $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
)))
 :pattern ( ($generated@@161 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@85)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@85) ($generated@@320 $generated@@353)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@85) (= $generated@@353 ($generated@@351 $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
)))
 :pattern ( ($generated@@320 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@163)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@72) (= (type $generated@@359) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@309 ($generated@@355 $generated@@357) $generated@@358 $generated@@359) ($generated@@82 $generated@@357 $generated@@358 $generated@@359)))
 :pattern ( ($generated@@309 ($generated@@355 $generated@@357) $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@362 T@T) ) (! (= (type ($generated@@361 $generated@@362)) ($generated@@86 $generated@@362 $generated@@2))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@91 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@86 $generated@@364 $generated@@2)) (and (= (= ($generated@@360 $generated@@363) 0) (= $generated@@363 ($generated@@361 $generated@@364))) (=> (not (= ($generated@@360 $generated@@363) 0)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (< 0 ($generated ($generated@@93 $generated@@363 $generated@@365))))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@77)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@368)) $generated@@64) (= ($generated@@366 ($generated@@84 $generated@@368)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@369)) $generated@@66) (= ($generated@@366 ($generated@@90 $generated@@369)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@369))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 19)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@86 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@93 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@93 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert  (and (and (and (and (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (= ($generated@@1 ($generated@@390 $generated@@393 $generated@@394)) 20)) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@391 ($generated@@390 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@390 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@392 ($generated@@390 $generated@@397 $generated@@398)) $generated@@398)
 :pattern ( ($generated@@390 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@391 (type $generated@@399))))
(= (type ($generated@@388 $generated@@399)) ($generated@@86 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@399))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= (type ($generated@@389 $generated@@401 $generated@@402)) ($generated@@390 $generated@@401 $generated@@402))
 :pattern ( ($generated@@389 $generated@@401 $generated@@402))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@T) ) (! (let (($generated@@405 (type $generated@@403)))
 (not ($generated@@0 ($generated@@93 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403))))
 :pattern ( (let (($generated@@405 (type $generated@@403)))
($generated@@93 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403)))
)))
(assert  (=> (<= 1 $generated@@169) (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) $generated@@72) (= (type $generated@@407) $generated@@151)) (= (type $generated@@408) $generated@@85)) (or ($generated@@170 $generated@@406 $generated@@408) (and (not (= 1 $generated@@169)) ($generated@@167 $generated@@408 ($generated@@84 $generated@@406))))) true)
 :pattern ( ($generated@@149 $generated@@406 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@91 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@86 $generated@@410 $generated@@2)) (= ($generated@@206 $generated@@409) (forall (($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@410) (and (<= 0 ($generated ($generated@@93 $generated@@409 $generated@@411))) (<= ($generated ($generated@@93 $generated@@409 $generated@@411)) ($generated@@360 $generated@@409))))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
)))))
 :pattern ( ($generated@@206 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@85) (= (type $generated@@413) $generated@@85)) (and ($generated@@320 $generated@@412) ($generated@@320 $generated@@413))) (= ($generated@@160 $generated@@412 $generated@@413) ($generated@@291 ($generated@@175 $generated@@412) ($generated@@175 $generated@@413))))
 :pattern ( ($generated@@160 $generated@@412 $generated@@413) ($generated@@320 $generated@@412))
 :pattern ( ($generated@@160 $generated@@412 $generated@@413) ($generated@@320 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@374 (type $generated@@414))))
(let (($generated@@416 ($generated@@373 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@372 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@371 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) ($generated@@0 ($generated@@93 ($generated@@370 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@370 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@374 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@86 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@374 (type $generated@@421))))
(let (($generated@@423 ($generated@@373 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@372 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@371 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@422) ($generated@@0 ($generated@@93 ($generated@@418 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@418 $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@392 (type $generated@@425))))
(let (($generated@@427 ($generated@@391 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@390 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@389 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) ($generated@@0 ($generated@@93 ($generated@@388 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@388 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@392 (type $generated@@430))))
(= (type ($generated@@429 $generated@@430)) ($generated@@86 $generated@@431 $generated@@4)))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@392 (type $generated@@432))))
(let (($generated@@434 ($generated@@391 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@390 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@389 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@433) ($generated@@0 ($generated@@93 ($generated@@429 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@429 $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@86 $generated@@163 $generated@@2)) (= (type $generated@@437) $generated@@72)) (= ($generated@@167 $generated@@436 ($generated@@205 $generated@@437)) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@436 $generated@@438)))) ($generated@@281 $generated@@438 $generated@@437))
 :pattern ( ($generated@@93 $generated@@436 $generated@@438))
))))
 :pattern ( ($generated@@167 $generated@@436 ($generated@@205 $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) $generated@@72) (= (type $generated@@440) $generated@@163)) (= (type $generated@@441) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@441)) (= ($generated@@82 ($generated@@347 $generated@@440) ($generated@@90 $generated@@439) $generated@@441) ($generated@@309 $generated@@440 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@82 ($generated@@347 $generated@@440) ($generated@@90 $generated@@439) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) $generated@@72) (= (type $generated@@443) $generated@@85)) (= (type $generated@@444) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@444)) (= ($generated@@82 ($generated@@351 $generated@@443) ($generated@@90 $generated@@442) $generated@@444) ($generated@@82 $generated@@443 ($generated@@84 $generated@@442) $generated@@444)))
 :pattern ( ($generated@@82 ($generated@@351 $generated@@443) ($generated@@90 $generated@@442) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@446) $generated@@72)) (= (type $generated@@447) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@445 ($generated@@296 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@163) ($generated@@0 ($generated@@93 $generated@@445 $generated@@448))) ($generated@@309 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@93 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@82 $generated@@445 ($generated@@296 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@86 $generated@@163 $generated@@4)) (= (type $generated@@450) $generated@@72)) (= (type $generated@@451) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@449 ($generated@@301 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@0 ($generated@@93 $generated@@449 $generated@@452))) ($generated@@309 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@93 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@82 $generated@@449 ($generated@@301 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(= ($generated ($generated@@93 ($generated@@361 $generated@@454) $generated@@453)) 0))
 :pattern ( (let (($generated@@454 (type $generated@@453)))
($generated@@93 ($generated@@361 $generated@@454) $generated@@453)))
)))
(assert  (and (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@455 $generated@@458)) ($generated@@86 $generated@@163 $generated@@4))
 :pattern ( ($generated@@455 $generated@@458))
)) (forall (($generated@@459 T@T) ($generated@@460 T@U) ) (! (= (type ($generated@@456 $generated@@459 $generated@@460)) $generated@@459)
 :pattern ( ($generated@@456 $generated@@459 $generated@@460))
))) (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@374 (type $generated@@461))))
(let (($generated@@463 ($generated@@373 (type $generated@@461))))
(= (type ($generated@@457 $generated@@461)) ($generated@@86 $generated@@463 $generated@@462))))
 :pattern ( ($generated@@457 $generated@@461))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@372 $generated@@163 $generated@@163)) (= (type $generated@@465) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@455 $generated@@464) $generated@@465))  (and ($generated@@0 ($generated@@93 ($generated@@370 $generated@@464) ($generated@@196 ($generated@@456 $generated@@85 $generated@@465)))) (= ($generated@@93 ($generated@@457 $generated@@464) ($generated@@196 ($generated@@456 $generated@@85 $generated@@465))) ($generated@@197 ($generated@@456 $generated@@85 $generated@@465))))))
 :pattern ( ($generated@@93 ($generated@@455 $generated@@464) $generated@@465))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) ($generated@@86 $generated@@163 $generated@@4))
 :pattern ( ($generated@@466 $generated@@468))
)) (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@392 (type $generated@@469))))
(let (($generated@@471 ($generated@@391 (type $generated@@469))))
(= (type ($generated@@467 $generated@@469)) ($generated@@86 $generated@@471 $generated@@470))))
 :pattern ( ($generated@@467 $generated@@469))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) ($generated@@390 $generated@@163 $generated@@163)) (= (type $generated@@473) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@466 $generated@@472) $generated@@473))  (and ($generated@@0 ($generated@@93 ($generated@@388 $generated@@472) ($generated@@196 ($generated@@456 $generated@@85 $generated@@473)))) (= ($generated@@93 ($generated@@467 $generated@@472) ($generated@@196 ($generated@@456 $generated@@85 $generated@@473))) ($generated@@197 ($generated@@456 $generated@@85 $generated@@473))))))
 :pattern ( ($generated@@93 ($generated@@466 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@373 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@372 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@93 ($generated@@418 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@93 ($generated@@370 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@93 ($generated@@457 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@93 ($generated@@370 $generated@@474) $generated@@478))
 :pattern ( ($generated@@93 ($generated@@457 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@93 ($generated@@418 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@391 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@390 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@93 ($generated@@429 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@93 ($generated@@388 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@93 ($generated@@467 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@93 ($generated@@388 $generated@@479) $generated@@483))
 :pattern ( ($generated@@93 ($generated@@467 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@485 $generated@@486)) $generated@@72)
 :pattern ( ($generated@@484 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (and (= (type $generated@@487) ($generated@@372 $generated@@163 $generated@@163)) (= (type $generated@@488) $generated@@72)) (= (type $generated@@489) $generated@@72)) (= (type $generated@@490) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@487 ($generated@@484 $generated@@488 $generated@@489) $generated@@490) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@370 $generated@@487) $generated@@491))) (and ($generated@@309 ($generated@@93 ($generated@@457 $generated@@487) $generated@@491) $generated@@489 $generated@@490) ($generated@@309 $generated@@491 $generated@@488 $generated@@490)))
 :pattern ( ($generated@@93 ($generated@@457 $generated@@487) $generated@@491))
 :pattern ( ($generated@@93 ($generated@@370 $generated@@487) $generated@@491))
))))
 :pattern ( ($generated@@82 $generated@@487 ($generated@@484 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@493 $generated@@494)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) ($generated@@390 $generated@@163 $generated@@163)) (= (type $generated@@496) $generated@@72)) (= (type $generated@@497) $generated@@72)) (= (type $generated@@498) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@495 ($generated@@492 $generated@@496 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@388 $generated@@495) $generated@@499))) (and ($generated@@309 ($generated@@93 ($generated@@467 $generated@@495) $generated@@499) $generated@@497 $generated@@498) ($generated@@309 $generated@@499 $generated@@496 $generated@@498)))
 :pattern ( ($generated@@93 ($generated@@467 $generated@@495) $generated@@499))
 :pattern ( ($generated@@93 ($generated@@388 $generated@@495) $generated@@499))
))))
 :pattern ( ($generated@@82 $generated@@495 ($generated@@492 $generated@@496 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@500) $generated@@72) (= (type $generated@@501) $generated@@85)) ($generated@@167 $generated@@501 ($generated@@84 $generated@@500))) (or ($generated@@171 $generated@@501) ($generated@@317 $generated@@501)))
 :pattern ( ($generated@@317 $generated@@501) ($generated@@167 $generated@@501 ($generated@@84 $generated@@500)))
 :pattern ( ($generated@@171 $generated@@501) ($generated@@167 $generated@@501 ($generated@@84 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@85)) ($generated@@167 $generated@@503 ($generated@@90 $generated@@502))) (or ($generated@@161 $generated@@503) ($generated@@320 $generated@@503)))
 :pattern ( ($generated@@320 $generated@@503) ($generated@@167 $generated@@503 ($generated@@90 $generated@@502)))
 :pattern ( ($generated@@161 $generated@@503) ($generated@@167 $generated@@503 ($generated@@90 $generated@@502)))
)))
(assert (forall (($generated@@505 T@T) ) (! (= (type ($generated@@504 $generated@@505)) ($generated@@86 $generated@@505 $generated@@4))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@392 (type $generated@@506))))
(let (($generated@@508 ($generated@@391 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@390 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@389 $generated@@508 $generated@@507)) (= ($generated@@388 $generated@@506) ($generated@@504 $generated@@508))))))
 :pattern ( ($generated@@388 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@392 (type $generated@@509))))
(let (($generated@@511 ($generated@@391 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@390 $generated@@511 $generated@@510)) (= (= $generated@@509 ($generated@@389 $generated@@511 $generated@@510)) (= ($generated@@429 $generated@@509) ($generated@@504 $generated@@510))))))
 :pattern ( ($generated@@429 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@392 (type $generated@@512))))
(let (($generated@@514 ($generated@@391 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@390 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@389 $generated@@514 $generated@@513)) (= ($generated@@466 $generated@@512) ($generated@@504 $generated@@163))))))
 :pattern ( ($generated@@466 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@374 (type $generated@@515))))
(let (($generated@@517 ($generated@@373 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@372 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@371 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@163) (= (type $generated@@519) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@455 $generated@@515) ($generated@@355 ($generated@@280 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@455 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@392 (type $generated@@520))))
(let (($generated@@522 ($generated@@391 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@390 $generated@@522 $generated@@521)) (or (= $generated@@520 ($generated@@389 $generated@@522 $generated@@521)) (exists (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (and (and (= (type $generated@@523) $generated@@163) (= (type $generated@@524) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@466 $generated@@520) ($generated@@355 ($generated@@280 $generated@@523 $generated@@524)))))
 :no-pattern (type $generated@@523)
 :no-pattern (type $generated@@524)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
))))))
 :pattern ( ($generated@@466 $generated@@520))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) ($generated@@281 $generated@@525 $generated@@46)) (and (= ($generated@@355 ($generated@@456 $generated@@2 $generated@@525)) $generated@@525) ($generated@@167 ($generated@@456 $generated@@2 $generated@@525) $generated@@46)))
 :pattern ( ($generated@@281 $generated@@525 $generated@@46))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@163) ($generated@@281 $generated@@526 $generated@@47)) (and (= ($generated@@355 ($generated@@456 $generated@@3 $generated@@526)) $generated@@526) ($generated@@167 ($generated@@456 $generated@@3 $generated@@526) $generated@@47)))
 :pattern ( ($generated@@281 $generated@@526 $generated@@47))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@163) ($generated@@281 $generated@@527 $generated@@44)) (and (= ($generated@@355 ($generated@@456 $generated@@4 $generated@@527)) $generated@@527) ($generated@@167 ($generated@@456 $generated@@4 $generated@@527) $generated@@44)))
 :pattern ( ($generated@@281 $generated@@527 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@528) 21))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@163) ($generated@@281 $generated@@529 $generated@@45)) (and (= ($generated@@355 ($generated@@456 $generated@@528 $generated@@529)) $generated@@529) ($generated@@167 ($generated@@456 $generated@@528 $generated@@529) $generated@@45)))
 :pattern ( ($generated@@281 $generated@@529 $generated@@45))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@85) (= (type $generated@@531) $generated@@85)) (and ($generated@@317 $generated@@530) ($generated@@317 $generated@@531))) (= ($generated@@291 $generated@@530 $generated@@531)  (and ($generated@@160 ($generated@@173 $generated@@530) ($generated@@173 $generated@@531)) ($generated@@291 ($generated@@172 $generated@@530) ($generated@@172 $generated@@531)))))
 :pattern ( ($generated@@291 $generated@@530 $generated@@531) ($generated@@317 $generated@@530))
 :pattern ( ($generated@@291 $generated@@530 $generated@@531) ($generated@@317 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@72) (= ($generated@@281 ($generated@@355 $generated@@532) $generated@@533) ($generated@@167 $generated@@532 $generated@@533)))
 :pattern ( ($generated@@281 ($generated@@355 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@91 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@86 $generated@@535 $generated@@2)) (<= 0 ($generated@@360 $generated@@534))))
 :pattern ( ($generated@@360 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@338 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@337 $generated@@537)) (<= 0 ($generated@@336 $generated@@536))))
 :pattern ( ($generated@@336 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@72) (= (type $generated@@541) $generated@@72)) (= ($generated@@538 ($generated@@484 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@484 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@72)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@72) (= (type $generated@@545) $generated@@72)) (= ($generated@@542 ($generated@@484 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@484 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@72) (= (type $generated@@547) $generated@@72)) (= ($generated@@80 ($generated@@484 $generated@@546 $generated@@547)) $generated@@58))
 :pattern ( ($generated@@484 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@72)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@72) (= (type $generated@@551) $generated@@72)) (= ($generated@@548 ($generated@@492 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@492 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@72)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@72) (= (type $generated@@555) $generated@@72)) (= ($generated@@552 ($generated@@492 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@492 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@72) (= (type $generated@@557) $generated@@72)) (= ($generated@@80 ($generated@@492 $generated@@556 $generated@@557)) $generated@@59))
 :pattern ( ($generated@@492 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@163)) (= ($generated@@202 ($generated@@280 $generated@@558 $generated@@559)) $generated@@61))
 :pattern ( ($generated@@280 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@72)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= ($generated@@560 ($generated@@189 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@189 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@72)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@72) (= (type $generated@@567) $generated@@72)) (= ($generated@@564 ($generated@@189 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@189 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@163) (= (type $generated@@569) $generated@@163)) (= ($generated@@196 ($generated@@280 $generated@@568 $generated@@569)) $generated@@568))
 :pattern ( ($generated@@280 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@163) (= (type $generated@@571) $generated@@163)) (= ($generated@@197 ($generated@@280 $generated@@570 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@280 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@85) (= (type $generated@@573) $generated@@85)) (= ($generated@@202 ($generated@@83 $generated@@572 $generated@@573)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@85) (= (type $generated@@575) $generated@@85)) (= ($generated@@173 ($generated@@83 $generated@@574 $generated@@575)) $generated@@574))
 :pattern ( ($generated@@83 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@85) (= (type $generated@@577) $generated@@85)) (= ($generated@@172 ($generated@@83 $generated@@576 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@83 $generated@@576 $generated@@577))
)))
(assert  (and (forall (($generated@@580 T@U) ) (! (= (type ($generated@@578 $generated@@580)) $generated@@72)
 :pattern ( ($generated@@578 $generated@@580))
)) (forall (($generated@@581 T@U) ($generated@@582 Int) ) (! (let (($generated@@583 ($generated@@338 (type $generated@@581))))
(= (type ($generated@@579 $generated@@581 $generated@@582)) $generated@@583))
 :pattern ( ($generated@@579 $generated@@581 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@337 $generated@@163)) (= (type $generated@@585) $generated@@72)) (= (type $generated@@586) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@584 ($generated@@578 $generated@@585) $generated@@586) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@336 $generated@@584))) ($generated@@309 ($generated@@579 $generated@@584 $generated@@587) $generated@@585 $generated@@586))
 :pattern ( ($generated@@579 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@82 $generated@@584 ($generated@@578 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@588 ($generated@@156 $generated@@589)) $generated@@589)
 :pattern ( ($generated@@156 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@72)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@72) (= ($generated@@590 ($generated@@296 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@296 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@72) (= ($generated@@80 ($generated@@296 $generated@@593)) $generated@@54))
 :pattern ( ($generated@@296 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@72)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@72) (= ($generated@@594 ($generated@@301 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@301 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@72) (= ($generated@@80 ($generated@@301 $generated@@597)) $generated@@55))
 :pattern ( ($generated@@301 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@72)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@72) (= ($generated@@598 ($generated@@205 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@205 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@72) (= ($generated@@80 ($generated@@205 $generated@@601)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@72)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@72) (= ($generated@@602 ($generated@@578 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@578 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@72) (= ($generated@@80 ($generated@@578 $generated@@605)) $generated@@57))
 :pattern ( ($generated@@578 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@72)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@72) (= ($generated@@606 ($generated@@84 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@84 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@72)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@72) (= ($generated@@609 ($generated@@90 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@90 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@163) (= ($generated@@202 ($generated@@347 $generated@@612)) $generated@@67))
 :pattern ( ($generated@@347 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@163) (= ($generated@@162 ($generated@@347 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@347 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@85) (= ($generated@@202 ($generated@@351 $generated@@614)) $generated@@68))
 :pattern ( ($generated@@351 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@85) (= ($generated@@175 ($generated@@351 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@351 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
(= ($generated@@456 $generated@@617 ($generated@@355 $generated@@616)) $generated@@616))
 :pattern ( ($generated@@355 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@372 $generated@@163 $generated@@163)) (= (type $generated@@619) $generated@@72)) (= (type $generated@@620) $generated@@72)) (= ($generated@@167 $generated@@618 ($generated@@484 $generated@@619 $generated@@620)) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@370 $generated@@618) $generated@@621))) (and ($generated@@281 ($generated@@93 ($generated@@457 $generated@@618) $generated@@621) $generated@@620) ($generated@@281 $generated@@621 $generated@@619)))
 :pattern ( ($generated@@93 ($generated@@457 $generated@@618) $generated@@621))
 :pattern ( ($generated@@93 ($generated@@370 $generated@@618) $generated@@621))
))))
 :pattern ( ($generated@@167 $generated@@618 ($generated@@484 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@390 $generated@@163 $generated@@163)) (= (type $generated@@623) $generated@@72)) (= (type $generated@@624) $generated@@72)) (= ($generated@@167 $generated@@622 ($generated@@492 $generated@@623 $generated@@624)) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@388 $generated@@622) $generated@@625))) (and ($generated@@281 ($generated@@93 ($generated@@467 $generated@@622) $generated@@625) $generated@@624) ($generated@@281 $generated@@625 $generated@@623)))
 :pattern ( ($generated@@93 ($generated@@467 $generated@@622) $generated@@625))
 :pattern ( ($generated@@93 ($generated@@388 $generated@@622) $generated@@625))
))))
 :pattern ( ($generated@@167 $generated@@622 ($generated@@492 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@72) (= (type $generated@@627) $generated@@163)) (= ($generated@@167 ($generated@@347 $generated@@627) ($generated@@90 $generated@@626)) ($generated@@281 $generated@@627 $generated@@626)))
 :pattern ( ($generated@@167 ($generated@@347 $generated@@627) ($generated@@90 $generated@@626)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@163) (= (type $generated@@631) $generated@@163)) (< ($generated@@628 $generated@@630) ($generated@@629 ($generated@@280 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@280 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@163) (= (type $generated@@633) $generated@@163)) (< ($generated@@628 $generated@@633) ($generated@@629 ($generated@@280 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@280 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@85) (= (type $generated@@635) $generated@@85)) (< ($generated@@629 $generated@@634) ($generated@@629 ($generated@@83 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@83 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@85) (= (type $generated@@637) $generated@@85)) (< ($generated@@629 $generated@@637) ($generated@@629 ($generated@@83 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@83 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@163) (= (type $generated@@639) $generated@@72)) (= (type $generated@@640) $generated@@72)) ($generated@@281 $generated@@638 ($generated@@484 $generated@@639 $generated@@640))) (and (= ($generated@@355 ($generated@@456 ($generated@@372 $generated@@163 $generated@@163) $generated@@638)) $generated@@638) ($generated@@167 ($generated@@456 ($generated@@372 $generated@@163 $generated@@163) $generated@@638) ($generated@@484 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@281 $generated@@638 ($generated@@484 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@163) (= (type $generated@@642) $generated@@72)) (= (type $generated@@643) $generated@@72)) ($generated@@281 $generated@@641 ($generated@@492 $generated@@642 $generated@@643))) (and (= ($generated@@355 ($generated@@456 ($generated@@390 $generated@@163 $generated@@163) $generated@@641)) $generated@@641) ($generated@@167 ($generated@@456 ($generated@@390 $generated@@163 $generated@@163) $generated@@641) ($generated@@492 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@281 $generated@@641 ($generated@@492 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@72) (= (type $generated@@645) $generated@@72)) (= (type $generated@@646) $generated@@163)) ($generated@@281 $generated@@646 ($generated@@189 $generated@@644 $generated@@645))) (and (= ($generated@@355 ($generated@@456 $generated@@85 $generated@@646)) $generated@@646) ($generated@@167 ($generated@@456 $generated@@85 $generated@@646) ($generated@@189 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@281 $generated@@646 ($generated@@189 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@163) (< ($generated@@628 $generated@@647) ($generated@@629 ($generated@@347 $generated@@647))))
 :pattern ( ($generated@@347 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@85) (< ($generated@@629 $generated@@648) ($generated@@629 ($generated@@351 $generated@@648))))
 :pattern ( ($generated@@351 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@85) (= (type $generated@@650) $generated@@72)) (= (type $generated@@651) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@651) (and ($generated@@161 $generated@@649) ($generated@@82 $generated@@649 ($generated@@90 $generated@@650) $generated@@651)))) ($generated@@309 ($generated@@162 $generated@@649) $generated@@650 $generated@@651))
 :pattern ( ($generated@@309 ($generated@@162 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
 (not ($generated@@0 ($generated@@93 ($generated@@504 $generated@@653) $generated@@652))))
 :pattern ( (let (($generated@@653 (type $generated@@652)))
($generated@@93 ($generated@@504 $generated@@653) $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@72) (= (type $generated@@655) $generated@@72)) (and (= ($generated@@80 ($generated@@189 $generated@@654 $generated@@655)) $generated@@62) (= ($generated@@366 ($generated@@189 $generated@@654 $generated@@655)) $generated@@69)))
 :pattern ( ($generated@@189 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@85) (= ($generated@@628 ($generated@@355 $generated@@656)) ($generated@@629 $generated@@656)))
 :pattern ( ($generated@@628 ($generated@@355 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@163) ($generated@@281 $generated@@657 ($generated@@156 0))) (and (= ($generated@@355 ($generated@@456 $generated@@2 $generated@@657)) $generated@@657) ($generated@@167 ($generated@@456 ($generated@@86 $generated@@163 $generated@@4) $generated@@657) ($generated@@156 0))))
 :pattern ( ($generated@@281 $generated@@657 ($generated@@156 0)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@163) (= (type $generated@@659) $generated@@72)) ($generated@@281 $generated@@658 ($generated@@296 $generated@@659))) (and (= ($generated@@355 ($generated@@456 ($generated@@86 $generated@@163 $generated@@4) $generated@@658)) $generated@@658) ($generated@@167 ($generated@@456 ($generated@@86 $generated@@163 $generated@@4) $generated@@658) ($generated@@296 $generated@@659))))
 :pattern ( ($generated@@281 $generated@@658 ($generated@@296 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@163) (= (type $generated@@661) $generated@@72)) ($generated@@281 $generated@@660 ($generated@@301 $generated@@661))) (and (= ($generated@@355 ($generated@@456 ($generated@@86 $generated@@163 $generated@@4) $generated@@660)) $generated@@660) ($generated@@167 ($generated@@456 ($generated@@86 $generated@@163 $generated@@4) $generated@@660) ($generated@@301 $generated@@661))))
 :pattern ( ($generated@@281 $generated@@660 ($generated@@301 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@163) (= (type $generated@@663) $generated@@72)) ($generated@@281 $generated@@662 ($generated@@205 $generated@@663))) (and (= ($generated@@355 ($generated@@456 ($generated@@86 $generated@@163 $generated@@2) $generated@@662)) $generated@@662) ($generated@@167 ($generated@@456 ($generated@@86 $generated@@163 $generated@@2) $generated@@662) ($generated@@205 $generated@@663))))
 :pattern ( ($generated@@281 $generated@@662 ($generated@@205 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@163) (= (type $generated@@665) $generated@@72)) ($generated@@281 $generated@@664 ($generated@@578 $generated@@665))) (and (= ($generated@@355 ($generated@@456 ($generated@@337 $generated@@163) $generated@@664)) $generated@@664) ($generated@@167 ($generated@@456 ($generated@@337 $generated@@163) $generated@@664) ($generated@@578 $generated@@665))))
 :pattern ( ($generated@@281 $generated@@664 ($generated@@578 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@666) $generated@@72) (= (type $generated@@667) $generated@@163)) ($generated@@281 $generated@@667 ($generated@@84 $generated@@666))) (and (= ($generated@@355 ($generated@@456 $generated@@85 $generated@@667)) $generated@@667) ($generated@@167 ($generated@@456 $generated@@85 $generated@@667) ($generated@@84 $generated@@666))))
 :pattern ( ($generated@@281 $generated@@667 ($generated@@84 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@72) (= (type $generated@@669) $generated@@163)) ($generated@@281 $generated@@669 ($generated@@90 $generated@@668))) (and (= ($generated@@355 ($generated@@456 $generated@@85 $generated@@669)) $generated@@669) ($generated@@167 ($generated@@456 $generated@@85 $generated@@669) ($generated@@90 $generated@@668))))
 :pattern ( ($generated@@281 $generated@@669 ($generated@@90 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@72) (= (type $generated@@671) $generated@@85)) (= ($generated@@167 ($generated@@351 $generated@@671) ($generated@@90 $generated@@670)) ($generated@@167 $generated@@671 ($generated@@84 $generated@@670))))
 :pattern ( ($generated@@167 ($generated@@351 $generated@@671) ($generated@@90 $generated@@670)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@85) (= (type $generated@@673) $generated@@72)) (= (type $generated@@674) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@674) (and ($generated@@317 $generated@@672) ($generated@@82 $generated@@672 ($generated@@84 $generated@@673) $generated@@674)))) ($generated@@82 ($generated@@173 $generated@@672) ($generated@@90 $generated@@673) $generated@@674))
 :pattern ( ($generated@@82 ($generated@@173 $generated@@672) ($generated@@90 $generated@@673) $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@85) (= (type $generated@@676) $generated@@72)) (= (type $generated@@677) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@677) (and ($generated@@317 $generated@@675) ($generated@@82 $generated@@675 ($generated@@84 $generated@@676) $generated@@677)))) ($generated@@82 ($generated@@172 $generated@@675) ($generated@@84 $generated@@676) $generated@@677))
 :pattern ( ($generated@@82 ($generated@@172 $generated@@675) ($generated@@84 $generated@@676) $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@85) (= (type $generated@@679) $generated@@72)) (= (type $generated@@680) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@680) (and ($generated@@320 $generated@@678) ($generated@@82 $generated@@678 ($generated@@90 $generated@@679) $generated@@680)))) ($generated@@82 ($generated@@175 $generated@@678) ($generated@@84 $generated@@679) $generated@@680))
 :pattern ( ($generated@@82 ($generated@@175 $generated@@678) ($generated@@84 $generated@@679) $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@681) ($generated@@86 $generated@@163 $generated@@2)) (= (type $generated@@682) $generated@@72)) (= (type $generated@@683) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@681 ($generated@@205 $generated@@682) $generated@@683) (forall (($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@681 $generated@@684)))) ($generated@@309 $generated@@684 $generated@@682 $generated@@683))
 :pattern ( ($generated@@93 $generated@@681 $generated@@684))
))))
 :pattern ( ($generated@@82 $generated@@681 ($generated@@205 $generated@@682) $generated@@683))
)))
(assert (= $generated@@203 ($generated@@174 $generated@@203)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (= (type $generated@@685) $generated@@85) (= (type $generated@@686) $generated@@72)) (= (type $generated@@687) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@687) (and ($generated@@188 $generated@@685) (exists (($generated@@688 T@U) ) (!  (and (= (type $generated@@688) $generated@@72) ($generated@@82 $generated@@685 ($generated@@189 $generated@@686 $generated@@688) $generated@@687))
 :pattern ( ($generated@@82 $generated@@685 ($generated@@189 $generated@@686 $generated@@688) $generated@@687))
))))) ($generated@@309 ($generated@@196 $generated@@685) $generated@@686 $generated@@687))
 :pattern ( ($generated@@309 ($generated@@196 $generated@@685) $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@85) (= (type $generated@@690) $generated@@72)) (= (type $generated@@691) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@691) (and ($generated@@188 $generated@@689) (exists (($generated@@692 T@U) ) (!  (and (= (type $generated@@692) $generated@@72) ($generated@@82 $generated@@689 ($generated@@189 $generated@@692 $generated@@690) $generated@@691))
 :pattern ( ($generated@@82 $generated@@689 ($generated@@189 $generated@@692 $generated@@690) $generated@@691))
))))) ($generated@@309 ($generated@@197 $generated@@689) $generated@@690 $generated@@691))
 :pattern ( ($generated@@309 ($generated@@197 $generated@@689) $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) $generated@@163) (= (type $generated@@694) $generated@@163)) (= ($generated@@280 ($generated@@174 $generated@@693) ($generated@@174 $generated@@694)) ($generated@@174 ($generated@@280 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@693) ($generated@@174 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@85) (= (type $generated@@696) $generated@@85)) (= ($generated@@83 ($generated@@174 $generated@@695) ($generated@@174 $generated@@696)) ($generated@@174 ($generated@@83 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@83 ($generated@@174 $generated@@695) ($generated@@174 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@163) (= ($generated@@347 ($generated@@174 $generated@@697)) ($generated@@174 ($generated@@347 $generated@@697))))
 :pattern ( ($generated@@347 ($generated@@174 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@85) (= ($generated@@351 ($generated@@174 $generated@@698)) ($generated@@174 ($generated@@351 $generated@@698))))
 :pattern ( ($generated@@351 ($generated@@174 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ) (! (= ($generated@@355 ($generated@@174 $generated@@699)) ($generated@@174 ($generated@@355 $generated@@699)))
 :pattern ( ($generated@@355 ($generated@@174 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ) (! (let (($generated@@701 ($generated@@338 (type $generated@@700))))
 (=> (and (= (type $generated@@700) ($generated@@337 $generated@@701)) (= ($generated@@336 $generated@@700) 0)) (= $generated@@700 ($generated@@335 $generated@@701))))
 :pattern ( ($generated@@336 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (! (let (($generated@@705 (type $generated@@703)))
 (=> (and (and (= (type $generated@@702) ($generated@@86 $generated@@705 $generated@@2)) (= (type $generated@@704) $generated@@2)) (<= 0 ($generated $generated@@704))) (= ($generated@@360 ($generated@@94 $generated@@702 $generated@@703 $generated@@704)) (+ (- ($generated@@360 $generated@@702) ($generated ($generated@@93 $generated@@702 $generated@@703))) ($generated $generated@@704)))))
 :pattern ( ($generated@@360 ($generated@@94 $generated@@702 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@707) $generated@@2)) ($generated@@82 $generated@@707 $generated@@46 $generated@@706))
 :pattern ( ($generated@@82 $generated@@707 $generated@@46 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@709) $generated@@3)) ($generated@@82 $generated@@709 $generated@@47 $generated@@708))
 :pattern ( ($generated@@82 $generated@@709 $generated@@47 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@711) $generated@@4)) ($generated@@82 $generated@@711 $generated@@44 $generated@@710))
 :pattern ( ($generated@@82 $generated@@711 $generated@@44 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@713) $generated@@528)) ($generated@@82 $generated@@713 $generated@@45 $generated@@712))
 :pattern ( ($generated@@82 $generated@@713 $generated@@45 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@715) $generated@@163)) ($generated@@82 $generated@@715 $generated@@48 $generated@@714))
 :pattern ( ($generated@@82 $generated@@715 $generated@@48 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@337 $generated@@163)) (= (type $generated@@717) $generated@@72)) (= ($generated@@167 $generated@@716 ($generated@@578 $generated@@717)) (forall (($generated@@718 Int) ) (!  (=> (and (<= 0 $generated@@718) (< $generated@@718 ($generated@@336 $generated@@716))) ($generated@@281 ($generated@@579 $generated@@716 $generated@@718) $generated@@717))
 :pattern ( ($generated@@579 $generated@@716 $generated@@718))
))))
 :pattern ( ($generated@@167 $generated@@716 ($generated@@578 $generated@@717)))
)))
(assert  (and (forall (($generated@@721 T@U) ) (! (= (type ($generated@@719 $generated@@721)) $generated@@151)
 :pattern ( ($generated@@719 $generated@@721))
)) (= (type $generated@@720) $generated@@151)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@72) (= (type $generated@@723) $generated@@151)) (= (type $generated@@724) $generated@@85)) (= ($generated@@149 $generated@@722 $generated@@723 $generated@@724) ($generated@@149 $generated@@722 $generated@@720 $generated@@724)))
 :pattern ( ($generated@@149 $generated@@722 ($generated@@719 $generated@@723) $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 Int) ) (!  (=> (= (type $generated@@726) ($generated@@337 $generated@@163)) (=> (and (<= 0 $generated@@727) (< $generated@@727 ($generated@@336 $generated@@726))) (< ($generated@@629 ($generated@@456 $generated@@85 ($generated@@579 $generated@@726 $generated@@727))) ($generated@@725 $generated@@726))))
 :pattern ( ($generated@@629 ($generated@@456 $generated@@85 ($generated@@579 $generated@@726 $generated@@727))))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (and (= (type $generated@@728) ($generated@@372 $generated@@163 $generated@@163)) (= (type $generated@@729) $generated@@72)) (= (type $generated@@730) $generated@@72)) ($generated@@167 $generated@@728 ($generated@@484 $generated@@729 $generated@@730))) (and (and ($generated@@167 ($generated@@370 $generated@@728) ($generated@@296 $generated@@729)) ($generated@@167 ($generated@@418 $generated@@728) ($generated@@296 $generated@@730))) ($generated@@167 ($generated@@455 $generated@@728) ($generated@@296 ($generated@@189 $generated@@729 $generated@@730)))))
 :pattern ( ($generated@@167 $generated@@728 ($generated@@484 $generated@@729 $generated@@730)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (and (= (type $generated@@731) ($generated@@390 $generated@@163 $generated@@163)) (= (type $generated@@732) $generated@@72)) (= (type $generated@@733) $generated@@72)) ($generated@@167 $generated@@731 ($generated@@492 $generated@@732 $generated@@733))) (and (and ($generated@@167 ($generated@@388 $generated@@731) ($generated@@301 $generated@@732)) ($generated@@167 ($generated@@429 $generated@@731) ($generated@@301 $generated@@733))) ($generated@@167 ($generated@@466 $generated@@731) ($generated@@301 ($generated@@189 $generated@@732 $generated@@733)))))
 :pattern ( ($generated@@167 $generated@@731 ($generated@@492 $generated@@732 $generated@@733)))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@2) ($generated@@167 $generated@@734 $generated@@46))
 :pattern ( ($generated@@167 $generated@@734 $generated@@46))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@3) ($generated@@167 $generated@@735 $generated@@47))
 :pattern ( ($generated@@167 $generated@@735 $generated@@47))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@4) ($generated@@167 $generated@@736 $generated@@44))
 :pattern ( ($generated@@167 $generated@@736 $generated@@44))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@528) ($generated@@167 $generated@@737 $generated@@45))
 :pattern ( ($generated@@167 $generated@@737 $generated@@45))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@163) ($generated@@167 $generated@@738 $generated@@48))
 :pattern ( ($generated@@167 $generated@@738 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@739) $generated@@85) (= (type $generated@@740) $generated@@163)) (= (type $generated@@741) $generated@@72)) (= (type $generated@@742) $generated@@163)) (= (type $generated@@743) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@744) $generated@@163)) (= (type $generated@@745) $generated@@85)) (= (type $generated@@746) $generated@@85)) (= (type $generated@@747) $generated@@85)) (= (type $generated@@748) $generated@@85)) (= (type $generated@@749) $generated@@85)) (= (type $generated@@750) $generated@@85)) (= (type $generated@@751) ($generated@@212 $generated@@87 $generated@@4))) (= (type $generated@@752) $generated@@87)) (= (type $generated@@753) ($generated@@212 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@755 true))
(let (($generated@@756 true))
(let (($generated@@757  (=> (not (= $generated@@739 ($generated@@347 $generated@@740))) (and (=> (= (ControlFlow 0 8) 6) $generated@@756) (=> (= (ControlFlow 0 8) 7) $generated@@755)))))
(let (($generated@@758  (=> (and (= $generated@@739 ($generated@@347 $generated@@740)) ($generated@@281 $generated@@740 $generated@@741)) (=> (and (and (and ($generated@@281 $generated@@742 $generated@@741) ($generated@@309 $generated@@742 $generated@@741 $generated@@743)) (= $generated@@744 $generated@@740)) (and (and ($generated@@281 $generated@@744 $generated@@741) (= $generated@@742 $generated@@744)) (and ($generated@@82 $generated@@745 ($generated@@84 $generated@@741) $generated@@743) (= (ControlFlow 0 5) (- 0 4))))) (< ($generated@@629 $generated@@745) ($generated@@629 $generated@@746))))))
(let (($generated@@759  (=> (= $generated@@746 ($generated@@83 $generated@@747 $generated@@748)) (=> (and ($generated@@167 $generated@@747 ($generated@@90 $generated@@741)) ($generated@@167 $generated@@748 ($generated@@84 $generated@@741))) (=> (and (and (and (and ($generated@@167 $generated@@745 ($generated@@84 $generated@@741)) ($generated@@82 $generated@@745 ($generated@@84 $generated@@741) $generated@@743)) (= $generated@@749 $generated@@748)) (and ($generated@@167 $generated@@749 ($generated@@84 $generated@@741)) (= $generated@@745 $generated@@749))) (and (and (and ($generated@@167 $generated@@739 ($generated@@90 $generated@@741)) ($generated@@82 $generated@@739 ($generated@@90 $generated@@741) $generated@@743)) (= $generated@@750 $generated@@747)) (and ($generated@@167 $generated@@750 ($generated@@90 $generated@@741)) (= $generated@@739 $generated@@750)))) (and (=> (= (ControlFlow 0 9) 5) $generated@@758) (=> (= (ControlFlow 0 9) 8) $generated@@757)))))))
(let (($generated@@760 true))
(let (($generated@@761  (=> (not (= $generated@@746 $generated@@203)) (and (=> (= (ControlFlow 0 10) 9) $generated@@759) (=> (= (ControlFlow 0 10) 3) $generated@@760)))))
(let (($generated@@762 true))
(let (($generated@@763  (=> (= $generated@@751 ($generated@@266 $generated@@752 $generated@@743 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@762) (=> (= (ControlFlow 0 11) 10) $generated@@761)))))
(let (($generated@@764 true))
(let (($generated@@765  (=> (= $generated@@753 ($generated@@211 $generated@@752 $generated@@743 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@764) (=> (= (ControlFlow 0 12) 11) $generated@@763)))))
(let (($generated@@766  (=> (and (and (and ($generated@@89 $generated@@743) ($generated@@754 $generated@@743)) ($generated@@167 $generated@@746 ($generated@@84 $generated@@741))) (and (= 1 $generated@@169) (= (ControlFlow 0 13) 12))) $generated@@765)))
$generated@@766)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@T) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@194 (Int) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@209 (T@U T@U) Bool)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@243 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@294 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@308 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U) Bool)
(declare-fun $generated@@319 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@343 (T@U T@U T@U) Bool)
(declare-fun $generated@@351 (T@U) Bool)
(declare-fun $generated@@354 (T@U) Bool)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@384 (T@U) Int)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@T) T@U)
(declare-fun $generated@@396 (T@T T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@398 (T@T) T@T)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@T) T@U)
(declare-fun $generated@@414 (T@T T@T) T@T)
(declare-fun $generated@@415 (T@T) T@T)
(declare-fun $generated@@416 (T@T) T@T)
(declare-fun $generated@@436 (T@U Int) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@T T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@516 (T@U T@U) T@U)
(declare-fun $generated@@524 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@T) T@U)
(declare-fun $generated@@560 () T@T)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@654 (T@U) Int)
(declare-fun $generated@@655 (T@U) Int)
(declare-fun $generated@@682 (T@U) T@U)
(declare-fun $generated@@683 (T@U) T@U)
(declare-fun $generated@@768 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@167 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@167)) 16))) (forall (($generated@@168 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@165 $generated@@168))
))) (= ($generated@@1 $generated@@161) 17)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@150 $generated@@169 $generated@@170 $generated@@171)) ($generated@@165 $generated@@161))
 :pattern ( ($generated@@150 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@151 $generated@@172)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@156 $generated@@173)) $generated@@85)
 :pattern ( ($generated@@156 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@157 $generated@@174)) $generated@@85)
 :pattern ( ($generated@@157 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@159 $generated@@175)) $generated@@85)
 :pattern ( ($generated@@159 $generated@@175))
))) (forall (($generated@@176 T@T) ) (! (= (type ($generated@@160 $generated@@176)) ($generated@@165 $generated@@176))
 :pattern ( ($generated@@160 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@162 $generated@@177)) $generated@@161)
 :pattern ( ($generated@@162 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@166 (type $generated@@178))))
(= (type ($generated@@163 $generated@@178 $generated@@179)) ($generated@@165 $generated@@180)))
 :pattern ( ($generated@@163 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(= (type ($generated@@164 $generated@@181 $generated@@182)) ($generated@@165 $generated@@183)))
 :pattern ( ($generated@@164 $generated@@181 $generated@@182))
))))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) $generated@@152)) (= (type $generated@@186) $generated@@85)) (or ($generated@@153 $generated@@184 $generated@@186) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@186 ($generated@@84 $generated@@184))))) (and (=> (not ($generated@@155 $generated@@186)) (let (($generated@@187 ($generated@@156 $generated@@186)))
(let (($generated@@188 ($generated@@157 $generated@@186)))
 (and (=> ($generated@@158 $generated@@188) ($generated@@153 $generated@@184 $generated@@187)) (=> (not ($generated@@158 $generated@@188)) (let (($generated@@189 ($generated@@159 $generated@@188)))
 (and ($generated@@153 $generated@@184 $generated@@189) ($generated@@153 $generated@@184 $generated@@187)))))))) (= ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186) (ite ($generated@@155 $generated@@186) ($generated@@160 $generated@@161) (let (($generated@@190 ($generated@@156 $generated@@186)))
(let (($generated@@191 ($generated@@157 $generated@@186)))
(ite ($generated@@158 $generated@@191) (let (($generated@@192 ($generated@@162 $generated@@191)))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@192) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))) (let (($generated@@193 ($generated@@159 $generated@@191)))
($generated@@163 ($generated@@150 $generated@@184 $generated@@185 $generated@@193) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))))))))))
 :pattern ( ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186))
))))
(assert (forall (($generated@@195 Int) ) (! (= (type ($generated@@194 $generated@@195)) $generated@@72)
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@2) (= (type $generated@@197) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@196 ($generated@@194 0) $generated@@197))
 :pattern ( ($generated@@82 $generated@@196 ($generated@@194 0) $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (and (= (type $generated@@200) $generated@@72) (= (type $generated@@201) $generated@@152)) (= (type $generated@@202) $generated@@85)) (or ($generated@@153 $generated@@200 $generated@@202) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@202 ($generated@@84 $generated@@200))))) ($generated@@154 ($generated@@150 $generated@@200 $generated@@201 $generated@@202) ($generated@@198 $generated@@200)))
 :pattern ( ($generated@@150 $generated@@200 $generated@@201 $generated@@202))
))))
(assert  (and (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@152)
 :pattern ( ($generated@@203 $generated@@205))
)) (= (type $generated@@204) $generated@@152)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@206) $generated@@72) (= (type $generated@@207) $generated@@152)) (= (type $generated@@208) $generated@@85)) (= ($generated@@150 $generated@@206 $generated@@207 $generated@@208) ($generated@@150 $generated@@206 $generated@@204 $generated@@208)))
 :pattern ( ($generated@@150 $generated@@206 ($generated@@203 $generated@@207) $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (= (type $generated@@210) $generated@@85) (= (type $generated@@211) $generated@@85)) (and ($generated@@158 $generated@@210) ($generated@@158 $generated@@211))) (= ($generated@@209 $generated@@210 $generated@@211) (= ($generated@@162 $generated@@210) ($generated@@162 $generated@@211))))
 :pattern ( ($generated@@209 $generated@@210 $generated@@211) ($generated@@158 $generated@@210))
 :pattern ( ($generated@@209 $generated@@210 $generated@@211) ($generated@@158 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@2) ($generated@@154 $generated@@212 ($generated@@194 0)))
 :pattern ( ($generated@@154 $generated@@212 ($generated@@194 0)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@215 $generated@@216)) $generated@@72)
 :pattern ( ($generated@@214 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@72) (= (type $generated@@218) $generated@@72)) (= (type $generated@@219) $generated@@85)) ($generated@@154 $generated@@219 ($generated@@214 $generated@@217 $generated@@218))) ($generated@@213 $generated@@219))
 :pattern ( ($generated@@213 $generated@@219) ($generated@@154 $generated@@219 ($generated@@214 $generated@@217 $generated@@218)))
)))
(assert  (and (forall (($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@223)) $generated@@161)
 :pattern ( ($generated@@221 $generated@@223))
)) (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@161)
 :pattern ( ($generated@@222 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (= (type $generated@@225) $generated@@85) (= (type $generated@@226) $generated@@85)) true) (= ($generated@@220 $generated@@225 $generated@@226)  (and (= ($generated@@221 $generated@@225) ($generated@@221 $generated@@226)) (= ($generated@@222 $generated@@225) ($generated@@222 $generated@@226)))))
 :pattern ( ($generated@@220 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (= (type $generated@@227) $generated@@72) (= (type $generated@@228) $generated@@152)) (= (type $generated@@229) $generated@@85)) (= ($generated@@150 $generated@@227 ($generated@@151 $generated@@228) $generated@@229) ($generated@@150 $generated@@227 $generated@@228 $generated@@229)))
 :pattern ( ($generated@@150 $generated@@227 ($generated@@151 $generated@@228) $generated@@229))
)))
(assert  (and (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@76)
 :pattern ( ($generated@@230 $generated@@232))
)) (= (type $generated@@231) $generated@@85)))
(assert (= ($generated@@230 $generated@@231) $generated@@63))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@233 $generated@@235)) $generated@@72)
 :pattern ( ($generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (= (type $generated@@236) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@237) $generated@@72)) ($generated@@154 $generated@@236 ($generated@@233 $generated@@237))) ($generated@@234 $generated@@236))
 :pattern ( ($generated@@154 $generated@@236 ($generated@@233 $generated@@237)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@244 $generated@@245)) 18)) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@246 $generated@@247)) $generated@@246)
 :pattern ( ($generated@@240 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@248 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@240 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@242 (type $generated@@250))))
(= (type ($generated@@238 $generated@@250 $generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@238 $generated@@250 $generated@@251 $generated@@252))
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(let (($generated@@259 (type $generated@@255)))
(= (type ($generated@@243 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@240 $generated@@259 $generated@@258))))
 :pattern ( ($generated@@243 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@242 (type $generated@@260))))
 (=> (= (type $generated@@263) $generated@@264) (= ($generated@@238 ($generated@@243 $generated@@260 $generated@@261 $generated@@262 $generated@@263) $generated@@261 $generated@@262) $generated@@263)))
 :weight 0
))) (and (and (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (or (= $generated@@267 $generated@@269) (= ($generated@@238 ($generated@@243 $generated@@266 $generated@@267 $generated@@268 $generated@@265) $generated@@269 $generated@@270) ($generated@@238 $generated@@266 $generated@@269 $generated@@270)))
 :weight 0
)) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (or (= $generated@@274 $generated@@276) (= ($generated@@238 ($generated@@243 $generated@@272 $generated@@273 $generated@@274 $generated@@271) $generated@@275 $generated@@276) ($generated@@238 $generated@@272 $generated@@275 $generated@@276)))
 :weight 0
))) (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (or true (= ($generated@@238 ($generated@@243 $generated@@278 $generated@@279 $generated@@280 $generated@@277) $generated@@281 $generated@@282) ($generated@@238 $generated@@278 $generated@@281 $generated@@282)))
 :weight 0
)))) (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 Bool) ) (! (= (type ($generated@@239 $generated@@283 $generated@@284 $generated@@285 $generated@@286)) ($generated@@240 $generated@@87 $generated@@4))
 :pattern ( ($generated@@239 $generated@@283 $generated@@284 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@75 (type $generated@@292))))
 (=> (and (and (and (and (= (type $generated@@287) $generated@@87) (= (type $generated@@288) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@289) ($generated@@74 $generated@@4))) (= (type $generated@@291) $generated@@87)) (= (type $generated@@292) ($generated@@74 $generated@@293))) (= ($generated@@0 ($generated@@238 ($generated@@239 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291 $generated@@292))  (=> (and (not (= $generated@@291 $generated@@287)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@288 $generated@@291) $generated@@289))) $generated@@290))))
 :pattern ( ($generated@@238 ($generated@@239 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 Bool) ) (! (= (type ($generated@@294 $generated@@295 $generated@@296 $generated@@297 $generated@@298)) ($generated@@240 $generated@@87 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295 $generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@75 (type $generated@@304))))
 (=> (and (and (and (and (= (type $generated@@299) $generated@@87) (= (type $generated@@300) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@301) ($generated@@74 $generated@@4))) (= (type $generated@@303) $generated@@87)) (= (type $generated@@304) ($generated@@74 $generated@@305))) (= ($generated@@0 ($generated@@238 ($generated@@294 $generated@@299 $generated@@300 $generated@@301 $generated@@302) $generated@@303 $generated@@304))  (=> (and (not (= $generated@@303 $generated@@299)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@300 $generated@@303) $generated@@301))) $generated@@302))))
 :pattern ( ($generated@@238 ($generated@@294 $generated@@299 $generated@@300 $generated@@301 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@72) (= (type $generated@@307) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@307)) ($generated@@82 $generated@@231 ($generated@@84 $generated@@306) $generated@@307))
 :pattern ( ($generated@@82 $generated@@231 ($generated@@84 $generated@@306) $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (= (type ($generated@@308 $generated@@310 $generated@@311)) $generated@@85)
 :pattern ( ($generated@@308 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@72) (= (type $generated@@313) $generated@@72)) (= (type $generated@@314) $generated@@161)) (= (type $generated@@315) $generated@@161)) (= ($generated@@154 ($generated@@308 $generated@@314 $generated@@315) ($generated@@214 $generated@@312 $generated@@313))  (and ($generated@@309 $generated@@314 $generated@@312) ($generated@@309 $generated@@315 $generated@@313))))
 :pattern ( ($generated@@154 ($generated@@308 $generated@@314 $generated@@315) ($generated@@214 $generated@@312 $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@72) ($generated@@154 $generated@@231 ($generated@@84 $generated@@316)))
 :pattern ( ($generated@@154 $generated@@231 ($generated@@84 $generated@@316)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@85) (= (type $generated@@318) $generated@@85)) (= ($generated@@220 $generated@@317 $generated@@318) (= $generated@@317 $generated@@318)))
 :pattern ( ($generated@@220 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@85) (= (type $generated@@321) $generated@@85)) (= ($generated@@319 $generated@@320 $generated@@321) (= $generated@@320 $generated@@321)))
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@85) (= (type $generated@@323) $generated@@85)) (= ($generated@@209 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@209 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@72)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@327) $generated@@72)) (= ($generated@@154 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@161) ($generated@@0 ($generated@@93 $generated@@326 $generated@@328))) ($generated@@309 $generated@@328 $generated@@327))
 :pattern ( ($generated@@93 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@154 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@72)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@332) $generated@@72)) (= ($generated@@154 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@161) ($generated@@0 ($generated@@93 $generated@@331 $generated@@333))) ($generated@@309 $generated@@333 $generated@@332))
 :pattern ( ($generated@@93 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@154 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 (type $generated@@335)))
(= (type ($generated@@334 $generated@@335)) $generated@@336))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= ($generated@@334 $generated@@337) $generated@@337)
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@338) ($generated@@165 $generated@@161)) (= (type $generated@@339) $generated@@161)) (= (type $generated@@340) $generated@@72)) (and ($generated@@154 $generated@@338 ($generated@@198 $generated@@340)) ($generated@@309 $generated@@339 $generated@@340))) ($generated@@154 ($generated@@164 $generated@@338 $generated@@339) ($generated@@198 $generated@@340)))
 :pattern ( ($generated@@154 ($generated@@164 $generated@@338 $generated@@339) ($generated@@198 $generated@@340)))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@85) (= (type $generated@@342) $generated@@85)) (and ($generated@@155 $generated@@341) ($generated@@155 $generated@@342))) (= ($generated@@319 $generated@@341 $generated@@342) true))
 :pattern ( ($generated@@319 $generated@@341 $generated@@342) ($generated@@155 $generated@@341))
 :pattern ( ($generated@@319 $generated@@341 $generated@@342) ($generated@@155 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@344) $generated@@72) (= (type $generated@@345) $generated@@72)) (= (type $generated@@346) $generated@@161)) (= (type $generated@@347) $generated@@161)) (= (type $generated@@348) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@348)) (= ($generated@@82 ($generated@@308 $generated@@346 $generated@@347) ($generated@@214 $generated@@344 $generated@@345) $generated@@348)  (and ($generated@@343 $generated@@346 $generated@@344 $generated@@348) ($generated@@343 $generated@@347 $generated@@345 $generated@@348))))
 :pattern ( ($generated@@82 ($generated@@308 $generated@@346 $generated@@347) ($generated@@214 $generated@@344 $generated@@345) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@85) (= ($generated@@213 $generated@@349) (= ($generated@@230 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@213 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@85) (= ($generated@@155 $generated@@350) (= ($generated@@230 $generated@@350) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@85) (= ($generated@@351 $generated@@352) (= ($generated@@230 $generated@@352) $generated@@65)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@85) (= ($generated@@158 $generated@@353) (= ($generated@@230 $generated@@353) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@85) (= ($generated@@354 $generated@@355) (= ($generated@@230 $generated@@355) $generated@@68)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@85) ($generated@@213 $generated@@356)) (exists (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (and (and (= (type $generated@@357) $generated@@161) (= (type $generated@@358) $generated@@161)) (= $generated@@356 ($generated@@308 $generated@@357 $generated@@358)))
 :no-pattern (type $generated@@357)
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
)))
 :pattern ( ($generated@@213 $generated@@356))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@85) ($generated@@351 $generated@@359)) (exists (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (and (and (= (type $generated@@360) $generated@@85) (= (type $generated@@361) $generated@@85)) (= $generated@@359 ($generated@@83 $generated@@360 $generated@@361)))
 :no-pattern (type $generated@@360)
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
)))
 :pattern ( ($generated@@351 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ) (! (= ($generated@@362 ($generated@@160 $generated@@363)) 0)
 :pattern ( ($generated@@160 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@72) (= (type $generated@@365) $generated@@85)) (= (type $generated@@366) $generated@@85)) (= ($generated@@154 ($generated@@83 $generated@@365 $generated@@366) ($generated@@84 $generated@@364))  (and ($generated@@154 $generated@@365 ($generated@@90 $generated@@364)) ($generated@@154 $generated@@366 ($generated@@84 $generated@@364)))))
 :pattern ( ($generated@@154 ($generated@@83 $generated@@365 $generated@@366) ($generated@@84 $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@85) ($generated@@155 $generated@@367)) (= $generated@@367 $generated@@231))
 :pattern ( ($generated@@155 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@85)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@85) ($generated@@158 $generated@@370)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@161) (= $generated@@370 ($generated@@368 $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
)))
 :pattern ( ($generated@@158 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@85)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@85) ($generated@@354 $generated@@374)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@85) (= $generated@@374 ($generated@@372 $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
)))
 :pattern ( ($generated@@354 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (=> (= (type $generated@@376) ($generated@@165 $generated@@378)) (= ($generated@@362 ($generated@@164 $generated@@376 $generated@@377)) (+ 1 ($generated@@362 $generated@@376)))))
 :pattern ( ($generated@@164 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (= (type ($generated@@379 $generated@@380)) $generated@@161)
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@72) (= (type $generated@@383) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@343 ($generated@@379 $generated@@381) $generated@@382 $generated@@383) ($generated@@82 $generated@@381 $generated@@382 $generated@@383)))
 :pattern ( ($generated@@343 ($generated@@379 $generated@@381) $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@86 $generated@@386 $generated@@2))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@91 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@86 $generated@@388 $generated@@2)) (and (= (= ($generated@@384 $generated@@387) 0) (= $generated@@387 ($generated@@385 $generated@@388))) (=> (not (= ($generated@@384 $generated@@387) 0)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (< 0 ($generated ($generated@@93 $generated@@387 $generated@@389))))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ) (! (= (type ($generated@@390 $generated@@391)) $generated@@77)
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@392)) $generated@@64) (= ($generated@@390 ($generated@@84 $generated@@392)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@393)) $generated@@66) (= ($generated@@390 ($generated@@90 $generated@@393)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@393))
)))
(assert  (and (and (and (and (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (= ($generated@@1 ($generated@@396 $generated@@399 $generated@@400)) 19)) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@397 ($generated@@396 $generated@@401 $generated@@402)) $generated@@401)
 :pattern ( ($generated@@396 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= ($generated@@398 ($generated@@396 $generated@@403 $generated@@404)) $generated@@404)
 :pattern ( ($generated@@396 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@397 (type $generated@@405))))
(= (type ($generated@@394 $generated@@405)) ($generated@@86 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@405))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= (type ($generated@@395 $generated@@407 $generated@@408)) ($generated@@396 $generated@@407 $generated@@408))
 :pattern ( ($generated@@395 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@T) ) (! (let (($generated@@411 (type $generated@@409)))
 (not ($generated@@0 ($generated@@93 ($generated@@394 ($generated@@395 $generated@@411 $generated@@410)) $generated@@409))))
 :pattern ( (let (($generated@@411 (type $generated@@409)))
($generated@@93 ($generated@@394 ($generated@@395 $generated@@411 $generated@@410)) $generated@@409)))
)))
(assert  (and (and (and (and (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (= ($generated@@1 ($generated@@414 $generated@@417 $generated@@418)) 20)) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@415 ($generated@@414 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@414 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (! (= ($generated@@416 ($generated@@414 $generated@@421 $generated@@422)) $generated@@422)
 :pattern ( ($generated@@414 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@415 (type $generated@@423))))
(= (type ($generated@@412 $generated@@423)) ($generated@@86 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@423))
))) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= (type ($generated@@413 $generated@@425 $generated@@426)) ($generated@@414 $generated@@425 $generated@@426))
 :pattern ( ($generated@@413 $generated@@425 $generated@@426))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@T) ) (! (let (($generated@@429 (type $generated@@427)))
 (not ($generated@@0 ($generated@@93 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427))))
 :pattern ( (let (($generated@@429 (type $generated@@427)))
($generated@@93 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427)))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@166 (type $generated@@430))))
 (=> (and (= (type $generated@@430) ($generated@@165 $generated@@432)) (= (type $generated@@431) ($generated@@165 $generated@@432))) (= ($generated@@362 ($generated@@163 $generated@@430 $generated@@431)) (+ ($generated@@362 $generated@@430) ($generated@@362 $generated@@431)))))
 :pattern ( ($generated@@362 ($generated@@163 $generated@@430 $generated@@431)))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@91 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@86 $generated@@434 $generated@@2)) (= ($generated@@234 $generated@@433) (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@434) (and (<= 0 ($generated ($generated@@93 $generated@@433 $generated@@435))) (<= ($generated ($generated@@93 $generated@@433 $generated@@435)) ($generated@@384 $generated@@433))))
 :pattern ( ($generated@@93 $generated@@433 $generated@@435))
)))))
 :pattern ( ($generated@@234 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 Int) ) (! (let (($generated@@439 ($generated@@166 (type $generated@@437))))
(= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@439))
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 Int) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
 (=> (= (type $generated@@440) ($generated@@165 $generated@@443)) (and (=> (= $generated@@441 ($generated@@362 $generated@@440)) (= ($generated@@436 ($generated@@164 $generated@@440 $generated@@442) $generated@@441) $generated@@442)) (=> (not (= $generated@@441 ($generated@@362 $generated@@440))) (= ($generated@@436 ($generated@@164 $generated@@440 $generated@@442) $generated@@441) ($generated@@436 $generated@@440 $generated@@441))))))
 :pattern ( ($generated@@436 ($generated@@164 $generated@@440 $generated@@442) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@444) $generated@@85) (= (type $generated@@445) $generated@@85)) (and ($generated@@354 $generated@@444) ($generated@@354 $generated@@445))) (= ($generated@@209 $generated@@444 $generated@@445) ($generated@@319 ($generated@@159 $generated@@444) ($generated@@159 $generated@@445))))
 :pattern ( ($generated@@209 $generated@@444 $generated@@445) ($generated@@354 $generated@@444))
 :pattern ( ($generated@@209 $generated@@444 $generated@@445) ($generated@@354 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@398 (type $generated@@446))))
(let (($generated@@448 ($generated@@397 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@396 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@395 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) ($generated@@0 ($generated@@93 ($generated@@394 $generated@@446) $generated@@449)))
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@398 (type $generated@@451))))
(= (type ($generated@@450 $generated@@451)) ($generated@@86 $generated@@452 $generated@@4)))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@398 (type $generated@@453))))
(let (($generated@@455 ($generated@@397 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@396 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@395 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@454) ($generated@@0 ($generated@@93 ($generated@@450 $generated@@453) $generated@@456)))
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@450 $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@416 (type $generated@@457))))
(let (($generated@@459 ($generated@@415 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@414 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@413 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) ($generated@@0 ($generated@@93 ($generated@@412 $generated@@457) $generated@@460)))
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@412 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@416 (type $generated@@462))))
(= (type ($generated@@461 $generated@@462)) ($generated@@86 $generated@@463 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@416 (type $generated@@464))))
(let (($generated@@466 ($generated@@415 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@414 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@413 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@465) ($generated@@0 ($generated@@93 ($generated@@461 $generated@@464) $generated@@467)))
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@461 $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@469) $generated@@72)) (= ($generated@@154 $generated@@468 ($generated@@233 $generated@@469)) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@468 $generated@@470)))) ($generated@@309 $generated@@470 $generated@@469))
 :pattern ( ($generated@@93 $generated@@468 $generated@@470))
))))
 :pattern ( ($generated@@154 $generated@@468 ($generated@@233 $generated@@469)))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@471) $generated@@72) (= (type $generated@@472) $generated@@161)) (= (type $generated@@473) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@473)) (= ($generated@@82 ($generated@@368 $generated@@472) ($generated@@90 $generated@@471) $generated@@473) ($generated@@343 $generated@@472 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@82 ($generated@@368 $generated@@472) ($generated@@90 $generated@@471) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) $generated@@72) (= (type $generated@@475) $generated@@85)) (= (type $generated@@476) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@476)) (= ($generated@@82 ($generated@@372 $generated@@475) ($generated@@90 $generated@@474) $generated@@476) ($generated@@82 $generated@@475 ($generated@@84 $generated@@474) $generated@@476)))
 :pattern ( ($generated@@82 ($generated@@372 $generated@@475) ($generated@@90 $generated@@474) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@478) $generated@@72)) (= (type $generated@@479) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@477 ($generated@@324 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@161) ($generated@@0 ($generated@@93 $generated@@477 $generated@@480))) ($generated@@343 $generated@@480 $generated@@478 $generated@@479))
 :pattern ( ($generated@@93 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@82 $generated@@477 ($generated@@324 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@482) $generated@@72)) (= (type $generated@@483) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@481 ($generated@@329 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@161) ($generated@@0 ($generated@@93 $generated@@481 $generated@@484))) ($generated@@343 $generated@@484 $generated@@482 $generated@@483))
 :pattern ( ($generated@@93 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@82 $generated@@481 ($generated@@329 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= ($generated ($generated@@93 ($generated@@385 $generated@@486) $generated@@485)) 0))
 :pattern ( (let (($generated@@486 (type $generated@@485)))
($generated@@93 ($generated@@385 $generated@@486) $generated@@485)))
)))
(assert  (and (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@487 $generated@@490)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@487 $generated@@490))
)) (forall (($generated@@491 T@T) ($generated@@492 T@U) ) (! (= (type ($generated@@488 $generated@@491 $generated@@492)) $generated@@491)
 :pattern ( ($generated@@488 $generated@@491 $generated@@492))
))) (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@398 (type $generated@@493))))
(let (($generated@@495 ($generated@@397 (type $generated@@493))))
(= (type ($generated@@489 $generated@@493)) ($generated@@86 $generated@@495 $generated@@494))))
 :pattern ( ($generated@@489 $generated@@493))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) ($generated@@396 $generated@@161 $generated@@161)) (= (type $generated@@497) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@487 $generated@@496) $generated@@497))  (and ($generated@@0 ($generated@@93 ($generated@@394 $generated@@496) ($generated@@221 ($generated@@488 $generated@@85 $generated@@497)))) (= ($generated@@93 ($generated@@489 $generated@@496) ($generated@@221 ($generated@@488 $generated@@85 $generated@@497))) ($generated@@222 ($generated@@488 $generated@@85 $generated@@497))))))
 :pattern ( ($generated@@93 ($generated@@487 $generated@@496) $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@416 (type $generated@@501))))
(let (($generated@@503 ($generated@@415 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501)) ($generated@@86 $generated@@503 $generated@@502))))
 :pattern ( ($generated@@499 $generated@@501))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) ($generated@@414 $generated@@161 $generated@@161)) (= (type $generated@@505) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@498 $generated@@504) $generated@@505))  (and ($generated@@0 ($generated@@93 ($generated@@412 $generated@@504) ($generated@@221 ($generated@@488 $generated@@85 $generated@@505)))) (= ($generated@@93 ($generated@@499 $generated@@504) ($generated@@221 ($generated@@488 $generated@@85 $generated@@505))) ($generated@@222 ($generated@@488 $generated@@85 $generated@@505))))))
 :pattern ( ($generated@@93 ($generated@@498 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(let (($generated@@509 ($generated@@397 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@396 $generated@@509 $generated@@508)) (= ($generated@@0 ($generated@@93 ($generated@@450 $generated@@506) $generated@@507)) (exists (($generated@@510 T@U) ) (!  (and (= (type $generated@@510) $generated@@509) (and ($generated@@0 ($generated@@93 ($generated@@394 $generated@@506) $generated@@510)) (= $generated@@507 ($generated@@93 ($generated@@489 $generated@@506) $generated@@510))))
 :pattern ( ($generated@@93 ($generated@@394 $generated@@506) $generated@@510))
 :pattern ( ($generated@@93 ($generated@@489 $generated@@506) $generated@@510))
))))))
 :pattern ( ($generated@@93 ($generated@@450 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(let (($generated@@514 ($generated@@415 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@414 $generated@@514 $generated@@513)) (= ($generated@@0 ($generated@@93 ($generated@@461 $generated@@511) $generated@@512)) (exists (($generated@@515 T@U) ) (!  (and (= (type $generated@@515) $generated@@514) (and ($generated@@0 ($generated@@93 ($generated@@412 $generated@@511) $generated@@515)) (= $generated@@512 ($generated@@93 ($generated@@499 $generated@@511) $generated@@515))))
 :pattern ( ($generated@@93 ($generated@@412 $generated@@511) $generated@@515))
 :pattern ( ($generated@@93 ($generated@@499 $generated@@511) $generated@@515))
))))))
 :pattern ( ($generated@@93 ($generated@@461 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@517 $generated@@518)) $generated@@72)
 :pattern ( ($generated@@516 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) ($generated@@396 $generated@@161 $generated@@161)) (= (type $generated@@520) $generated@@72)) (= (type $generated@@521) $generated@@72)) (= (type $generated@@522) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@519 ($generated@@516 $generated@@520 $generated@@521) $generated@@522) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@394 $generated@@519) $generated@@523))) (and ($generated@@343 ($generated@@93 ($generated@@489 $generated@@519) $generated@@523) $generated@@521 $generated@@522) ($generated@@343 $generated@@523 $generated@@520 $generated@@522)))
 :pattern ( ($generated@@93 ($generated@@489 $generated@@519) $generated@@523))
 :pattern ( ($generated@@93 ($generated@@394 $generated@@519) $generated@@523))
))))
 :pattern ( ($generated@@82 $generated@@519 ($generated@@516 $generated@@520 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) ($generated@@414 $generated@@161 $generated@@161)) (= (type $generated@@528) $generated@@72)) (= (type $generated@@529) $generated@@72)) (= (type $generated@@530) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@527 ($generated@@524 $generated@@528 $generated@@529) $generated@@530) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@412 $generated@@527) $generated@@531))) (and ($generated@@343 ($generated@@93 ($generated@@499 $generated@@527) $generated@@531) $generated@@529 $generated@@530) ($generated@@343 $generated@@531 $generated@@528 $generated@@530)))
 :pattern ( ($generated@@93 ($generated@@499 $generated@@527) $generated@@531))
 :pattern ( ($generated@@93 ($generated@@412 $generated@@527) $generated@@531))
))))
 :pattern ( ($generated@@82 $generated@@527 ($generated@@524 $generated@@528 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@72) (= (type $generated@@533) $generated@@85)) ($generated@@154 $generated@@533 ($generated@@84 $generated@@532))) (or ($generated@@155 $generated@@533) ($generated@@351 $generated@@533)))
 :pattern ( ($generated@@351 $generated@@533) ($generated@@154 $generated@@533 ($generated@@84 $generated@@532)))
 :pattern ( ($generated@@155 $generated@@533) ($generated@@154 $generated@@533 ($generated@@84 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@72) (= (type $generated@@535) $generated@@85)) ($generated@@154 $generated@@535 ($generated@@90 $generated@@534))) (or ($generated@@158 $generated@@535) ($generated@@354 $generated@@535)))
 :pattern ( ($generated@@354 $generated@@535) ($generated@@154 $generated@@535 ($generated@@90 $generated@@534)))
 :pattern ( ($generated@@158 $generated@@535) ($generated@@154 $generated@@535 ($generated@@90 $generated@@534)))
)))
(assert (forall (($generated@@537 T@T) ) (! (= (type ($generated@@536 $generated@@537)) ($generated@@86 $generated@@537 $generated@@4))
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@416 (type $generated@@538))))
(let (($generated@@540 ($generated@@415 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@414 $generated@@540 $generated@@539)) (= (= $generated@@538 ($generated@@413 $generated@@540 $generated@@539)) (= ($generated@@412 $generated@@538) ($generated@@536 $generated@@540))))))
 :pattern ( ($generated@@412 $generated@@538))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@416 (type $generated@@541))))
(let (($generated@@543 ($generated@@415 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@414 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@413 $generated@@543 $generated@@542)) (= ($generated@@461 $generated@@541) ($generated@@536 $generated@@542))))))
 :pattern ( ($generated@@461 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@416 (type $generated@@544))))
(let (($generated@@546 ($generated@@415 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@414 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@413 $generated@@546 $generated@@545)) (= ($generated@@498 $generated@@544) ($generated@@536 $generated@@161))))))
 :pattern ( ($generated@@498 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@398 (type $generated@@547))))
(let (($generated@@549 ($generated@@397 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@396 $generated@@549 $generated@@548)) (or (= $generated@@547 ($generated@@395 $generated@@549 $generated@@548)) (exists (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (and (and (= (type $generated@@550) $generated@@161) (= (type $generated@@551) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@487 $generated@@547) ($generated@@379 ($generated@@308 $generated@@550 $generated@@551)))))
 :no-pattern (type $generated@@550)
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@487 $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@416 (type $generated@@552))))
(let (($generated@@554 ($generated@@415 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@414 $generated@@554 $generated@@553)) (or (= $generated@@552 ($generated@@413 $generated@@554 $generated@@553)) (exists (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (and (and (= (type $generated@@555) $generated@@161) (= (type $generated@@556) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@498 $generated@@552) ($generated@@379 ($generated@@308 $generated@@555 $generated@@556)))))
 :no-pattern (type $generated@@555)
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
))))))
 :pattern ( ($generated@@498 $generated@@552))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@161) ($generated@@309 $generated@@557 $generated@@46)) (and (= ($generated@@379 ($generated@@488 $generated@@2 $generated@@557)) $generated@@557) ($generated@@154 ($generated@@488 $generated@@2 $generated@@557) $generated@@46)))
 :pattern ( ($generated@@309 $generated@@557 $generated@@46))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@161) ($generated@@309 $generated@@558 $generated@@47)) (and (= ($generated@@379 ($generated@@488 $generated@@3 $generated@@558)) $generated@@558) ($generated@@154 ($generated@@488 $generated@@3 $generated@@558) $generated@@47)))
 :pattern ( ($generated@@309 $generated@@558 $generated@@47))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@161) ($generated@@309 $generated@@559 $generated@@44)) (and (= ($generated@@379 ($generated@@488 $generated@@4 $generated@@559)) $generated@@559) ($generated@@154 ($generated@@488 $generated@@4 $generated@@559) $generated@@44)))
 :pattern ( ($generated@@309 $generated@@559 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@560) 21))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@161) ($generated@@309 $generated@@561 $generated@@45)) (and (= ($generated@@379 ($generated@@488 $generated@@560 $generated@@561)) $generated@@561) ($generated@@154 ($generated@@488 $generated@@560 $generated@@561) $generated@@45)))
 :pattern ( ($generated@@309 $generated@@561 $generated@@45))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@85) (= (type $generated@@563) $generated@@85)) (and ($generated@@351 $generated@@562) ($generated@@351 $generated@@563))) (= ($generated@@319 $generated@@562 $generated@@563)  (and ($generated@@209 ($generated@@157 $generated@@562) ($generated@@157 $generated@@563)) ($generated@@319 ($generated@@156 $generated@@562) ($generated@@156 $generated@@563)))))
 :pattern ( ($generated@@319 $generated@@562 $generated@@563) ($generated@@351 $generated@@562))
 :pattern ( ($generated@@319 $generated@@562 $generated@@563) ($generated@@351 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@72) (= ($generated@@309 ($generated@@379 $generated@@564) $generated@@565) ($generated@@154 $generated@@564 $generated@@565)))
 :pattern ( ($generated@@309 ($generated@@379 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@91 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@86 $generated@@567 $generated@@2)) (<= 0 ($generated@@384 $generated@@566))))
 :pattern ( ($generated@@384 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@166 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@165 $generated@@569)) (<= 0 ($generated@@362 $generated@@568))))
 :pattern ( ($generated@@362 $generated@@568))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@72)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@72) (= (type $generated@@573) $generated@@72)) (= ($generated@@570 ($generated@@516 $generated@@572 $generated@@573)) $generated@@572))
 :pattern ( ($generated@@516 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@72)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@72) (= (type $generated@@577) $generated@@72)) (= ($generated@@574 ($generated@@516 $generated@@576 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@516 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@72) (= (type $generated@@579) $generated@@72)) (= ($generated@@80 ($generated@@516 $generated@@578 $generated@@579)) $generated@@58))
 :pattern ( ($generated@@516 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@72)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@72) (= (type $generated@@583) $generated@@72)) (= ($generated@@580 ($generated@@524 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@524 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@72)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@72) (= (type $generated@@587) $generated@@72)) (= ($generated@@584 ($generated@@524 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@524 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@72) (= (type $generated@@589) $generated@@72)) (= ($generated@@80 ($generated@@524 $generated@@588 $generated@@589)) $generated@@59))
 :pattern ( ($generated@@524 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@161)) (= ($generated@@230 ($generated@@308 $generated@@590 $generated@@591)) $generated@@61))
 :pattern ( ($generated@@308 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@72)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@72) (= (type $generated@@595) $generated@@72)) (= ($generated@@592 ($generated@@214 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@214 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@72)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@72) (= (type $generated@@599) $generated@@72)) (= ($generated@@596 ($generated@@214 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@214 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@161) (= (type $generated@@601) $generated@@161)) (= ($generated@@221 ($generated@@308 $generated@@600 $generated@@601)) $generated@@600))
 :pattern ( ($generated@@308 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@161) (= (type $generated@@603) $generated@@161)) (= ($generated@@222 ($generated@@308 $generated@@602 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@308 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@85) (= (type $generated@@605) $generated@@85)) (= ($generated@@230 ($generated@@83 $generated@@604 $generated@@605)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@85) (= (type $generated@@607) $generated@@85)) (= ($generated@@157 ($generated@@83 $generated@@606 $generated@@607)) $generated@@606))
 :pattern ( ($generated@@83 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@85) (= (type $generated@@609) $generated@@85)) (= ($generated@@156 ($generated@@83 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@83 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@165 $generated@@161)) (= (type $generated@@611) $generated@@72)) (= (type $generated@@612) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@610 ($generated@@198 $generated@@611) $generated@@612) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@362 $generated@@610))) ($generated@@343 ($generated@@436 $generated@@610 $generated@@613) $generated@@611 $generated@@612))
 :pattern ( ($generated@@436 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@82 $generated@@610 ($generated@@198 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@615 Int) ) (! (= ($generated@@614 ($generated@@194 $generated@@615)) $generated@@615)
 :pattern ( ($generated@@194 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@72)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@72) (= ($generated@@616 ($generated@@324 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@324 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@72) (= ($generated@@80 ($generated@@324 $generated@@619)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@72)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@72) (= ($generated@@620 ($generated@@329 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@329 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@72) (= ($generated@@80 ($generated@@329 $generated@@623)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@72)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@72) (= ($generated@@624 ($generated@@233 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@233 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@72) (= ($generated@@80 ($generated@@233 $generated@@627)) $generated@@56))
 :pattern ( ($generated@@233 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@72)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@72) (= ($generated@@628 ($generated@@198 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@198 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@72) (= ($generated@@80 ($generated@@198 $generated@@631)) $generated@@57))
 :pattern ( ($generated@@198 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@72)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@72) (= ($generated@@632 ($generated@@84 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@84 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@72)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@72) (= ($generated@@635 ($generated@@90 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@90 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@161) (= ($generated@@230 ($generated@@368 $generated@@638)) $generated@@67))
 :pattern ( ($generated@@368 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@161) (= ($generated@@162 ($generated@@368 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@368 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@85) (= ($generated@@230 ($generated@@372 $generated@@640)) $generated@@68))
 :pattern ( ($generated@@372 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@85) (= ($generated@@159 ($generated@@372 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@372 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@642)))
(= ($generated@@488 $generated@@643 ($generated@@379 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@379 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@396 $generated@@161 $generated@@161)) (= (type $generated@@645) $generated@@72)) (= (type $generated@@646) $generated@@72)) (= ($generated@@154 $generated@@644 ($generated@@516 $generated@@645 $generated@@646)) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@394 $generated@@644) $generated@@647))) (and ($generated@@309 ($generated@@93 ($generated@@489 $generated@@644) $generated@@647) $generated@@646) ($generated@@309 $generated@@647 $generated@@645)))
 :pattern ( ($generated@@93 ($generated@@489 $generated@@644) $generated@@647))
 :pattern ( ($generated@@93 ($generated@@394 $generated@@644) $generated@@647))
))))
 :pattern ( ($generated@@154 $generated@@644 ($generated@@516 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@414 $generated@@161 $generated@@161)) (= (type $generated@@649) $generated@@72)) (= (type $generated@@650) $generated@@72)) (= ($generated@@154 $generated@@648 ($generated@@524 $generated@@649 $generated@@650)) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@412 $generated@@648) $generated@@651))) (and ($generated@@309 ($generated@@93 ($generated@@499 $generated@@648) $generated@@651) $generated@@650) ($generated@@309 $generated@@651 $generated@@649)))
 :pattern ( ($generated@@93 ($generated@@499 $generated@@648) $generated@@651))
 :pattern ( ($generated@@93 ($generated@@412 $generated@@648) $generated@@651))
))))
 :pattern ( ($generated@@154 $generated@@648 ($generated@@524 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@72) (= (type $generated@@653) $generated@@161)) (= ($generated@@154 ($generated@@368 $generated@@653) ($generated@@90 $generated@@652)) ($generated@@309 $generated@@653 $generated@@652)))
 :pattern ( ($generated@@154 ($generated@@368 $generated@@653) ($generated@@90 $generated@@652)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@161) (= (type $generated@@657) $generated@@161)) (< ($generated@@654 $generated@@656) ($generated@@655 ($generated@@308 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@308 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@161) (= (type $generated@@659) $generated@@161)) (< ($generated@@654 $generated@@659) ($generated@@655 ($generated@@308 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@308 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@85) (= (type $generated@@661) $generated@@85)) (< ($generated@@655 $generated@@660) ($generated@@655 ($generated@@83 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@83 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@85) (= (type $generated@@663) $generated@@85)) (< ($generated@@655 $generated@@663) ($generated@@655 ($generated@@83 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@83 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@161) (= (type $generated@@665) $generated@@72)) (= (type $generated@@666) $generated@@72)) ($generated@@309 $generated@@664 ($generated@@516 $generated@@665 $generated@@666))) (and (= ($generated@@379 ($generated@@488 ($generated@@396 $generated@@161 $generated@@161) $generated@@664)) $generated@@664) ($generated@@154 ($generated@@488 ($generated@@396 $generated@@161 $generated@@161) $generated@@664) ($generated@@516 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@309 $generated@@664 ($generated@@516 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@161) (= (type $generated@@668) $generated@@72)) (= (type $generated@@669) $generated@@72)) ($generated@@309 $generated@@667 ($generated@@524 $generated@@668 $generated@@669))) (and (= ($generated@@379 ($generated@@488 ($generated@@414 $generated@@161 $generated@@161) $generated@@667)) $generated@@667) ($generated@@154 ($generated@@488 ($generated@@414 $generated@@161 $generated@@161) $generated@@667) ($generated@@524 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@309 $generated@@667 ($generated@@524 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@72) (= (type $generated@@671) $generated@@72)) (= (type $generated@@672) $generated@@161)) ($generated@@309 $generated@@672 ($generated@@214 $generated@@670 $generated@@671))) (and (= ($generated@@379 ($generated@@488 $generated@@85 $generated@@672)) $generated@@672) ($generated@@154 ($generated@@488 $generated@@85 $generated@@672) ($generated@@214 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@309 $generated@@672 ($generated@@214 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@161) (< ($generated@@654 $generated@@673) ($generated@@655 ($generated@@368 $generated@@673))))
 :pattern ( ($generated@@368 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@85) (< ($generated@@655 $generated@@674) ($generated@@655 ($generated@@372 $generated@@674))))
 :pattern ( ($generated@@372 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@85) (= (type $generated@@676) $generated@@72)) (= (type $generated@@677) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@677) (and ($generated@@158 $generated@@675) ($generated@@82 $generated@@675 ($generated@@90 $generated@@676) $generated@@677)))) ($generated@@343 ($generated@@162 $generated@@675) $generated@@676 $generated@@677))
 :pattern ( ($generated@@343 ($generated@@162 $generated@@675) $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (! (let (($generated@@679 (type $generated@@678)))
 (not ($generated@@0 ($generated@@93 ($generated@@536 $generated@@679) $generated@@678))))
 :pattern ( (let (($generated@@679 (type $generated@@678)))
($generated@@93 ($generated@@536 $generated@@679) $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@72) (= (type $generated@@681) $generated@@72)) (and (= ($generated@@80 ($generated@@214 $generated@@680 $generated@@681)) $generated@@62) (= ($generated@@390 ($generated@@214 $generated@@680 $generated@@681)) $generated@@69)))
 :pattern ( ($generated@@214 $generated@@680 $generated@@681))
)))
(assert  (and (forall (($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@166 (type $generated@@684))))
(= (type ($generated@@682 $generated@@684)) ($generated@@165 $generated@@685)))
 :pattern ( ($generated@@682 $generated@@684))
)) (forall (($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@166 (type $generated@@686))))
(= (type ($generated@@683 $generated@@686)) $generated@@687))
 :pattern ( ($generated@@683 $generated@@686))
))))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 (type $generated@@689)))
 (=> (= (type $generated@@688) ($generated@@165 $generated@@690)) (and (= ($generated@@682 ($generated@@164 $generated@@688 $generated@@689)) $generated@@688) (= ($generated@@683 ($generated@@164 $generated@@688 $generated@@689)) $generated@@689))))
 :pattern ( ($generated@@164 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@85) (= ($generated@@654 ($generated@@379 $generated@@691)) ($generated@@655 $generated@@691)))
 :pattern ( ($generated@@654 ($generated@@379 $generated@@691)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@72) (= (type $generated@@693) $generated@@152)) (= (type $generated@@694) $generated@@85)) (or ($generated@@153 $generated@@692 ($generated@@334 $generated@@694)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@694 ($generated@@84 $generated@@692))))) (and (=> (not ($generated@@0 ($generated@@334 ($generated@@11 ($generated@@155 ($generated@@334 $generated@@694)))))) (let (($generated@@695 ($generated@@334 ($generated@@156 ($generated@@334 $generated@@694)))))
(let (($generated@@696 ($generated@@334 ($generated@@157 ($generated@@334 $generated@@694)))))
 (and (=> ($generated@@158 $generated@@696) ($generated@@153 $generated@@692 $generated@@695)) (=> (not ($generated@@158 $generated@@696)) (let (($generated@@697 ($generated@@159 $generated@@696)))
 (and ($generated@@153 $generated@@692 $generated@@697) ($generated@@153 $generated@@692 $generated@@695)))))))) (= ($generated@@150 $generated@@692 ($generated@@151 $generated@@693) ($generated@@334 $generated@@694)) (ite ($generated@@155 ($generated@@334 $generated@@694)) ($generated@@160 $generated@@161) (let (($generated@@698 ($generated@@334 ($generated@@156 ($generated@@334 $generated@@694)))))
(let (($generated@@699 ($generated@@334 ($generated@@157 ($generated@@334 $generated@@694)))))
(ite ($generated@@158 $generated@@699) (let (($generated@@700 ($generated@@334 ($generated@@162 $generated@@699))))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@700) ($generated@@150 $generated@@692 ($generated@@151 $generated@@693) $generated@@698))) (let (($generated@@701 ($generated@@334 ($generated@@159 $generated@@699))))
($generated@@163 ($generated@@150 $generated@@692 ($generated@@151 $generated@@693) $generated@@701) ($generated@@150 $generated@@692 ($generated@@151 $generated@@693) $generated@@698))))))))))
 :weight 3
 :pattern ( ($generated@@150 $generated@@692 ($generated@@151 $generated@@693) ($generated@@334 $generated@@694)))
))))
(assert (forall (($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@161) ($generated@@309 $generated@@702 ($generated@@194 0))) (and (= ($generated@@379 ($generated@@488 $generated@@2 $generated@@702)) $generated@@702) ($generated@@154 ($generated@@488 ($generated@@86 $generated@@161 $generated@@4) $generated@@702) ($generated@@194 0))))
 :pattern ( ($generated@@309 $generated@@702 ($generated@@194 0)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@703) $generated@@161) (= (type $generated@@704) $generated@@72)) ($generated@@309 $generated@@703 ($generated@@324 $generated@@704))) (and (= ($generated@@379 ($generated@@488 ($generated@@86 $generated@@161 $generated@@4) $generated@@703)) $generated@@703) ($generated@@154 ($generated@@488 ($generated@@86 $generated@@161 $generated@@4) $generated@@703) ($generated@@324 $generated@@704))))
 :pattern ( ($generated@@309 $generated@@703 ($generated@@324 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) $generated@@161) (= (type $generated@@706) $generated@@72)) ($generated@@309 $generated@@705 ($generated@@329 $generated@@706))) (and (= ($generated@@379 ($generated@@488 ($generated@@86 $generated@@161 $generated@@4) $generated@@705)) $generated@@705) ($generated@@154 ($generated@@488 ($generated@@86 $generated@@161 $generated@@4) $generated@@705) ($generated@@329 $generated@@706))))
 :pattern ( ($generated@@309 $generated@@705 ($generated@@329 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) $generated@@161) (= (type $generated@@708) $generated@@72)) ($generated@@309 $generated@@707 ($generated@@233 $generated@@708))) (and (= ($generated@@379 ($generated@@488 ($generated@@86 $generated@@161 $generated@@2) $generated@@707)) $generated@@707) ($generated@@154 ($generated@@488 ($generated@@86 $generated@@161 $generated@@2) $generated@@707) ($generated@@233 $generated@@708))))
 :pattern ( ($generated@@309 $generated@@707 ($generated@@233 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@161) (= (type $generated@@710) $generated@@72)) ($generated@@309 $generated@@709 ($generated@@198 $generated@@710))) (and (= ($generated@@379 ($generated@@488 ($generated@@165 $generated@@161) $generated@@709)) $generated@@709) ($generated@@154 ($generated@@488 ($generated@@165 $generated@@161) $generated@@709) ($generated@@198 $generated@@710))))
 :pattern ( ($generated@@309 $generated@@709 ($generated@@198 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@711) $generated@@72) (= (type $generated@@712) $generated@@161)) ($generated@@309 $generated@@712 ($generated@@84 $generated@@711))) (and (= ($generated@@379 ($generated@@488 $generated@@85 $generated@@712)) $generated@@712) ($generated@@154 ($generated@@488 $generated@@85 $generated@@712) ($generated@@84 $generated@@711))))
 :pattern ( ($generated@@309 $generated@@712 ($generated@@84 $generated@@711)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@72) (= (type $generated@@714) $generated@@161)) ($generated@@309 $generated@@714 ($generated@@90 $generated@@713))) (and (= ($generated@@379 ($generated@@488 $generated@@85 $generated@@714)) $generated@@714) ($generated@@154 ($generated@@488 $generated@@85 $generated@@714) ($generated@@90 $generated@@713))))
 :pattern ( ($generated@@309 $generated@@714 ($generated@@90 $generated@@713)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@72) (= (type $generated@@716) $generated@@85)) (= ($generated@@154 ($generated@@372 $generated@@716) ($generated@@90 $generated@@715)) ($generated@@154 $generated@@716 ($generated@@84 $generated@@715))))
 :pattern ( ($generated@@154 ($generated@@372 $generated@@716) ($generated@@90 $generated@@715)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) $generated@@85) (= (type $generated@@718) $generated@@72)) (= (type $generated@@719) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@719) (and ($generated@@351 $generated@@717) ($generated@@82 $generated@@717 ($generated@@84 $generated@@718) $generated@@719)))) ($generated@@82 ($generated@@157 $generated@@717) ($generated@@90 $generated@@718) $generated@@719))
 :pattern ( ($generated@@82 ($generated@@157 $generated@@717) ($generated@@90 $generated@@718) $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@85) (= (type $generated@@721) $generated@@72)) (= (type $generated@@722) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@722) (and ($generated@@351 $generated@@720) ($generated@@82 $generated@@720 ($generated@@84 $generated@@721) $generated@@722)))) ($generated@@82 ($generated@@156 $generated@@720) ($generated@@84 $generated@@721) $generated@@722))
 :pattern ( ($generated@@82 ($generated@@156 $generated@@720) ($generated@@84 $generated@@721) $generated@@722))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (= (type $generated@@723) $generated@@85) (= (type $generated@@724) $generated@@72)) (= (type $generated@@725) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@725) (and ($generated@@354 $generated@@723) ($generated@@82 $generated@@723 ($generated@@90 $generated@@724) $generated@@725)))) ($generated@@82 ($generated@@159 $generated@@723) ($generated@@84 $generated@@724) $generated@@725))
 :pattern ( ($generated@@82 ($generated@@159 $generated@@723) ($generated@@84 $generated@@724) $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (= (type $generated@@726) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@727) $generated@@72)) (= (type $generated@@728) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@726 ($generated@@233 $generated@@727) $generated@@728) (forall (($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@729) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@726 $generated@@729)))) ($generated@@343 $generated@@729 $generated@@727 $generated@@728))
 :pattern ( ($generated@@93 $generated@@726 $generated@@729))
))))
 :pattern ( ($generated@@82 $generated@@726 ($generated@@233 $generated@@727) $generated@@728))
)))
(assert (= $generated@@231 ($generated@@334 $generated@@231)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) $generated@@85) (= (type $generated@@731) $generated@@72)) (= (type $generated@@732) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@732) (and ($generated@@213 $generated@@730) (exists (($generated@@733 T@U) ) (!  (and (= (type $generated@@733) $generated@@72) ($generated@@82 $generated@@730 ($generated@@214 $generated@@731 $generated@@733) $generated@@732))
 :pattern ( ($generated@@82 $generated@@730 ($generated@@214 $generated@@731 $generated@@733) $generated@@732))
))))) ($generated@@343 ($generated@@221 $generated@@730) $generated@@731 $generated@@732))
 :pattern ( ($generated@@343 ($generated@@221 $generated@@730) $generated@@731 $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (and (= (type $generated@@734) $generated@@85) (= (type $generated@@735) $generated@@72)) (= (type $generated@@736) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@736) (and ($generated@@213 $generated@@734) (exists (($generated@@737 T@U) ) (!  (and (= (type $generated@@737) $generated@@72) ($generated@@82 $generated@@734 ($generated@@214 $generated@@737 $generated@@735) $generated@@736))
 :pattern ( ($generated@@82 $generated@@734 ($generated@@214 $generated@@737 $generated@@735) $generated@@736))
))))) ($generated@@343 ($generated@@222 $generated@@734) $generated@@735 $generated@@736))
 :pattern ( ($generated@@343 ($generated@@222 $generated@@734) $generated@@735 $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 Int) ) (! (let (($generated@@741 ($generated@@166 (type $generated@@738))))
 (=> (and (= (type $generated@@738) ($generated@@165 $generated@@741)) (= (type $generated@@739) ($generated@@165 $generated@@741))) (and (=> (< $generated@@740 ($generated@@362 $generated@@738)) (= ($generated@@436 ($generated@@163 $generated@@738 $generated@@739) $generated@@740) ($generated@@436 $generated@@738 $generated@@740))) (=> (<= ($generated@@362 $generated@@738) $generated@@740) (= ($generated@@436 ($generated@@163 $generated@@738 $generated@@739) $generated@@740) ($generated@@436 $generated@@739 (- $generated@@740 ($generated@@362 $generated@@738))))))))
 :pattern ( ($generated@@436 ($generated@@163 $generated@@738 $generated@@739) $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@161) (= (type $generated@@743) $generated@@161)) (= ($generated@@308 ($generated@@334 $generated@@742) ($generated@@334 $generated@@743)) ($generated@@334 ($generated@@308 $generated@@742 $generated@@743))))
 :pattern ( ($generated@@308 ($generated@@334 $generated@@742) ($generated@@334 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@85) (= (type $generated@@745) $generated@@85)) (= ($generated@@83 ($generated@@334 $generated@@744) ($generated@@334 $generated@@745)) ($generated@@334 ($generated@@83 $generated@@744 $generated@@745))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@744) ($generated@@334 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@161) (= ($generated@@368 ($generated@@334 $generated@@746)) ($generated@@334 ($generated@@368 $generated@@746))))
 :pattern ( ($generated@@368 ($generated@@334 $generated@@746)))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@85) (= ($generated@@372 ($generated@@334 $generated@@747)) ($generated@@334 ($generated@@372 $generated@@747))))
 :pattern ( ($generated@@372 ($generated@@334 $generated@@747)))
)))
(assert (forall (($generated@@748 T@U) ) (! (= ($generated@@379 ($generated@@334 $generated@@748)) ($generated@@334 ($generated@@379 $generated@@748)))
 :pattern ( ($generated@@379 ($generated@@334 $generated@@748)))
)))
(assert (forall (($generated@@749 T@U) ) (! (let (($generated@@750 ($generated@@166 (type $generated@@749))))
 (=> (and (= (type $generated@@749) ($generated@@165 $generated@@750)) (= ($generated@@362 $generated@@749) 0)) (= $generated@@749 ($generated@@160 $generated@@750))))
 :pattern ( ($generated@@362 $generated@@749))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (! (let (($generated@@754 (type $generated@@752)))
 (=> (and (and (= (type $generated@@751) ($generated@@86 $generated@@754 $generated@@2)) (= (type $generated@@753) $generated@@2)) (<= 0 ($generated $generated@@753))) (= ($generated@@384 ($generated@@94 $generated@@751 $generated@@752 $generated@@753)) (+ (- ($generated@@384 $generated@@751) ($generated ($generated@@93 $generated@@751 $generated@@752))) ($generated $generated@@753)))))
 :pattern ( ($generated@@384 ($generated@@94 $generated@@751 $generated@@752 $generated@@753)))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@755) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@756) $generated@@2)) ($generated@@82 $generated@@756 $generated@@46 $generated@@755))
 :pattern ( ($generated@@82 $generated@@756 $generated@@46 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@758) $generated@@3)) ($generated@@82 $generated@@758 $generated@@47 $generated@@757))
 :pattern ( ($generated@@82 $generated@@758 $generated@@47 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@760) $generated@@4)) ($generated@@82 $generated@@760 $generated@@44 $generated@@759))
 :pattern ( ($generated@@82 $generated@@760 $generated@@44 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@762) $generated@@560)) ($generated@@82 $generated@@762 $generated@@45 $generated@@761))
 :pattern ( ($generated@@82 $generated@@762 $generated@@45 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@764) $generated@@161)) ($generated@@82 $generated@@764 $generated@@48 $generated@@763))
 :pattern ( ($generated@@82 $generated@@764 $generated@@48 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) ($generated@@165 $generated@@161)) (= (type $generated@@766) $generated@@72)) (= ($generated@@154 $generated@@765 ($generated@@198 $generated@@766)) (forall (($generated@@767 Int) ) (!  (=> (and (<= 0 $generated@@767) (< $generated@@767 ($generated@@362 $generated@@765))) ($generated@@309 ($generated@@436 $generated@@765 $generated@@767) $generated@@766))
 :pattern ( ($generated@@436 $generated@@765 $generated@@767))
))))
 :pattern ( ($generated@@154 $generated@@765 ($generated@@198 $generated@@766)))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 Int) ) (!  (=> (= (type $generated@@769) ($generated@@165 $generated@@161)) (=> (and (<= 0 $generated@@770) (< $generated@@770 ($generated@@362 $generated@@769))) (< ($generated@@655 ($generated@@488 $generated@@85 ($generated@@436 $generated@@769 $generated@@770))) ($generated@@768 $generated@@769))))
 :pattern ( ($generated@@655 ($generated@@488 $generated@@85 ($generated@@436 $generated@@769 $generated@@770))))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (= (type $generated@@771) ($generated@@396 $generated@@161 $generated@@161)) (= (type $generated@@772) $generated@@72)) (= (type $generated@@773) $generated@@72)) ($generated@@154 $generated@@771 ($generated@@516 $generated@@772 $generated@@773))) (and (and ($generated@@154 ($generated@@394 $generated@@771) ($generated@@324 $generated@@772)) ($generated@@154 ($generated@@450 $generated@@771) ($generated@@324 $generated@@773))) ($generated@@154 ($generated@@487 $generated@@771) ($generated@@324 ($generated@@214 $generated@@772 $generated@@773)))))
 :pattern ( ($generated@@154 $generated@@771 ($generated@@516 $generated@@772 $generated@@773)))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (and (and (= (type $generated@@774) ($generated@@414 $generated@@161 $generated@@161)) (= (type $generated@@775) $generated@@72)) (= (type $generated@@776) $generated@@72)) ($generated@@154 $generated@@774 ($generated@@524 $generated@@775 $generated@@776))) (and (and ($generated@@154 ($generated@@412 $generated@@774) ($generated@@329 $generated@@775)) ($generated@@154 ($generated@@461 $generated@@774) ($generated@@329 $generated@@776))) ($generated@@154 ($generated@@498 $generated@@774) ($generated@@329 ($generated@@214 $generated@@775 $generated@@776)))))
 :pattern ( ($generated@@154 $generated@@774 ($generated@@524 $generated@@775 $generated@@776)))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@2) ($generated@@154 $generated@@777 $generated@@46))
 :pattern ( ($generated@@154 $generated@@777 $generated@@46))
)))
(assert (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@3) ($generated@@154 $generated@@778 $generated@@47))
 :pattern ( ($generated@@154 $generated@@778 $generated@@47))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@4) ($generated@@154 $generated@@779 $generated@@44))
 :pattern ( ($generated@@154 $generated@@779 $generated@@44))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@560) ($generated@@154 $generated@@780 $generated@@45))
 :pattern ( ($generated@@154 $generated@@780 $generated@@45))
)))
(assert (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@161) ($generated@@154 $generated@@781 $generated@@48))
 :pattern ( ($generated@@154 $generated@@781 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () T@U)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 () T@U)
(declare-fun $generated@@798 () T@U)
(declare-fun $generated@@799 () T@U)
(declare-fun $generated@@800 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@782) $generated@@85) (= (type $generated@@790) $generated@@161)) (= (type $generated@@784) $generated@@72)) (= (type $generated@@791) $generated@@161)) (= (type $generated@@786) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@792) $generated@@161)) (= (type $generated@@789) $generated@@85)) (= (type $generated@@788) $generated@@85)) (= (type $generated@@783) $generated@@85)) (= (type $generated@@785) $generated@@85)) (= (type $generated@@787) $generated@@85)) (= (type $generated@@793) $generated@@85)) (= (type $generated@@794) $generated@@85)) (= (type $generated@@795) $generated@@85)) (= (type $generated@@796) $generated@@85)) (= (type $generated@@797) ($generated@@240 $generated@@87 $generated@@4))) (= (type $generated@@798) $generated@@87)) (= (type $generated@@799) ($generated@@240 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@801 true))
(let (($generated@@802  (=> (and (and (and (= $generated@@782 ($generated@@372 $generated@@783)) ($generated@@154 $generated@@783 ($generated@@84 $generated@@784))) (and ($generated@@154 $generated@@785 ($generated@@84 $generated@@784)) ($generated@@82 $generated@@785 ($generated@@84 $generated@@784) $generated@@786))) (and (and (= $generated@@787 $generated@@783) ($generated@@154 $generated@@787 ($generated@@84 $generated@@784))) (and (= $generated@@785 $generated@@787) ($generated@@82 $generated@@785 ($generated@@84 $generated@@784) $generated@@786)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< ($generated@@655 $generated@@785) ($generated@@655 $generated@@788))) (=> (< ($generated@@655 $generated@@785) ($generated@@655 $generated@@788)) (=> ($generated@@153 $generated@@784 $generated@@785) (=> (and ($generated@@82 $generated@@789 ($generated@@84 $generated@@784) $generated@@786) (= (ControlFlow 0 7) (- 0 6))) (< ($generated@@655 $generated@@789) ($generated@@655 $generated@@788)))))))))
(let (($generated@@803  (=> (not (= $generated@@782 ($generated@@368 $generated@@790))) (and (=> (= (ControlFlow 0 10) 7) $generated@@802) (=> (= (ControlFlow 0 10) 9) $generated@@801)))))
(let (($generated@@804  (=> (and (= $generated@@782 ($generated@@368 $generated@@790)) ($generated@@309 $generated@@790 $generated@@784)) (=> (and (and (and ($generated@@309 $generated@@791 $generated@@784) ($generated@@343 $generated@@791 $generated@@784 $generated@@786)) (= $generated@@792 $generated@@790)) (and (and ($generated@@309 $generated@@792 $generated@@784) (= $generated@@791 $generated@@792)) (and ($generated@@82 $generated@@789 ($generated@@84 $generated@@784) $generated@@786) (= (ControlFlow 0 5) (- 0 4))))) (< ($generated@@655 $generated@@789) ($generated@@655 $generated@@788))))))
(let (($generated@@805  (=> (= $generated@@788 ($generated@@83 $generated@@793 $generated@@794)) (=> (and ($generated@@154 $generated@@793 ($generated@@90 $generated@@784)) ($generated@@154 $generated@@794 ($generated@@84 $generated@@784))) (=> (and (and (and (and ($generated@@154 $generated@@789 ($generated@@84 $generated@@784)) ($generated@@82 $generated@@789 ($generated@@84 $generated@@784) $generated@@786)) (= $generated@@795 $generated@@794)) (and ($generated@@154 $generated@@795 ($generated@@84 $generated@@784)) (= $generated@@789 $generated@@795))) (and (and (and ($generated@@154 $generated@@782 ($generated@@90 $generated@@784)) ($generated@@82 $generated@@782 ($generated@@90 $generated@@784) $generated@@786)) (= $generated@@796 $generated@@793)) (and ($generated@@154 $generated@@796 ($generated@@90 $generated@@784)) (= $generated@@782 $generated@@796)))) (and (=> (= (ControlFlow 0 11) 5) $generated@@804) (=> (= (ControlFlow 0 11) 10) $generated@@803)))))))
(let (($generated@@806 true))
(let (($generated@@807  (=> (not (= $generated@@788 $generated@@231)) (and (=> (= (ControlFlow 0 12) 11) $generated@@805) (=> (= (ControlFlow 0 12) 3) $generated@@806)))))
(let (($generated@@808 true))
(let (($generated@@809  (=> (= $generated@@797 ($generated@@294 $generated@@798 $generated@@786 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 2) $generated@@808) (=> (= (ControlFlow 0 13) 12) $generated@@807)))))
(let (($generated@@810 true))
(let (($generated@@811  (=> (= $generated@@799 ($generated@@239 $generated@@798 $generated@@786 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 1) $generated@@810) (=> (= (ControlFlow 0 14) 13) $generated@@809)))))
(let (($generated@@812  (=> (and (and (and ($generated@@89 $generated@@786) ($generated@@800 $generated@@786)) ($generated@@154 $generated@@788 ($generated@@84 $generated@@784))) (and (= 1 $generated@@149) (= (ControlFlow 0 15) 14))) $generated@@811)))
$generated@@812)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@T) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (Int) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) T@U)
(declare-fun $generated@@208 (T@U T@U) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) T@U)
(declare-fun $generated@@334 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U T@U) Bool)
(declare-fun $generated@@385 (T@U) Bool)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@390 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) Int)
(declare-fun $generated@@392 (T@U Int) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@440 (T@U) Int)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@451 (T@T T@T) T@U)
(declare-fun $generated@@452 (T@T T@T) T@T)
(declare-fun $generated@@453 (T@T) T@T)
(declare-fun $generated@@454 (T@T) T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@469 (T@T T@T) T@U)
(declare-fun $generated@@470 (T@T T@T) T@T)
(declare-fun $generated@@471 (T@T) T@T)
(declare-fun $generated@@472 (T@T) T@T)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@T T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U T@U) T@U)
(declare-fun $generated@@581 (T@U T@U) T@U)
(declare-fun $generated@@596 (T@T) T@U)
(declare-fun $generated@@620 () T@T)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(declare-fun $generated@@676 (T@U) T@U)
(declare-fun $generated@@680 (T@U) T@U)
(declare-fun $generated@@684 (T@U) T@U)
(declare-fun $generated@@688 (T@U) T@U)
(declare-fun $generated@@692 (T@U) T@U)
(declare-fun $generated@@695 (T@U) T@U)
(declare-fun $generated@@714 (T@U) Int)
(declare-fun $generated@@715 (T@U) Int)
(declare-fun $generated@@746 (T@U) T@U)
(declare-fun $generated@@747 (T@U) T@U)
(declare-fun $generated@@839 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@167 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@167)) 16))) (forall (($generated@@168 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@165 $generated@@168))
))) (= ($generated@@1 $generated@@161) 17)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@150 $generated@@169 $generated@@170 $generated@@171)) ($generated@@165 $generated@@161))
 :pattern ( ($generated@@150 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@151 $generated@@172)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@156 $generated@@173)) $generated@@85)
 :pattern ( ($generated@@156 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@157 $generated@@174)) $generated@@85)
 :pattern ( ($generated@@157 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@159 $generated@@175)) $generated@@85)
 :pattern ( ($generated@@159 $generated@@175))
))) (forall (($generated@@176 T@T) ) (! (= (type ($generated@@160 $generated@@176)) ($generated@@165 $generated@@176))
 :pattern ( ($generated@@160 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@162 $generated@@177)) $generated@@161)
 :pattern ( ($generated@@162 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@166 (type $generated@@178))))
(= (type ($generated@@163 $generated@@178 $generated@@179)) ($generated@@165 $generated@@180)))
 :pattern ( ($generated@@163 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(= (type ($generated@@164 $generated@@181 $generated@@182)) ($generated@@165 $generated@@183)))
 :pattern ( ($generated@@164 $generated@@181 $generated@@182))
))))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) $generated@@152)) (= (type $generated@@186) $generated@@85)) (or ($generated@@153 $generated@@184 $generated@@186) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@186 ($generated@@84 $generated@@184))))) (and (=> (not ($generated@@155 $generated@@186)) (let (($generated@@187 ($generated@@156 $generated@@186)))
(let (($generated@@188 ($generated@@157 $generated@@186)))
 (and (=> ($generated@@158 $generated@@188) ($generated@@153 $generated@@184 $generated@@187)) (=> (not ($generated@@158 $generated@@188)) (let (($generated@@189 ($generated@@159 $generated@@188)))
 (and ($generated@@153 $generated@@184 $generated@@189) ($generated@@153 $generated@@184 $generated@@187)))))))) (= ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186) (ite ($generated@@155 $generated@@186) ($generated@@160 $generated@@161) (let (($generated@@190 ($generated@@156 $generated@@186)))
(let (($generated@@191 ($generated@@157 $generated@@186)))
(ite ($generated@@158 $generated@@191) (let (($generated@@192 ($generated@@162 $generated@@191)))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@192) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))) (let (($generated@@193 ($generated@@159 $generated@@191)))
($generated@@163 ($generated@@150 $generated@@184 $generated@@185 $generated@@193) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))))))))))
 :pattern ( ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@72) (= (type $generated@@196) $generated@@152)) (= (type $generated@@197) $generated@@85)) (= ($generated@@194 $generated@@195 ($generated@@151 $generated@@196) $generated@@197) ($generated@@194 $generated@@195 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@194 $generated@@195 ($generated@@151 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@2) (= (type $generated@@201) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@200 ($generated@@198 0) $generated@@201))
 :pattern ( ($generated@@82 $generated@@200 ($generated@@198 0) $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (and (= (type $generated@@204) $generated@@72) (= (type $generated@@205) $generated@@152)) (= (type $generated@@206) $generated@@85)) (or ($generated@@153 $generated@@204 $generated@@206) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@206 ($generated@@84 $generated@@204))))) ($generated@@154 ($generated@@150 $generated@@204 $generated@@205 $generated@@206) ($generated@@202 $generated@@204)))
 :pattern ( ($generated@@150 $generated@@204 $generated@@205 $generated@@206))
))))
(assert  (and (and (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= (type ($generated@@207 $generated@@214 $generated@@215)) $generated@@85)
 :pattern ( ($generated@@207 $generated@@214 $generated@@215))
)) (forall (($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@210 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@210 $generated@@216))
))) (= (type $generated@@211) $generated@@85)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@212 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) $generated@@85)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))) (= (type $generated@@213) $generated@@152)))
(assert  (=> (<= 3 $generated@@149) (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (= (type $generated@@222) $generated@@72) (= (type $generated@@223) $generated@@85)) (or ($generated@@208 $generated@@222 $generated@@223) (and (not (= 3 $generated@@149)) ($generated@@154 $generated@@223 ($generated@@84 $generated@@222))))) (and ($generated@@209 $generated@@222 $generated@@223 ($generated@@210 $generated@@211)) (= ($generated@@207 $generated@@222 $generated@@223) ($generated@@212 $generated@@222 ($generated@@151 $generated@@213) $generated@@223 ($generated@@210 $generated@@211)))))
 :pattern ( ($generated@@207 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@152)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@72) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@85)) (= ($generated@@150 $generated@@226 $generated@@227 $generated@@228) ($generated@@150 $generated@@226 $generated@@213 $generated@@228)))
 :pattern ( ($generated@@150 $generated@@226 ($generated@@224 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (= (type $generated@@230) $generated@@85) (= (type $generated@@231) $generated@@85)) (and ($generated@@158 $generated@@230) ($generated@@158 $generated@@231))) (= ($generated@@229 $generated@@230 $generated@@231) (= ($generated@@162 $generated@@230) ($generated@@162 $generated@@231))))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231) ($generated@@158 $generated@@230))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231) ($generated@@158 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@2) ($generated@@154 $generated@@232 ($generated@@198 0)))
 :pattern ( ($generated@@154 $generated@@232 ($generated@@198 0)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@72) (= (type $generated@@235) $generated@@152)) (= (type $generated@@236) $generated@@85)) (or ($generated@@233 $generated@@234 $generated@@236) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@236 ($generated@@84 $generated@@234))))) (and (=> (not ($generated@@155 $generated@@236)) (let (($generated@@237 ($generated@@156 $generated@@236)))
(let (($generated@@238 ($generated@@157 $generated@@236)))
 (=> ($generated@@158 $generated@@238) ($generated@@233 $generated@@234 $generated@@237))))) (= ($generated@@194 $generated@@234 ($generated@@151 $generated@@235) $generated@@236) (ite ($generated@@155 $generated@@236) true (let (($generated@@239 ($generated@@156 $generated@@236)))
(let (($generated@@240 ($generated@@157 $generated@@236)))
(ite ($generated@@158 $generated@@240) ($generated@@194 $generated@@234 $generated@@235 $generated@@239) ($generated@@0 ($generated@@210 ($generated@@11 false))))))))))
 :pattern ( ($generated@@194 $generated@@234 ($generated@@151 $generated@@235) $generated@@236))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244)) $generated@@72)
 :pattern ( ($generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@72) (= (type $generated@@246) $generated@@72)) (= (type $generated@@247) $generated@@85)) ($generated@@154 $generated@@247 ($generated@@242 $generated@@245 $generated@@246))) ($generated@@241 $generated@@247))
 :pattern ( ($generated@@241 $generated@@247) ($generated@@154 $generated@@247 ($generated@@242 $generated@@245 $generated@@246)))
)))
(assert  (and (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@161)
 :pattern ( ($generated@@249 $generated@@251))
)) (forall (($generated@@252 T@U) ) (! (= (type ($generated@@250 $generated@@252)) $generated@@161)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@85) (= (type $generated@@254) $generated@@85)) true) (= ($generated@@248 $generated@@253 $generated@@254)  (and (= ($generated@@249 $generated@@253) ($generated@@249 $generated@@254)) (= ($generated@@250 $generated@@253) ($generated@@250 $generated@@254)))))
 :pattern ( ($generated@@248 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@72) (= (type $generated@@256) $generated@@152)) (= (type $generated@@257) $generated@@85)) (= ($generated@@150 $generated@@255 ($generated@@151 $generated@@256) $generated@@257) ($generated@@150 $generated@@255 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@150 $generated@@255 ($generated@@151 $generated@@256) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@76)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (= ($generated@@258 $generated@@211) $generated@@63))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@72)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@264) $generated@@72)) ($generated@@154 $generated@@263 ($generated@@260 $generated@@264))) ($generated@@261 $generated@@263))
 :pattern ( ($generated@@154 $generated@@263 ($generated@@260 $generated@@264)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@271 $generated@@272)) 18)) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@273 $generated@@274)) $generated@@273)
 :pattern ( ($generated@@267 $generated@@273 $generated@@274))
))) (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@275 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@267 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@269 (type $generated@@277))))
(= (type ($generated@@265 $generated@@277 $generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@265 $generated@@277 $generated@@278 $generated@@279))
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
(let (($generated@@286 (type $generated@@282)))
(= (type ($generated@@270 $generated@@281 $generated@@282 $generated@@283 $generated@@284)) ($generated@@267 $generated@@286 $generated@@285))))
 :pattern ( ($generated@@270 $generated@@281 $generated@@282 $generated@@283 $generated@@284))
))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@269 (type $generated@@287))))
 (=> (= (type $generated@@290) $generated@@291) (= ($generated@@265 ($generated@@270 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@288 $generated@@289) $generated@@290)))
 :weight 0
))) (and (and (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@265 ($generated@@270 $generated@@293 $generated@@294 $generated@@295 $generated@@292) $generated@@296 $generated@@297) ($generated@@265 $generated@@293 $generated@@296 $generated@@297)))
 :weight 0
)) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (or (= $generated@@301 $generated@@303) (= ($generated@@265 ($generated@@270 $generated@@299 $generated@@300 $generated@@301 $generated@@298) $generated@@302 $generated@@303) ($generated@@265 $generated@@299 $generated@@302 $generated@@303)))
 :weight 0
))) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (or true (= ($generated@@265 ($generated@@270 $generated@@305 $generated@@306 $generated@@307 $generated@@304) $generated@@308 $generated@@309) ($generated@@265 $generated@@305 $generated@@308 $generated@@309)))
 :weight 0
)))) (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 Bool) ) (! (= (type ($generated@@266 $generated@@310 $generated@@311 $generated@@312 $generated@@313)) ($generated@@267 $generated@@87 $generated@@4))
 :pattern ( ($generated@@266 $generated@@310 $generated@@311 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 Bool) ($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@75 (type $generated@@319))))
 (=> (and (and (and (and (= (type $generated@@314) $generated@@87) (= (type $generated@@315) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@316) ($generated@@74 $generated@@4))) (= (type $generated@@318) $generated@@87)) (= (type $generated@@319) ($generated@@74 $generated@@320))) (= ($generated@@0 ($generated@@265 ($generated@@266 $generated@@314 $generated@@315 $generated@@316 $generated@@317) $generated@@318 $generated@@319))  (=> (and (not (= $generated@@318 $generated@@314)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@315 $generated@@318) $generated@@316))) $generated@@317))))
 :pattern ( ($generated@@265 ($generated@@266 $generated@@314 $generated@@315 $generated@@316 $generated@@317) $generated@@318 $generated@@319))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@321) $generated@@72) (= (type $generated@@322) $generated@@152)) (= (type $generated@@323) $generated@@85)) (= (type $generated@@324) $generated@@85)) (or ($generated@@209 $generated@@321 $generated@@323 $generated@@324) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@323 ($generated@@84 $generated@@321)) ($generated@@154 $generated@@324 ($generated@@84 $generated@@321))) ($generated@@194 $generated@@321 ($generated@@151 $generated@@213) $generated@@324))))) (and (=> (not ($generated@@155 $generated@@323)) (let (($generated@@325 ($generated@@156 $generated@@323)))
(let (($generated@@326 ($generated@@157 $generated@@323)))
 (and (=> ($generated@@158 $generated@@326) ($generated@@209 $generated@@321 $generated@@325 $generated@@324)) (=> (not ($generated@@158 $generated@@326)) (let (($generated@@327 ($generated@@159 $generated@@326)))
 (and ($generated@@209 $generated@@321 $generated@@325 $generated@@324) ($generated@@209 $generated@@321 $generated@@327 ($generated@@212 $generated@@321 $generated@@322 $generated@@325 $generated@@324))))))))) (= ($generated@@212 $generated@@321 ($generated@@151 $generated@@322) $generated@@323 $generated@@324) (ite ($generated@@155 $generated@@323) $generated@@324 (let (($generated@@328 ($generated@@156 $generated@@323)))
(let (($generated@@329 ($generated@@157 $generated@@323)))
(ite ($generated@@158 $generated@@329) ($generated@@83 $generated@@329 ($generated@@212 $generated@@321 $generated@@322 $generated@@328 $generated@@324)) (let (($generated@@330 ($generated@@159 $generated@@329)))
($generated@@212 $generated@@321 $generated@@322 $generated@@330 ($generated@@212 $generated@@321 $generated@@322 $generated@@328 $generated@@324))))))))))
 :pattern ( ($generated@@212 $generated@@321 ($generated@@151 $generated@@322) $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@331) $generated@@72) (= (type $generated@@332) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@332)) ($generated@@82 $generated@@211 ($generated@@84 $generated@@331) $generated@@332))
 :pattern ( ($generated@@82 $generated@@211 ($generated@@84 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (= (type ($generated@@333 $generated@@335 $generated@@336)) $generated@@85)
 :pattern ( ($generated@@333 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@337) $generated@@72) (= (type $generated@@338) $generated@@72)) (= (type $generated@@339) $generated@@161)) (= (type $generated@@340) $generated@@161)) (= ($generated@@154 ($generated@@333 $generated@@339 $generated@@340) ($generated@@242 $generated@@337 $generated@@338))  (and ($generated@@334 $generated@@339 $generated@@337) ($generated@@334 $generated@@340 $generated@@338))))
 :pattern ( ($generated@@154 ($generated@@333 $generated@@339 $generated@@340) ($generated@@242 $generated@@337 $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@72) ($generated@@154 $generated@@211 ($generated@@84 $generated@@341)))
 :pattern ( ($generated@@154 $generated@@211 ($generated@@84 $generated@@341)))
)))
(assert  (=> (<= 3 $generated@@149) (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@342) $generated@@72) (= (type $generated@@343) $generated@@85)) (or ($generated@@208 $generated@@342 $generated@@343) (and (not (= 3 $generated@@149)) ($generated@@154 $generated@@343 ($generated@@84 $generated@@342))))) (and ($generated@@194 $generated@@342 ($generated@@151 $generated@@213) ($generated@@207 $generated@@342 $generated@@343)) ($generated@@154 ($generated@@207 $generated@@342 $generated@@343) ($generated@@84 $generated@@342))))
 :pattern ( ($generated@@207 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@85) (= (type $generated@@345) $generated@@85)) (= ($generated@@248 $generated@@344 $generated@@345) (= $generated@@344 $generated@@345)))
 :pattern ( ($generated@@248 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@85) (= (type $generated@@348) $generated@@85)) (= ($generated@@346 $generated@@347 $generated@@348) (= $generated@@347 $generated@@348)))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@85) (= (type $generated@@350) $generated@@85)) (= ($generated@@229 $generated@@349 $generated@@350) (= $generated@@349 $generated@@350)))
 :pattern ( ($generated@@229 $generated@@349 $generated@@350))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@351) $generated@@72) (= (type $generated@@352) $generated@@152)) (= (type $generated@@353) $generated@@85)) (= (type $generated@@354) $generated@@85)) (or ($generated@@209 $generated@@351 ($generated@@210 $generated@@353) ($generated@@210 $generated@@354)) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@353 ($generated@@84 $generated@@351)) ($generated@@154 $generated@@354 ($generated@@84 $generated@@351))) ($generated@@0 ($generated@@210 ($generated@@11 ($generated@@194 $generated@@351 ($generated@@151 $generated@@213) ($generated@@210 $generated@@354))))))))) (and (=> (not ($generated@@0 ($generated@@210 ($generated@@11 ($generated@@155 ($generated@@210 $generated@@353)))))) (let (($generated@@355 ($generated@@210 ($generated@@156 ($generated@@210 $generated@@353)))))
(let (($generated@@356 ($generated@@210 ($generated@@157 ($generated@@210 $generated@@353)))))
 (and (=> ($generated@@158 $generated@@356) ($generated@@209 $generated@@351 $generated@@355 ($generated@@210 $generated@@354))) (=> (not ($generated@@158 $generated@@356)) (let (($generated@@357 ($generated@@159 $generated@@356)))
 (and ($generated@@209 $generated@@351 $generated@@355 ($generated@@210 $generated@@354)) ($generated@@209 $generated@@351 $generated@@357 ($generated@@212 $generated@@351 ($generated@@151 $generated@@352) $generated@@355 ($generated@@210 $generated@@354)))))))))) (= ($generated@@212 $generated@@351 ($generated@@151 $generated@@352) ($generated@@210 $generated@@353) ($generated@@210 $generated@@354)) (ite ($generated@@155 ($generated@@210 $generated@@353)) $generated@@354 (let (($generated@@358 ($generated@@210 ($generated@@156 ($generated@@210 $generated@@353)))))
(let (($generated@@359 ($generated@@210 ($generated@@157 ($generated@@210 $generated@@353)))))
(ite ($generated@@158 $generated@@359) ($generated@@210 ($generated@@83 $generated@@359 ($generated@@210 ($generated@@212 $generated@@351 ($generated@@151 $generated@@352) $generated@@358 ($generated@@210 $generated@@354))))) (let (($generated@@360 ($generated@@210 ($generated@@159 $generated@@359))))
($generated@@210 ($generated@@212 $generated@@351 ($generated@@151 $generated@@352) $generated@@360 ($generated@@210 ($generated@@212 $generated@@351 ($generated@@151 $generated@@352) $generated@@358 ($generated@@210 $generated@@354)))))))))))))
 :weight 3
 :pattern ( ($generated@@212 $generated@@351 ($generated@@151 $generated@@352) ($generated@@210 $generated@@353) ($generated@@210 $generated@@354)))
))))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@72)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@364) $generated@@72)) (= ($generated@@154 $generated@@363 ($generated@@361 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@161) ($generated@@0 ($generated@@93 $generated@@363 $generated@@365))) ($generated@@334 $generated@@365 $generated@@364))
 :pattern ( ($generated@@93 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@154 $generated@@363 ($generated@@361 $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@72)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@369) $generated@@72)) (= ($generated@@154 $generated@@368 ($generated@@366 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@161) ($generated@@0 ($generated@@93 $generated@@368 $generated@@370))) ($generated@@334 $generated@@370 $generated@@369))
 :pattern ( ($generated@@93 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@154 $generated@@368 ($generated@@366 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ) (! (= ($generated@@210 $generated@@371) $generated@@371)
 :pattern ( ($generated@@210 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@372) ($generated@@165 $generated@@161)) (= (type $generated@@373) $generated@@161)) (= (type $generated@@374) $generated@@72)) (and ($generated@@154 $generated@@372 ($generated@@202 $generated@@374)) ($generated@@334 $generated@@373 $generated@@374))) ($generated@@154 ($generated@@164 $generated@@372 $generated@@373) ($generated@@202 $generated@@374)))
 :pattern ( ($generated@@154 ($generated@@164 $generated@@372 $generated@@373) ($generated@@202 $generated@@374)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@85) (= (type $generated@@376) $generated@@85)) (and ($generated@@155 $generated@@375) ($generated@@155 $generated@@376))) (= ($generated@@346 $generated@@375 $generated@@376) true))
 :pattern ( ($generated@@346 $generated@@375 $generated@@376) ($generated@@155 $generated@@375))
 :pattern ( ($generated@@346 $generated@@375 $generated@@376) ($generated@@155 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@378) $generated@@72) (= (type $generated@@379) $generated@@72)) (= (type $generated@@380) $generated@@161)) (= (type $generated@@381) $generated@@161)) (= (type $generated@@382) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@382)) (= ($generated@@82 ($generated@@333 $generated@@380 $generated@@381) ($generated@@242 $generated@@378 $generated@@379) $generated@@382)  (and ($generated@@377 $generated@@380 $generated@@378 $generated@@382) ($generated@@377 $generated@@381 $generated@@379 $generated@@382))))
 :pattern ( ($generated@@82 ($generated@@333 $generated@@380 $generated@@381) ($generated@@242 $generated@@378 $generated@@379) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@85) (= ($generated@@241 $generated@@383) (= ($generated@@258 $generated@@383) $generated@@61)))
 :pattern ( ($generated@@241 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@85) (= ($generated@@155 $generated@@384) (= ($generated@@258 $generated@@384) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@85) (= ($generated@@385 $generated@@386) (= ($generated@@258 $generated@@386) $generated@@65)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@85) (= ($generated@@158 $generated@@387) (= ($generated@@258 $generated@@387) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@85) (= ($generated@@388 $generated@@389) (= ($generated@@258 $generated@@389) $generated@@68)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 Int) ) (! (let (($generated@@395 ($generated@@166 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@395))
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@166 (type $generated@@396))))
 (=> (and (= (type $generated@@396) ($generated@@165 $generated@@398)) (= (type $generated@@397) ($generated@@165 $generated@@398))) (= ($generated@@390 $generated@@396 $generated@@397)  (and (= ($generated@@391 $generated@@396) ($generated@@391 $generated@@397)) (forall (($generated@@399 Int) ) (!  (=> (and (<= 0 $generated@@399) (< $generated@@399 ($generated@@391 $generated@@396))) (= ($generated@@392 $generated@@396 $generated@@399) ($generated@@392 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@392 $generated@@396 $generated@@399))
 :pattern ( ($generated@@392 $generated@@397 $generated@@399))
))))))
 :pattern ( ($generated@@390 $generated@@396 $generated@@397))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) $generated@@72) (= (type $generated@@401) $generated@@152)) (= (type $generated@@402) $generated@@85)) (or ($generated@@233 $generated@@400 ($generated@@210 $generated@@402)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@402 ($generated@@84 $generated@@400))))) (and (=> (not ($generated@@0 ($generated@@210 ($generated@@11 ($generated@@155 ($generated@@210 $generated@@402)))))) (let (($generated@@403 ($generated@@210 ($generated@@156 ($generated@@210 $generated@@402)))))
(let (($generated@@404 ($generated@@210 ($generated@@157 ($generated@@210 $generated@@402)))))
 (=> ($generated@@158 $generated@@404) ($generated@@233 $generated@@400 $generated@@403))))) (= ($generated@@194 $generated@@400 ($generated@@151 $generated@@401) ($generated@@210 $generated@@402)) (ite ($generated@@155 ($generated@@210 $generated@@402)) true (let (($generated@@405 ($generated@@210 ($generated@@156 ($generated@@210 $generated@@402)))))
(let (($generated@@406 ($generated@@210 ($generated@@157 ($generated@@210 $generated@@402)))))
(ite ($generated@@158 $generated@@406) ($generated@@0 ($generated@@210 ($generated@@11 ($generated@@194 $generated@@400 ($generated@@151 $generated@@401) $generated@@405)))) ($generated@@0 ($generated@@210 ($generated@@11 false))))))))))
 :weight 3
 :pattern ( ($generated@@194 $generated@@400 ($generated@@151 $generated@@401) ($generated@@210 $generated@@402)))
))))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@85) ($generated@@241 $generated@@407)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@161) (= (type $generated@@409) $generated@@161)) (= $generated@@407 ($generated@@333 $generated@@408 $generated@@409)))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
)))
 :pattern ( ($generated@@241 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@85) ($generated@@385 $generated@@410)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@85) (= (type $generated@@412) $generated@@85)) (= $generated@@410 ($generated@@83 $generated@@411 $generated@@412)))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
 :pattern ( ($generated@@385 $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= ($generated@@391 ($generated@@160 $generated@@413)) 0)
 :pattern ( ($generated@@160 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@72) (= (type $generated@@415) $generated@@85)) (= (type $generated@@416) $generated@@85)) (= ($generated@@154 ($generated@@83 $generated@@415 $generated@@416) ($generated@@84 $generated@@414))  (and ($generated@@154 $generated@@415 ($generated@@90 $generated@@414)) ($generated@@154 $generated@@416 ($generated@@84 $generated@@414)))))
 :pattern ( ($generated@@154 ($generated@@83 $generated@@415 $generated@@416) ($generated@@84 $generated@@414)))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@85) ($generated@@155 $generated@@417)) (= $generated@@417 $generated@@211))
 :pattern ( ($generated@@155 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@85)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@85) ($generated@@158 $generated@@420)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@161) (= $generated@@420 ($generated@@418 $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
)))
 :pattern ( ($generated@@158 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@85)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@85) ($generated@@388 $generated@@424)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@85) (= $generated@@424 ($generated@@422 $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
)))
 :pattern ( ($generated@@388 $generated@@424))
)))
(assert  (=> (<= 3 $generated@@149) (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@426) $generated@@72) (= (type $generated@@427) $generated@@85)) (or ($generated@@208 $generated@@426 ($generated@@210 $generated@@427)) (and (not (= 3 $generated@@149)) ($generated@@154 $generated@@427 ($generated@@84 $generated@@426))))) (and ($generated@@209 $generated@@426 ($generated@@210 $generated@@427) ($generated@@210 $generated@@211)) (= ($generated@@207 $generated@@426 ($generated@@210 $generated@@427)) ($generated@@210 ($generated@@212 $generated@@426 ($generated@@151 $generated@@213) ($generated@@210 $generated@@427) ($generated@@210 $generated@@211))))))
 :weight 3
 :pattern ( ($generated@@207 $generated@@426 ($generated@@210 $generated@@427)))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
 (=> (= (type $generated@@428) ($generated@@165 $generated@@430)) (= ($generated@@391 ($generated@@164 $generated@@428 $generated@@429)) (+ 1 ($generated@@391 $generated@@428)))))
 :pattern ( ($generated@@164 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) $generated@@72) (= (type $generated@@432) $generated@@152)) (= (type $generated@@433) $generated@@85)) (= (type $generated@@434) $generated@@85)) (= ($generated@@212 $generated@@431 $generated@@432 $generated@@433 $generated@@434) ($generated@@212 $generated@@431 $generated@@213 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@212 $generated@@431 ($generated@@224 $generated@@432) $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@161)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@72) (= (type $generated@@439) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@377 ($generated@@435 $generated@@437) $generated@@438 $generated@@439) ($generated@@82 $generated@@437 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@377 ($generated@@435 $generated@@437) $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@86 $generated@@442 $generated@@2))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@91 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@86 $generated@@444 $generated@@2)) (and (= (= ($generated@@440 $generated@@443) 0) (= $generated@@443 ($generated@@441 $generated@@444))) (=> (not (= ($generated@@440 $generated@@443) 0)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (< 0 ($generated ($generated@@93 $generated@@443 $generated@@445))))
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@440 $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@77)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@448)) $generated@@64) (= ($generated@@446 ($generated@@84 $generated@@448)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@449)) $generated@@66) (= ($generated@@446 ($generated@@90 $generated@@449)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@449))
)))
(assert  (and (and (and (and (forall (($generated@@455 T@T) ($generated@@456 T@T) ) (= ($generated@@1 ($generated@@452 $generated@@455 $generated@@456)) 19)) (forall (($generated@@457 T@T) ($generated@@458 T@T) ) (! (= ($generated@@453 ($generated@@452 $generated@@457 $generated@@458)) $generated@@457)
 :pattern ( ($generated@@452 $generated@@457 $generated@@458))
))) (forall (($generated@@459 T@T) ($generated@@460 T@T) ) (! (= ($generated@@454 ($generated@@452 $generated@@459 $generated@@460)) $generated@@460)
 :pattern ( ($generated@@452 $generated@@459 $generated@@460))
))) (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@453 (type $generated@@461))))
(= (type ($generated@@450 $generated@@461)) ($generated@@86 $generated@@462 $generated@@4)))
 :pattern ( ($generated@@450 $generated@@461))
))) (forall (($generated@@463 T@T) ($generated@@464 T@T) ) (! (= (type ($generated@@451 $generated@@463 $generated@@464)) ($generated@@452 $generated@@463 $generated@@464))
 :pattern ( ($generated@@451 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@T) ) (! (let (($generated@@467 (type $generated@@465)))
 (not ($generated@@0 ($generated@@93 ($generated@@450 ($generated@@451 $generated@@467 $generated@@466)) $generated@@465))))
 :pattern ( (let (($generated@@467 (type $generated@@465)))
($generated@@93 ($generated@@450 ($generated@@451 $generated@@467 $generated@@466)) $generated@@465)))
)))
(assert  (and (and (and (and (forall (($generated@@473 T@T) ($generated@@474 T@T) ) (= ($generated@@1 ($generated@@470 $generated@@473 $generated@@474)) 20)) (forall (($generated@@475 T@T) ($generated@@476 T@T) ) (! (= ($generated@@471 ($generated@@470 $generated@@475 $generated@@476)) $generated@@475)
 :pattern ( ($generated@@470 $generated@@475 $generated@@476))
))) (forall (($generated@@477 T@T) ($generated@@478 T@T) ) (! (= ($generated@@472 ($generated@@470 $generated@@477 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@470 $generated@@477 $generated@@478))
))) (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@471 (type $generated@@479))))
(= (type ($generated@@468 $generated@@479)) ($generated@@86 $generated@@480 $generated@@4)))
 :pattern ( ($generated@@468 $generated@@479))
))) (forall (($generated@@481 T@T) ($generated@@482 T@T) ) (! (= (type ($generated@@469 $generated@@481 $generated@@482)) ($generated@@470 $generated@@481 $generated@@482))
 :pattern ( ($generated@@469 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@T) ) (! (let (($generated@@485 (type $generated@@483)))
 (not ($generated@@0 ($generated@@93 ($generated@@468 ($generated@@469 $generated@@485 $generated@@484)) $generated@@483))))
 :pattern ( (let (($generated@@485 (type $generated@@483)))
($generated@@93 ($generated@@468 ($generated@@469 $generated@@485 $generated@@484)) $generated@@483)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@152)) (= (type $generated@@488) $generated@@85)) (or ($generated@@233 $generated@@486 $generated@@488) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@488 ($generated@@84 $generated@@486))))) true)
 :pattern ( ($generated@@194 $generated@@486 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@166 (type $generated@@489))))
 (=> (and (= (type $generated@@489) ($generated@@165 $generated@@491)) (= (type $generated@@490) ($generated@@165 $generated@@491))) (= ($generated@@391 ($generated@@163 $generated@@489 $generated@@490)) (+ ($generated@@391 $generated@@489) ($generated@@391 $generated@@490)))))
 :pattern ( ($generated@@391 ($generated@@163 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@91 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@86 $generated@@493 $generated@@2)) (= ($generated@@261 $generated@@492) (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@493) (and (<= 0 ($generated ($generated@@93 $generated@@492 $generated@@494))) (<= ($generated ($generated@@93 $generated@@492 $generated@@494)) ($generated@@440 $generated@@492))))
 :pattern ( ($generated@@93 $generated@@492 $generated@@494))
)))))
 :pattern ( ($generated@@261 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 Int) ($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
 (=> (= (type $generated@@495) ($generated@@165 $generated@@498)) (and (=> (= $generated@@496 ($generated@@391 $generated@@495)) (= ($generated@@392 ($generated@@164 $generated@@495 $generated@@497) $generated@@496) $generated@@497)) (=> (not (= $generated@@496 ($generated@@391 $generated@@495))) (= ($generated@@392 ($generated@@164 $generated@@495 $generated@@497) $generated@@496) ($generated@@392 $generated@@495 $generated@@496))))))
 :pattern ( ($generated@@392 ($generated@@164 $generated@@495 $generated@@497) $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@499) $generated@@85) (= (type $generated@@500) $generated@@85)) (and ($generated@@388 $generated@@499) ($generated@@388 $generated@@500))) (= ($generated@@229 $generated@@499 $generated@@500) ($generated@@346 ($generated@@159 $generated@@499) ($generated@@159 $generated@@500))))
 :pattern ( ($generated@@229 $generated@@499 $generated@@500) ($generated@@388 $generated@@499))
 :pattern ( ($generated@@229 $generated@@499 $generated@@500) ($generated@@388 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@454 (type $generated@@501))))
(let (($generated@@503 ($generated@@453 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@452 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@451 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) ($generated@@0 ($generated@@93 ($generated@@450 $generated@@501) $generated@@504)))
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@450 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@454 (type $generated@@506))))
(= (type ($generated@@505 $generated@@506)) ($generated@@86 $generated@@507 $generated@@4)))
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@454 (type $generated@@508))))
(let (($generated@@510 ($generated@@453 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@452 $generated@@510 $generated@@509)) (or (= $generated@@508 ($generated@@451 $generated@@510 $generated@@509)) (exists (($generated@@511 T@U) ) (!  (and (= (type $generated@@511) $generated@@509) ($generated@@0 ($generated@@93 ($generated@@505 $generated@@508) $generated@@511)))
 :no-pattern (type $generated@@511)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
))))))
 :pattern ( ($generated@@505 $generated@@508))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@472 (type $generated@@512))))
(let (($generated@@514 ($generated@@471 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@470 $generated@@514 $generated@@513)) (or (= $generated@@512 ($generated@@469 $generated@@514 $generated@@513)) (exists (($generated@@515 T@U) ) (!  (and (= (type $generated@@515) $generated@@514) ($generated@@0 ($generated@@93 ($generated@@468 $generated@@512) $generated@@515)))
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@468 $generated@@512))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@472 (type $generated@@517))))
(= (type ($generated@@516 $generated@@517)) ($generated@@86 $generated@@518 $generated@@4)))
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@472 (type $generated@@519))))
(let (($generated@@521 ($generated@@471 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@470 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@469 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ) (!  (and (= (type $generated@@522) $generated@@520) ($generated@@0 ($generated@@93 ($generated@@516 $generated@@519) $generated@@522)))
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@516 $generated@@519))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@524) $generated@@72)) (= ($generated@@154 $generated@@523 ($generated@@260 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@523 $generated@@525)))) ($generated@@334 $generated@@525 $generated@@524))
 :pattern ( ($generated@@93 $generated@@523 $generated@@525))
))))
 :pattern ( ($generated@@154 $generated@@523 ($generated@@260 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@72) (= (type $generated@@527) $generated@@161)) (= (type $generated@@528) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@528)) (= ($generated@@82 ($generated@@418 $generated@@527) ($generated@@90 $generated@@526) $generated@@528) ($generated@@377 $generated@@527 $generated@@526 $generated@@528)))
 :pattern ( ($generated@@82 ($generated@@418 $generated@@527) ($generated@@90 $generated@@526) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@85) ($generated@@529 $generated@@530)) (or ($generated@@155 $generated@@530) ($generated@@385 $generated@@530)))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@72) (= (type $generated@@532) $generated@@85)) (= (type $generated@@533) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@533)) (= ($generated@@82 ($generated@@422 $generated@@532) ($generated@@90 $generated@@531) $generated@@533) ($generated@@82 $generated@@532 ($generated@@84 $generated@@531) $generated@@533)))
 :pattern ( ($generated@@82 ($generated@@422 $generated@@532) ($generated@@90 $generated@@531) $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@535) $generated@@72)) (= (type $generated@@536) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@534 ($generated@@361 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@161) ($generated@@0 ($generated@@93 $generated@@534 $generated@@537))) ($generated@@377 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@93 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@82 $generated@@534 ($generated@@361 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@539) $generated@@72)) (= (type $generated@@540) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@538 ($generated@@366 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@161) ($generated@@0 ($generated@@93 $generated@@538 $generated@@541))) ($generated@@377 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@93 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@82 $generated@@538 ($generated@@366 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated ($generated@@93 ($generated@@441 $generated@@543) $generated@@542)) 0))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@93 ($generated@@441 $generated@@543) $generated@@542)))
)))
(assert  (and (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@544 $generated@@547)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@544 $generated@@547))
)) (forall (($generated@@548 T@T) ($generated@@549 T@U) ) (! (= (type ($generated@@545 $generated@@548 $generated@@549)) $generated@@548)
 :pattern ( ($generated@@545 $generated@@548 $generated@@549))
))) (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@454 (type $generated@@550))))
(let (($generated@@552 ($generated@@453 (type $generated@@550))))
(= (type ($generated@@546 $generated@@550)) ($generated@@86 $generated@@552 $generated@@551))))
 :pattern ( ($generated@@546 $generated@@550))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@452 $generated@@161 $generated@@161)) (= (type $generated@@554) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@544 $generated@@553) $generated@@554))  (and ($generated@@0 ($generated@@93 ($generated@@450 $generated@@553) ($generated@@249 ($generated@@545 $generated@@85 $generated@@554)))) (= ($generated@@93 ($generated@@546 $generated@@553) ($generated@@249 ($generated@@545 $generated@@85 $generated@@554))) ($generated@@250 ($generated@@545 $generated@@85 $generated@@554))))))
 :pattern ( ($generated@@93 ($generated@@544 $generated@@553) $generated@@554))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@555 $generated@@557))
)) (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@472 (type $generated@@558))))
(let (($generated@@560 ($generated@@471 (type $generated@@558))))
(= (type ($generated@@556 $generated@@558)) ($generated@@86 $generated@@560 $generated@@559))))
 :pattern ( ($generated@@556 $generated@@558))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@470 $generated@@161 $generated@@161)) (= (type $generated@@562) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@555 $generated@@561) $generated@@562))  (and ($generated@@0 ($generated@@93 ($generated@@468 $generated@@561) ($generated@@249 ($generated@@545 $generated@@85 $generated@@562)))) (= ($generated@@93 ($generated@@556 $generated@@561) ($generated@@249 ($generated@@545 $generated@@85 $generated@@562))) ($generated@@250 ($generated@@545 $generated@@85 $generated@@562))))))
 :pattern ( ($generated@@93 ($generated@@555 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
(let (($generated@@566 ($generated@@453 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@452 $generated@@566 $generated@@565)) (= ($generated@@0 ($generated@@93 ($generated@@505 $generated@@563) $generated@@564)) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@566) (and ($generated@@0 ($generated@@93 ($generated@@450 $generated@@563) $generated@@567)) (= $generated@@564 ($generated@@93 ($generated@@546 $generated@@563) $generated@@567))))
 :pattern ( ($generated@@93 ($generated@@450 $generated@@563) $generated@@567))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@563) $generated@@567))
))))))
 :pattern ( ($generated@@93 ($generated@@505 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(let (($generated@@571 ($generated@@471 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@470 $generated@@571 $generated@@570)) (= ($generated@@0 ($generated@@93 ($generated@@516 $generated@@568) $generated@@569)) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@571) (and ($generated@@0 ($generated@@93 ($generated@@468 $generated@@568) $generated@@572)) (= $generated@@569 ($generated@@93 ($generated@@556 $generated@@568) $generated@@572))))
 :pattern ( ($generated@@93 ($generated@@468 $generated@@568) $generated@@572))
 :pattern ( ($generated@@93 ($generated@@556 $generated@@568) $generated@@572))
))))))
 :pattern ( ($generated@@93 ($generated@@516 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (! (= (type ($generated@@573 $generated@@574 $generated@@575)) $generated@@72)
 :pattern ( ($generated@@573 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@452 $generated@@161 $generated@@161)) (= (type $generated@@577) $generated@@72)) (= (type $generated@@578) $generated@@72)) (= (type $generated@@579) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@576 ($generated@@573 $generated@@577 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@450 $generated@@576) $generated@@580))) (and ($generated@@377 ($generated@@93 ($generated@@546 $generated@@576) $generated@@580) $generated@@578 $generated@@579) ($generated@@377 $generated@@580 $generated@@577 $generated@@579)))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@576) $generated@@580))
 :pattern ( ($generated@@93 ($generated@@450 $generated@@576) $generated@@580))
))))
 :pattern ( ($generated@@82 $generated@@576 ($generated@@573 $generated@@577 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@582 $generated@@583)) $generated@@72)
 :pattern ( ($generated@@581 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@470 $generated@@161 $generated@@161)) (= (type $generated@@585) $generated@@72)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@584 ($generated@@581 $generated@@585 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@468 $generated@@584) $generated@@588))) (and ($generated@@377 ($generated@@93 ($generated@@556 $generated@@584) $generated@@588) $generated@@586 $generated@@587) ($generated@@377 $generated@@588 $generated@@585 $generated@@587)))
 :pattern ( ($generated@@93 ($generated@@556 $generated@@584) $generated@@588))
 :pattern ( ($generated@@93 ($generated@@468 $generated@@584) $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@584 ($generated@@581 $generated@@585 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@72) (= (type $generated@@590) $generated@@85)) ($generated@@154 $generated@@590 ($generated@@84 $generated@@589))) (or ($generated@@155 $generated@@590) ($generated@@385 $generated@@590)))
 :pattern ( ($generated@@385 $generated@@590) ($generated@@154 $generated@@590 ($generated@@84 $generated@@589)))
 :pattern ( ($generated@@155 $generated@@590) ($generated@@154 $generated@@590 ($generated@@84 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@72) (= (type $generated@@592) $generated@@85)) ($generated@@154 $generated@@592 ($generated@@90 $generated@@591))) (or ($generated@@158 $generated@@592) ($generated@@388 $generated@@592)))
 :pattern ( ($generated@@388 $generated@@592) ($generated@@154 $generated@@592 ($generated@@90 $generated@@591)))
 :pattern ( ($generated@@158 $generated@@592) ($generated@@154 $generated@@592 ($generated@@90 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@166 (type $generated@@593))))
 (=> (and (and (= (type $generated@@593) ($generated@@165 $generated@@595)) (= (type $generated@@594) ($generated@@165 $generated@@595))) ($generated@@390 $generated@@593 $generated@@594)) (= $generated@@593 $generated@@594)))
 :pattern ( ($generated@@390 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@597 T@T) ) (! (= (type ($generated@@596 $generated@@597)) ($generated@@86 $generated@@597 $generated@@4))
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@472 (type $generated@@598))))
(let (($generated@@600 ($generated@@471 (type $generated@@598))))
 (=> (= (type $generated@@598) ($generated@@470 $generated@@600 $generated@@599)) (= (= $generated@@598 ($generated@@469 $generated@@600 $generated@@599)) (= ($generated@@468 $generated@@598) ($generated@@596 $generated@@600))))))
 :pattern ( ($generated@@468 $generated@@598))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@472 (type $generated@@601))))
(let (($generated@@603 ($generated@@471 (type $generated@@601))))
 (=> (= (type $generated@@601) ($generated@@470 $generated@@603 $generated@@602)) (= (= $generated@@601 ($generated@@469 $generated@@603 $generated@@602)) (= ($generated@@516 $generated@@601) ($generated@@596 $generated@@602))))))
 :pattern ( ($generated@@516 $generated@@601))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@472 (type $generated@@604))))
(let (($generated@@606 ($generated@@471 (type $generated@@604))))
 (=> (= (type $generated@@604) ($generated@@470 $generated@@606 $generated@@605)) (= (= $generated@@604 ($generated@@469 $generated@@606 $generated@@605)) (= ($generated@@555 $generated@@604) ($generated@@596 $generated@@161))))))
 :pattern ( ($generated@@555 $generated@@604))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@454 (type $generated@@607))))
(let (($generated@@609 ($generated@@453 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@452 $generated@@609 $generated@@608)) (or (= $generated@@607 ($generated@@451 $generated@@609 $generated@@608)) (exists (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (and (and (= (type $generated@@610) $generated@@161) (= (type $generated@@611) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@544 $generated@@607) ($generated@@435 ($generated@@333 $generated@@610 $generated@@611)))))
 :no-pattern (type $generated@@610)
 :no-pattern (type $generated@@611)
 :no-pattern ($generated $generated@@610)
 :no-pattern ($generated@@0 $generated@@610)
 :no-pattern ($generated $generated@@611)
 :no-pattern ($generated@@0 $generated@@611)
))))))
 :pattern ( ($generated@@544 $generated@@607))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@472 (type $generated@@612))))
(let (($generated@@614 ($generated@@471 (type $generated@@612))))
 (=> (= (type $generated@@612) ($generated@@470 $generated@@614 $generated@@613)) (or (= $generated@@612 ($generated@@469 $generated@@614 $generated@@613)) (exists (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (and (and (= (type $generated@@615) $generated@@161) (= (type $generated@@616) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@555 $generated@@612) ($generated@@435 ($generated@@333 $generated@@615 $generated@@616)))))
 :no-pattern (type $generated@@615)
 :no-pattern (type $generated@@616)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
 :no-pattern ($generated $generated@@616)
 :no-pattern ($generated@@0 $generated@@616)
))))))
 :pattern ( ($generated@@555 $generated@@612))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@161) ($generated@@334 $generated@@617 $generated@@46)) (and (= ($generated@@435 ($generated@@545 $generated@@2 $generated@@617)) $generated@@617) ($generated@@154 ($generated@@545 $generated@@2 $generated@@617) $generated@@46)))
 :pattern ( ($generated@@334 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@161) ($generated@@334 $generated@@618 $generated@@47)) (and (= ($generated@@435 ($generated@@545 $generated@@3 $generated@@618)) $generated@@618) ($generated@@154 ($generated@@545 $generated@@3 $generated@@618) $generated@@47)))
 :pattern ( ($generated@@334 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@161) ($generated@@334 $generated@@619 $generated@@44)) (and (= ($generated@@435 ($generated@@545 $generated@@4 $generated@@619)) $generated@@619) ($generated@@154 ($generated@@545 $generated@@4 $generated@@619) $generated@@44)))
 :pattern ( ($generated@@334 $generated@@619 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@620) 21))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@161) ($generated@@334 $generated@@621 $generated@@45)) (and (= ($generated@@435 ($generated@@545 $generated@@620 $generated@@621)) $generated@@621) ($generated@@154 ($generated@@545 $generated@@620 $generated@@621) $generated@@45)))
 :pattern ( ($generated@@334 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@85) (= (type $generated@@623) $generated@@85)) (and ($generated@@385 $generated@@622) ($generated@@385 $generated@@623))) (= ($generated@@346 $generated@@622 $generated@@623)  (and ($generated@@229 ($generated@@157 $generated@@622) ($generated@@157 $generated@@623)) ($generated@@346 ($generated@@156 $generated@@622) ($generated@@156 $generated@@623)))))
 :pattern ( ($generated@@346 $generated@@622 $generated@@623) ($generated@@385 $generated@@622))
 :pattern ( ($generated@@346 $generated@@622 $generated@@623) ($generated@@385 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@72) (= ($generated@@334 ($generated@@435 $generated@@624) $generated@@625) ($generated@@154 $generated@@624 $generated@@625)))
 :pattern ( ($generated@@334 ($generated@@435 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@91 (type $generated@@626))))
 (=> (= (type $generated@@626) ($generated@@86 $generated@@627 $generated@@2)) (<= 0 ($generated@@440 $generated@@626))))
 :pattern ( ($generated@@440 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@166 (type $generated@@628))))
 (=> (= (type $generated@@628) ($generated@@165 $generated@@629)) (<= 0 ($generated@@391 $generated@@628))))
 :pattern ( ($generated@@391 $generated@@628))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@72)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@72) (= (type $generated@@633) $generated@@72)) (= ($generated@@630 ($generated@@573 $generated@@632 $generated@@633)) $generated@@632))
 :pattern ( ($generated@@573 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@72)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@72) (= (type $generated@@637) $generated@@72)) (= ($generated@@634 ($generated@@573 $generated@@636 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@573 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@72) (= (type $generated@@639) $generated@@72)) (= ($generated@@80 ($generated@@573 $generated@@638 $generated@@639)) $generated@@58))
 :pattern ( ($generated@@573 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@72)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@72) (= (type $generated@@643) $generated@@72)) (= ($generated@@640 ($generated@@581 $generated@@642 $generated@@643)) $generated@@642))
 :pattern ( ($generated@@581 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@72)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@72) (= (type $generated@@647) $generated@@72)) (= ($generated@@644 ($generated@@581 $generated@@646 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@581 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@72) (= (type $generated@@649) $generated@@72)) (= ($generated@@80 ($generated@@581 $generated@@648 $generated@@649)) $generated@@59))
 :pattern ( ($generated@@581 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@161) (= (type $generated@@651) $generated@@161)) (= ($generated@@258 ($generated@@333 $generated@@650 $generated@@651)) $generated@@61))
 :pattern ( ($generated@@333 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@72)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@72) (= (type $generated@@655) $generated@@72)) (= ($generated@@652 ($generated@@242 $generated@@654 $generated@@655)) $generated@@654))
 :pattern ( ($generated@@242 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@72)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@72) (= (type $generated@@659) $generated@@72)) (= ($generated@@656 ($generated@@242 $generated@@658 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@242 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@161) (= (type $generated@@661) $generated@@161)) (= ($generated@@249 ($generated@@333 $generated@@660 $generated@@661)) $generated@@660))
 :pattern ( ($generated@@333 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@161) (= (type $generated@@663) $generated@@161)) (= ($generated@@250 ($generated@@333 $generated@@662 $generated@@663)) $generated@@663))
 :pattern ( ($generated@@333 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@85) (= (type $generated@@665) $generated@@85)) (= ($generated@@258 ($generated@@83 $generated@@664 $generated@@665)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@85) (= (type $generated@@667) $generated@@85)) (= ($generated@@157 ($generated@@83 $generated@@666 $generated@@667)) $generated@@666))
 :pattern ( ($generated@@83 $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@85) (= (type $generated@@669) $generated@@85)) (= ($generated@@156 ($generated@@83 $generated@@668 $generated@@669)) $generated@@669))
 :pattern ( ($generated@@83 $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@165 $generated@@161)) (= (type $generated@@671) $generated@@72)) (= (type $generated@@672) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@670 ($generated@@202 $generated@@671) $generated@@672) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@391 $generated@@670))) ($generated@@377 ($generated@@392 $generated@@670 $generated@@673) $generated@@671 $generated@@672))
 :pattern ( ($generated@@392 $generated@@670 $generated@@673))
))))
 :pattern ( ($generated@@82 $generated@@670 ($generated@@202 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@675 Int) ) (! (= ($generated@@674 ($generated@@198 $generated@@675)) $generated@@675)
 :pattern ( ($generated@@198 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ) (! (= (type ($generated@@676 $generated@@677)) $generated@@72)
 :pattern ( ($generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@72) (= ($generated@@676 ($generated@@361 $generated@@678)) $generated@@678))
 :pattern ( ($generated@@361 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@72) (= ($generated@@80 ($generated@@361 $generated@@679)) $generated@@54))
 :pattern ( ($generated@@361 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ) (! (= (type ($generated@@680 $generated@@681)) $generated@@72)
 :pattern ( ($generated@@680 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@72) (= ($generated@@680 ($generated@@366 $generated@@682)) $generated@@682))
 :pattern ( ($generated@@366 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@72) (= ($generated@@80 ($generated@@366 $generated@@683)) $generated@@55))
 :pattern ( ($generated@@366 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ) (! (= (type ($generated@@684 $generated@@685)) $generated@@72)
 :pattern ( ($generated@@684 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@72) (= ($generated@@684 ($generated@@260 $generated@@686)) $generated@@686))
 :pattern ( ($generated@@260 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@72) (= ($generated@@80 ($generated@@260 $generated@@687)) $generated@@56))
 :pattern ( ($generated@@260 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ) (! (= (type ($generated@@688 $generated@@689)) $generated@@72)
 :pattern ( ($generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@72) (= ($generated@@688 ($generated@@202 $generated@@690)) $generated@@690))
 :pattern ( ($generated@@202 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@72) (= ($generated@@80 ($generated@@202 $generated@@691)) $generated@@57))
 :pattern ( ($generated@@202 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ) (! (= (type ($generated@@692 $generated@@693)) $generated@@72)
 :pattern ( ($generated@@692 $generated@@693))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@72) (= ($generated@@692 ($generated@@84 $generated@@694)) $generated@@694))
 :pattern ( ($generated@@84 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ) (! (= (type ($generated@@695 $generated@@696)) $generated@@72)
 :pattern ( ($generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@72) (= ($generated@@695 ($generated@@90 $generated@@697)) $generated@@697))
 :pattern ( ($generated@@90 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@161) (= ($generated@@258 ($generated@@418 $generated@@698)) $generated@@67))
 :pattern ( ($generated@@418 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@161) (= ($generated@@162 ($generated@@418 $generated@@699)) $generated@@699))
 :pattern ( ($generated@@418 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@85) (= ($generated@@258 ($generated@@422 $generated@@700)) $generated@@68))
 :pattern ( ($generated@@422 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@85) (= ($generated@@159 ($generated@@422 $generated@@701)) $generated@@701))
 :pattern ( ($generated@@422 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ) (! (let (($generated@@703 (type $generated@@702)))
(= ($generated@@545 $generated@@703 ($generated@@435 $generated@@702)) $generated@@702))
 :pattern ( ($generated@@435 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@704) ($generated@@452 $generated@@161 $generated@@161)) (= (type $generated@@705) $generated@@72)) (= (type $generated@@706) $generated@@72)) (= ($generated@@154 $generated@@704 ($generated@@573 $generated@@705 $generated@@706)) (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@450 $generated@@704) $generated@@707))) (and ($generated@@334 ($generated@@93 ($generated@@546 $generated@@704) $generated@@707) $generated@@706) ($generated@@334 $generated@@707 $generated@@705)))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@704) $generated@@707))
 :pattern ( ($generated@@93 ($generated@@450 $generated@@704) $generated@@707))
))))
 :pattern ( ($generated@@154 $generated@@704 ($generated@@573 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@708) ($generated@@470 $generated@@161 $generated@@161)) (= (type $generated@@709) $generated@@72)) (= (type $generated@@710) $generated@@72)) (= ($generated@@154 $generated@@708 ($generated@@581 $generated@@709 $generated@@710)) (forall (($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@468 $generated@@708) $generated@@711))) (and ($generated@@334 ($generated@@93 ($generated@@556 $generated@@708) $generated@@711) $generated@@710) ($generated@@334 $generated@@711 $generated@@709)))
 :pattern ( ($generated@@93 ($generated@@556 $generated@@708) $generated@@711))
 :pattern ( ($generated@@93 ($generated@@468 $generated@@708) $generated@@711))
))))
 :pattern ( ($generated@@154 $generated@@708 ($generated@@581 $generated@@709 $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@72) (= (type $generated@@713) $generated@@161)) (= ($generated@@154 ($generated@@418 $generated@@713) ($generated@@90 $generated@@712)) ($generated@@334 $generated@@713 $generated@@712)))
 :pattern ( ($generated@@154 ($generated@@418 $generated@@713) ($generated@@90 $generated@@712)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@161) (= (type $generated@@717) $generated@@161)) (< ($generated@@714 $generated@@716) ($generated@@715 ($generated@@333 $generated@@716 $generated@@717))))
 :pattern ( ($generated@@333 $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@161) (= (type $generated@@719) $generated@@161)) (< ($generated@@714 $generated@@719) ($generated@@715 ($generated@@333 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@333 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@85) (= (type $generated@@721) $generated@@85)) (< ($generated@@715 $generated@@720) ($generated@@715 ($generated@@83 $generated@@720 $generated@@721))))
 :pattern ( ($generated@@83 $generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@85) (= (type $generated@@723) $generated@@85)) (< ($generated@@715 $generated@@723) ($generated@@715 ($generated@@83 $generated@@722 $generated@@723))))
 :pattern ( ($generated@@83 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) $generated@@161) (= (type $generated@@725) $generated@@72)) (= (type $generated@@726) $generated@@72)) ($generated@@334 $generated@@724 ($generated@@573 $generated@@725 $generated@@726))) (and (= ($generated@@435 ($generated@@545 ($generated@@452 $generated@@161 $generated@@161) $generated@@724)) $generated@@724) ($generated@@154 ($generated@@545 ($generated@@452 $generated@@161 $generated@@161) $generated@@724) ($generated@@573 $generated@@725 $generated@@726))))
 :pattern ( ($generated@@334 $generated@@724 ($generated@@573 $generated@@725 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (and (= (type $generated@@727) $generated@@161) (= (type $generated@@728) $generated@@72)) (= (type $generated@@729) $generated@@72)) ($generated@@334 $generated@@727 ($generated@@581 $generated@@728 $generated@@729))) (and (= ($generated@@435 ($generated@@545 ($generated@@470 $generated@@161 $generated@@161) $generated@@727)) $generated@@727) ($generated@@154 ($generated@@545 ($generated@@470 $generated@@161 $generated@@161) $generated@@727) ($generated@@581 $generated@@728 $generated@@729))))
 :pattern ( ($generated@@334 $generated@@727 ($generated@@581 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) $generated@@72) (= (type $generated@@731) $generated@@72)) (= (type $generated@@732) $generated@@161)) ($generated@@334 $generated@@732 ($generated@@242 $generated@@730 $generated@@731))) (and (= ($generated@@435 ($generated@@545 $generated@@85 $generated@@732)) $generated@@732) ($generated@@154 ($generated@@545 $generated@@85 $generated@@732) ($generated@@242 $generated@@730 $generated@@731))))
 :pattern ( ($generated@@334 $generated@@732 ($generated@@242 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@161) (< ($generated@@714 $generated@@733) ($generated@@715 ($generated@@418 $generated@@733))))
 :pattern ( ($generated@@418 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@85) (< ($generated@@715 $generated@@734) ($generated@@715 ($generated@@422 $generated@@734))))
 :pattern ( ($generated@@422 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (and (= (type $generated@@735) $generated@@85) (= (type $generated@@736) $generated@@72)) (= (type $generated@@737) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@737) (and ($generated@@158 $generated@@735) ($generated@@82 $generated@@735 ($generated@@90 $generated@@736) $generated@@737)))) ($generated@@377 ($generated@@162 $generated@@735) $generated@@736 $generated@@737))
 :pattern ( ($generated@@377 ($generated@@162 $generated@@735) $generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ) (! (let (($generated@@739 (type $generated@@738)))
 (not ($generated@@0 ($generated@@93 ($generated@@596 $generated@@739) $generated@@738))))
 :pattern ( (let (($generated@@739 (type $generated@@738)))
($generated@@93 ($generated@@596 $generated@@739) $generated@@738)))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@740) $generated@@72) (= (type $generated@@741) $generated@@152)) (= (type $generated@@742) $generated@@85)) (= (type $generated@@743) $generated@@85)) (or ($generated@@209 $generated@@740 $generated@@742 $generated@@743) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@742 ($generated@@84 $generated@@740)) ($generated@@154 $generated@@743 ($generated@@84 $generated@@740))) ($generated@@194 $generated@@740 ($generated@@151 $generated@@213) $generated@@743))))) (and ($generated@@194 $generated@@740 ($generated@@151 $generated@@213) ($generated@@212 $generated@@740 $generated@@741 $generated@@742 $generated@@743)) ($generated@@154 ($generated@@212 $generated@@740 $generated@@741 $generated@@742 $generated@@743) ($generated@@84 $generated@@740))))
 :pattern ( ($generated@@212 $generated@@740 $generated@@741 $generated@@742 $generated@@743))
))))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@72) (= (type $generated@@745) $generated@@72)) (and (= ($generated@@80 ($generated@@242 $generated@@744 $generated@@745)) $generated@@62) (= ($generated@@446 ($generated@@242 $generated@@744 $generated@@745)) $generated@@69)))
 :pattern ( ($generated@@242 $generated@@744 $generated@@745))
)))
(assert  (and (forall (($generated@@748 T@U) ) (! (let (($generated@@749 ($generated@@166 (type $generated@@748))))
(= (type ($generated@@746 $generated@@748)) ($generated@@165 $generated@@749)))
 :pattern ( ($generated@@746 $generated@@748))
)) (forall (($generated@@750 T@U) ) (! (let (($generated@@751 ($generated@@166 (type $generated@@750))))
(= (type ($generated@@747 $generated@@750)) $generated@@751))
 :pattern ( ($generated@@747 $generated@@750))
))))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (! (let (($generated@@754 (type $generated@@753)))
 (=> (= (type $generated@@752) ($generated@@165 $generated@@754)) (and (= ($generated@@746 ($generated@@164 $generated@@752 $generated@@753)) $generated@@752) (= ($generated@@747 ($generated@@164 $generated@@752 $generated@@753)) $generated@@753))))
 :pattern ( ($generated@@164 $generated@@752 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@85) (= ($generated@@714 ($generated@@435 $generated@@755)) ($generated@@715 $generated@@755)))
 :pattern ( ($generated@@714 ($generated@@435 $generated@@755)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) $generated@@72) (= (type $generated@@757) $generated@@152)) (= (type $generated@@758) $generated@@85)) (or ($generated@@153 $generated@@756 ($generated@@210 $generated@@758)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@758 ($generated@@84 $generated@@756))))) (and (=> (not ($generated@@0 ($generated@@210 ($generated@@11 ($generated@@155 ($generated@@210 $generated@@758)))))) (let (($generated@@759 ($generated@@210 ($generated@@156 ($generated@@210 $generated@@758)))))
(let (($generated@@760 ($generated@@210 ($generated@@157 ($generated@@210 $generated@@758)))))
 (and (=> ($generated@@158 $generated@@760) ($generated@@153 $generated@@756 $generated@@759)) (=> (not ($generated@@158 $generated@@760)) (let (($generated@@761 ($generated@@159 $generated@@760)))
 (and ($generated@@153 $generated@@756 $generated@@761) ($generated@@153 $generated@@756 $generated@@759)))))))) (= ($generated@@150 $generated@@756 ($generated@@151 $generated@@757) ($generated@@210 $generated@@758)) (ite ($generated@@155 ($generated@@210 $generated@@758)) ($generated@@160 $generated@@161) (let (($generated@@762 ($generated@@210 ($generated@@156 ($generated@@210 $generated@@758)))))
(let (($generated@@763 ($generated@@210 ($generated@@157 ($generated@@210 $generated@@758)))))
(ite ($generated@@158 $generated@@763) (let (($generated@@764 ($generated@@210 ($generated@@162 $generated@@763))))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@764) ($generated@@150 $generated@@756 ($generated@@151 $generated@@757) $generated@@762))) (let (($generated@@765 ($generated@@210 ($generated@@159 $generated@@763))))
($generated@@163 ($generated@@150 $generated@@756 ($generated@@151 $generated@@757) $generated@@765) ($generated@@150 $generated@@756 ($generated@@151 $generated@@757) $generated@@762))))))))))
 :weight 3
 :pattern ( ($generated@@150 $generated@@756 ($generated@@151 $generated@@757) ($generated@@210 $generated@@758)))
))))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (and (= (type $generated@@766) $generated@@72) (= (type $generated@@767) $generated@@152)) (= (type $generated@@768) $generated@@85)) (= (type $generated@@769) $generated@@85)) (= ($generated@@212 $generated@@766 ($generated@@151 $generated@@767) $generated@@768 $generated@@769) ($generated@@212 $generated@@766 $generated@@767 $generated@@768 $generated@@769)))
 :pattern ( ($generated@@212 $generated@@766 ($generated@@151 $generated@@767) $generated@@768 $generated@@769))
)))
(assert (forall (($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@770) $generated@@161) ($generated@@334 $generated@@770 ($generated@@198 0))) (and (= ($generated@@435 ($generated@@545 $generated@@2 $generated@@770)) $generated@@770) ($generated@@154 ($generated@@545 ($generated@@86 $generated@@161 $generated@@4) $generated@@770) ($generated@@198 0))))
 :pattern ( ($generated@@334 $generated@@770 ($generated@@198 0)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@161) (= (type $generated@@772) $generated@@72)) ($generated@@334 $generated@@771 ($generated@@361 $generated@@772))) (and (= ($generated@@435 ($generated@@545 ($generated@@86 $generated@@161 $generated@@4) $generated@@771)) $generated@@771) ($generated@@154 ($generated@@545 ($generated@@86 $generated@@161 $generated@@4) $generated@@771) ($generated@@361 $generated@@772))))
 :pattern ( ($generated@@334 $generated@@771 ($generated@@361 $generated@@772)))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (= (type $generated@@773) $generated@@161) (= (type $generated@@774) $generated@@72)) ($generated@@334 $generated@@773 ($generated@@366 $generated@@774))) (and (= ($generated@@435 ($generated@@545 ($generated@@86 $generated@@161 $generated@@4) $generated@@773)) $generated@@773) ($generated@@154 ($generated@@545 ($generated@@86 $generated@@161 $generated@@4) $generated@@773) ($generated@@366 $generated@@774))))
 :pattern ( ($generated@@334 $generated@@773 ($generated@@366 $generated@@774)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (and (= (type $generated@@775) $generated@@161) (= (type $generated@@776) $generated@@72)) ($generated@@334 $generated@@775 ($generated@@260 $generated@@776))) (and (= ($generated@@435 ($generated@@545 ($generated@@86 $generated@@161 $generated@@2) $generated@@775)) $generated@@775) ($generated@@154 ($generated@@545 ($generated@@86 $generated@@161 $generated@@2) $generated@@775) ($generated@@260 $generated@@776))))
 :pattern ( ($generated@@334 $generated@@775 ($generated@@260 $generated@@776)))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (= (type $generated@@777) $generated@@161) (= (type $generated@@778) $generated@@72)) ($generated@@334 $generated@@777 ($generated@@202 $generated@@778))) (and (= ($generated@@435 ($generated@@545 ($generated@@165 $generated@@161) $generated@@777)) $generated@@777) ($generated@@154 ($generated@@545 ($generated@@165 $generated@@161) $generated@@777) ($generated@@202 $generated@@778))))
 :pattern ( ($generated@@334 $generated@@777 ($generated@@202 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (and (= (type $generated@@779) $generated@@72) (= (type $generated@@780) $generated@@161)) ($generated@@334 $generated@@780 ($generated@@84 $generated@@779))) (and (= ($generated@@435 ($generated@@545 $generated@@85 $generated@@780)) $generated@@780) ($generated@@154 ($generated@@545 $generated@@85 $generated@@780) ($generated@@84 $generated@@779))))
 :pattern ( ($generated@@334 $generated@@780 ($generated@@84 $generated@@779)))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (and (= (type $generated@@781) $generated@@72) (= (type $generated@@782) $generated@@161)) ($generated@@334 $generated@@782 ($generated@@90 $generated@@781))) (and (= ($generated@@435 ($generated@@545 $generated@@85 $generated@@782)) $generated@@782) ($generated@@154 ($generated@@545 $generated@@85 $generated@@782) ($generated@@90 $generated@@781))))
 :pattern ( ($generated@@334 $generated@@782 ($generated@@90 $generated@@781)))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) $generated@@72) (= (type $generated@@784) $generated@@85)) (= ($generated@@154 ($generated@@422 $generated@@784) ($generated@@90 $generated@@783)) ($generated@@154 $generated@@784 ($generated@@84 $generated@@783))))
 :pattern ( ($generated@@154 ($generated@@422 $generated@@784) ($generated@@90 $generated@@783)))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (and (= (type $generated@@785) $generated@@85) (= (type $generated@@786) $generated@@72)) (= (type $generated@@787) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@787) (and ($generated@@385 $generated@@785) ($generated@@82 $generated@@785 ($generated@@84 $generated@@786) $generated@@787)))) ($generated@@82 ($generated@@157 $generated@@785) ($generated@@90 $generated@@786) $generated@@787))
 :pattern ( ($generated@@82 ($generated@@157 $generated@@785) ($generated@@90 $generated@@786) $generated@@787))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (= (type $generated@@788) $generated@@85) (= (type $generated@@789) $generated@@72)) (= (type $generated@@790) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@790) (and ($generated@@385 $generated@@788) ($generated@@82 $generated@@788 ($generated@@84 $generated@@789) $generated@@790)))) ($generated@@82 ($generated@@156 $generated@@788) ($generated@@84 $generated@@789) $generated@@790))
 :pattern ( ($generated@@82 ($generated@@156 $generated@@788) ($generated@@84 $generated@@789) $generated@@790))
)))
(assert (forall (($generated@@791 T@U) ($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (and (and (= (type $generated@@791) $generated@@85) (= (type $generated@@792) $generated@@72)) (= (type $generated@@793) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@793) (and ($generated@@388 $generated@@791) ($generated@@82 $generated@@791 ($generated@@90 $generated@@792) $generated@@793)))) ($generated@@82 ($generated@@159 $generated@@791) ($generated@@84 $generated@@792) $generated@@793))
 :pattern ( ($generated@@82 ($generated@@159 $generated@@791) ($generated@@84 $generated@@792) $generated@@793))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ) (!  (=> (and (and (= (type $generated@@794) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@795) $generated@@72)) (= (type $generated@@796) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@794 ($generated@@260 $generated@@795) $generated@@796) (forall (($generated@@797 T@U) ) (!  (=> (and (= (type $generated@@797) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@794 $generated@@797)))) ($generated@@377 $generated@@797 $generated@@795 $generated@@796))
 :pattern ( ($generated@@93 $generated@@794 $generated@@797))
))))
 :pattern ( ($generated@@82 $generated@@794 ($generated@@260 $generated@@795) $generated@@796))
)))
(assert (= $generated@@211 ($generated@@210 $generated@@211)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) $generated@@85) (= (type $generated@@799) $generated@@72)) (= (type $generated@@800) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@800) (and ($generated@@241 $generated@@798) (exists (($generated@@801 T@U) ) (!  (and (= (type $generated@@801) $generated@@72) ($generated@@82 $generated@@798 ($generated@@242 $generated@@799 $generated@@801) $generated@@800))
 :pattern ( ($generated@@82 $generated@@798 ($generated@@242 $generated@@799 $generated@@801) $generated@@800))
))))) ($generated@@377 ($generated@@249 $generated@@798) $generated@@799 $generated@@800))
 :pattern ( ($generated@@377 ($generated@@249 $generated@@798) $generated@@799 $generated@@800))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (and (= (type $generated@@802) $generated@@85) (= (type $generated@@803) $generated@@72)) (= (type $generated@@804) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@804) (and ($generated@@241 $generated@@802) (exists (($generated@@805 T@U) ) (!  (and (= (type $generated@@805) $generated@@72) ($generated@@82 $generated@@802 ($generated@@242 $generated@@805 $generated@@803) $generated@@804))
 :pattern ( ($generated@@82 $generated@@802 ($generated@@242 $generated@@805 $generated@@803) $generated@@804))
))))) ($generated@@377 ($generated@@250 $generated@@802) $generated@@803 $generated@@804))
 :pattern ( ($generated@@377 ($generated@@250 $generated@@802) $generated@@803 $generated@@804))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 T@U) ($generated@@808 Int) ) (! (let (($generated@@809 ($generated@@166 (type $generated@@806))))
 (=> (and (= (type $generated@@806) ($generated@@165 $generated@@809)) (= (type $generated@@807) ($generated@@165 $generated@@809))) (and (=> (< $generated@@808 ($generated@@391 $generated@@806)) (= ($generated@@392 ($generated@@163 $generated@@806 $generated@@807) $generated@@808) ($generated@@392 $generated@@806 $generated@@808))) (=> (<= ($generated@@391 $generated@@806) $generated@@808) (= ($generated@@392 ($generated@@163 $generated@@806 $generated@@807) $generated@@808) ($generated@@392 $generated@@807 (- $generated@@808 ($generated@@391 $generated@@806))))))))
 :pattern ( ($generated@@392 ($generated@@163 $generated@@806 $generated@@807) $generated@@808))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ) (!  (=> (and (= (type $generated@@810) $generated@@161) (= (type $generated@@811) $generated@@161)) (= ($generated@@333 ($generated@@210 $generated@@810) ($generated@@210 $generated@@811)) ($generated@@210 ($generated@@333 $generated@@810 $generated@@811))))
 :pattern ( ($generated@@333 ($generated@@210 $generated@@810) ($generated@@210 $generated@@811)))
)))
(assert (forall (($generated@@812 T@U) ($generated@@813 T@U) ) (!  (=> (and (= (type $generated@@812) $generated@@85) (= (type $generated@@813) $generated@@85)) (= ($generated@@83 ($generated@@210 $generated@@812) ($generated@@210 $generated@@813)) ($generated@@210 ($generated@@83 $generated@@812 $generated@@813))))
 :pattern ( ($generated@@83 ($generated@@210 $generated@@812) ($generated@@210 $generated@@813)))
)))
(assert (forall (($generated@@814 T@U) ) (!  (=> (= (type $generated@@814) $generated@@161) (= ($generated@@418 ($generated@@210 $generated@@814)) ($generated@@210 ($generated@@418 $generated@@814))))
 :pattern ( ($generated@@418 ($generated@@210 $generated@@814)))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (= (type $generated@@815) $generated@@85) (= ($generated@@422 ($generated@@210 $generated@@815)) ($generated@@210 ($generated@@422 $generated@@815))))
 :pattern ( ($generated@@422 ($generated@@210 $generated@@815)))
)))
(assert (forall (($generated@@816 T@U) ) (! (= ($generated@@435 ($generated@@210 $generated@@816)) ($generated@@210 ($generated@@435 $generated@@816)))
 :pattern ( ($generated@@435 ($generated@@210 $generated@@816)))
)))
(assert (forall (($generated@@817 T@U) ) (! (let (($generated@@818 ($generated@@166 (type $generated@@817))))
 (=> (and (= (type $generated@@817) ($generated@@165 $generated@@818)) (= ($generated@@391 $generated@@817) 0)) (= $generated@@817 ($generated@@160 $generated@@818))))
 :pattern ( ($generated@@391 $generated@@817))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ($generated@@821 T@U) ) (! (let (($generated@@822 (type $generated@@820)))
 (=> (and (and (= (type $generated@@819) ($generated@@86 $generated@@822 $generated@@2)) (= (type $generated@@821) $generated@@2)) (<= 0 ($generated $generated@@821))) (= ($generated@@440 ($generated@@94 $generated@@819 $generated@@820 $generated@@821)) (+ (- ($generated@@440 $generated@@819) ($generated ($generated@@93 $generated@@819 $generated@@820))) ($generated $generated@@821)))))
 :pattern ( ($generated@@440 ($generated@@94 $generated@@819 $generated@@820 $generated@@821)))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (= (type $generated@@823) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@824) $generated@@2)) ($generated@@82 $generated@@824 $generated@@46 $generated@@823))
 :pattern ( ($generated@@82 $generated@@824 $generated@@46 $generated@@823))
)))
(assert (forall (($generated@@825 T@U) ($generated@@826 T@U) ) (!  (=> (and (= (type $generated@@825) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@826) $generated@@3)) ($generated@@82 $generated@@826 $generated@@47 $generated@@825))
 :pattern ( ($generated@@82 $generated@@826 $generated@@47 $generated@@825))
)))
(assert (forall (($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (= (type $generated@@827) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@828) $generated@@4)) ($generated@@82 $generated@@828 $generated@@44 $generated@@827))
 :pattern ( ($generated@@82 $generated@@828 $generated@@44 $generated@@827))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 T@U) ) (!  (=> (and (= (type $generated@@829) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@830) $generated@@620)) ($generated@@82 $generated@@830 $generated@@45 $generated@@829))
 :pattern ( ($generated@@82 $generated@@830 $generated@@45 $generated@@829))
)))
(assert (forall (($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (= (type $generated@@831) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@832) $generated@@161)) ($generated@@82 $generated@@832 $generated@@48 $generated@@831))
 :pattern ( ($generated@@82 $generated@@832 $generated@@48 $generated@@831))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (= (type $generated@@833) ($generated@@165 $generated@@161)) (= (type $generated@@834) $generated@@72)) (= ($generated@@154 $generated@@833 ($generated@@202 $generated@@834)) (forall (($generated@@835 Int) ) (!  (=> (and (<= 0 $generated@@835) (< $generated@@835 ($generated@@391 $generated@@833))) ($generated@@334 ($generated@@392 $generated@@833 $generated@@835) $generated@@834))
 :pattern ( ($generated@@392 $generated@@833 $generated@@835))
))))
 :pattern ( ($generated@@154 $generated@@833 ($generated@@202 $generated@@834)))
)))
(assert (forall (($generated@@836 T@U) ($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (and (= (type $generated@@836) $generated@@72) (= (type $generated@@837) $generated@@152)) (= (type $generated@@838) $generated@@85)) (= ($generated@@194 $generated@@836 $generated@@837 $generated@@838) ($generated@@194 $generated@@836 $generated@@213 $generated@@838)))
 :pattern ( ($generated@@194 $generated@@836 ($generated@@224 $generated@@837) $generated@@838))
)))
(assert (forall (($generated@@840 T@U) ($generated@@841 Int) ) (!  (=> (= (type $generated@@840) ($generated@@165 $generated@@161)) (=> (and (<= 0 $generated@@841) (< $generated@@841 ($generated@@391 $generated@@840))) (< ($generated@@715 ($generated@@545 $generated@@85 ($generated@@392 $generated@@840 $generated@@841))) ($generated@@839 $generated@@840))))
 :pattern ( ($generated@@715 ($generated@@545 $generated@@85 ($generated@@392 $generated@@840 $generated@@841))))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ($generated@@844 T@U) ) (!  (=> (and (and (and (= (type $generated@@842) ($generated@@452 $generated@@161 $generated@@161)) (= (type $generated@@843) $generated@@72)) (= (type $generated@@844) $generated@@72)) ($generated@@154 $generated@@842 ($generated@@573 $generated@@843 $generated@@844))) (and (and ($generated@@154 ($generated@@450 $generated@@842) ($generated@@361 $generated@@843)) ($generated@@154 ($generated@@505 $generated@@842) ($generated@@361 $generated@@844))) ($generated@@154 ($generated@@544 $generated@@842) ($generated@@361 ($generated@@242 $generated@@843 $generated@@844)))))
 :pattern ( ($generated@@154 $generated@@842 ($generated@@573 $generated@@843 $generated@@844)))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (and (= (type $generated@@845) ($generated@@470 $generated@@161 $generated@@161)) (= (type $generated@@846) $generated@@72)) (= (type $generated@@847) $generated@@72)) ($generated@@154 $generated@@845 ($generated@@581 $generated@@846 $generated@@847))) (and (and ($generated@@154 ($generated@@468 $generated@@845) ($generated@@366 $generated@@846)) ($generated@@154 ($generated@@516 $generated@@845) ($generated@@366 $generated@@847))) ($generated@@154 ($generated@@555 $generated@@845) ($generated@@366 ($generated@@242 $generated@@846 $generated@@847)))))
 :pattern ( ($generated@@154 $generated@@845 ($generated@@581 $generated@@846 $generated@@847)))
)))
(assert (forall (($generated@@848 T@U) ) (!  (=> (= (type $generated@@848) $generated@@2) ($generated@@154 $generated@@848 $generated@@46))
 :pattern ( ($generated@@154 $generated@@848 $generated@@46))
)))
(assert (forall (($generated@@849 T@U) ) (!  (=> (= (type $generated@@849) $generated@@3) ($generated@@154 $generated@@849 $generated@@47))
 :pattern ( ($generated@@154 $generated@@849 $generated@@47))
)))
(assert (forall (($generated@@850 T@U) ) (!  (=> (= (type $generated@@850) $generated@@4) ($generated@@154 $generated@@850 $generated@@44))
 :pattern ( ($generated@@154 $generated@@850 $generated@@44))
)))
(assert (forall (($generated@@851 T@U) ) (!  (=> (= (type $generated@@851) $generated@@620) ($generated@@154 $generated@@851 $generated@@45))
 :pattern ( ($generated@@154 $generated@@851 $generated@@45))
)))
(assert (forall (($generated@@852 T@U) ) (!  (=> (= (type $generated@@852) $generated@@161) ($generated@@154 $generated@@852 $generated@@48))
 :pattern ( ($generated@@154 $generated@@852 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@853 () T@U)
(declare-fun $generated@@854 () T@U)
(declare-fun $generated@@855 () T@U)
(declare-fun $generated@@856 () T@U)
(declare-fun $generated@@857 () T@U)
(declare-fun $generated@@858 (T@U) Bool)
(declare-fun $generated@@859 () T@U)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@853) ($generated@@267 $generated@@87 $generated@@4)) (= (type $generated@@854) $generated@@87)) (= (type $generated@@855) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@856) $generated@@85)) (= (type $generated@@857) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@859) $generated@@72)) (= (type $generated@@860) $generated@@85)) (= (type $generated@@861) ($generated@@86 $generated@@87 $generated@@88))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@862  (=> (and (= $generated@@853 ($generated@@266 $generated@@854 $generated@@855 $generated@@60 false)) ($generated@@529 $generated@@856)) (=> (and (and (and ($generated@@89 $generated@@857) ($generated@@858 $generated@@857)) (= $generated@@855 $generated@@857)) (and (forall (($generated@@863 T@U) ) (!  (=> (= (type $generated@@863) $generated@@85) (=> (and (and ($generated@@154 $generated@@863 ($generated@@84 $generated@@859)) ($generated@@0 ($generated@@210 ($generated@@11 true)))) (< ($generated@@715 $generated@@863) ($generated@@715 $generated@@856))) ($generated@@390 ($generated@@150 $generated@@859 ($generated@@151 $generated@@213) $generated@@863) ($generated@@150 $generated@@859 ($generated@@151 $generated@@213) ($generated@@207 $generated@@859 $generated@@863)))))
 :no-pattern (type $generated@@863)
 :no-pattern ($generated $generated@@863)
 :no-pattern ($generated@@0 $generated@@863)
)) (= $generated@@860 ($generated@@210 $generated@@211)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@233 $generated@@859 $generated@@860) (or ($generated@@194 $generated@@859 ($generated@@151 $generated@@213) $generated@@860) (=> ($generated@@155 $generated@@860) ($generated@@0 ($generated@@210 ($generated@@11 true))))))) (=> (=> ($generated@@233 $generated@@859 $generated@@860) (or ($generated@@194 $generated@@859 ($generated@@151 $generated@@213) $generated@@860) (=> ($generated@@155 $generated@@860) ($generated@@0 ($generated@@210 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@233 $generated@@859 $generated@@860) (or ($generated@@194 $generated@@859 ($generated@@151 $generated@@213) $generated@@860) (=> (not ($generated@@155 $generated@@860)) (let (($generated@@864 ($generated@@156 $generated@@860)))
(let (($generated@@865 ($generated@@157 $generated@@860)))
 (=> ($generated@@158 $generated@@865) ($generated@@194 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) $generated@@864)))))))) (=> (=> ($generated@@233 $generated@@859 $generated@@860) (or ($generated@@194 $generated@@859 ($generated@@151 $generated@@213) $generated@@860) (=> (not ($generated@@155 $generated@@860)) (let (($generated@@866 ($generated@@156 $generated@@860)))
(let (($generated@@867 ($generated@@157 $generated@@860)))
 (=> ($generated@@158 $generated@@867) ($generated@@194 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) $generated@@866))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@233 $generated@@859 $generated@@860) (or ($generated@@194 $generated@@859 ($generated@@151 $generated@@213) $generated@@860) (=> (not ($generated@@155 $generated@@860)) (let (($generated@@868 ($generated@@157 $generated@@860)))
 (=> (not ($generated@@158 $generated@@868)) ($generated@@0 ($generated@@210 ($generated@@11 false))))))))) (=> (=> ($generated@@233 $generated@@859 $generated@@860) (or ($generated@@194 $generated@@859 ($generated@@151 $generated@@213) $generated@@860) (=> (not ($generated@@155 $generated@@860)) (let (($generated@@869 ($generated@@157 $generated@@860)))
 (=> (not ($generated@@158 $generated@@869)) ($generated@@0 ($generated@@210 ($generated@@11 false)))))))) (=> (and ($generated@@89 $generated@@861) ($generated@@858 $generated@@861)) (=> (and (and (and (and ($generated@@153 $generated@@859 $generated@@856) ($generated@@153 $generated@@859 $generated@@860)) (and ($generated@@209 $generated@@859 $generated@@856 $generated@@860) ($generated@@153 $generated@@859 ($generated@@212 $generated@@859 ($generated@@151 $generated@@213) $generated@@856 $generated@@860)))) ($generated@@390 ($generated@@163 ($generated@@150 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) $generated@@856) ($generated@@150 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) $generated@@860)) ($generated@@150 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) ($generated@@212 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) $generated@@856 $generated@@860)))) (and (= $generated@@857 $generated@@861) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@390 ($generated@@150 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) $generated@@856) ($generated@@150 $generated@@859 ($generated@@151 ($generated@@151 $generated@@213)) ($generated@@207 $generated@@859 $generated@@856)))))))))))))))
(let (($generated@@870  (=> (and ($generated@@89 $generated@@855) ($generated@@858 $generated@@855)) (=> (and (and (and ($generated@@154 $generated@@856 ($generated@@84 $generated@@859)) ($generated@@82 $generated@@856 ($generated@@84 $generated@@859) $generated@@855)) ($generated@@529 $generated@@856)) (and (= 4 $generated@@149) (= (ControlFlow 0 6) 2))) $generated@@862))))
$generated@@870)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@T) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (Int) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@255 (T@T T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U T@U) Bool)
(declare-fun $generated@@327 (T@U T@U) T@U)
(declare-fun $generated@@328 (T@U T@U) Bool)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U T@U T@U) Bool)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@382 (T@U T@U) Bool)
(declare-fun $generated@@383 (T@U) Int)
(declare-fun $generated@@384 (T@U Int) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@430 (T@U) Int)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@T T@T) T@U)
(declare-fun $generated@@442 (T@T T@T) T@T)
(declare-fun $generated@@443 (T@T) T@T)
(declare-fun $generated@@444 (T@T) T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@T T@T) T@U)
(declare-fun $generated@@460 (T@T T@T) T@T)
(declare-fun $generated@@461 (T@T) T@T)
(declare-fun $generated@@462 (T@T) T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Bool)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@535 (T@T T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@563 (T@U T@U) T@U)
(declare-fun $generated@@571 (T@U T@U) T@U)
(declare-fun $generated@@586 (T@T) T@U)
(declare-fun $generated@@610 () T@T)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@646 (T@U) T@U)
(declare-fun $generated@@664 (T@U) Int)
(declare-fun $generated@@666 (T@U) T@U)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@674 (T@U) T@U)
(declare-fun $generated@@678 (T@U) T@U)
(declare-fun $generated@@682 (T@U) T@U)
(declare-fun $generated@@685 (T@U) T@U)
(declare-fun $generated@@704 (T@U) Int)
(declare-fun $generated@@705 (T@U) Int)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@737 (T@U) T@U)
(declare-fun $generated@@829 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@167 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@167)) 16))) (forall (($generated@@168 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@165 $generated@@168))
))) (= ($generated@@1 $generated@@161) 17)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@150 $generated@@169 $generated@@170 $generated@@171)) ($generated@@165 $generated@@161))
 :pattern ( ($generated@@150 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@151 $generated@@172)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@156 $generated@@173)) $generated@@85)
 :pattern ( ($generated@@156 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@157 $generated@@174)) $generated@@85)
 :pattern ( ($generated@@157 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@159 $generated@@175)) $generated@@85)
 :pattern ( ($generated@@159 $generated@@175))
))) (forall (($generated@@176 T@T) ) (! (= (type ($generated@@160 $generated@@176)) ($generated@@165 $generated@@176))
 :pattern ( ($generated@@160 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@162 $generated@@177)) $generated@@161)
 :pattern ( ($generated@@162 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@166 (type $generated@@178))))
(= (type ($generated@@163 $generated@@178 $generated@@179)) ($generated@@165 $generated@@180)))
 :pattern ( ($generated@@163 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(= (type ($generated@@164 $generated@@181 $generated@@182)) ($generated@@165 $generated@@183)))
 :pattern ( ($generated@@164 $generated@@181 $generated@@182))
))))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) $generated@@152)) (= (type $generated@@186) $generated@@85)) (or ($generated@@153 $generated@@184 $generated@@186) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@186 ($generated@@84 $generated@@184))))) (and (=> (not ($generated@@155 $generated@@186)) (let (($generated@@187 ($generated@@156 $generated@@186)))
(let (($generated@@188 ($generated@@157 $generated@@186)))
 (and (=> ($generated@@158 $generated@@188) ($generated@@153 $generated@@184 $generated@@187)) (=> (not ($generated@@158 $generated@@188)) (let (($generated@@189 ($generated@@159 $generated@@188)))
 (and ($generated@@153 $generated@@184 $generated@@189) ($generated@@153 $generated@@184 $generated@@187)))))))) (= ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186) (ite ($generated@@155 $generated@@186) ($generated@@160 $generated@@161) (let (($generated@@190 ($generated@@156 $generated@@186)))
(let (($generated@@191 ($generated@@157 $generated@@186)))
(ite ($generated@@158 $generated@@191) (let (($generated@@192 ($generated@@162 $generated@@191)))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@192) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))) (let (($generated@@193 ($generated@@159 $generated@@191)))
($generated@@163 ($generated@@150 $generated@@184 $generated@@185 $generated@@193) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))))))))))
 :pattern ( ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@72) (= (type $generated@@196) $generated@@152)) (= (type $generated@@197) $generated@@85)) (= ($generated@@194 $generated@@195 ($generated@@151 $generated@@196) $generated@@197) ($generated@@194 $generated@@195 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@194 $generated@@195 ($generated@@151 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@2) (= (type $generated@@201) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@200 ($generated@@198 0) $generated@@201))
 :pattern ( ($generated@@82 $generated@@200 ($generated@@198 0) $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (and (= (type $generated@@204) $generated@@72) (= (type $generated@@205) $generated@@152)) (= (type $generated@@206) $generated@@85)) (or ($generated@@153 $generated@@204 $generated@@206) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@206 ($generated@@84 $generated@@204))))) ($generated@@154 ($generated@@150 $generated@@204 $generated@@205 $generated@@206) ($generated@@202 $generated@@204)))
 :pattern ( ($generated@@150 $generated@@204 $generated@@205 $generated@@206))
))))
(assert  (and (forall (($generated@@209 T@U) ) (! (= (type ($generated@@207 $generated@@209)) $generated@@152)
 :pattern ( ($generated@@207 $generated@@209))
)) (= (type $generated@@208) $generated@@152)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (= (type $generated@@210) $generated@@72) (= (type $generated@@211) $generated@@152)) (= (type $generated@@212) $generated@@85)) (= ($generated@@150 $generated@@210 $generated@@211 $generated@@212) ($generated@@150 $generated@@210 $generated@@208 $generated@@212)))
 :pattern ( ($generated@@150 $generated@@210 ($generated@@207 $generated@@211) $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@214) $generated@@85) (= (type $generated@@215) $generated@@85)) (and ($generated@@158 $generated@@214) ($generated@@158 $generated@@215))) (= ($generated@@213 $generated@@214 $generated@@215) (= ($generated@@162 $generated@@214) ($generated@@162 $generated@@215))))
 :pattern ( ($generated@@213 $generated@@214 $generated@@215) ($generated@@158 $generated@@214))
 :pattern ( ($generated@@213 $generated@@214 $generated@@215) ($generated@@158 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@2) ($generated@@154 $generated@@216 ($generated@@198 0)))
 :pattern ( ($generated@@154 $generated@@216 ($generated@@198 0)))
)))
(assert (forall (($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(= (type ($generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@218 $generated@@219))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@72) (= (type $generated@@222) $generated@@152)) (= (type $generated@@223) $generated@@85)) (or ($generated@@217 $generated@@221 $generated@@223) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@223 ($generated@@84 $generated@@221))))) (and (=> (not ($generated@@155 $generated@@223)) (let (($generated@@224 ($generated@@156 $generated@@223)))
(let (($generated@@225 ($generated@@157 $generated@@223)))
 (=> ($generated@@158 $generated@@225) ($generated@@217 $generated@@221 $generated@@224))))) (= ($generated@@194 $generated@@221 ($generated@@151 $generated@@222) $generated@@223) (ite ($generated@@155 $generated@@223) true (let (($generated@@226 ($generated@@156 $generated@@223)))
(let (($generated@@227 ($generated@@157 $generated@@223)))
(ite ($generated@@158 $generated@@227) ($generated@@194 $generated@@221 $generated@@222 $generated@@226) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))))
 :pattern ( ($generated@@194 $generated@@221 ($generated@@151 $generated@@222) $generated@@223))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231)) $generated@@72)
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@72) (= (type $generated@@233) $generated@@72)) (= (type $generated@@234) $generated@@85)) ($generated@@154 $generated@@234 ($generated@@229 $generated@@232 $generated@@233))) ($generated@@228 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234) ($generated@@154 $generated@@234 ($generated@@229 $generated@@232 $generated@@233)))
)))
(assert  (and (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@161)
 :pattern ( ($generated@@236 $generated@@238))
)) (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@161)
 :pattern ( ($generated@@237 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) $generated@@85) (= (type $generated@@241) $generated@@85)) true) (= ($generated@@235 $generated@@240 $generated@@241)  (and (= ($generated@@236 $generated@@240) ($generated@@236 $generated@@241)) (= ($generated@@237 $generated@@240) ($generated@@237 $generated@@241)))))
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@72) (= (type $generated@@243) $generated@@152)) (= (type $generated@@244) $generated@@85)) (= ($generated@@150 $generated@@242 ($generated@@151 $generated@@243) $generated@@244) ($generated@@150 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@150 $generated@@242 ($generated@@151 $generated@@243) $generated@@244))
)))
(assert  (and (forall (($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@247)) $generated@@76)
 :pattern ( ($generated@@245 $generated@@247))
)) (= (type $generated@@246) $generated@@85)))
(assert (= ($generated@@245 $generated@@246) $generated@@63))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@248 $generated@@250)) $generated@@72)
 :pattern ( ($generated@@248 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@252) $generated@@72)) ($generated@@154 $generated@@251 ($generated@@248 $generated@@252))) ($generated@@249 $generated@@251))
 :pattern ( ($generated@@154 $generated@@251 ($generated@@248 $generated@@252)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@259 $generated@@260)) 18)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@255 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@257 ($generated@@255 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@255 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@253 $generated@@265 $generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@253 $generated@@265 $generated@@266 $generated@@267))
))) (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(let (($generated@@274 (type $generated@@270)))
(= (type ($generated@@258 $generated@@269 $generated@@270 $generated@@271 $generated@@272)) ($generated@@255 $generated@@274 $generated@@273))))
 :pattern ( ($generated@@258 $generated@@269 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@257 (type $generated@@275))))
 (=> (= (type $generated@@278) $generated@@279) (= ($generated@@253 ($generated@@258 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@276 $generated@@277) $generated@@278)))
 :weight 0
))) (and (and (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (or (= $generated@@282 $generated@@284) (= ($generated@@253 ($generated@@258 $generated@@281 $generated@@282 $generated@@283 $generated@@280) $generated@@284 $generated@@285) ($generated@@253 $generated@@281 $generated@@284 $generated@@285)))
 :weight 0
)) (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (or (= $generated@@289 $generated@@291) (= ($generated@@253 ($generated@@258 $generated@@287 $generated@@288 $generated@@289 $generated@@286) $generated@@290 $generated@@291) ($generated@@253 $generated@@287 $generated@@290 $generated@@291)))
 :weight 0
))) (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (or true (= ($generated@@253 ($generated@@258 $generated@@293 $generated@@294 $generated@@295 $generated@@292) $generated@@296 $generated@@297) ($generated@@253 $generated@@293 $generated@@296 $generated@@297)))
 :weight 0
)))) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 Bool) ) (! (= (type ($generated@@254 $generated@@298 $generated@@299 $generated@@300 $generated@@301)) ($generated@@255 $generated@@87 $generated@@4))
 :pattern ( ($generated@@254 $generated@@298 $generated@@299 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Bool) ($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@75 (type $generated@@307))))
 (=> (and (and (and (and (= (type $generated@@302) $generated@@87) (= (type $generated@@303) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@304) ($generated@@74 $generated@@4))) (= (type $generated@@306) $generated@@87)) (= (type $generated@@307) ($generated@@74 $generated@@308))) (= ($generated@@0 ($generated@@253 ($generated@@254 $generated@@302 $generated@@303 $generated@@304 $generated@@305) $generated@@306 $generated@@307))  (=> (and (not (= $generated@@306 $generated@@302)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@303 $generated@@306) $generated@@304))) $generated@@305))))
 :pattern ( ($generated@@253 ($generated@@254 $generated@@302 $generated@@303 $generated@@304 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (! (= (type ($generated@@309 $generated@@311 $generated@@312 $generated@@313 $generated@@314)) $generated@@85)
 :pattern ( ($generated@@309 $generated@@311 $generated@@312 $generated@@313 $generated@@314))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) $generated@@72) (= (type $generated@@316) $generated@@152)) (= (type $generated@@317) $generated@@85)) (= (type $generated@@318) $generated@@85)) (or ($generated@@310 $generated@@315 $generated@@317 $generated@@318) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@317 ($generated@@84 $generated@@315)) ($generated@@154 $generated@@318 ($generated@@84 $generated@@315))) ($generated@@194 $generated@@315 ($generated@@151 $generated@@208) $generated@@318))))) (and (=> (not ($generated@@155 $generated@@317)) (let (($generated@@319 ($generated@@156 $generated@@317)))
(let (($generated@@320 ($generated@@157 $generated@@317)))
 (and (=> ($generated@@158 $generated@@320) ($generated@@310 $generated@@315 $generated@@319 $generated@@318)) (=> (not ($generated@@158 $generated@@320)) (let (($generated@@321 ($generated@@159 $generated@@320)))
 (and ($generated@@310 $generated@@315 $generated@@319 $generated@@318) ($generated@@310 $generated@@315 $generated@@321 ($generated@@309 $generated@@315 $generated@@316 $generated@@319 $generated@@318))))))))) (= ($generated@@309 $generated@@315 ($generated@@151 $generated@@316) $generated@@317 $generated@@318) (ite ($generated@@155 $generated@@317) $generated@@318 (let (($generated@@322 ($generated@@156 $generated@@317)))
(let (($generated@@323 ($generated@@157 $generated@@317)))
(ite ($generated@@158 $generated@@323) ($generated@@83 $generated@@323 ($generated@@309 $generated@@315 $generated@@316 $generated@@322 $generated@@318)) (let (($generated@@324 ($generated@@159 $generated@@323)))
($generated@@309 $generated@@315 $generated@@316 $generated@@324 ($generated@@309 $generated@@315 $generated@@316 $generated@@322 $generated@@318))))))))))
 :pattern ( ($generated@@309 $generated@@315 ($generated@@151 $generated@@316) $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@325) $generated@@72) (= (type $generated@@326) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@326)) ($generated@@82 $generated@@246 ($generated@@84 $generated@@325) $generated@@326))
 :pattern ( ($generated@@82 $generated@@246 ($generated@@84 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@329 $generated@@330)) $generated@@85)
 :pattern ( ($generated@@327 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@331) $generated@@72) (= (type $generated@@332) $generated@@72)) (= (type $generated@@333) $generated@@161)) (= (type $generated@@334) $generated@@161)) (= ($generated@@154 ($generated@@327 $generated@@333 $generated@@334) ($generated@@229 $generated@@331 $generated@@332))  (and ($generated@@328 $generated@@333 $generated@@331) ($generated@@328 $generated@@334 $generated@@332))))
 :pattern ( ($generated@@154 ($generated@@327 $generated@@333 $generated@@334) ($generated@@229 $generated@@331 $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@72) ($generated@@154 $generated@@246 ($generated@@84 $generated@@335)))
 :pattern ( ($generated@@154 $generated@@246 ($generated@@84 $generated@@335)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@85) (= (type $generated@@337) $generated@@85)) (= ($generated@@235 $generated@@336 $generated@@337) (= $generated@@336 $generated@@337)))
 :pattern ( ($generated@@235 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@85) (= (type $generated@@340) $generated@@85)) (= ($generated@@338 $generated@@339 $generated@@340) (= $generated@@339 $generated@@340)))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@85) (= (type $generated@@342) $generated@@85)) (= ($generated@@213 $generated@@341 $generated@@342) (= $generated@@341 $generated@@342)))
 :pattern ( ($generated@@213 $generated@@341 $generated@@342))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@343) $generated@@72) (= (type $generated@@344) $generated@@152)) (= (type $generated@@345) $generated@@85)) (= (type $generated@@346) $generated@@85)) (or ($generated@@310 $generated@@343 ($generated@@218 $generated@@345) ($generated@@218 $generated@@346)) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@345 ($generated@@84 $generated@@343)) ($generated@@154 $generated@@346 ($generated@@84 $generated@@343))) ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@194 $generated@@343 ($generated@@151 $generated@@208) ($generated@@218 $generated@@346))))))))) (and (=> (not ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@155 ($generated@@218 $generated@@345)))))) (let (($generated@@347 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@345)))))
(let (($generated@@348 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@345)))))
 (and (=> ($generated@@158 $generated@@348) ($generated@@310 $generated@@343 $generated@@347 ($generated@@218 $generated@@346))) (=> (not ($generated@@158 $generated@@348)) (let (($generated@@349 ($generated@@159 $generated@@348)))
 (and ($generated@@310 $generated@@343 $generated@@347 ($generated@@218 $generated@@346)) ($generated@@310 $generated@@343 $generated@@349 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@347 ($generated@@218 $generated@@346)))))))))) (= ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) ($generated@@218 $generated@@345) ($generated@@218 $generated@@346)) (ite ($generated@@155 ($generated@@218 $generated@@345)) $generated@@346 (let (($generated@@350 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@345)))))
(let (($generated@@351 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@345)))))
(ite ($generated@@158 $generated@@351) ($generated@@218 ($generated@@83 $generated@@351 ($generated@@218 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@350 ($generated@@218 $generated@@346))))) (let (($generated@@352 ($generated@@218 ($generated@@159 $generated@@351))))
($generated@@218 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@352 ($generated@@218 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@350 ($generated@@218 $generated@@346)))))))))))))
 :weight 3
 :pattern ( ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) ($generated@@218 $generated@@345) ($generated@@218 $generated@@346)))
))))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@72)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@356) $generated@@72)) (= ($generated@@154 $generated@@355 ($generated@@353 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@161) ($generated@@0 ($generated@@93 $generated@@355 $generated@@357))) ($generated@@328 $generated@@357 $generated@@356))
 :pattern ( ($generated@@93 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@154 $generated@@355 ($generated@@353 $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@72)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@361) $generated@@72)) (= ($generated@@154 $generated@@360 ($generated@@358 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@161) ($generated@@0 ($generated@@93 $generated@@360 $generated@@362))) ($generated@@328 $generated@@362 $generated@@361))
 :pattern ( ($generated@@93 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@154 $generated@@360 ($generated@@358 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ) (! (= ($generated@@218 $generated@@363) $generated@@363)
 :pattern ( ($generated@@218 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (and (= (type $generated@@364) ($generated@@165 $generated@@161)) (= (type $generated@@365) $generated@@161)) (= (type $generated@@366) $generated@@72)) (and ($generated@@154 $generated@@364 ($generated@@202 $generated@@366)) ($generated@@328 $generated@@365 $generated@@366))) ($generated@@154 ($generated@@164 $generated@@364 $generated@@365) ($generated@@202 $generated@@366)))
 :pattern ( ($generated@@154 ($generated@@164 $generated@@364 $generated@@365) ($generated@@202 $generated@@366)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@367) $generated@@85) (= (type $generated@@368) $generated@@85)) (and ($generated@@155 $generated@@367) ($generated@@155 $generated@@368))) (= ($generated@@338 $generated@@367 $generated@@368) true))
 :pattern ( ($generated@@338 $generated@@367 $generated@@368) ($generated@@155 $generated@@367))
 :pattern ( ($generated@@338 $generated@@367 $generated@@368) ($generated@@155 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@370) $generated@@72) (= (type $generated@@371) $generated@@72)) (= (type $generated@@372) $generated@@161)) (= (type $generated@@373) $generated@@161)) (= (type $generated@@374) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@374)) (= ($generated@@82 ($generated@@327 $generated@@372 $generated@@373) ($generated@@229 $generated@@370 $generated@@371) $generated@@374)  (and ($generated@@369 $generated@@372 $generated@@370 $generated@@374) ($generated@@369 $generated@@373 $generated@@371 $generated@@374))))
 :pattern ( ($generated@@82 ($generated@@327 $generated@@372 $generated@@373) ($generated@@229 $generated@@370 $generated@@371) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@85) (= ($generated@@228 $generated@@375) (= ($generated@@245 $generated@@375) $generated@@61)))
 :pattern ( ($generated@@228 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@85) (= ($generated@@155 $generated@@376) (= ($generated@@245 $generated@@376) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@85) (= ($generated@@377 $generated@@378) (= ($generated@@245 $generated@@378) $generated@@65)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@85) (= ($generated@@158 $generated@@379) (= ($generated@@245 $generated@@379) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@85) (= ($generated@@380 $generated@@381) (= ($generated@@245 $generated@@381) $generated@@68)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 Int) ) (! (let (($generated@@387 ($generated@@166 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@387))
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@166 (type $generated@@388))))
 (=> (and (= (type $generated@@388) ($generated@@165 $generated@@390)) (= (type $generated@@389) ($generated@@165 $generated@@390))) (= ($generated@@382 $generated@@388 $generated@@389)  (and (= ($generated@@383 $generated@@388) ($generated@@383 $generated@@389)) (forall (($generated@@391 Int) ) (!  (=> (and (<= 0 $generated@@391) (< $generated@@391 ($generated@@383 $generated@@388))) (= ($generated@@384 $generated@@388 $generated@@391) ($generated@@384 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@384 $generated@@388 $generated@@391))
 :pattern ( ($generated@@384 $generated@@389 $generated@@391))
))))))
 :pattern ( ($generated@@382 $generated@@388 $generated@@389))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) $generated@@72) (= (type $generated@@393) $generated@@152)) (= (type $generated@@394) $generated@@85)) (or ($generated@@217 $generated@@392 ($generated@@218 $generated@@394)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@394 ($generated@@84 $generated@@392))))) (and (=> (not ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@155 ($generated@@218 $generated@@394)))))) (let (($generated@@395 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@394)))))
(let (($generated@@396 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@394)))))
 (=> ($generated@@158 $generated@@396) ($generated@@217 $generated@@392 $generated@@395))))) (= ($generated@@194 $generated@@392 ($generated@@151 $generated@@393) ($generated@@218 $generated@@394)) (ite ($generated@@155 ($generated@@218 $generated@@394)) true (let (($generated@@397 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@394)))))
(let (($generated@@398 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@394)))))
(ite ($generated@@158 $generated@@398) ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@194 $generated@@392 ($generated@@151 $generated@@393) $generated@@397)))) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))))
 :weight 3
 :pattern ( ($generated@@194 $generated@@392 ($generated@@151 $generated@@393) ($generated@@218 $generated@@394)))
))))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@85) ($generated@@228 $generated@@399)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@161) (= (type $generated@@401) $generated@@161)) (= $generated@@399 ($generated@@327 $generated@@400 $generated@@401)))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
)))
 :pattern ( ($generated@@228 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@85) ($generated@@377 $generated@@402)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@85) (= (type $generated@@404) $generated@@85)) (= $generated@@402 ($generated@@83 $generated@@403 $generated@@404)))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
)))
 :pattern ( ($generated@@377 $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= ($generated@@383 ($generated@@160 $generated@@405)) 0)
 :pattern ( ($generated@@160 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) $generated@@72) (= (type $generated@@407) $generated@@85)) (= (type $generated@@408) $generated@@85)) (= ($generated@@154 ($generated@@83 $generated@@407 $generated@@408) ($generated@@84 $generated@@406))  (and ($generated@@154 $generated@@407 ($generated@@90 $generated@@406)) ($generated@@154 $generated@@408 ($generated@@84 $generated@@406)))))
 :pattern ( ($generated@@154 ($generated@@83 $generated@@407 $generated@@408) ($generated@@84 $generated@@406)))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@85) ($generated@@155 $generated@@409)) (= $generated@@409 $generated@@246))
 :pattern ( ($generated@@155 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (= (type ($generated@@410 $generated@@411)) $generated@@85)
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@85) ($generated@@158 $generated@@412)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@161) (= $generated@@412 ($generated@@410 $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
)))
 :pattern ( ($generated@@158 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@85)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@85) ($generated@@380 $generated@@416)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@85) (= $generated@@416 ($generated@@414 $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
)))
 :pattern ( ($generated@@380 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
 (=> (= (type $generated@@418) ($generated@@165 $generated@@420)) (= ($generated@@383 ($generated@@164 $generated@@418 $generated@@419)) (+ 1 ($generated@@383 $generated@@418)))))
 :pattern ( ($generated@@164 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@72) (= (type $generated@@422) $generated@@152)) (= (type $generated@@423) $generated@@85)) (= (type $generated@@424) $generated@@85)) (= ($generated@@309 $generated@@421 $generated@@422 $generated@@423 $generated@@424) ($generated@@309 $generated@@421 $generated@@208 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@309 $generated@@421 ($generated@@207 $generated@@422) $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@161)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@72) (= (type $generated@@429) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@369 ($generated@@425 $generated@@427) $generated@@428 $generated@@429) ($generated@@82 $generated@@427 $generated@@428 $generated@@429)))
 :pattern ( ($generated@@369 ($generated@@425 $generated@@427) $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@86 $generated@@432 $generated@@2))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@91 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@86 $generated@@434 $generated@@2)) (and (= (= ($generated@@430 $generated@@433) 0) (= $generated@@433 ($generated@@431 $generated@@434))) (=> (not (= ($generated@@430 $generated@@433) 0)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (< 0 ($generated ($generated@@93 $generated@@433 $generated@@435))))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@430 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@77)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@438)) $generated@@64) (= ($generated@@436 ($generated@@84 $generated@@438)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@439)) $generated@@66) (= ($generated@@436 ($generated@@90 $generated@@439)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@439))
)))
(assert  (and (and (and (and (forall (($generated@@445 T@T) ($generated@@446 T@T) ) (= ($generated@@1 ($generated@@442 $generated@@445 $generated@@446)) 19)) (forall (($generated@@447 T@T) ($generated@@448 T@T) ) (! (= ($generated@@443 ($generated@@442 $generated@@447 $generated@@448)) $generated@@447)
 :pattern ( ($generated@@442 $generated@@447 $generated@@448))
))) (forall (($generated@@449 T@T) ($generated@@450 T@T) ) (! (= ($generated@@444 ($generated@@442 $generated@@449 $generated@@450)) $generated@@450)
 :pattern ( ($generated@@442 $generated@@449 $generated@@450))
))) (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@443 (type $generated@@451))))
(= (type ($generated@@440 $generated@@451)) ($generated@@86 $generated@@452 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@451))
))) (forall (($generated@@453 T@T) ($generated@@454 T@T) ) (! (= (type ($generated@@441 $generated@@453 $generated@@454)) ($generated@@442 $generated@@453 $generated@@454))
 :pattern ( ($generated@@441 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@T) ) (! (let (($generated@@457 (type $generated@@455)))
 (not ($generated@@0 ($generated@@93 ($generated@@440 ($generated@@441 $generated@@457 $generated@@456)) $generated@@455))))
 :pattern ( (let (($generated@@457 (type $generated@@455)))
($generated@@93 ($generated@@440 ($generated@@441 $generated@@457 $generated@@456)) $generated@@455)))
)))
(assert  (and (and (and (and (forall (($generated@@463 T@T) ($generated@@464 T@T) ) (= ($generated@@1 ($generated@@460 $generated@@463 $generated@@464)) 20)) (forall (($generated@@465 T@T) ($generated@@466 T@T) ) (! (= ($generated@@461 ($generated@@460 $generated@@465 $generated@@466)) $generated@@465)
 :pattern ( ($generated@@460 $generated@@465 $generated@@466))
))) (forall (($generated@@467 T@T) ($generated@@468 T@T) ) (! (= ($generated@@462 ($generated@@460 $generated@@467 $generated@@468)) $generated@@468)
 :pattern ( ($generated@@460 $generated@@467 $generated@@468))
))) (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@461 (type $generated@@469))))
(= (type ($generated@@458 $generated@@469)) ($generated@@86 $generated@@470 $generated@@4)))
 :pattern ( ($generated@@458 $generated@@469))
))) (forall (($generated@@471 T@T) ($generated@@472 T@T) ) (! (= (type ($generated@@459 $generated@@471 $generated@@472)) ($generated@@460 $generated@@471 $generated@@472))
 :pattern ( ($generated@@459 $generated@@471 $generated@@472))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@T) ) (! (let (($generated@@475 (type $generated@@473)))
 (not ($generated@@0 ($generated@@93 ($generated@@458 ($generated@@459 $generated@@475 $generated@@474)) $generated@@473))))
 :pattern ( (let (($generated@@475 (type $generated@@473)))
($generated@@93 ($generated@@458 ($generated@@459 $generated@@475 $generated@@474)) $generated@@473)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) $generated@@72) (= (type $generated@@477) $generated@@152)) (= (type $generated@@478) $generated@@85)) (or ($generated@@217 $generated@@476 $generated@@478) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@478 ($generated@@84 $generated@@476))))) true)
 :pattern ( ($generated@@194 $generated@@476 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@166 (type $generated@@479))))
 (=> (and (= (type $generated@@479) ($generated@@165 $generated@@481)) (= (type $generated@@480) ($generated@@165 $generated@@481))) (= ($generated@@383 ($generated@@163 $generated@@479 $generated@@480)) (+ ($generated@@383 $generated@@479) ($generated@@383 $generated@@480)))))
 :pattern ( ($generated@@383 ($generated@@163 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@91 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@86 $generated@@483 $generated@@2)) (= ($generated@@249 $generated@@482) (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@483) (and (<= 0 ($generated ($generated@@93 $generated@@482 $generated@@484))) (<= ($generated ($generated@@93 $generated@@482 $generated@@484)) ($generated@@430 $generated@@482))))
 :pattern ( ($generated@@93 $generated@@482 $generated@@484))
)))))
 :pattern ( ($generated@@249 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 Int) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
 (=> (= (type $generated@@485) ($generated@@165 $generated@@488)) (and (=> (= $generated@@486 ($generated@@383 $generated@@485)) (= ($generated@@384 ($generated@@164 $generated@@485 $generated@@487) $generated@@486) $generated@@487)) (=> (not (= $generated@@486 ($generated@@383 $generated@@485))) (= ($generated@@384 ($generated@@164 $generated@@485 $generated@@487) $generated@@486) ($generated@@384 $generated@@485 $generated@@486))))))
 :pattern ( ($generated@@384 ($generated@@164 $generated@@485 $generated@@487) $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) $generated@@85) (= (type $generated@@490) $generated@@85)) (and ($generated@@380 $generated@@489) ($generated@@380 $generated@@490))) (= ($generated@@213 $generated@@489 $generated@@490) ($generated@@338 ($generated@@159 $generated@@489) ($generated@@159 $generated@@490))))
 :pattern ( ($generated@@213 $generated@@489 $generated@@490) ($generated@@380 $generated@@489))
 :pattern ( ($generated@@213 $generated@@489 $generated@@490) ($generated@@380 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@444 (type $generated@@491))))
(let (($generated@@493 ($generated@@443 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@442 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@441 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@493) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@491) $generated@@494)))
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@440 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@444 (type $generated@@496))))
(= (type ($generated@@495 $generated@@496)) ($generated@@86 $generated@@497 $generated@@4)))
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@444 (type $generated@@498))))
(let (($generated@@500 ($generated@@443 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@442 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@441 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ) (!  (and (= (type $generated@@501) $generated@@499) ($generated@@0 ($generated@@93 ($generated@@495 $generated@@498) $generated@@501)))
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@495 $generated@@498))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@462 (type $generated@@502))))
(let (($generated@@504 ($generated@@461 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@460 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@459 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ) (!  (and (= (type $generated@@505) $generated@@504) ($generated@@0 ($generated@@93 ($generated@@458 $generated@@502) $generated@@505)))
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@458 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@462 (type $generated@@507))))
(= (type ($generated@@506 $generated@@507)) ($generated@@86 $generated@@508 $generated@@4)))
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@462 (type $generated@@509))))
(let (($generated@@511 ($generated@@461 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@460 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@459 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ) (!  (and (= (type $generated@@512) $generated@@510) ($generated@@0 ($generated@@93 ($generated@@506 $generated@@509) $generated@@512)))
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
))))))
 :pattern ( ($generated@@506 $generated@@509))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@514) $generated@@72)) (= ($generated@@154 $generated@@513 ($generated@@248 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@513 $generated@@515)))) ($generated@@328 $generated@@515 $generated@@514))
 :pattern ( ($generated@@93 $generated@@513 $generated@@515))
))))
 :pattern ( ($generated@@154 $generated@@513 ($generated@@248 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@72) (= (type $generated@@517) $generated@@161)) (= (type $generated@@518) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@518)) (= ($generated@@82 ($generated@@410 $generated@@517) ($generated@@90 $generated@@516) $generated@@518) ($generated@@369 $generated@@517 $generated@@516 $generated@@518)))
 :pattern ( ($generated@@82 ($generated@@410 $generated@@517) ($generated@@90 $generated@@516) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@85) ($generated@@519 $generated@@520)) (or ($generated@@155 $generated@@520) ($generated@@377 $generated@@520)))
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@72) (= (type $generated@@522) $generated@@85)) (= (type $generated@@523) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@523)) (= ($generated@@82 ($generated@@414 $generated@@522) ($generated@@90 $generated@@521) $generated@@523) ($generated@@82 $generated@@522 ($generated@@84 $generated@@521) $generated@@523)))
 :pattern ( ($generated@@82 ($generated@@414 $generated@@522) ($generated@@90 $generated@@521) $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@525) $generated@@72)) (= (type $generated@@526) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@524 ($generated@@353 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@0 ($generated@@93 $generated@@524 $generated@@527))) ($generated@@369 $generated@@527 $generated@@525 $generated@@526))
 :pattern ( ($generated@@93 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@353 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@529) $generated@@72)) (= (type $generated@@530) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@528 ($generated@@358 $generated@@529) $generated@@530) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@161) ($generated@@0 ($generated@@93 $generated@@528 $generated@@531))) ($generated@@369 $generated@@531 $generated@@529 $generated@@530))
 :pattern ( ($generated@@93 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@82 $generated@@528 ($generated@@358 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated ($generated@@93 ($generated@@431 $generated@@533) $generated@@532)) 0))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@93 ($generated@@431 $generated@@533) $generated@@532)))
)))
(assert  (and (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@534 $generated@@537)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@534 $generated@@537))
)) (forall (($generated@@538 T@T) ($generated@@539 T@U) ) (! (= (type ($generated@@535 $generated@@538 $generated@@539)) $generated@@538)
 :pattern ( ($generated@@535 $generated@@538 $generated@@539))
))) (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@444 (type $generated@@540))))
(let (($generated@@542 ($generated@@443 (type $generated@@540))))
(= (type ($generated@@536 $generated@@540)) ($generated@@86 $generated@@542 $generated@@541))))
 :pattern ( ($generated@@536 $generated@@540))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@544) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@534 $generated@@543) $generated@@544))  (and ($generated@@0 ($generated@@93 ($generated@@440 $generated@@543) ($generated@@236 ($generated@@535 $generated@@85 $generated@@544)))) (= ($generated@@93 ($generated@@536 $generated@@543) ($generated@@236 ($generated@@535 $generated@@85 $generated@@544))) ($generated@@237 ($generated@@535 $generated@@85 $generated@@544))))))
 :pattern ( ($generated@@93 ($generated@@534 $generated@@543) $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@462 (type $generated@@548))))
(let (($generated@@550 ($generated@@461 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548)) ($generated@@86 $generated@@550 $generated@@549))))
 :pattern ( ($generated@@546 $generated@@548))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@552) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@545 $generated@@551) $generated@@552))  (and ($generated@@0 ($generated@@93 ($generated@@458 $generated@@551) ($generated@@236 ($generated@@535 $generated@@85 $generated@@552)))) (= ($generated@@93 ($generated@@546 $generated@@551) ($generated@@236 ($generated@@535 $generated@@85 $generated@@552))) ($generated@@237 ($generated@@535 $generated@@85 $generated@@552))))))
 :pattern ( ($generated@@93 ($generated@@545 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(let (($generated@@556 ($generated@@443 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@442 $generated@@556 $generated@@555)) (= ($generated@@0 ($generated@@93 ($generated@@495 $generated@@553) $generated@@554)) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@556) (and ($generated@@0 ($generated@@93 ($generated@@440 $generated@@553) $generated@@557)) (= $generated@@554 ($generated@@93 ($generated@@536 $generated@@553) $generated@@557))))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@553) $generated@@557))
 :pattern ( ($generated@@93 ($generated@@536 $generated@@553) $generated@@557))
))))))
 :pattern ( ($generated@@93 ($generated@@495 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(let (($generated@@561 ($generated@@461 (type $generated@@558))))
 (=> (= (type $generated@@558) ($generated@@460 $generated@@561 $generated@@560)) (= ($generated@@0 ($generated@@93 ($generated@@506 $generated@@558) $generated@@559)) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@561) (and ($generated@@0 ($generated@@93 ($generated@@458 $generated@@558) $generated@@562)) (= $generated@@559 ($generated@@93 ($generated@@546 $generated@@558) $generated@@562))))
 :pattern ( ($generated@@93 ($generated@@458 $generated@@558) $generated@@562))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@558) $generated@@562))
))))))
 :pattern ( ($generated@@93 ($generated@@506 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (= (type ($generated@@563 $generated@@564 $generated@@565)) $generated@@72)
 :pattern ( ($generated@@563 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@567) $generated@@72)) (= (type $generated@@568) $generated@@72)) (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@566 ($generated@@563 $generated@@567 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@566) $generated@@570))) (and ($generated@@369 ($generated@@93 ($generated@@536 $generated@@566) $generated@@570) $generated@@568 $generated@@569) ($generated@@369 $generated@@570 $generated@@567 $generated@@569)))
 :pattern ( ($generated@@93 ($generated@@536 $generated@@566) $generated@@570))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@566) $generated@@570))
))))
 :pattern ( ($generated@@82 $generated@@566 ($generated@@563 $generated@@567 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@571 $generated@@572 $generated@@573)) $generated@@72)
 :pattern ( ($generated@@571 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@575) $generated@@72)) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@574 ($generated@@571 $generated@@575 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@458 $generated@@574) $generated@@578))) (and ($generated@@369 ($generated@@93 ($generated@@546 $generated@@574) $generated@@578) $generated@@576 $generated@@577) ($generated@@369 $generated@@578 $generated@@575 $generated@@577)))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@574) $generated@@578))
 :pattern ( ($generated@@93 ($generated@@458 $generated@@574) $generated@@578))
))))
 :pattern ( ($generated@@82 $generated@@574 ($generated@@571 $generated@@575 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@72) (= (type $generated@@580) $generated@@85)) ($generated@@154 $generated@@580 ($generated@@84 $generated@@579))) (or ($generated@@155 $generated@@580) ($generated@@377 $generated@@580)))
 :pattern ( ($generated@@377 $generated@@580) ($generated@@154 $generated@@580 ($generated@@84 $generated@@579)))
 :pattern ( ($generated@@155 $generated@@580) ($generated@@154 $generated@@580 ($generated@@84 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@72) (= (type $generated@@582) $generated@@85)) ($generated@@154 $generated@@582 ($generated@@90 $generated@@581))) (or ($generated@@158 $generated@@582) ($generated@@380 $generated@@582)))
 :pattern ( ($generated@@380 $generated@@582) ($generated@@154 $generated@@582 ($generated@@90 $generated@@581)))
 :pattern ( ($generated@@158 $generated@@582) ($generated@@154 $generated@@582 ($generated@@90 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@166 (type $generated@@583))))
 (=> (and (and (= (type $generated@@583) ($generated@@165 $generated@@585)) (= (type $generated@@584) ($generated@@165 $generated@@585))) ($generated@@382 $generated@@583 $generated@@584)) (= $generated@@583 $generated@@584)))
 :pattern ( ($generated@@382 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@587 T@T) ) (! (= (type ($generated@@586 $generated@@587)) ($generated@@86 $generated@@587 $generated@@4))
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@462 (type $generated@@588))))
(let (($generated@@590 ($generated@@461 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@460 $generated@@590 $generated@@589)) (= (= $generated@@588 ($generated@@459 $generated@@590 $generated@@589)) (= ($generated@@458 $generated@@588) ($generated@@586 $generated@@590))))))
 :pattern ( ($generated@@458 $generated@@588))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@462 (type $generated@@591))))
(let (($generated@@593 ($generated@@461 (type $generated@@591))))
 (=> (= (type $generated@@591) ($generated@@460 $generated@@593 $generated@@592)) (= (= $generated@@591 ($generated@@459 $generated@@593 $generated@@592)) (= ($generated@@506 $generated@@591) ($generated@@586 $generated@@592))))))
 :pattern ( ($generated@@506 $generated@@591))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@462 (type $generated@@594))))
(let (($generated@@596 ($generated@@461 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@460 $generated@@596 $generated@@595)) (= (= $generated@@594 ($generated@@459 $generated@@596 $generated@@595)) (= ($generated@@545 $generated@@594) ($generated@@586 $generated@@161))))))
 :pattern ( ($generated@@545 $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@444 (type $generated@@597))))
(let (($generated@@599 ($generated@@443 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@442 $generated@@599 $generated@@598)) (or (= $generated@@597 ($generated@@441 $generated@@599 $generated@@598)) (exists (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (and (and (= (type $generated@@600) $generated@@161) (= (type $generated@@601) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@534 $generated@@597) ($generated@@425 ($generated@@327 $generated@@600 $generated@@601)))))
 :no-pattern (type $generated@@600)
 :no-pattern (type $generated@@601)
 :no-pattern ($generated $generated@@600)
 :no-pattern ($generated@@0 $generated@@600)
 :no-pattern ($generated $generated@@601)
 :no-pattern ($generated@@0 $generated@@601)
))))))
 :pattern ( ($generated@@534 $generated@@597))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@462 (type $generated@@602))))
(let (($generated@@604 ($generated@@461 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@460 $generated@@604 $generated@@603)) (or (= $generated@@602 ($generated@@459 $generated@@604 $generated@@603)) (exists (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (and (and (= (type $generated@@605) $generated@@161) (= (type $generated@@606) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@545 $generated@@602) ($generated@@425 ($generated@@327 $generated@@605 $generated@@606)))))
 :no-pattern (type $generated@@605)
 :no-pattern (type $generated@@606)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
 :no-pattern ($generated $generated@@606)
 :no-pattern ($generated@@0 $generated@@606)
))))))
 :pattern ( ($generated@@545 $generated@@602))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@161) ($generated@@328 $generated@@607 $generated@@46)) (and (= ($generated@@425 ($generated@@535 $generated@@2 $generated@@607)) $generated@@607) ($generated@@154 ($generated@@535 $generated@@2 $generated@@607) $generated@@46)))
 :pattern ( ($generated@@328 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@161) ($generated@@328 $generated@@608 $generated@@47)) (and (= ($generated@@425 ($generated@@535 $generated@@3 $generated@@608)) $generated@@608) ($generated@@154 ($generated@@535 $generated@@3 $generated@@608) $generated@@47)))
 :pattern ( ($generated@@328 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@161) ($generated@@328 $generated@@609 $generated@@44)) (and (= ($generated@@425 ($generated@@535 $generated@@4 $generated@@609)) $generated@@609) ($generated@@154 ($generated@@535 $generated@@4 $generated@@609) $generated@@44)))
 :pattern ( ($generated@@328 $generated@@609 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@610) 21))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@161) ($generated@@328 $generated@@611 $generated@@45)) (and (= ($generated@@425 ($generated@@535 $generated@@610 $generated@@611)) $generated@@611) ($generated@@154 ($generated@@535 $generated@@610 $generated@@611) $generated@@45)))
 :pattern ( ($generated@@328 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@85) (= (type $generated@@613) $generated@@85)) (and ($generated@@377 $generated@@612) ($generated@@377 $generated@@613))) (= ($generated@@338 $generated@@612 $generated@@613)  (and ($generated@@213 ($generated@@157 $generated@@612) ($generated@@157 $generated@@613)) ($generated@@338 ($generated@@156 $generated@@612) ($generated@@156 $generated@@613)))))
 :pattern ( ($generated@@338 $generated@@612 $generated@@613) ($generated@@377 $generated@@612))
 :pattern ( ($generated@@338 $generated@@612 $generated@@613) ($generated@@377 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@72) (= ($generated@@328 ($generated@@425 $generated@@614) $generated@@615) ($generated@@154 $generated@@614 $generated@@615)))
 :pattern ( ($generated@@328 ($generated@@425 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@91 (type $generated@@616))))
 (=> (= (type $generated@@616) ($generated@@86 $generated@@617 $generated@@2)) (<= 0 ($generated@@430 $generated@@616))))
 :pattern ( ($generated@@430 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@166 (type $generated@@618))))
 (=> (= (type $generated@@618) ($generated@@165 $generated@@619)) (<= 0 ($generated@@383 $generated@@618))))
 :pattern ( ($generated@@383 $generated@@618))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@72)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@72) (= (type $generated@@623) $generated@@72)) (= ($generated@@620 ($generated@@563 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@563 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@72)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@72) (= (type $generated@@627) $generated@@72)) (= ($generated@@624 ($generated@@563 $generated@@626 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@563 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@72) (= (type $generated@@629) $generated@@72)) (= ($generated@@80 ($generated@@563 $generated@@628 $generated@@629)) $generated@@58))
 :pattern ( ($generated@@563 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@72)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@72) (= (type $generated@@633) $generated@@72)) (= ($generated@@630 ($generated@@571 $generated@@632 $generated@@633)) $generated@@632))
 :pattern ( ($generated@@571 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@72)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@72) (= (type $generated@@637) $generated@@72)) (= ($generated@@634 ($generated@@571 $generated@@636 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@571 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@72) (= (type $generated@@639) $generated@@72)) (= ($generated@@80 ($generated@@571 $generated@@638 $generated@@639)) $generated@@59))
 :pattern ( ($generated@@571 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@161) (= (type $generated@@641) $generated@@161)) (= ($generated@@245 ($generated@@327 $generated@@640 $generated@@641)) $generated@@61))
 :pattern ( ($generated@@327 $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@72)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@72) (= (type $generated@@645) $generated@@72)) (= ($generated@@642 ($generated@@229 $generated@@644 $generated@@645)) $generated@@644))
 :pattern ( ($generated@@229 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ) (! (= (type ($generated@@646 $generated@@647)) $generated@@72)
 :pattern ( ($generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@72) (= (type $generated@@649) $generated@@72)) (= ($generated@@646 ($generated@@229 $generated@@648 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@229 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@161) (= (type $generated@@651) $generated@@161)) (= ($generated@@236 ($generated@@327 $generated@@650 $generated@@651)) $generated@@650))
 :pattern ( ($generated@@327 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@161) (= (type $generated@@653) $generated@@161)) (= ($generated@@237 ($generated@@327 $generated@@652 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@327 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@85) (= (type $generated@@655) $generated@@85)) (= ($generated@@245 ($generated@@83 $generated@@654 $generated@@655)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@85) (= (type $generated@@657) $generated@@85)) (= ($generated@@157 ($generated@@83 $generated@@656 $generated@@657)) $generated@@656))
 :pattern ( ($generated@@83 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@85) (= (type $generated@@659) $generated@@85)) (= ($generated@@156 ($generated@@83 $generated@@658 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@83 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@660) ($generated@@165 $generated@@161)) (= (type $generated@@661) $generated@@72)) (= (type $generated@@662) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@660 ($generated@@202 $generated@@661) $generated@@662) (forall (($generated@@663 Int) ) (!  (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@383 $generated@@660))) ($generated@@369 ($generated@@384 $generated@@660 $generated@@663) $generated@@661 $generated@@662))
 :pattern ( ($generated@@384 $generated@@660 $generated@@663))
))))
 :pattern ( ($generated@@82 $generated@@660 ($generated@@202 $generated@@661) $generated@@662))
)))
(assert (forall (($generated@@665 Int) ) (! (= ($generated@@664 ($generated@@198 $generated@@665)) $generated@@665)
 :pattern ( ($generated@@198 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ) (! (= (type ($generated@@666 $generated@@667)) $generated@@72)
 :pattern ( ($generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@72) (= ($generated@@666 ($generated@@353 $generated@@668)) $generated@@668))
 :pattern ( ($generated@@353 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@72) (= ($generated@@80 ($generated@@353 $generated@@669)) $generated@@54))
 :pattern ( ($generated@@353 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ) (! (= (type ($generated@@670 $generated@@671)) $generated@@72)
 :pattern ( ($generated@@670 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@72) (= ($generated@@670 ($generated@@358 $generated@@672)) $generated@@672))
 :pattern ( ($generated@@358 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@72) (= ($generated@@80 ($generated@@358 $generated@@673)) $generated@@55))
 :pattern ( ($generated@@358 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (! (= (type ($generated@@674 $generated@@675)) $generated@@72)
 :pattern ( ($generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@72) (= ($generated@@674 ($generated@@248 $generated@@676)) $generated@@676))
 :pattern ( ($generated@@248 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@72) (= ($generated@@80 ($generated@@248 $generated@@677)) $generated@@56))
 :pattern ( ($generated@@248 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ) (! (= (type ($generated@@678 $generated@@679)) $generated@@72)
 :pattern ( ($generated@@678 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@72) (= ($generated@@678 ($generated@@202 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@202 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@72) (= ($generated@@80 ($generated@@202 $generated@@681)) $generated@@57))
 :pattern ( ($generated@@202 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ) (! (= (type ($generated@@682 $generated@@683)) $generated@@72)
 :pattern ( ($generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@72) (= ($generated@@682 ($generated@@84 $generated@@684)) $generated@@684))
 :pattern ( ($generated@@84 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ) (! (= (type ($generated@@685 $generated@@686)) $generated@@72)
 :pattern ( ($generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@72) (= ($generated@@685 ($generated@@90 $generated@@687)) $generated@@687))
 :pattern ( ($generated@@90 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@161) (= ($generated@@245 ($generated@@410 $generated@@688)) $generated@@67))
 :pattern ( ($generated@@410 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@161) (= ($generated@@162 ($generated@@410 $generated@@689)) $generated@@689))
 :pattern ( ($generated@@410 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@85) (= ($generated@@245 ($generated@@414 $generated@@690)) $generated@@68))
 :pattern ( ($generated@@414 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@85) (= ($generated@@159 ($generated@@414 $generated@@691)) $generated@@691))
 :pattern ( ($generated@@414 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
(= ($generated@@535 $generated@@693 ($generated@@425 $generated@@692)) $generated@@692))
 :pattern ( ($generated@@425 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@694) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@695) $generated@@72)) (= (type $generated@@696) $generated@@72)) (= ($generated@@154 $generated@@694 ($generated@@563 $generated@@695 $generated@@696)) (forall (($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@694) $generated@@697))) (and ($generated@@328 ($generated@@93 ($generated@@536 $generated@@694) $generated@@697) $generated@@696) ($generated@@328 $generated@@697 $generated@@695)))
 :pattern ( ($generated@@93 ($generated@@536 $generated@@694) $generated@@697))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@694) $generated@@697))
))))
 :pattern ( ($generated@@154 $generated@@694 ($generated@@563 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@699) $generated@@72)) (= (type $generated@@700) $generated@@72)) (= ($generated@@154 $generated@@698 ($generated@@571 $generated@@699 $generated@@700)) (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@458 $generated@@698) $generated@@701))) (and ($generated@@328 ($generated@@93 ($generated@@546 $generated@@698) $generated@@701) $generated@@700) ($generated@@328 $generated@@701 $generated@@699)))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@698) $generated@@701))
 :pattern ( ($generated@@93 ($generated@@458 $generated@@698) $generated@@701))
))))
 :pattern ( ($generated@@154 $generated@@698 ($generated@@571 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@72) (= (type $generated@@703) $generated@@161)) (= ($generated@@154 ($generated@@410 $generated@@703) ($generated@@90 $generated@@702)) ($generated@@328 $generated@@703 $generated@@702)))
 :pattern ( ($generated@@154 ($generated@@410 $generated@@703) ($generated@@90 $generated@@702)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@161) (= (type $generated@@707) $generated@@161)) (< ($generated@@704 $generated@@706) ($generated@@705 ($generated@@327 $generated@@706 $generated@@707))))
 :pattern ( ($generated@@327 $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@161) (= (type $generated@@709) $generated@@161)) (< ($generated@@704 $generated@@709) ($generated@@705 ($generated@@327 $generated@@708 $generated@@709))))
 :pattern ( ($generated@@327 $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@85) (= (type $generated@@711) $generated@@85)) (< ($generated@@705 $generated@@710) ($generated@@705 ($generated@@83 $generated@@710 $generated@@711))))
 :pattern ( ($generated@@83 $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@85) (= (type $generated@@713) $generated@@85)) (< ($generated@@705 $generated@@713) ($generated@@705 ($generated@@83 $generated@@712 $generated@@713))))
 :pattern ( ($generated@@83 $generated@@712 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) $generated@@161) (= (type $generated@@715) $generated@@72)) (= (type $generated@@716) $generated@@72)) ($generated@@328 $generated@@714 ($generated@@563 $generated@@715 $generated@@716))) (and (= ($generated@@425 ($generated@@535 ($generated@@442 $generated@@161 $generated@@161) $generated@@714)) $generated@@714) ($generated@@154 ($generated@@535 ($generated@@442 $generated@@161 $generated@@161) $generated@@714) ($generated@@563 $generated@@715 $generated@@716))))
 :pattern ( ($generated@@328 $generated@@714 ($generated@@563 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) $generated@@161) (= (type $generated@@718) $generated@@72)) (= (type $generated@@719) $generated@@72)) ($generated@@328 $generated@@717 ($generated@@571 $generated@@718 $generated@@719))) (and (= ($generated@@425 ($generated@@535 ($generated@@460 $generated@@161 $generated@@161) $generated@@717)) $generated@@717) ($generated@@154 ($generated@@535 ($generated@@460 $generated@@161 $generated@@161) $generated@@717) ($generated@@571 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@328 $generated@@717 ($generated@@571 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@72) (= (type $generated@@721) $generated@@72)) (= (type $generated@@722) $generated@@161)) ($generated@@328 $generated@@722 ($generated@@229 $generated@@720 $generated@@721))) (and (= ($generated@@425 ($generated@@535 $generated@@85 $generated@@722)) $generated@@722) ($generated@@154 ($generated@@535 $generated@@85 $generated@@722) ($generated@@229 $generated@@720 $generated@@721))))
 :pattern ( ($generated@@328 $generated@@722 ($generated@@229 $generated@@720 $generated@@721)))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@161) (< ($generated@@704 $generated@@723) ($generated@@705 ($generated@@410 $generated@@723))))
 :pattern ( ($generated@@410 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@85) (< ($generated@@705 $generated@@724) ($generated@@705 ($generated@@414 $generated@@724))))
 :pattern ( ($generated@@414 $generated@@724))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (and (= (type $generated@@725) $generated@@85) (= (type $generated@@726) $generated@@72)) (= (type $generated@@727) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@727) (and ($generated@@158 $generated@@725) ($generated@@82 $generated@@725 ($generated@@90 $generated@@726) $generated@@727)))) ($generated@@369 ($generated@@162 $generated@@725) $generated@@726 $generated@@727))
 :pattern ( ($generated@@369 ($generated@@162 $generated@@725) $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ) (! (let (($generated@@729 (type $generated@@728)))
 (not ($generated@@0 ($generated@@93 ($generated@@586 $generated@@729) $generated@@728))))
 :pattern ( (let (($generated@@729 (type $generated@@728)))
($generated@@93 ($generated@@586 $generated@@729) $generated@@728)))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@730) $generated@@72) (= (type $generated@@731) $generated@@152)) (= (type $generated@@732) $generated@@85)) (= (type $generated@@733) $generated@@85)) (or ($generated@@310 $generated@@730 $generated@@732 $generated@@733) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@732 ($generated@@84 $generated@@730)) ($generated@@154 $generated@@733 ($generated@@84 $generated@@730))) ($generated@@194 $generated@@730 ($generated@@151 $generated@@208) $generated@@733))))) (and ($generated@@194 $generated@@730 ($generated@@151 $generated@@208) ($generated@@309 $generated@@730 $generated@@731 $generated@@732 $generated@@733)) ($generated@@154 ($generated@@309 $generated@@730 $generated@@731 $generated@@732 $generated@@733) ($generated@@84 $generated@@730))))
 :pattern ( ($generated@@309 $generated@@730 $generated@@731 $generated@@732 $generated@@733))
))))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@72) (= (type $generated@@735) $generated@@72)) (and (= ($generated@@80 ($generated@@229 $generated@@734 $generated@@735)) $generated@@62) (= ($generated@@436 ($generated@@229 $generated@@734 $generated@@735)) $generated@@69)))
 :pattern ( ($generated@@229 $generated@@734 $generated@@735))
)))
(assert  (and (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@166 (type $generated@@738))))
(= (type ($generated@@736 $generated@@738)) ($generated@@165 $generated@@739)))
 :pattern ( ($generated@@736 $generated@@738))
)) (forall (($generated@@740 T@U) ) (! (let (($generated@@741 ($generated@@166 (type $generated@@740))))
(= (type ($generated@@737 $generated@@740)) $generated@@741))
 :pattern ( ($generated@@737 $generated@@740))
))))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (! (let (($generated@@744 (type $generated@@743)))
 (=> (= (type $generated@@742) ($generated@@165 $generated@@744)) (and (= ($generated@@736 ($generated@@164 $generated@@742 $generated@@743)) $generated@@742) (= ($generated@@737 ($generated@@164 $generated@@742 $generated@@743)) $generated@@743))))
 :pattern ( ($generated@@164 $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@85) (= ($generated@@704 ($generated@@425 $generated@@745)) ($generated@@705 $generated@@745)))
 :pattern ( ($generated@@704 ($generated@@425 $generated@@745)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (= (type $generated@@746) $generated@@72) (= (type $generated@@747) $generated@@152)) (= (type $generated@@748) $generated@@85)) (or ($generated@@153 $generated@@746 ($generated@@218 $generated@@748)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@748 ($generated@@84 $generated@@746))))) (and (=> (not ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@155 ($generated@@218 $generated@@748)))))) (let (($generated@@749 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@748)))))
(let (($generated@@750 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@748)))))
 (and (=> ($generated@@158 $generated@@750) ($generated@@153 $generated@@746 $generated@@749)) (=> (not ($generated@@158 $generated@@750)) (let (($generated@@751 ($generated@@159 $generated@@750)))
 (and ($generated@@153 $generated@@746 $generated@@751) ($generated@@153 $generated@@746 $generated@@749)))))))) (= ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) ($generated@@218 $generated@@748)) (ite ($generated@@155 ($generated@@218 $generated@@748)) ($generated@@160 $generated@@161) (let (($generated@@752 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@748)))))
(let (($generated@@753 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@748)))))
(ite ($generated@@158 $generated@@753) (let (($generated@@754 ($generated@@218 ($generated@@162 $generated@@753))))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@754) ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) $generated@@752))) (let (($generated@@755 ($generated@@218 ($generated@@159 $generated@@753))))
($generated@@163 ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) $generated@@755) ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) $generated@@752))))))))))
 :weight 3
 :pattern ( ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) ($generated@@218 $generated@@748)))
))))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) $generated@@72) (= (type $generated@@757) $generated@@152)) (= (type $generated@@758) $generated@@85)) (= (type $generated@@759) $generated@@85)) (= ($generated@@309 $generated@@756 ($generated@@151 $generated@@757) $generated@@758 $generated@@759) ($generated@@309 $generated@@756 $generated@@757 $generated@@758 $generated@@759)))
 :pattern ( ($generated@@309 $generated@@756 ($generated@@151 $generated@@757) $generated@@758 $generated@@759))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@760) $generated@@161) ($generated@@328 $generated@@760 ($generated@@198 0))) (and (= ($generated@@425 ($generated@@535 $generated@@2 $generated@@760)) $generated@@760) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@760) ($generated@@198 0))))
 :pattern ( ($generated@@328 $generated@@760 ($generated@@198 0)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@761) $generated@@161) (= (type $generated@@762) $generated@@72)) ($generated@@328 $generated@@761 ($generated@@353 $generated@@762))) (and (= ($generated@@425 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@761)) $generated@@761) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@761) ($generated@@353 $generated@@762))))
 :pattern ( ($generated@@328 $generated@@761 ($generated@@353 $generated@@762)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (and (= (type $generated@@763) $generated@@161) (= (type $generated@@764) $generated@@72)) ($generated@@328 $generated@@763 ($generated@@358 $generated@@764))) (and (= ($generated@@425 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@763)) $generated@@763) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@763) ($generated@@358 $generated@@764))))
 :pattern ( ($generated@@328 $generated@@763 ($generated@@358 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (= (type $generated@@765) $generated@@161) (= (type $generated@@766) $generated@@72)) ($generated@@328 $generated@@765 ($generated@@248 $generated@@766))) (and (= ($generated@@425 ($generated@@535 ($generated@@86 $generated@@161 $generated@@2) $generated@@765)) $generated@@765) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@2) $generated@@765) ($generated@@248 $generated@@766))))
 :pattern ( ($generated@@328 $generated@@765 ($generated@@248 $generated@@766)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (= (type $generated@@767) $generated@@161) (= (type $generated@@768) $generated@@72)) ($generated@@328 $generated@@767 ($generated@@202 $generated@@768))) (and (= ($generated@@425 ($generated@@535 ($generated@@165 $generated@@161) $generated@@767)) $generated@@767) ($generated@@154 ($generated@@535 ($generated@@165 $generated@@161) $generated@@767) ($generated@@202 $generated@@768))))
 :pattern ( ($generated@@328 $generated@@767 ($generated@@202 $generated@@768)))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (and (= (type $generated@@769) $generated@@72) (= (type $generated@@770) $generated@@161)) ($generated@@328 $generated@@770 ($generated@@84 $generated@@769))) (and (= ($generated@@425 ($generated@@535 $generated@@85 $generated@@770)) $generated@@770) ($generated@@154 ($generated@@535 $generated@@85 $generated@@770) ($generated@@84 $generated@@769))))
 :pattern ( ($generated@@328 $generated@@770 ($generated@@84 $generated@@769)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@72) (= (type $generated@@772) $generated@@161)) ($generated@@328 $generated@@772 ($generated@@90 $generated@@771))) (and (= ($generated@@425 ($generated@@535 $generated@@85 $generated@@772)) $generated@@772) ($generated@@154 ($generated@@535 $generated@@85 $generated@@772) ($generated@@90 $generated@@771))))
 :pattern ( ($generated@@328 $generated@@772 ($generated@@90 $generated@@771)))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (= (type $generated@@773) $generated@@72) (= (type $generated@@774) $generated@@85)) (= ($generated@@154 ($generated@@414 $generated@@774) ($generated@@90 $generated@@773)) ($generated@@154 $generated@@774 ($generated@@84 $generated@@773))))
 :pattern ( ($generated@@154 ($generated@@414 $generated@@774) ($generated@@90 $generated@@773)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (and (and (= (type $generated@@775) $generated@@85) (= (type $generated@@776) $generated@@72)) (= (type $generated@@777) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@777) (and ($generated@@377 $generated@@775) ($generated@@82 $generated@@775 ($generated@@84 $generated@@776) $generated@@777)))) ($generated@@82 ($generated@@157 $generated@@775) ($generated@@90 $generated@@776) $generated@@777))
 :pattern ( ($generated@@82 ($generated@@157 $generated@@775) ($generated@@90 $generated@@776) $generated@@777))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (and (and (= (type $generated@@778) $generated@@85) (= (type $generated@@779) $generated@@72)) (= (type $generated@@780) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@780) (and ($generated@@377 $generated@@778) ($generated@@82 $generated@@778 ($generated@@84 $generated@@779) $generated@@780)))) ($generated@@82 ($generated@@156 $generated@@778) ($generated@@84 $generated@@779) $generated@@780))
 :pattern ( ($generated@@82 ($generated@@156 $generated@@778) ($generated@@84 $generated@@779) $generated@@780))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (and (and (= (type $generated@@781) $generated@@85) (= (type $generated@@782) $generated@@72)) (= (type $generated@@783) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@783) (and ($generated@@380 $generated@@781) ($generated@@82 $generated@@781 ($generated@@90 $generated@@782) $generated@@783)))) ($generated@@82 ($generated@@159 $generated@@781) ($generated@@84 $generated@@782) $generated@@783))
 :pattern ( ($generated@@82 ($generated@@159 $generated@@781) ($generated@@84 $generated@@782) $generated@@783))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (and (= (type $generated@@784) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@785) $generated@@72)) (= (type $generated@@786) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@784 ($generated@@248 $generated@@785) $generated@@786) (forall (($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@787) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@784 $generated@@787)))) ($generated@@369 $generated@@787 $generated@@785 $generated@@786))
 :pattern ( ($generated@@93 $generated@@784 $generated@@787))
))))
 :pattern ( ($generated@@82 $generated@@784 ($generated@@248 $generated@@785) $generated@@786))
)))
(assert (= $generated@@246 ($generated@@218 $generated@@246)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (= (type $generated@@788) $generated@@85) (= (type $generated@@789) $generated@@72)) (= (type $generated@@790) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@790) (and ($generated@@228 $generated@@788) (exists (($generated@@791 T@U) ) (!  (and (= (type $generated@@791) $generated@@72) ($generated@@82 $generated@@788 ($generated@@229 $generated@@789 $generated@@791) $generated@@790))
 :pattern ( ($generated@@82 $generated@@788 ($generated@@229 $generated@@789 $generated@@791) $generated@@790))
))))) ($generated@@369 ($generated@@236 $generated@@788) $generated@@789 $generated@@790))
 :pattern ( ($generated@@369 ($generated@@236 $generated@@788) $generated@@789 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (and (and (= (type $generated@@792) $generated@@85) (= (type $generated@@793) $generated@@72)) (= (type $generated@@794) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@794) (and ($generated@@228 $generated@@792) (exists (($generated@@795 T@U) ) (!  (and (= (type $generated@@795) $generated@@72) ($generated@@82 $generated@@792 ($generated@@229 $generated@@795 $generated@@793) $generated@@794))
 :pattern ( ($generated@@82 $generated@@792 ($generated@@229 $generated@@795 $generated@@793) $generated@@794))
))))) ($generated@@369 ($generated@@237 $generated@@792) $generated@@793 $generated@@794))
 :pattern ( ($generated@@369 ($generated@@237 $generated@@792) $generated@@793 $generated@@794))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ($generated@@798 Int) ) (! (let (($generated@@799 ($generated@@166 (type $generated@@796))))
 (=> (and (= (type $generated@@796) ($generated@@165 $generated@@799)) (= (type $generated@@797) ($generated@@165 $generated@@799))) (and (=> (< $generated@@798 ($generated@@383 $generated@@796)) (= ($generated@@384 ($generated@@163 $generated@@796 $generated@@797) $generated@@798) ($generated@@384 $generated@@796 $generated@@798))) (=> (<= ($generated@@383 $generated@@796) $generated@@798) (= ($generated@@384 ($generated@@163 $generated@@796 $generated@@797) $generated@@798) ($generated@@384 $generated@@797 (- $generated@@798 ($generated@@383 $generated@@796))))))))
 :pattern ( ($generated@@384 ($generated@@163 $generated@@796 $generated@@797) $generated@@798))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (= (type $generated@@800) $generated@@161) (= (type $generated@@801) $generated@@161)) (= ($generated@@327 ($generated@@218 $generated@@800) ($generated@@218 $generated@@801)) ($generated@@218 ($generated@@327 $generated@@800 $generated@@801))))
 :pattern ( ($generated@@327 ($generated@@218 $generated@@800) ($generated@@218 $generated@@801)))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (= (type $generated@@802) $generated@@85) (= (type $generated@@803) $generated@@85)) (= ($generated@@83 ($generated@@218 $generated@@802) ($generated@@218 $generated@@803)) ($generated@@218 ($generated@@83 $generated@@802 $generated@@803))))
 :pattern ( ($generated@@83 ($generated@@218 $generated@@802) ($generated@@218 $generated@@803)))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@161) (= ($generated@@410 ($generated@@218 $generated@@804)) ($generated@@218 ($generated@@410 $generated@@804))))
 :pattern ( ($generated@@410 ($generated@@218 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@85) (= ($generated@@414 ($generated@@218 $generated@@805)) ($generated@@218 ($generated@@414 $generated@@805))))
 :pattern ( ($generated@@414 ($generated@@218 $generated@@805)))
)))
(assert (forall (($generated@@806 T@U) ) (! (= ($generated@@425 ($generated@@218 $generated@@806)) ($generated@@218 ($generated@@425 $generated@@806)))
 :pattern ( ($generated@@425 ($generated@@218 $generated@@806)))
)))
(assert (forall (($generated@@807 T@U) ) (! (let (($generated@@808 ($generated@@166 (type $generated@@807))))
 (=> (and (= (type $generated@@807) ($generated@@165 $generated@@808)) (= ($generated@@383 $generated@@807) 0)) (= $generated@@807 ($generated@@160 $generated@@808))))
 :pattern ( ($generated@@383 $generated@@807))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ) (! (let (($generated@@812 (type $generated@@810)))
 (=> (and (and (= (type $generated@@809) ($generated@@86 $generated@@812 $generated@@2)) (= (type $generated@@811) $generated@@2)) (<= 0 ($generated $generated@@811))) (= ($generated@@430 ($generated@@94 $generated@@809 $generated@@810 $generated@@811)) (+ (- ($generated@@430 $generated@@809) ($generated ($generated@@93 $generated@@809 $generated@@810))) ($generated $generated@@811)))))
 :pattern ( ($generated@@430 ($generated@@94 $generated@@809 $generated@@810 $generated@@811)))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@814) $generated@@2)) ($generated@@82 $generated@@814 $generated@@46 $generated@@813))
 :pattern ( ($generated@@82 $generated@@814 $generated@@46 $generated@@813))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (= (type $generated@@815) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@816) $generated@@3)) ($generated@@82 $generated@@816 $generated@@47 $generated@@815))
 :pattern ( ($generated@@82 $generated@@816 $generated@@47 $generated@@815))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@817) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@818) $generated@@4)) ($generated@@82 $generated@@818 $generated@@44 $generated@@817))
 :pattern ( ($generated@@82 $generated@@818 $generated@@44 $generated@@817))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (= (type $generated@@819) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@820) $generated@@610)) ($generated@@82 $generated@@820 $generated@@45 $generated@@819))
 :pattern ( ($generated@@82 $generated@@820 $generated@@45 $generated@@819))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (= (type $generated@@821) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@822) $generated@@161)) ($generated@@82 $generated@@822 $generated@@48 $generated@@821))
 :pattern ( ($generated@@82 $generated@@822 $generated@@48 $generated@@821))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (= (type $generated@@823) ($generated@@165 $generated@@161)) (= (type $generated@@824) $generated@@72)) (= ($generated@@154 $generated@@823 ($generated@@202 $generated@@824)) (forall (($generated@@825 Int) ) (!  (=> (and (<= 0 $generated@@825) (< $generated@@825 ($generated@@383 $generated@@823))) ($generated@@328 ($generated@@384 $generated@@823 $generated@@825) $generated@@824))
 :pattern ( ($generated@@384 $generated@@823 $generated@@825))
))))
 :pattern ( ($generated@@154 $generated@@823 ($generated@@202 $generated@@824)))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (= (type $generated@@826) $generated@@72) (= (type $generated@@827) $generated@@152)) (= (type $generated@@828) $generated@@85)) (= ($generated@@194 $generated@@826 $generated@@827 $generated@@828) ($generated@@194 $generated@@826 $generated@@208 $generated@@828)))
 :pattern ( ($generated@@194 $generated@@826 ($generated@@207 $generated@@827) $generated@@828))
)))
(assert (forall (($generated@@830 T@U) ($generated@@831 Int) ) (!  (=> (= (type $generated@@830) ($generated@@165 $generated@@161)) (=> (and (<= 0 $generated@@831) (< $generated@@831 ($generated@@383 $generated@@830))) (< ($generated@@705 ($generated@@535 $generated@@85 ($generated@@384 $generated@@830 $generated@@831))) ($generated@@829 $generated@@830))))
 :pattern ( ($generated@@705 ($generated@@535 $generated@@85 ($generated@@384 $generated@@830 $generated@@831))))
)))
(assert (forall (($generated@@832 T@U) ($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (and (and (= (type $generated@@832) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@833) $generated@@72)) (= (type $generated@@834) $generated@@72)) ($generated@@154 $generated@@832 ($generated@@563 $generated@@833 $generated@@834))) (and (and ($generated@@154 ($generated@@440 $generated@@832) ($generated@@353 $generated@@833)) ($generated@@154 ($generated@@495 $generated@@832) ($generated@@353 $generated@@834))) ($generated@@154 ($generated@@534 $generated@@832) ($generated@@353 ($generated@@229 $generated@@833 $generated@@834)))))
 :pattern ( ($generated@@154 $generated@@832 ($generated@@563 $generated@@833 $generated@@834)))
)))
(assert (forall (($generated@@835 T@U) ($generated@@836 T@U) ($generated@@837 T@U) ) (!  (=> (and (and (and (= (type $generated@@835) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@836) $generated@@72)) (= (type $generated@@837) $generated@@72)) ($generated@@154 $generated@@835 ($generated@@571 $generated@@836 $generated@@837))) (and (and ($generated@@154 ($generated@@458 $generated@@835) ($generated@@358 $generated@@836)) ($generated@@154 ($generated@@506 $generated@@835) ($generated@@358 $generated@@837))) ($generated@@154 ($generated@@545 $generated@@835) ($generated@@358 ($generated@@229 $generated@@836 $generated@@837)))))
 :pattern ( ($generated@@154 $generated@@835 ($generated@@571 $generated@@836 $generated@@837)))
)))
(assert (forall (($generated@@838 T@U) ) (!  (=> (= (type $generated@@838) $generated@@2) ($generated@@154 $generated@@838 $generated@@46))
 :pattern ( ($generated@@154 $generated@@838 $generated@@46))
)))
(assert (forall (($generated@@839 T@U) ) (!  (=> (= (type $generated@@839) $generated@@3) ($generated@@154 $generated@@839 $generated@@47))
 :pattern ( ($generated@@154 $generated@@839 $generated@@47))
)))
(assert (forall (($generated@@840 T@U) ) (!  (=> (= (type $generated@@840) $generated@@4) ($generated@@154 $generated@@840 $generated@@44))
 :pattern ( ($generated@@154 $generated@@840 $generated@@44))
)))
(assert (forall (($generated@@841 T@U) ) (!  (=> (= (type $generated@@841) $generated@@610) ($generated@@154 $generated@@841 $generated@@45))
 :pattern ( ($generated@@154 $generated@@841 $generated@@45))
)))
(assert (forall (($generated@@842 T@U) ) (!  (=> (= (type $generated@@842) $generated@@161) ($generated@@154 $generated@@842 $generated@@48))
 :pattern ( ($generated@@154 $generated@@842 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () T@U)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () T@U)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () T@U)
(declare-fun $generated@@849 (T@U) Bool)
(declare-fun $generated@@850 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@843) ($generated@@255 $generated@@87 $generated@@4)) (= (type $generated@@844) $generated@@87)) (= (type $generated@@845) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@846) $generated@@85)) (= (type $generated@@847) $generated@@72)) (= (type $generated@@848) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@850) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@851  (=> (and (and (= $generated@@843 ($generated@@254 $generated@@844 $generated@@845 $generated@@60 false)) ($generated@@82 $generated@@846 ($generated@@84 $generated@@847) $generated@@845)) (and ($generated@@217 $generated@@847 $generated@@846) ($generated@@194 $generated@@847 ($generated@@151 $generated@@208) $generated@@846))) (=> (and (and (and (and ($generated@@89 $generated@@848) ($generated@@849 $generated@@848)) (= $generated@@845 $generated@@848)) (and ($generated@@82 $generated@@850 ($generated@@84 $generated@@847) $generated@@848) ($generated@@153 $generated@@847 $generated@@850))) (and (and ($generated@@82 $generated@@846 ($generated@@84 $generated@@847) $generated@@848) ($generated@@153 $generated@@847 $generated@@846)) (and ($generated@@82 $generated@@850 ($generated@@84 $generated@@847) $generated@@848) ($generated@@82 $generated@@846 ($generated@@84 $generated@@847) $generated@@848)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@217 $generated@@847 $generated@@846) (or ($generated@@194 $generated@@847 ($generated@@151 $generated@@208) $generated@@846) (=> ($generated@@155 $generated@@846) ($generated@@0 ($generated@@218 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@217 $generated@@847 $generated@@846) (or ($generated@@194 $generated@@847 ($generated@@151 $generated@@208) $generated@@846) (=> (not ($generated@@155 $generated@@846)) (let (($generated@@852 ($generated@@156 $generated@@846)))
(let (($generated@@853 ($generated@@157 $generated@@846)))
 (=> ($generated@@158 $generated@@853) ($generated@@194 $generated@@847 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@852)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@217 $generated@@847 $generated@@846) (or ($generated@@194 $generated@@847 ($generated@@151 $generated@@208) $generated@@846) (=> (not ($generated@@155 $generated@@846)) (let (($generated@@854 ($generated@@157 $generated@@846)))
 (=> (not ($generated@@158 $generated@@854)) ($generated@@0 ($generated@@218 ($generated@@11 false)))))))))))))))
(let (($generated@@855  (=> (and ($generated@@89 $generated@@845) ($generated@@849 $generated@@845)) (=> (and (and ($generated@@154 $generated@@850 ($generated@@84 $generated@@847)) ($generated@@82 $generated@@850 ($generated@@84 $generated@@847) $generated@@845)) ($generated@@519 $generated@@850)) (=> (and (and (and ($generated@@154 $generated@@846 ($generated@@84 $generated@@847)) ($generated@@82 $generated@@846 ($generated@@84 $generated@@847) $generated@@845)) ($generated@@519 $generated@@846)) (and (= 3 $generated@@149) (= (ControlFlow 0 5) 2))) $generated@@851)))))
$generated@@855)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@T) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (Int) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@255 (T@T T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U T@U) Bool)
(declare-fun $generated@@327 (T@U T@U) T@U)
(declare-fun $generated@@328 (T@U T@U) Bool)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U T@U T@U) Bool)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@382 (T@U T@U) Bool)
(declare-fun $generated@@383 (T@U) Int)
(declare-fun $generated@@384 (T@U Int) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@430 (T@U) Int)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@T T@T) T@U)
(declare-fun $generated@@442 (T@T T@T) T@T)
(declare-fun $generated@@443 (T@T) T@T)
(declare-fun $generated@@444 (T@T) T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@T T@T) T@U)
(declare-fun $generated@@460 (T@T T@T) T@T)
(declare-fun $generated@@461 (T@T) T@T)
(declare-fun $generated@@462 (T@T) T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Bool)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@535 (T@T T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@563 (T@U T@U) T@U)
(declare-fun $generated@@571 (T@U T@U) T@U)
(declare-fun $generated@@586 (T@T) T@U)
(declare-fun $generated@@610 () T@T)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@646 (T@U) T@U)
(declare-fun $generated@@664 (T@U) Int)
(declare-fun $generated@@666 (T@U) T@U)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@674 (T@U) T@U)
(declare-fun $generated@@678 (T@U) T@U)
(declare-fun $generated@@682 (T@U) T@U)
(declare-fun $generated@@685 (T@U) T@U)
(declare-fun $generated@@704 (T@U) Int)
(declare-fun $generated@@705 (T@U) Int)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@737 (T@U) T@U)
(declare-fun $generated@@829 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@86 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@75 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@88)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@75 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@83 $generated@@141 $generated@@142)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@84 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@72)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@145) $generated@@72) (= (type $generated@@146) $generated@@85)) (= (type $generated@@147) $generated@@85)) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@148)) (= ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148)  (and ($generated@@82 $generated@@146 ($generated@@90 $generated@@145) $generated@@148) ($generated@@82 $generated@@147 ($generated@@84 $generated@@145) $generated@@148))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@146 $generated@@147) ($generated@@84 $generated@@145) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@167 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@167)) 16))) (forall (($generated@@168 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@165 $generated@@168))
))) (= ($generated@@1 $generated@@161) 17)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@150 $generated@@169 $generated@@170 $generated@@171)) ($generated@@165 $generated@@161))
 :pattern ( ($generated@@150 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@151 $generated@@172)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@156 $generated@@173)) $generated@@85)
 :pattern ( ($generated@@156 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@157 $generated@@174)) $generated@@85)
 :pattern ( ($generated@@157 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@159 $generated@@175)) $generated@@85)
 :pattern ( ($generated@@159 $generated@@175))
))) (forall (($generated@@176 T@T) ) (! (= (type ($generated@@160 $generated@@176)) ($generated@@165 $generated@@176))
 :pattern ( ($generated@@160 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@162 $generated@@177)) $generated@@161)
 :pattern ( ($generated@@162 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@166 (type $generated@@178))))
(= (type ($generated@@163 $generated@@178 $generated@@179)) ($generated@@165 $generated@@180)))
 :pattern ( ($generated@@163 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(= (type ($generated@@164 $generated@@181 $generated@@182)) ($generated@@165 $generated@@183)))
 :pattern ( ($generated@@164 $generated@@181 $generated@@182))
))))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) $generated@@152)) (= (type $generated@@186) $generated@@85)) (or ($generated@@153 $generated@@184 $generated@@186) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@186 ($generated@@84 $generated@@184))))) (and (=> (not ($generated@@155 $generated@@186)) (let (($generated@@187 ($generated@@156 $generated@@186)))
(let (($generated@@188 ($generated@@157 $generated@@186)))
 (and (=> ($generated@@158 $generated@@188) ($generated@@153 $generated@@184 $generated@@187)) (=> (not ($generated@@158 $generated@@188)) (let (($generated@@189 ($generated@@159 $generated@@188)))
 (and ($generated@@153 $generated@@184 $generated@@189) ($generated@@153 $generated@@184 $generated@@187)))))))) (= ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186) (ite ($generated@@155 $generated@@186) ($generated@@160 $generated@@161) (let (($generated@@190 ($generated@@156 $generated@@186)))
(let (($generated@@191 ($generated@@157 $generated@@186)))
(ite ($generated@@158 $generated@@191) (let (($generated@@192 ($generated@@162 $generated@@191)))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@192) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))) (let (($generated@@193 ($generated@@159 $generated@@191)))
($generated@@163 ($generated@@150 $generated@@184 $generated@@185 $generated@@193) ($generated@@150 $generated@@184 $generated@@185 $generated@@190))))))))))
 :pattern ( ($generated@@150 $generated@@184 ($generated@@151 $generated@@185) $generated@@186))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@72) (= (type $generated@@196) $generated@@152)) (= (type $generated@@197) $generated@@85)) (= ($generated@@194 $generated@@195 ($generated@@151 $generated@@196) $generated@@197) ($generated@@194 $generated@@195 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@194 $generated@@195 ($generated@@151 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@2) (= (type $generated@@201) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@200 ($generated@@198 0) $generated@@201))
 :pattern ( ($generated@@82 $generated@@200 ($generated@@198 0) $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (and (= (type $generated@@204) $generated@@72) (= (type $generated@@205) $generated@@152)) (= (type $generated@@206) $generated@@85)) (or ($generated@@153 $generated@@204 $generated@@206) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@206 ($generated@@84 $generated@@204))))) ($generated@@154 ($generated@@150 $generated@@204 $generated@@205 $generated@@206) ($generated@@202 $generated@@204)))
 :pattern ( ($generated@@150 $generated@@204 $generated@@205 $generated@@206))
))))
(assert  (and (forall (($generated@@209 T@U) ) (! (= (type ($generated@@207 $generated@@209)) $generated@@152)
 :pattern ( ($generated@@207 $generated@@209))
)) (= (type $generated@@208) $generated@@152)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (= (type $generated@@210) $generated@@72) (= (type $generated@@211) $generated@@152)) (= (type $generated@@212) $generated@@85)) (= ($generated@@150 $generated@@210 $generated@@211 $generated@@212) ($generated@@150 $generated@@210 $generated@@208 $generated@@212)))
 :pattern ( ($generated@@150 $generated@@210 ($generated@@207 $generated@@211) $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@214) $generated@@85) (= (type $generated@@215) $generated@@85)) (and ($generated@@158 $generated@@214) ($generated@@158 $generated@@215))) (= ($generated@@213 $generated@@214 $generated@@215) (= ($generated@@162 $generated@@214) ($generated@@162 $generated@@215))))
 :pattern ( ($generated@@213 $generated@@214 $generated@@215) ($generated@@158 $generated@@214))
 :pattern ( ($generated@@213 $generated@@214 $generated@@215) ($generated@@158 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@2) ($generated@@154 $generated@@216 ($generated@@198 0)))
 :pattern ( ($generated@@154 $generated@@216 ($generated@@198 0)))
)))
(assert (forall (($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(= (type ($generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@218 $generated@@219))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@72) (= (type $generated@@222) $generated@@152)) (= (type $generated@@223) $generated@@85)) (or ($generated@@217 $generated@@221 $generated@@223) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@223 ($generated@@84 $generated@@221))))) (and (=> (not ($generated@@155 $generated@@223)) (let (($generated@@224 ($generated@@156 $generated@@223)))
(let (($generated@@225 ($generated@@157 $generated@@223)))
 (=> ($generated@@158 $generated@@225) ($generated@@217 $generated@@221 $generated@@224))))) (= ($generated@@194 $generated@@221 ($generated@@151 $generated@@222) $generated@@223) (ite ($generated@@155 $generated@@223) true (let (($generated@@226 ($generated@@156 $generated@@223)))
(let (($generated@@227 ($generated@@157 $generated@@223)))
(ite ($generated@@158 $generated@@227) ($generated@@194 $generated@@221 $generated@@222 $generated@@226) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))))
 :pattern ( ($generated@@194 $generated@@221 ($generated@@151 $generated@@222) $generated@@223))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231)) $generated@@72)
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@72) (= (type $generated@@233) $generated@@72)) (= (type $generated@@234) $generated@@85)) ($generated@@154 $generated@@234 ($generated@@229 $generated@@232 $generated@@233))) ($generated@@228 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234) ($generated@@154 $generated@@234 ($generated@@229 $generated@@232 $generated@@233)))
)))
(assert  (and (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@161)
 :pattern ( ($generated@@236 $generated@@238))
)) (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@161)
 :pattern ( ($generated@@237 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) $generated@@85) (= (type $generated@@241) $generated@@85)) true) (= ($generated@@235 $generated@@240 $generated@@241)  (and (= ($generated@@236 $generated@@240) ($generated@@236 $generated@@241)) (= ($generated@@237 $generated@@240) ($generated@@237 $generated@@241)))))
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@72) (= (type $generated@@243) $generated@@152)) (= (type $generated@@244) $generated@@85)) (= ($generated@@150 $generated@@242 ($generated@@151 $generated@@243) $generated@@244) ($generated@@150 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@150 $generated@@242 ($generated@@151 $generated@@243) $generated@@244))
)))
(assert  (and (forall (($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@247)) $generated@@76)
 :pattern ( ($generated@@245 $generated@@247))
)) (= (type $generated@@246) $generated@@85)))
(assert (= ($generated@@245 $generated@@246) $generated@@63))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@248 $generated@@250)) $generated@@72)
 :pattern ( ($generated@@248 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@252) $generated@@72)) ($generated@@154 $generated@@251 ($generated@@248 $generated@@252))) ($generated@@249 $generated@@251))
 :pattern ( ($generated@@154 $generated@@251 ($generated@@248 $generated@@252)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@259 $generated@@260)) 18)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@255 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@257 ($generated@@255 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@255 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@253 $generated@@265 $generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@253 $generated@@265 $generated@@266 $generated@@267))
))) (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(let (($generated@@274 (type $generated@@270)))
(= (type ($generated@@258 $generated@@269 $generated@@270 $generated@@271 $generated@@272)) ($generated@@255 $generated@@274 $generated@@273))))
 :pattern ( ($generated@@258 $generated@@269 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@257 (type $generated@@275))))
 (=> (= (type $generated@@278) $generated@@279) (= ($generated@@253 ($generated@@258 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@276 $generated@@277) $generated@@278)))
 :weight 0
))) (and (and (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (or (= $generated@@282 $generated@@284) (= ($generated@@253 ($generated@@258 $generated@@281 $generated@@282 $generated@@283 $generated@@280) $generated@@284 $generated@@285) ($generated@@253 $generated@@281 $generated@@284 $generated@@285)))
 :weight 0
)) (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (or (= $generated@@289 $generated@@291) (= ($generated@@253 ($generated@@258 $generated@@287 $generated@@288 $generated@@289 $generated@@286) $generated@@290 $generated@@291) ($generated@@253 $generated@@287 $generated@@290 $generated@@291)))
 :weight 0
))) (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (or true (= ($generated@@253 ($generated@@258 $generated@@293 $generated@@294 $generated@@295 $generated@@292) $generated@@296 $generated@@297) ($generated@@253 $generated@@293 $generated@@296 $generated@@297)))
 :weight 0
)))) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 Bool) ) (! (= (type ($generated@@254 $generated@@298 $generated@@299 $generated@@300 $generated@@301)) ($generated@@255 $generated@@87 $generated@@4))
 :pattern ( ($generated@@254 $generated@@298 $generated@@299 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Bool) ($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@75 (type $generated@@307))))
 (=> (and (and (and (and (= (type $generated@@302) $generated@@87) (= (type $generated@@303) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@304) ($generated@@74 $generated@@4))) (= (type $generated@@306) $generated@@87)) (= (type $generated@@307) ($generated@@74 $generated@@308))) (= ($generated@@0 ($generated@@253 ($generated@@254 $generated@@302 $generated@@303 $generated@@304 $generated@@305) $generated@@306 $generated@@307))  (=> (and (not (= $generated@@306 $generated@@302)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@303 $generated@@306) $generated@@304))) $generated@@305))))
 :pattern ( ($generated@@253 ($generated@@254 $generated@@302 $generated@@303 $generated@@304 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (! (= (type ($generated@@309 $generated@@311 $generated@@312 $generated@@313 $generated@@314)) $generated@@85)
 :pattern ( ($generated@@309 $generated@@311 $generated@@312 $generated@@313 $generated@@314))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) $generated@@72) (= (type $generated@@316) $generated@@152)) (= (type $generated@@317) $generated@@85)) (= (type $generated@@318) $generated@@85)) (or ($generated@@310 $generated@@315 $generated@@317 $generated@@318) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@317 ($generated@@84 $generated@@315)) ($generated@@154 $generated@@318 ($generated@@84 $generated@@315))) ($generated@@194 $generated@@315 ($generated@@151 $generated@@208) $generated@@318))))) (and (=> (not ($generated@@155 $generated@@317)) (let (($generated@@319 ($generated@@156 $generated@@317)))
(let (($generated@@320 ($generated@@157 $generated@@317)))
 (and (=> ($generated@@158 $generated@@320) ($generated@@310 $generated@@315 $generated@@319 $generated@@318)) (=> (not ($generated@@158 $generated@@320)) (let (($generated@@321 ($generated@@159 $generated@@320)))
 (and ($generated@@310 $generated@@315 $generated@@319 $generated@@318) ($generated@@310 $generated@@315 $generated@@321 ($generated@@309 $generated@@315 $generated@@316 $generated@@319 $generated@@318))))))))) (= ($generated@@309 $generated@@315 ($generated@@151 $generated@@316) $generated@@317 $generated@@318) (ite ($generated@@155 $generated@@317) $generated@@318 (let (($generated@@322 ($generated@@156 $generated@@317)))
(let (($generated@@323 ($generated@@157 $generated@@317)))
(ite ($generated@@158 $generated@@323) ($generated@@83 $generated@@323 ($generated@@309 $generated@@315 $generated@@316 $generated@@322 $generated@@318)) (let (($generated@@324 ($generated@@159 $generated@@323)))
($generated@@309 $generated@@315 $generated@@316 $generated@@324 ($generated@@309 $generated@@315 $generated@@316 $generated@@322 $generated@@318))))))))))
 :pattern ( ($generated@@309 $generated@@315 ($generated@@151 $generated@@316) $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@325) $generated@@72) (= (type $generated@@326) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@326)) ($generated@@82 $generated@@246 ($generated@@84 $generated@@325) $generated@@326))
 :pattern ( ($generated@@82 $generated@@246 ($generated@@84 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@329 $generated@@330)) $generated@@85)
 :pattern ( ($generated@@327 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@331) $generated@@72) (= (type $generated@@332) $generated@@72)) (= (type $generated@@333) $generated@@161)) (= (type $generated@@334) $generated@@161)) (= ($generated@@154 ($generated@@327 $generated@@333 $generated@@334) ($generated@@229 $generated@@331 $generated@@332))  (and ($generated@@328 $generated@@333 $generated@@331) ($generated@@328 $generated@@334 $generated@@332))))
 :pattern ( ($generated@@154 ($generated@@327 $generated@@333 $generated@@334) ($generated@@229 $generated@@331 $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@72) ($generated@@154 $generated@@246 ($generated@@84 $generated@@335)))
 :pattern ( ($generated@@154 $generated@@246 ($generated@@84 $generated@@335)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@85) (= (type $generated@@337) $generated@@85)) (= ($generated@@235 $generated@@336 $generated@@337) (= $generated@@336 $generated@@337)))
 :pattern ( ($generated@@235 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@85) (= (type $generated@@340) $generated@@85)) (= ($generated@@338 $generated@@339 $generated@@340) (= $generated@@339 $generated@@340)))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@85) (= (type $generated@@342) $generated@@85)) (= ($generated@@213 $generated@@341 $generated@@342) (= $generated@@341 $generated@@342)))
 :pattern ( ($generated@@213 $generated@@341 $generated@@342))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@343) $generated@@72) (= (type $generated@@344) $generated@@152)) (= (type $generated@@345) $generated@@85)) (= (type $generated@@346) $generated@@85)) (or ($generated@@310 $generated@@343 ($generated@@218 $generated@@345) ($generated@@218 $generated@@346)) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@345 ($generated@@84 $generated@@343)) ($generated@@154 $generated@@346 ($generated@@84 $generated@@343))) ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@194 $generated@@343 ($generated@@151 $generated@@208) ($generated@@218 $generated@@346))))))))) (and (=> (not ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@155 ($generated@@218 $generated@@345)))))) (let (($generated@@347 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@345)))))
(let (($generated@@348 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@345)))))
 (and (=> ($generated@@158 $generated@@348) ($generated@@310 $generated@@343 $generated@@347 ($generated@@218 $generated@@346))) (=> (not ($generated@@158 $generated@@348)) (let (($generated@@349 ($generated@@159 $generated@@348)))
 (and ($generated@@310 $generated@@343 $generated@@347 ($generated@@218 $generated@@346)) ($generated@@310 $generated@@343 $generated@@349 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@347 ($generated@@218 $generated@@346)))))))))) (= ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) ($generated@@218 $generated@@345) ($generated@@218 $generated@@346)) (ite ($generated@@155 ($generated@@218 $generated@@345)) $generated@@346 (let (($generated@@350 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@345)))))
(let (($generated@@351 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@345)))))
(ite ($generated@@158 $generated@@351) ($generated@@218 ($generated@@83 $generated@@351 ($generated@@218 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@350 ($generated@@218 $generated@@346))))) (let (($generated@@352 ($generated@@218 ($generated@@159 $generated@@351))))
($generated@@218 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@352 ($generated@@218 ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) $generated@@350 ($generated@@218 $generated@@346)))))))))))))
 :weight 3
 :pattern ( ($generated@@309 $generated@@343 ($generated@@151 $generated@@344) ($generated@@218 $generated@@345) ($generated@@218 $generated@@346)))
))))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@72)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@356) $generated@@72)) (= ($generated@@154 $generated@@355 ($generated@@353 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@161) ($generated@@0 ($generated@@93 $generated@@355 $generated@@357))) ($generated@@328 $generated@@357 $generated@@356))
 :pattern ( ($generated@@93 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@154 $generated@@355 ($generated@@353 $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@72)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@361) $generated@@72)) (= ($generated@@154 $generated@@360 ($generated@@358 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@161) ($generated@@0 ($generated@@93 $generated@@360 $generated@@362))) ($generated@@328 $generated@@362 $generated@@361))
 :pattern ( ($generated@@93 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@154 $generated@@360 ($generated@@358 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ) (! (= ($generated@@218 $generated@@363) $generated@@363)
 :pattern ( ($generated@@218 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (and (= (type $generated@@364) ($generated@@165 $generated@@161)) (= (type $generated@@365) $generated@@161)) (= (type $generated@@366) $generated@@72)) (and ($generated@@154 $generated@@364 ($generated@@202 $generated@@366)) ($generated@@328 $generated@@365 $generated@@366))) ($generated@@154 ($generated@@164 $generated@@364 $generated@@365) ($generated@@202 $generated@@366)))
 :pattern ( ($generated@@154 ($generated@@164 $generated@@364 $generated@@365) ($generated@@202 $generated@@366)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@367) $generated@@85) (= (type $generated@@368) $generated@@85)) (and ($generated@@155 $generated@@367) ($generated@@155 $generated@@368))) (= ($generated@@338 $generated@@367 $generated@@368) true))
 :pattern ( ($generated@@338 $generated@@367 $generated@@368) ($generated@@155 $generated@@367))
 :pattern ( ($generated@@338 $generated@@367 $generated@@368) ($generated@@155 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@370) $generated@@72) (= (type $generated@@371) $generated@@72)) (= (type $generated@@372) $generated@@161)) (= (type $generated@@373) $generated@@161)) (= (type $generated@@374) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@374)) (= ($generated@@82 ($generated@@327 $generated@@372 $generated@@373) ($generated@@229 $generated@@370 $generated@@371) $generated@@374)  (and ($generated@@369 $generated@@372 $generated@@370 $generated@@374) ($generated@@369 $generated@@373 $generated@@371 $generated@@374))))
 :pattern ( ($generated@@82 ($generated@@327 $generated@@372 $generated@@373) ($generated@@229 $generated@@370 $generated@@371) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@85) (= ($generated@@228 $generated@@375) (= ($generated@@245 $generated@@375) $generated@@61)))
 :pattern ( ($generated@@228 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@85) (= ($generated@@155 $generated@@376) (= ($generated@@245 $generated@@376) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@85) (= ($generated@@377 $generated@@378) (= ($generated@@245 $generated@@378) $generated@@65)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@85) (= ($generated@@158 $generated@@379) (= ($generated@@245 $generated@@379) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@85) (= ($generated@@380 $generated@@381) (= ($generated@@245 $generated@@381) $generated@@68)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 Int) ) (! (let (($generated@@387 ($generated@@166 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@387))
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@166 (type $generated@@388))))
 (=> (and (= (type $generated@@388) ($generated@@165 $generated@@390)) (= (type $generated@@389) ($generated@@165 $generated@@390))) (= ($generated@@382 $generated@@388 $generated@@389)  (and (= ($generated@@383 $generated@@388) ($generated@@383 $generated@@389)) (forall (($generated@@391 Int) ) (!  (=> (and (<= 0 $generated@@391) (< $generated@@391 ($generated@@383 $generated@@388))) (= ($generated@@384 $generated@@388 $generated@@391) ($generated@@384 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@384 $generated@@388 $generated@@391))
 :pattern ( ($generated@@384 $generated@@389 $generated@@391))
))))))
 :pattern ( ($generated@@382 $generated@@388 $generated@@389))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) $generated@@72) (= (type $generated@@393) $generated@@152)) (= (type $generated@@394) $generated@@85)) (or ($generated@@217 $generated@@392 ($generated@@218 $generated@@394)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@394 ($generated@@84 $generated@@392))))) (and (=> (not ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@155 ($generated@@218 $generated@@394)))))) (let (($generated@@395 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@394)))))
(let (($generated@@396 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@394)))))
 (=> ($generated@@158 $generated@@396) ($generated@@217 $generated@@392 $generated@@395))))) (= ($generated@@194 $generated@@392 ($generated@@151 $generated@@393) ($generated@@218 $generated@@394)) (ite ($generated@@155 ($generated@@218 $generated@@394)) true (let (($generated@@397 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@394)))))
(let (($generated@@398 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@394)))))
(ite ($generated@@158 $generated@@398) ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@194 $generated@@392 ($generated@@151 $generated@@393) $generated@@397)))) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))))
 :weight 3
 :pattern ( ($generated@@194 $generated@@392 ($generated@@151 $generated@@393) ($generated@@218 $generated@@394)))
))))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@85) ($generated@@228 $generated@@399)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@161) (= (type $generated@@401) $generated@@161)) (= $generated@@399 ($generated@@327 $generated@@400 $generated@@401)))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
)))
 :pattern ( ($generated@@228 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@85) ($generated@@377 $generated@@402)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@85) (= (type $generated@@404) $generated@@85)) (= $generated@@402 ($generated@@83 $generated@@403 $generated@@404)))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
)))
 :pattern ( ($generated@@377 $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= ($generated@@383 ($generated@@160 $generated@@405)) 0)
 :pattern ( ($generated@@160 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) $generated@@72) (= (type $generated@@407) $generated@@85)) (= (type $generated@@408) $generated@@85)) (= ($generated@@154 ($generated@@83 $generated@@407 $generated@@408) ($generated@@84 $generated@@406))  (and ($generated@@154 $generated@@407 ($generated@@90 $generated@@406)) ($generated@@154 $generated@@408 ($generated@@84 $generated@@406)))))
 :pattern ( ($generated@@154 ($generated@@83 $generated@@407 $generated@@408) ($generated@@84 $generated@@406)))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@85) ($generated@@155 $generated@@409)) (= $generated@@409 $generated@@246))
 :pattern ( ($generated@@155 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (= (type ($generated@@410 $generated@@411)) $generated@@85)
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@85) ($generated@@158 $generated@@412)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@161) (= $generated@@412 ($generated@@410 $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
)))
 :pattern ( ($generated@@158 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@85)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@85) ($generated@@380 $generated@@416)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@85) (= $generated@@416 ($generated@@414 $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
)))
 :pattern ( ($generated@@380 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
 (=> (= (type $generated@@418) ($generated@@165 $generated@@420)) (= ($generated@@383 ($generated@@164 $generated@@418 $generated@@419)) (+ 1 ($generated@@383 $generated@@418)))))
 :pattern ( ($generated@@164 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@72) (= (type $generated@@422) $generated@@152)) (= (type $generated@@423) $generated@@85)) (= (type $generated@@424) $generated@@85)) (= ($generated@@309 $generated@@421 $generated@@422 $generated@@423 $generated@@424) ($generated@@309 $generated@@421 $generated@@208 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@309 $generated@@421 ($generated@@207 $generated@@422) $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@161)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@72) (= (type $generated@@429) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@369 ($generated@@425 $generated@@427) $generated@@428 $generated@@429) ($generated@@82 $generated@@427 $generated@@428 $generated@@429)))
 :pattern ( ($generated@@369 ($generated@@425 $generated@@427) $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@86 $generated@@432 $generated@@2))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@91 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@86 $generated@@434 $generated@@2)) (and (= (= ($generated@@430 $generated@@433) 0) (= $generated@@433 ($generated@@431 $generated@@434))) (=> (not (= ($generated@@430 $generated@@433) 0)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (< 0 ($generated ($generated@@93 $generated@@433 $generated@@435))))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@430 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@77)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@72) (and (= ($generated@@80 ($generated@@84 $generated@@438)) $generated@@64) (= ($generated@@436 ($generated@@84 $generated@@438)) $generated@@70)))
 :pattern ( ($generated@@84 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@72) (and (= ($generated@@80 ($generated@@90 $generated@@439)) $generated@@66) (= ($generated@@436 ($generated@@90 $generated@@439)) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@439))
)))
(assert  (and (and (and (and (forall (($generated@@445 T@T) ($generated@@446 T@T) ) (= ($generated@@1 ($generated@@442 $generated@@445 $generated@@446)) 19)) (forall (($generated@@447 T@T) ($generated@@448 T@T) ) (! (= ($generated@@443 ($generated@@442 $generated@@447 $generated@@448)) $generated@@447)
 :pattern ( ($generated@@442 $generated@@447 $generated@@448))
))) (forall (($generated@@449 T@T) ($generated@@450 T@T) ) (! (= ($generated@@444 ($generated@@442 $generated@@449 $generated@@450)) $generated@@450)
 :pattern ( ($generated@@442 $generated@@449 $generated@@450))
))) (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@443 (type $generated@@451))))
(= (type ($generated@@440 $generated@@451)) ($generated@@86 $generated@@452 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@451))
))) (forall (($generated@@453 T@T) ($generated@@454 T@T) ) (! (= (type ($generated@@441 $generated@@453 $generated@@454)) ($generated@@442 $generated@@453 $generated@@454))
 :pattern ( ($generated@@441 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@T) ) (! (let (($generated@@457 (type $generated@@455)))
 (not ($generated@@0 ($generated@@93 ($generated@@440 ($generated@@441 $generated@@457 $generated@@456)) $generated@@455))))
 :pattern ( (let (($generated@@457 (type $generated@@455)))
($generated@@93 ($generated@@440 ($generated@@441 $generated@@457 $generated@@456)) $generated@@455)))
)))
(assert  (and (and (and (and (forall (($generated@@463 T@T) ($generated@@464 T@T) ) (= ($generated@@1 ($generated@@460 $generated@@463 $generated@@464)) 20)) (forall (($generated@@465 T@T) ($generated@@466 T@T) ) (! (= ($generated@@461 ($generated@@460 $generated@@465 $generated@@466)) $generated@@465)
 :pattern ( ($generated@@460 $generated@@465 $generated@@466))
))) (forall (($generated@@467 T@T) ($generated@@468 T@T) ) (! (= ($generated@@462 ($generated@@460 $generated@@467 $generated@@468)) $generated@@468)
 :pattern ( ($generated@@460 $generated@@467 $generated@@468))
))) (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@461 (type $generated@@469))))
(= (type ($generated@@458 $generated@@469)) ($generated@@86 $generated@@470 $generated@@4)))
 :pattern ( ($generated@@458 $generated@@469))
))) (forall (($generated@@471 T@T) ($generated@@472 T@T) ) (! (= (type ($generated@@459 $generated@@471 $generated@@472)) ($generated@@460 $generated@@471 $generated@@472))
 :pattern ( ($generated@@459 $generated@@471 $generated@@472))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@T) ) (! (let (($generated@@475 (type $generated@@473)))
 (not ($generated@@0 ($generated@@93 ($generated@@458 ($generated@@459 $generated@@475 $generated@@474)) $generated@@473))))
 :pattern ( (let (($generated@@475 (type $generated@@473)))
($generated@@93 ($generated@@458 ($generated@@459 $generated@@475 $generated@@474)) $generated@@473)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) $generated@@72) (= (type $generated@@477) $generated@@152)) (= (type $generated@@478) $generated@@85)) (or ($generated@@217 $generated@@476 $generated@@478) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@478 ($generated@@84 $generated@@476))))) true)
 :pattern ( ($generated@@194 $generated@@476 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@166 (type $generated@@479))))
 (=> (and (= (type $generated@@479) ($generated@@165 $generated@@481)) (= (type $generated@@480) ($generated@@165 $generated@@481))) (= ($generated@@383 ($generated@@163 $generated@@479 $generated@@480)) (+ ($generated@@383 $generated@@479) ($generated@@383 $generated@@480)))))
 :pattern ( ($generated@@383 ($generated@@163 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@91 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@86 $generated@@483 $generated@@2)) (= ($generated@@249 $generated@@482) (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@483) (and (<= 0 ($generated ($generated@@93 $generated@@482 $generated@@484))) (<= ($generated ($generated@@93 $generated@@482 $generated@@484)) ($generated@@430 $generated@@482))))
 :pattern ( ($generated@@93 $generated@@482 $generated@@484))
)))))
 :pattern ( ($generated@@249 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 Int) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
 (=> (= (type $generated@@485) ($generated@@165 $generated@@488)) (and (=> (= $generated@@486 ($generated@@383 $generated@@485)) (= ($generated@@384 ($generated@@164 $generated@@485 $generated@@487) $generated@@486) $generated@@487)) (=> (not (= $generated@@486 ($generated@@383 $generated@@485))) (= ($generated@@384 ($generated@@164 $generated@@485 $generated@@487) $generated@@486) ($generated@@384 $generated@@485 $generated@@486))))))
 :pattern ( ($generated@@384 ($generated@@164 $generated@@485 $generated@@487) $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) $generated@@85) (= (type $generated@@490) $generated@@85)) (and ($generated@@380 $generated@@489) ($generated@@380 $generated@@490))) (= ($generated@@213 $generated@@489 $generated@@490) ($generated@@338 ($generated@@159 $generated@@489) ($generated@@159 $generated@@490))))
 :pattern ( ($generated@@213 $generated@@489 $generated@@490) ($generated@@380 $generated@@489))
 :pattern ( ($generated@@213 $generated@@489 $generated@@490) ($generated@@380 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@444 (type $generated@@491))))
(let (($generated@@493 ($generated@@443 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@442 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@441 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@493) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@491) $generated@@494)))
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@440 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@444 (type $generated@@496))))
(= (type ($generated@@495 $generated@@496)) ($generated@@86 $generated@@497 $generated@@4)))
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@444 (type $generated@@498))))
(let (($generated@@500 ($generated@@443 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@442 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@441 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ) (!  (and (= (type $generated@@501) $generated@@499) ($generated@@0 ($generated@@93 ($generated@@495 $generated@@498) $generated@@501)))
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@495 $generated@@498))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@462 (type $generated@@502))))
(let (($generated@@504 ($generated@@461 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@460 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@459 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ) (!  (and (= (type $generated@@505) $generated@@504) ($generated@@0 ($generated@@93 ($generated@@458 $generated@@502) $generated@@505)))
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@458 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@462 (type $generated@@507))))
(= (type ($generated@@506 $generated@@507)) ($generated@@86 $generated@@508 $generated@@4)))
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@462 (type $generated@@509))))
(let (($generated@@511 ($generated@@461 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@460 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@459 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ) (!  (and (= (type $generated@@512) $generated@@510) ($generated@@0 ($generated@@93 ($generated@@506 $generated@@509) $generated@@512)))
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
))))))
 :pattern ( ($generated@@506 $generated@@509))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@514) $generated@@72)) (= ($generated@@154 $generated@@513 ($generated@@248 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@513 $generated@@515)))) ($generated@@328 $generated@@515 $generated@@514))
 :pattern ( ($generated@@93 $generated@@513 $generated@@515))
))))
 :pattern ( ($generated@@154 $generated@@513 ($generated@@248 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@72) (= (type $generated@@517) $generated@@161)) (= (type $generated@@518) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@518)) (= ($generated@@82 ($generated@@410 $generated@@517) ($generated@@90 $generated@@516) $generated@@518) ($generated@@369 $generated@@517 $generated@@516 $generated@@518)))
 :pattern ( ($generated@@82 ($generated@@410 $generated@@517) ($generated@@90 $generated@@516) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@85) ($generated@@519 $generated@@520)) (or ($generated@@155 $generated@@520) ($generated@@377 $generated@@520)))
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@72) (= (type $generated@@522) $generated@@85)) (= (type $generated@@523) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@523)) (= ($generated@@82 ($generated@@414 $generated@@522) ($generated@@90 $generated@@521) $generated@@523) ($generated@@82 $generated@@522 ($generated@@84 $generated@@521) $generated@@523)))
 :pattern ( ($generated@@82 ($generated@@414 $generated@@522) ($generated@@90 $generated@@521) $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@525) $generated@@72)) (= (type $generated@@526) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@524 ($generated@@353 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@0 ($generated@@93 $generated@@524 $generated@@527))) ($generated@@369 $generated@@527 $generated@@525 $generated@@526))
 :pattern ( ($generated@@93 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@353 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@86 $generated@@161 $generated@@4)) (= (type $generated@@529) $generated@@72)) (= (type $generated@@530) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@528 ($generated@@358 $generated@@529) $generated@@530) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@161) ($generated@@0 ($generated@@93 $generated@@528 $generated@@531))) ($generated@@369 $generated@@531 $generated@@529 $generated@@530))
 :pattern ( ($generated@@93 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@82 $generated@@528 ($generated@@358 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated ($generated@@93 ($generated@@431 $generated@@533) $generated@@532)) 0))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@93 ($generated@@431 $generated@@533) $generated@@532)))
)))
(assert  (and (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@534 $generated@@537)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@534 $generated@@537))
)) (forall (($generated@@538 T@T) ($generated@@539 T@U) ) (! (= (type ($generated@@535 $generated@@538 $generated@@539)) $generated@@538)
 :pattern ( ($generated@@535 $generated@@538 $generated@@539))
))) (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@444 (type $generated@@540))))
(let (($generated@@542 ($generated@@443 (type $generated@@540))))
(= (type ($generated@@536 $generated@@540)) ($generated@@86 $generated@@542 $generated@@541))))
 :pattern ( ($generated@@536 $generated@@540))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@544) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@534 $generated@@543) $generated@@544))  (and ($generated@@0 ($generated@@93 ($generated@@440 $generated@@543) ($generated@@236 ($generated@@535 $generated@@85 $generated@@544)))) (= ($generated@@93 ($generated@@536 $generated@@543) ($generated@@236 ($generated@@535 $generated@@85 $generated@@544))) ($generated@@237 ($generated@@535 $generated@@85 $generated@@544))))))
 :pattern ( ($generated@@93 ($generated@@534 $generated@@543) $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) ($generated@@86 $generated@@161 $generated@@4))
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@462 (type $generated@@548))))
(let (($generated@@550 ($generated@@461 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548)) ($generated@@86 $generated@@550 $generated@@549))))
 :pattern ( ($generated@@546 $generated@@548))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@552) $generated@@161)) (= ($generated@@0 ($generated@@93 ($generated@@545 $generated@@551) $generated@@552))  (and ($generated@@0 ($generated@@93 ($generated@@458 $generated@@551) ($generated@@236 ($generated@@535 $generated@@85 $generated@@552)))) (= ($generated@@93 ($generated@@546 $generated@@551) ($generated@@236 ($generated@@535 $generated@@85 $generated@@552))) ($generated@@237 ($generated@@535 $generated@@85 $generated@@552))))))
 :pattern ( ($generated@@93 ($generated@@545 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(let (($generated@@556 ($generated@@443 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@442 $generated@@556 $generated@@555)) (= ($generated@@0 ($generated@@93 ($generated@@495 $generated@@553) $generated@@554)) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@556) (and ($generated@@0 ($generated@@93 ($generated@@440 $generated@@553) $generated@@557)) (= $generated@@554 ($generated@@93 ($generated@@536 $generated@@553) $generated@@557))))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@553) $generated@@557))
 :pattern ( ($generated@@93 ($generated@@536 $generated@@553) $generated@@557))
))))))
 :pattern ( ($generated@@93 ($generated@@495 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(let (($generated@@561 ($generated@@461 (type $generated@@558))))
 (=> (= (type $generated@@558) ($generated@@460 $generated@@561 $generated@@560)) (= ($generated@@0 ($generated@@93 ($generated@@506 $generated@@558) $generated@@559)) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@561) (and ($generated@@0 ($generated@@93 ($generated@@458 $generated@@558) $generated@@562)) (= $generated@@559 ($generated@@93 ($generated@@546 $generated@@558) $generated@@562))))
 :pattern ( ($generated@@93 ($generated@@458 $generated@@558) $generated@@562))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@558) $generated@@562))
))))))
 :pattern ( ($generated@@93 ($generated@@506 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (= (type ($generated@@563 $generated@@564 $generated@@565)) $generated@@72)
 :pattern ( ($generated@@563 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@567) $generated@@72)) (= (type $generated@@568) $generated@@72)) (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@566 ($generated@@563 $generated@@567 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@566) $generated@@570))) (and ($generated@@369 ($generated@@93 ($generated@@536 $generated@@566) $generated@@570) $generated@@568 $generated@@569) ($generated@@369 $generated@@570 $generated@@567 $generated@@569)))
 :pattern ( ($generated@@93 ($generated@@536 $generated@@566) $generated@@570))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@566) $generated@@570))
))))
 :pattern ( ($generated@@82 $generated@@566 ($generated@@563 $generated@@567 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@571 $generated@@572 $generated@@573)) $generated@@72)
 :pattern ( ($generated@@571 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@575) $generated@@72)) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@574 ($generated@@571 $generated@@575 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@458 $generated@@574) $generated@@578))) (and ($generated@@369 ($generated@@93 ($generated@@546 $generated@@574) $generated@@578) $generated@@576 $generated@@577) ($generated@@369 $generated@@578 $generated@@575 $generated@@577)))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@574) $generated@@578))
 :pattern ( ($generated@@93 ($generated@@458 $generated@@574) $generated@@578))
))))
 :pattern ( ($generated@@82 $generated@@574 ($generated@@571 $generated@@575 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@72) (= (type $generated@@580) $generated@@85)) ($generated@@154 $generated@@580 ($generated@@84 $generated@@579))) (or ($generated@@155 $generated@@580) ($generated@@377 $generated@@580)))
 :pattern ( ($generated@@377 $generated@@580) ($generated@@154 $generated@@580 ($generated@@84 $generated@@579)))
 :pattern ( ($generated@@155 $generated@@580) ($generated@@154 $generated@@580 ($generated@@84 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@72) (= (type $generated@@582) $generated@@85)) ($generated@@154 $generated@@582 ($generated@@90 $generated@@581))) (or ($generated@@158 $generated@@582) ($generated@@380 $generated@@582)))
 :pattern ( ($generated@@380 $generated@@582) ($generated@@154 $generated@@582 ($generated@@90 $generated@@581)))
 :pattern ( ($generated@@158 $generated@@582) ($generated@@154 $generated@@582 ($generated@@90 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@166 (type $generated@@583))))
 (=> (and (and (= (type $generated@@583) ($generated@@165 $generated@@585)) (= (type $generated@@584) ($generated@@165 $generated@@585))) ($generated@@382 $generated@@583 $generated@@584)) (= $generated@@583 $generated@@584)))
 :pattern ( ($generated@@382 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@587 T@T) ) (! (= (type ($generated@@586 $generated@@587)) ($generated@@86 $generated@@587 $generated@@4))
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@462 (type $generated@@588))))
(let (($generated@@590 ($generated@@461 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@460 $generated@@590 $generated@@589)) (= (= $generated@@588 ($generated@@459 $generated@@590 $generated@@589)) (= ($generated@@458 $generated@@588) ($generated@@586 $generated@@590))))))
 :pattern ( ($generated@@458 $generated@@588))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@462 (type $generated@@591))))
(let (($generated@@593 ($generated@@461 (type $generated@@591))))
 (=> (= (type $generated@@591) ($generated@@460 $generated@@593 $generated@@592)) (= (= $generated@@591 ($generated@@459 $generated@@593 $generated@@592)) (= ($generated@@506 $generated@@591) ($generated@@586 $generated@@592))))))
 :pattern ( ($generated@@506 $generated@@591))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@462 (type $generated@@594))))
(let (($generated@@596 ($generated@@461 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@460 $generated@@596 $generated@@595)) (= (= $generated@@594 ($generated@@459 $generated@@596 $generated@@595)) (= ($generated@@545 $generated@@594) ($generated@@586 $generated@@161))))))
 :pattern ( ($generated@@545 $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@444 (type $generated@@597))))
(let (($generated@@599 ($generated@@443 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@442 $generated@@599 $generated@@598)) (or (= $generated@@597 ($generated@@441 $generated@@599 $generated@@598)) (exists (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (and (and (= (type $generated@@600) $generated@@161) (= (type $generated@@601) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@534 $generated@@597) ($generated@@425 ($generated@@327 $generated@@600 $generated@@601)))))
 :no-pattern (type $generated@@600)
 :no-pattern (type $generated@@601)
 :no-pattern ($generated $generated@@600)
 :no-pattern ($generated@@0 $generated@@600)
 :no-pattern ($generated $generated@@601)
 :no-pattern ($generated@@0 $generated@@601)
))))))
 :pattern ( ($generated@@534 $generated@@597))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@462 (type $generated@@602))))
(let (($generated@@604 ($generated@@461 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@460 $generated@@604 $generated@@603)) (or (= $generated@@602 ($generated@@459 $generated@@604 $generated@@603)) (exists (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (and (and (= (type $generated@@605) $generated@@161) (= (type $generated@@606) $generated@@161)) ($generated@@0 ($generated@@93 ($generated@@545 $generated@@602) ($generated@@425 ($generated@@327 $generated@@605 $generated@@606)))))
 :no-pattern (type $generated@@605)
 :no-pattern (type $generated@@606)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
 :no-pattern ($generated $generated@@606)
 :no-pattern ($generated@@0 $generated@@606)
))))))
 :pattern ( ($generated@@545 $generated@@602))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@161) ($generated@@328 $generated@@607 $generated@@46)) (and (= ($generated@@425 ($generated@@535 $generated@@2 $generated@@607)) $generated@@607) ($generated@@154 ($generated@@535 $generated@@2 $generated@@607) $generated@@46)))
 :pattern ( ($generated@@328 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@161) ($generated@@328 $generated@@608 $generated@@47)) (and (= ($generated@@425 ($generated@@535 $generated@@3 $generated@@608)) $generated@@608) ($generated@@154 ($generated@@535 $generated@@3 $generated@@608) $generated@@47)))
 :pattern ( ($generated@@328 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@161) ($generated@@328 $generated@@609 $generated@@44)) (and (= ($generated@@425 ($generated@@535 $generated@@4 $generated@@609)) $generated@@609) ($generated@@154 ($generated@@535 $generated@@4 $generated@@609) $generated@@44)))
 :pattern ( ($generated@@328 $generated@@609 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@610) 21))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@161) ($generated@@328 $generated@@611 $generated@@45)) (and (= ($generated@@425 ($generated@@535 $generated@@610 $generated@@611)) $generated@@611) ($generated@@154 ($generated@@535 $generated@@610 $generated@@611) $generated@@45)))
 :pattern ( ($generated@@328 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@85) (= (type $generated@@613) $generated@@85)) (and ($generated@@377 $generated@@612) ($generated@@377 $generated@@613))) (= ($generated@@338 $generated@@612 $generated@@613)  (and ($generated@@213 ($generated@@157 $generated@@612) ($generated@@157 $generated@@613)) ($generated@@338 ($generated@@156 $generated@@612) ($generated@@156 $generated@@613)))))
 :pattern ( ($generated@@338 $generated@@612 $generated@@613) ($generated@@377 $generated@@612))
 :pattern ( ($generated@@338 $generated@@612 $generated@@613) ($generated@@377 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@72) (= ($generated@@328 ($generated@@425 $generated@@614) $generated@@615) ($generated@@154 $generated@@614 $generated@@615)))
 :pattern ( ($generated@@328 ($generated@@425 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@91 (type $generated@@616))))
 (=> (= (type $generated@@616) ($generated@@86 $generated@@617 $generated@@2)) (<= 0 ($generated@@430 $generated@@616))))
 :pattern ( ($generated@@430 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@166 (type $generated@@618))))
 (=> (= (type $generated@@618) ($generated@@165 $generated@@619)) (<= 0 ($generated@@383 $generated@@618))))
 :pattern ( ($generated@@383 $generated@@618))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@72)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@72) (= (type $generated@@623) $generated@@72)) (= ($generated@@620 ($generated@@563 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@563 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@72)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@72) (= (type $generated@@627) $generated@@72)) (= ($generated@@624 ($generated@@563 $generated@@626 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@563 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@72) (= (type $generated@@629) $generated@@72)) (= ($generated@@80 ($generated@@563 $generated@@628 $generated@@629)) $generated@@58))
 :pattern ( ($generated@@563 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@72)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@72) (= (type $generated@@633) $generated@@72)) (= ($generated@@630 ($generated@@571 $generated@@632 $generated@@633)) $generated@@632))
 :pattern ( ($generated@@571 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@72)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@72) (= (type $generated@@637) $generated@@72)) (= ($generated@@634 ($generated@@571 $generated@@636 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@571 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@72) (= (type $generated@@639) $generated@@72)) (= ($generated@@80 ($generated@@571 $generated@@638 $generated@@639)) $generated@@59))
 :pattern ( ($generated@@571 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@161) (= (type $generated@@641) $generated@@161)) (= ($generated@@245 ($generated@@327 $generated@@640 $generated@@641)) $generated@@61))
 :pattern ( ($generated@@327 $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@72)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@72) (= (type $generated@@645) $generated@@72)) (= ($generated@@642 ($generated@@229 $generated@@644 $generated@@645)) $generated@@644))
 :pattern ( ($generated@@229 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ) (! (= (type ($generated@@646 $generated@@647)) $generated@@72)
 :pattern ( ($generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@72) (= (type $generated@@649) $generated@@72)) (= ($generated@@646 ($generated@@229 $generated@@648 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@229 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@161) (= (type $generated@@651) $generated@@161)) (= ($generated@@236 ($generated@@327 $generated@@650 $generated@@651)) $generated@@650))
 :pattern ( ($generated@@327 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@161) (= (type $generated@@653) $generated@@161)) (= ($generated@@237 ($generated@@327 $generated@@652 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@327 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@85) (= (type $generated@@655) $generated@@85)) (= ($generated@@245 ($generated@@83 $generated@@654 $generated@@655)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@85) (= (type $generated@@657) $generated@@85)) (= ($generated@@157 ($generated@@83 $generated@@656 $generated@@657)) $generated@@656))
 :pattern ( ($generated@@83 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@85) (= (type $generated@@659) $generated@@85)) (= ($generated@@156 ($generated@@83 $generated@@658 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@83 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@660) ($generated@@165 $generated@@161)) (= (type $generated@@661) $generated@@72)) (= (type $generated@@662) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@660 ($generated@@202 $generated@@661) $generated@@662) (forall (($generated@@663 Int) ) (!  (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@383 $generated@@660))) ($generated@@369 ($generated@@384 $generated@@660 $generated@@663) $generated@@661 $generated@@662))
 :pattern ( ($generated@@384 $generated@@660 $generated@@663))
))))
 :pattern ( ($generated@@82 $generated@@660 ($generated@@202 $generated@@661) $generated@@662))
)))
(assert (forall (($generated@@665 Int) ) (! (= ($generated@@664 ($generated@@198 $generated@@665)) $generated@@665)
 :pattern ( ($generated@@198 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ) (! (= (type ($generated@@666 $generated@@667)) $generated@@72)
 :pattern ( ($generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@72) (= ($generated@@666 ($generated@@353 $generated@@668)) $generated@@668))
 :pattern ( ($generated@@353 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@72) (= ($generated@@80 ($generated@@353 $generated@@669)) $generated@@54))
 :pattern ( ($generated@@353 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ) (! (= (type ($generated@@670 $generated@@671)) $generated@@72)
 :pattern ( ($generated@@670 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@72) (= ($generated@@670 ($generated@@358 $generated@@672)) $generated@@672))
 :pattern ( ($generated@@358 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@72) (= ($generated@@80 ($generated@@358 $generated@@673)) $generated@@55))
 :pattern ( ($generated@@358 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (! (= (type ($generated@@674 $generated@@675)) $generated@@72)
 :pattern ( ($generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@72) (= ($generated@@674 ($generated@@248 $generated@@676)) $generated@@676))
 :pattern ( ($generated@@248 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@72) (= ($generated@@80 ($generated@@248 $generated@@677)) $generated@@56))
 :pattern ( ($generated@@248 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ) (! (= (type ($generated@@678 $generated@@679)) $generated@@72)
 :pattern ( ($generated@@678 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@72) (= ($generated@@678 ($generated@@202 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@202 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@72) (= ($generated@@80 ($generated@@202 $generated@@681)) $generated@@57))
 :pattern ( ($generated@@202 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ) (! (= (type ($generated@@682 $generated@@683)) $generated@@72)
 :pattern ( ($generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@72) (= ($generated@@682 ($generated@@84 $generated@@684)) $generated@@684))
 :pattern ( ($generated@@84 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ) (! (= (type ($generated@@685 $generated@@686)) $generated@@72)
 :pattern ( ($generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@72) (= ($generated@@685 ($generated@@90 $generated@@687)) $generated@@687))
 :pattern ( ($generated@@90 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@161) (= ($generated@@245 ($generated@@410 $generated@@688)) $generated@@67))
 :pattern ( ($generated@@410 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@161) (= ($generated@@162 ($generated@@410 $generated@@689)) $generated@@689))
 :pattern ( ($generated@@410 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@85) (= ($generated@@245 ($generated@@414 $generated@@690)) $generated@@68))
 :pattern ( ($generated@@414 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@85) (= ($generated@@159 ($generated@@414 $generated@@691)) $generated@@691))
 :pattern ( ($generated@@414 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
(= ($generated@@535 $generated@@693 ($generated@@425 $generated@@692)) $generated@@692))
 :pattern ( ($generated@@425 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@694) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@695) $generated@@72)) (= (type $generated@@696) $generated@@72)) (= ($generated@@154 $generated@@694 ($generated@@563 $generated@@695 $generated@@696)) (forall (($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@694) $generated@@697))) (and ($generated@@328 ($generated@@93 ($generated@@536 $generated@@694) $generated@@697) $generated@@696) ($generated@@328 $generated@@697 $generated@@695)))
 :pattern ( ($generated@@93 ($generated@@536 $generated@@694) $generated@@697))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@694) $generated@@697))
))))
 :pattern ( ($generated@@154 $generated@@694 ($generated@@563 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@699) $generated@@72)) (= (type $generated@@700) $generated@@72)) (= ($generated@@154 $generated@@698 ($generated@@571 $generated@@699 $generated@@700)) (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@161) ($generated@@0 ($generated@@93 ($generated@@458 $generated@@698) $generated@@701))) (and ($generated@@328 ($generated@@93 ($generated@@546 $generated@@698) $generated@@701) $generated@@700) ($generated@@328 $generated@@701 $generated@@699)))
 :pattern ( ($generated@@93 ($generated@@546 $generated@@698) $generated@@701))
 :pattern ( ($generated@@93 ($generated@@458 $generated@@698) $generated@@701))
))))
 :pattern ( ($generated@@154 $generated@@698 ($generated@@571 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@72) (= (type $generated@@703) $generated@@161)) (= ($generated@@154 ($generated@@410 $generated@@703) ($generated@@90 $generated@@702)) ($generated@@328 $generated@@703 $generated@@702)))
 :pattern ( ($generated@@154 ($generated@@410 $generated@@703) ($generated@@90 $generated@@702)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@161) (= (type $generated@@707) $generated@@161)) (< ($generated@@704 $generated@@706) ($generated@@705 ($generated@@327 $generated@@706 $generated@@707))))
 :pattern ( ($generated@@327 $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@161) (= (type $generated@@709) $generated@@161)) (< ($generated@@704 $generated@@709) ($generated@@705 ($generated@@327 $generated@@708 $generated@@709))))
 :pattern ( ($generated@@327 $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@85) (= (type $generated@@711) $generated@@85)) (< ($generated@@705 $generated@@710) ($generated@@705 ($generated@@83 $generated@@710 $generated@@711))))
 :pattern ( ($generated@@83 $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@85) (= (type $generated@@713) $generated@@85)) (< ($generated@@705 $generated@@713) ($generated@@705 ($generated@@83 $generated@@712 $generated@@713))))
 :pattern ( ($generated@@83 $generated@@712 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) $generated@@161) (= (type $generated@@715) $generated@@72)) (= (type $generated@@716) $generated@@72)) ($generated@@328 $generated@@714 ($generated@@563 $generated@@715 $generated@@716))) (and (= ($generated@@425 ($generated@@535 ($generated@@442 $generated@@161 $generated@@161) $generated@@714)) $generated@@714) ($generated@@154 ($generated@@535 ($generated@@442 $generated@@161 $generated@@161) $generated@@714) ($generated@@563 $generated@@715 $generated@@716))))
 :pattern ( ($generated@@328 $generated@@714 ($generated@@563 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) $generated@@161) (= (type $generated@@718) $generated@@72)) (= (type $generated@@719) $generated@@72)) ($generated@@328 $generated@@717 ($generated@@571 $generated@@718 $generated@@719))) (and (= ($generated@@425 ($generated@@535 ($generated@@460 $generated@@161 $generated@@161) $generated@@717)) $generated@@717) ($generated@@154 ($generated@@535 ($generated@@460 $generated@@161 $generated@@161) $generated@@717) ($generated@@571 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@328 $generated@@717 ($generated@@571 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@72) (= (type $generated@@721) $generated@@72)) (= (type $generated@@722) $generated@@161)) ($generated@@328 $generated@@722 ($generated@@229 $generated@@720 $generated@@721))) (and (= ($generated@@425 ($generated@@535 $generated@@85 $generated@@722)) $generated@@722) ($generated@@154 ($generated@@535 $generated@@85 $generated@@722) ($generated@@229 $generated@@720 $generated@@721))))
 :pattern ( ($generated@@328 $generated@@722 ($generated@@229 $generated@@720 $generated@@721)))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@161) (< ($generated@@704 $generated@@723) ($generated@@705 ($generated@@410 $generated@@723))))
 :pattern ( ($generated@@410 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@85) (< ($generated@@705 $generated@@724) ($generated@@705 ($generated@@414 $generated@@724))))
 :pattern ( ($generated@@414 $generated@@724))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (and (= (type $generated@@725) $generated@@85) (= (type $generated@@726) $generated@@72)) (= (type $generated@@727) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@727) (and ($generated@@158 $generated@@725) ($generated@@82 $generated@@725 ($generated@@90 $generated@@726) $generated@@727)))) ($generated@@369 ($generated@@162 $generated@@725) $generated@@726 $generated@@727))
 :pattern ( ($generated@@369 ($generated@@162 $generated@@725) $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ) (! (let (($generated@@729 (type $generated@@728)))
 (not ($generated@@0 ($generated@@93 ($generated@@586 $generated@@729) $generated@@728))))
 :pattern ( (let (($generated@@729 (type $generated@@728)))
($generated@@93 ($generated@@586 $generated@@729) $generated@@728)))
)))
(assert  (=> (<= 2 $generated@@149) (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@730) $generated@@72) (= (type $generated@@731) $generated@@152)) (= (type $generated@@732) $generated@@85)) (= (type $generated@@733) $generated@@85)) (or ($generated@@310 $generated@@730 $generated@@732 $generated@@733) (and (not (= 2 $generated@@149)) (and (and ($generated@@154 $generated@@732 ($generated@@84 $generated@@730)) ($generated@@154 $generated@@733 ($generated@@84 $generated@@730))) ($generated@@194 $generated@@730 ($generated@@151 $generated@@208) $generated@@733))))) (and ($generated@@194 $generated@@730 ($generated@@151 $generated@@208) ($generated@@309 $generated@@730 $generated@@731 $generated@@732 $generated@@733)) ($generated@@154 ($generated@@309 $generated@@730 $generated@@731 $generated@@732 $generated@@733) ($generated@@84 $generated@@730))))
 :pattern ( ($generated@@309 $generated@@730 $generated@@731 $generated@@732 $generated@@733))
))))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@72) (= (type $generated@@735) $generated@@72)) (and (= ($generated@@80 ($generated@@229 $generated@@734 $generated@@735)) $generated@@62) (= ($generated@@436 ($generated@@229 $generated@@734 $generated@@735)) $generated@@69)))
 :pattern ( ($generated@@229 $generated@@734 $generated@@735))
)))
(assert  (and (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@166 (type $generated@@738))))
(= (type ($generated@@736 $generated@@738)) ($generated@@165 $generated@@739)))
 :pattern ( ($generated@@736 $generated@@738))
)) (forall (($generated@@740 T@U) ) (! (let (($generated@@741 ($generated@@166 (type $generated@@740))))
(= (type ($generated@@737 $generated@@740)) $generated@@741))
 :pattern ( ($generated@@737 $generated@@740))
))))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (! (let (($generated@@744 (type $generated@@743)))
 (=> (= (type $generated@@742) ($generated@@165 $generated@@744)) (and (= ($generated@@736 ($generated@@164 $generated@@742 $generated@@743)) $generated@@742) (= ($generated@@737 ($generated@@164 $generated@@742 $generated@@743)) $generated@@743))))
 :pattern ( ($generated@@164 $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@85) (= ($generated@@704 ($generated@@425 $generated@@745)) ($generated@@705 $generated@@745)))
 :pattern ( ($generated@@704 ($generated@@425 $generated@@745)))
)))
(assert  (=> (<= 1 $generated@@149) (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (= (type $generated@@746) $generated@@72) (= (type $generated@@747) $generated@@152)) (= (type $generated@@748) $generated@@85)) (or ($generated@@153 $generated@@746 ($generated@@218 $generated@@748)) (and (not (= 1 $generated@@149)) ($generated@@154 $generated@@748 ($generated@@84 $generated@@746))))) (and (=> (not ($generated@@0 ($generated@@218 ($generated@@11 ($generated@@155 ($generated@@218 $generated@@748)))))) (let (($generated@@749 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@748)))))
(let (($generated@@750 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@748)))))
 (and (=> ($generated@@158 $generated@@750) ($generated@@153 $generated@@746 $generated@@749)) (=> (not ($generated@@158 $generated@@750)) (let (($generated@@751 ($generated@@159 $generated@@750)))
 (and ($generated@@153 $generated@@746 $generated@@751) ($generated@@153 $generated@@746 $generated@@749)))))))) (= ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) ($generated@@218 $generated@@748)) (ite ($generated@@155 ($generated@@218 $generated@@748)) ($generated@@160 $generated@@161) (let (($generated@@752 ($generated@@218 ($generated@@156 ($generated@@218 $generated@@748)))))
(let (($generated@@753 ($generated@@218 ($generated@@157 ($generated@@218 $generated@@748)))))
(ite ($generated@@158 $generated@@753) (let (($generated@@754 ($generated@@218 ($generated@@162 $generated@@753))))
($generated@@163 ($generated@@164 ($generated@@160 $generated@@161) $generated@@754) ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) $generated@@752))) (let (($generated@@755 ($generated@@218 ($generated@@159 $generated@@753))))
($generated@@163 ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) $generated@@755) ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) $generated@@752))))))))))
 :weight 3
 :pattern ( ($generated@@150 $generated@@746 ($generated@@151 $generated@@747) ($generated@@218 $generated@@748)))
))))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) $generated@@72) (= (type $generated@@757) $generated@@152)) (= (type $generated@@758) $generated@@85)) (= (type $generated@@759) $generated@@85)) (= ($generated@@309 $generated@@756 ($generated@@151 $generated@@757) $generated@@758 $generated@@759) ($generated@@309 $generated@@756 $generated@@757 $generated@@758 $generated@@759)))
 :pattern ( ($generated@@309 $generated@@756 ($generated@@151 $generated@@757) $generated@@758 $generated@@759))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@760) $generated@@161) ($generated@@328 $generated@@760 ($generated@@198 0))) (and (= ($generated@@425 ($generated@@535 $generated@@2 $generated@@760)) $generated@@760) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@760) ($generated@@198 0))))
 :pattern ( ($generated@@328 $generated@@760 ($generated@@198 0)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@761) $generated@@161) (= (type $generated@@762) $generated@@72)) ($generated@@328 $generated@@761 ($generated@@353 $generated@@762))) (and (= ($generated@@425 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@761)) $generated@@761) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@761) ($generated@@353 $generated@@762))))
 :pattern ( ($generated@@328 $generated@@761 ($generated@@353 $generated@@762)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (and (= (type $generated@@763) $generated@@161) (= (type $generated@@764) $generated@@72)) ($generated@@328 $generated@@763 ($generated@@358 $generated@@764))) (and (= ($generated@@425 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@763)) $generated@@763) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@4) $generated@@763) ($generated@@358 $generated@@764))))
 :pattern ( ($generated@@328 $generated@@763 ($generated@@358 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (= (type $generated@@765) $generated@@161) (= (type $generated@@766) $generated@@72)) ($generated@@328 $generated@@765 ($generated@@248 $generated@@766))) (and (= ($generated@@425 ($generated@@535 ($generated@@86 $generated@@161 $generated@@2) $generated@@765)) $generated@@765) ($generated@@154 ($generated@@535 ($generated@@86 $generated@@161 $generated@@2) $generated@@765) ($generated@@248 $generated@@766))))
 :pattern ( ($generated@@328 $generated@@765 ($generated@@248 $generated@@766)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (= (type $generated@@767) $generated@@161) (= (type $generated@@768) $generated@@72)) ($generated@@328 $generated@@767 ($generated@@202 $generated@@768))) (and (= ($generated@@425 ($generated@@535 ($generated@@165 $generated@@161) $generated@@767)) $generated@@767) ($generated@@154 ($generated@@535 ($generated@@165 $generated@@161) $generated@@767) ($generated@@202 $generated@@768))))
 :pattern ( ($generated@@328 $generated@@767 ($generated@@202 $generated@@768)))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (and (= (type $generated@@769) $generated@@72) (= (type $generated@@770) $generated@@161)) ($generated@@328 $generated@@770 ($generated@@84 $generated@@769))) (and (= ($generated@@425 ($generated@@535 $generated@@85 $generated@@770)) $generated@@770) ($generated@@154 ($generated@@535 $generated@@85 $generated@@770) ($generated@@84 $generated@@769))))
 :pattern ( ($generated@@328 $generated@@770 ($generated@@84 $generated@@769)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@72) (= (type $generated@@772) $generated@@161)) ($generated@@328 $generated@@772 ($generated@@90 $generated@@771))) (and (= ($generated@@425 ($generated@@535 $generated@@85 $generated@@772)) $generated@@772) ($generated@@154 ($generated@@535 $generated@@85 $generated@@772) ($generated@@90 $generated@@771))))
 :pattern ( ($generated@@328 $generated@@772 ($generated@@90 $generated@@771)))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (= (type $generated@@773) $generated@@72) (= (type $generated@@774) $generated@@85)) (= ($generated@@154 ($generated@@414 $generated@@774) ($generated@@90 $generated@@773)) ($generated@@154 $generated@@774 ($generated@@84 $generated@@773))))
 :pattern ( ($generated@@154 ($generated@@414 $generated@@774) ($generated@@90 $generated@@773)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (and (and (= (type $generated@@775) $generated@@85) (= (type $generated@@776) $generated@@72)) (= (type $generated@@777) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@777) (and ($generated@@377 $generated@@775) ($generated@@82 $generated@@775 ($generated@@84 $generated@@776) $generated@@777)))) ($generated@@82 ($generated@@157 $generated@@775) ($generated@@90 $generated@@776) $generated@@777))
 :pattern ( ($generated@@82 ($generated@@157 $generated@@775) ($generated@@90 $generated@@776) $generated@@777))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (and (and (= (type $generated@@778) $generated@@85) (= (type $generated@@779) $generated@@72)) (= (type $generated@@780) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@780) (and ($generated@@377 $generated@@778) ($generated@@82 $generated@@778 ($generated@@84 $generated@@779) $generated@@780)))) ($generated@@82 ($generated@@156 $generated@@778) ($generated@@84 $generated@@779) $generated@@780))
 :pattern ( ($generated@@82 ($generated@@156 $generated@@778) ($generated@@84 $generated@@779) $generated@@780))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (and (and (= (type $generated@@781) $generated@@85) (= (type $generated@@782) $generated@@72)) (= (type $generated@@783) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@783) (and ($generated@@380 $generated@@781) ($generated@@82 $generated@@781 ($generated@@90 $generated@@782) $generated@@783)))) ($generated@@82 ($generated@@159 $generated@@781) ($generated@@84 $generated@@782) $generated@@783))
 :pattern ( ($generated@@82 ($generated@@159 $generated@@781) ($generated@@84 $generated@@782) $generated@@783))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (and (= (type $generated@@784) ($generated@@86 $generated@@161 $generated@@2)) (= (type $generated@@785) $generated@@72)) (= (type $generated@@786) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@784 ($generated@@248 $generated@@785) $generated@@786) (forall (($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@787) $generated@@161) (< 0 ($generated ($generated@@93 $generated@@784 $generated@@787)))) ($generated@@369 $generated@@787 $generated@@785 $generated@@786))
 :pattern ( ($generated@@93 $generated@@784 $generated@@787))
))))
 :pattern ( ($generated@@82 $generated@@784 ($generated@@248 $generated@@785) $generated@@786))
)))
(assert (= $generated@@246 ($generated@@218 $generated@@246)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (= (type $generated@@788) $generated@@85) (= (type $generated@@789) $generated@@72)) (= (type $generated@@790) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@790) (and ($generated@@228 $generated@@788) (exists (($generated@@791 T@U) ) (!  (and (= (type $generated@@791) $generated@@72) ($generated@@82 $generated@@788 ($generated@@229 $generated@@789 $generated@@791) $generated@@790))
 :pattern ( ($generated@@82 $generated@@788 ($generated@@229 $generated@@789 $generated@@791) $generated@@790))
))))) ($generated@@369 ($generated@@236 $generated@@788) $generated@@789 $generated@@790))
 :pattern ( ($generated@@369 ($generated@@236 $generated@@788) $generated@@789 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (and (and (= (type $generated@@792) $generated@@85) (= (type $generated@@793) $generated@@72)) (= (type $generated@@794) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@794) (and ($generated@@228 $generated@@792) (exists (($generated@@795 T@U) ) (!  (and (= (type $generated@@795) $generated@@72) ($generated@@82 $generated@@792 ($generated@@229 $generated@@795 $generated@@793) $generated@@794))
 :pattern ( ($generated@@82 $generated@@792 ($generated@@229 $generated@@795 $generated@@793) $generated@@794))
))))) ($generated@@369 ($generated@@237 $generated@@792) $generated@@793 $generated@@794))
 :pattern ( ($generated@@369 ($generated@@237 $generated@@792) $generated@@793 $generated@@794))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ($generated@@798 Int) ) (! (let (($generated@@799 ($generated@@166 (type $generated@@796))))
 (=> (and (= (type $generated@@796) ($generated@@165 $generated@@799)) (= (type $generated@@797) ($generated@@165 $generated@@799))) (and (=> (< $generated@@798 ($generated@@383 $generated@@796)) (= ($generated@@384 ($generated@@163 $generated@@796 $generated@@797) $generated@@798) ($generated@@384 $generated@@796 $generated@@798))) (=> (<= ($generated@@383 $generated@@796) $generated@@798) (= ($generated@@384 ($generated@@163 $generated@@796 $generated@@797) $generated@@798) ($generated@@384 $generated@@797 (- $generated@@798 ($generated@@383 $generated@@796))))))))
 :pattern ( ($generated@@384 ($generated@@163 $generated@@796 $generated@@797) $generated@@798))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (= (type $generated@@800) $generated@@161) (= (type $generated@@801) $generated@@161)) (= ($generated@@327 ($generated@@218 $generated@@800) ($generated@@218 $generated@@801)) ($generated@@218 ($generated@@327 $generated@@800 $generated@@801))))
 :pattern ( ($generated@@327 ($generated@@218 $generated@@800) ($generated@@218 $generated@@801)))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (= (type $generated@@802) $generated@@85) (= (type $generated@@803) $generated@@85)) (= ($generated@@83 ($generated@@218 $generated@@802) ($generated@@218 $generated@@803)) ($generated@@218 ($generated@@83 $generated@@802 $generated@@803))))
 :pattern ( ($generated@@83 ($generated@@218 $generated@@802) ($generated@@218 $generated@@803)))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@161) (= ($generated@@410 ($generated@@218 $generated@@804)) ($generated@@218 ($generated@@410 $generated@@804))))
 :pattern ( ($generated@@410 ($generated@@218 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@85) (= ($generated@@414 ($generated@@218 $generated@@805)) ($generated@@218 ($generated@@414 $generated@@805))))
 :pattern ( ($generated@@414 ($generated@@218 $generated@@805)))
)))
(assert (forall (($generated@@806 T@U) ) (! (= ($generated@@425 ($generated@@218 $generated@@806)) ($generated@@218 ($generated@@425 $generated@@806)))
 :pattern ( ($generated@@425 ($generated@@218 $generated@@806)))
)))
(assert (forall (($generated@@807 T@U) ) (! (let (($generated@@808 ($generated@@166 (type $generated@@807))))
 (=> (and (= (type $generated@@807) ($generated@@165 $generated@@808)) (= ($generated@@383 $generated@@807) 0)) (= $generated@@807 ($generated@@160 $generated@@808))))
 :pattern ( ($generated@@383 $generated@@807))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ) (! (let (($generated@@812 (type $generated@@810)))
 (=> (and (and (= (type $generated@@809) ($generated@@86 $generated@@812 $generated@@2)) (= (type $generated@@811) $generated@@2)) (<= 0 ($generated $generated@@811))) (= ($generated@@430 ($generated@@94 $generated@@809 $generated@@810 $generated@@811)) (+ (- ($generated@@430 $generated@@809) ($generated ($generated@@93 $generated@@809 $generated@@810))) ($generated $generated@@811)))))
 :pattern ( ($generated@@430 ($generated@@94 $generated@@809 $generated@@810 $generated@@811)))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@814) $generated@@2)) ($generated@@82 $generated@@814 $generated@@46 $generated@@813))
 :pattern ( ($generated@@82 $generated@@814 $generated@@46 $generated@@813))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (= (type $generated@@815) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@816) $generated@@3)) ($generated@@82 $generated@@816 $generated@@47 $generated@@815))
 :pattern ( ($generated@@82 $generated@@816 $generated@@47 $generated@@815))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@817) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@818) $generated@@4)) ($generated@@82 $generated@@818 $generated@@44 $generated@@817))
 :pattern ( ($generated@@82 $generated@@818 $generated@@44 $generated@@817))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (= (type $generated@@819) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@820) $generated@@610)) ($generated@@82 $generated@@820 $generated@@45 $generated@@819))
 :pattern ( ($generated@@82 $generated@@820 $generated@@45 $generated@@819))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (= (type $generated@@821) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@822) $generated@@161)) ($generated@@82 $generated@@822 $generated@@48 $generated@@821))
 :pattern ( ($generated@@82 $generated@@822 $generated@@48 $generated@@821))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (= (type $generated@@823) ($generated@@165 $generated@@161)) (= (type $generated@@824) $generated@@72)) (= ($generated@@154 $generated@@823 ($generated@@202 $generated@@824)) (forall (($generated@@825 Int) ) (!  (=> (and (<= 0 $generated@@825) (< $generated@@825 ($generated@@383 $generated@@823))) ($generated@@328 ($generated@@384 $generated@@823 $generated@@825) $generated@@824))
 :pattern ( ($generated@@384 $generated@@823 $generated@@825))
))))
 :pattern ( ($generated@@154 $generated@@823 ($generated@@202 $generated@@824)))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (= (type $generated@@826) $generated@@72) (= (type $generated@@827) $generated@@152)) (= (type $generated@@828) $generated@@85)) (= ($generated@@194 $generated@@826 $generated@@827 $generated@@828) ($generated@@194 $generated@@826 $generated@@208 $generated@@828)))
 :pattern ( ($generated@@194 $generated@@826 ($generated@@207 $generated@@827) $generated@@828))
)))
(assert (forall (($generated@@830 T@U) ($generated@@831 Int) ) (!  (=> (= (type $generated@@830) ($generated@@165 $generated@@161)) (=> (and (<= 0 $generated@@831) (< $generated@@831 ($generated@@383 $generated@@830))) (< ($generated@@705 ($generated@@535 $generated@@85 ($generated@@384 $generated@@830 $generated@@831))) ($generated@@829 $generated@@830))))
 :pattern ( ($generated@@705 ($generated@@535 $generated@@85 ($generated@@384 $generated@@830 $generated@@831))))
)))
(assert (forall (($generated@@832 T@U) ($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (and (and (= (type $generated@@832) ($generated@@442 $generated@@161 $generated@@161)) (= (type $generated@@833) $generated@@72)) (= (type $generated@@834) $generated@@72)) ($generated@@154 $generated@@832 ($generated@@563 $generated@@833 $generated@@834))) (and (and ($generated@@154 ($generated@@440 $generated@@832) ($generated@@353 $generated@@833)) ($generated@@154 ($generated@@495 $generated@@832) ($generated@@353 $generated@@834))) ($generated@@154 ($generated@@534 $generated@@832) ($generated@@353 ($generated@@229 $generated@@833 $generated@@834)))))
 :pattern ( ($generated@@154 $generated@@832 ($generated@@563 $generated@@833 $generated@@834)))
)))
(assert (forall (($generated@@835 T@U) ($generated@@836 T@U) ($generated@@837 T@U) ) (!  (=> (and (and (and (= (type $generated@@835) ($generated@@460 $generated@@161 $generated@@161)) (= (type $generated@@836) $generated@@72)) (= (type $generated@@837) $generated@@72)) ($generated@@154 $generated@@835 ($generated@@571 $generated@@836 $generated@@837))) (and (and ($generated@@154 ($generated@@458 $generated@@835) ($generated@@358 $generated@@836)) ($generated@@154 ($generated@@506 $generated@@835) ($generated@@358 $generated@@837))) ($generated@@154 ($generated@@545 $generated@@835) ($generated@@358 ($generated@@229 $generated@@836 $generated@@837)))))
 :pattern ( ($generated@@154 $generated@@835 ($generated@@571 $generated@@836 $generated@@837)))
)))
(assert (forall (($generated@@838 T@U) ) (!  (=> (= (type $generated@@838) $generated@@2) ($generated@@154 $generated@@838 $generated@@46))
 :pattern ( ($generated@@154 $generated@@838 $generated@@46))
)))
(assert (forall (($generated@@839 T@U) ) (!  (=> (= (type $generated@@839) $generated@@3) ($generated@@154 $generated@@839 $generated@@47))
 :pattern ( ($generated@@154 $generated@@839 $generated@@47))
)))
(assert (forall (($generated@@840 T@U) ) (!  (=> (= (type $generated@@840) $generated@@4) ($generated@@154 $generated@@840 $generated@@44))
 :pattern ( ($generated@@154 $generated@@840 $generated@@44))
)))
(assert (forall (($generated@@841 T@U) ) (!  (=> (= (type $generated@@841) $generated@@610) ($generated@@154 $generated@@841 $generated@@45))
 :pattern ( ($generated@@154 $generated@@841 $generated@@45))
)))
(assert (forall (($generated@@842 T@U) ) (!  (=> (= (type $generated@@842) $generated@@161) ($generated@@154 $generated@@842 $generated@@48))
 :pattern ( ($generated@@154 $generated@@842 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () T@U)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () T@U)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () T@U)
(declare-fun $generated@@849 () T@U)
(declare-fun $generated@@850 () T@U)
(declare-fun $generated@@851 () T@U)
(declare-fun $generated@@852 () T@U)
(declare-fun $generated@@853 () T@U)
(declare-fun $generated@@854 (T@U) Bool)
(declare-fun $generated@@855 () T@U)
(declare-fun $generated@@856 () T@U)
(declare-fun $generated@@857 () T@U)
(declare-fun $generated@@858 () T@U)
(declare-fun $generated@@859 () T@U)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 () T@U)
(declare-fun $generated@@862 () T@U)
(declare-fun $generated@@863 () T@U)
(declare-fun $generated@@864 () T@U)
(declare-fun $generated@@865 () T@U)
(declare-fun $generated@@866 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@843) $generated@@72) (= (type $generated@@844) $generated@@85)) (= (type $generated@@845) $generated@@85)) (= (type $generated@@846) $generated@@85)) (= (type $generated@@856) $generated@@161)) (= (type $generated@@857) $generated@@161)) (= (type $generated@@849) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@858) $generated@@161)) (= (type $generated@@851) $generated@@85)) (= (type $generated@@859) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@847) $generated@@85)) (= (type $generated@@848) $generated@@85)) (= (type $generated@@850) $generated@@85)) (= (type $generated@@852) $generated@@85)) (= (type $generated@@853) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@855) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@860) $generated@@85)) (= (type $generated@@861) $generated@@85)) (= (type $generated@@862) $generated@@85)) (= (type $generated@@863) $generated@@85)) (= (type $generated@@864) ($generated@@255 $generated@@87 $generated@@4))) (= (type $generated@@865) $generated@@87)) (= (type $generated@@866) ($generated@@86 $generated@@87 $generated@@88))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@867  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@382 ($generated@@163 ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@844) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@845)) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) ($generated@@309 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@844 $generated@@845))))))
(let (($generated@@868  (=> (and (= $generated@@846 ($generated@@414 $generated@@847)) ($generated@@154 $generated@@847 ($generated@@84 $generated@@843))) (=> (and (and (and ($generated@@154 $generated@@848 ($generated@@84 $generated@@843)) ($generated@@82 $generated@@848 ($generated@@84 $generated@@843) $generated@@849)) (= $generated@@850 $generated@@847)) (and (and ($generated@@154 $generated@@850 ($generated@@84 $generated@@843)) (= $generated@@848 $generated@@850)) (and ($generated@@82 $generated@@851 ($generated@@84 $generated@@843) $generated@@849) ($generated@@82 $generated@@845 ($generated@@84 $generated@@843) $generated@@849)))) (and (=> (= (ControlFlow 0 11) (- 0 22)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> ($generated@@155 $generated@@845) ($generated@@0 ($generated@@218 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 11) (- 0 21)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@869 ($generated@@156 $generated@@845)))
(let (($generated@@870 ($generated@@157 $generated@@845)))
 (=> ($generated@@158 $generated@@870) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@869)))))))) (and (=> (= (ControlFlow 0 11) (- 0 20)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@871 ($generated@@157 $generated@@845)))
 (=> (not ($generated@@158 $generated@@871)) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))) (=> (and (and ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) ($generated@@310 $generated@@843 $generated@@851 $generated@@845)) (and ($generated@@310 $generated@@843 $generated@@851 $generated@@845) (= $generated@@852 ($generated@@309 $generated@@843 ($generated@@151 $generated@@208) $generated@@851 $generated@@845)))) (and (=> (= (ControlFlow 0 11) (- 0 19)) (or (< ($generated@@705 $generated@@848) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@848) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@852) ($generated@@705 $generated@@845))))) (=> (or (< ($generated@@705 $generated@@848) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@848) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@852) ($generated@@705 $generated@@845)))) (and (=> (= (ControlFlow 0 11) (- 0 18)) (=> ($generated@@217 $generated@@843 $generated@@852) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@852) (=> ($generated@@155 $generated@@852) ($generated@@0 ($generated@@218 ($generated@@11 true))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@852) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@852) (=> ($generated@@155 $generated@@852) ($generated@@0 ($generated@@218 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 11) (- 0 17)) (=> ($generated@@217 $generated@@843 $generated@@852) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@852) (=> (not ($generated@@155 $generated@@852)) (let (($generated@@872 ($generated@@156 $generated@@852)))
(let (($generated@@873 ($generated@@157 $generated@@852)))
 (=> ($generated@@158 $generated@@873) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@872)))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@852) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@852) (=> (not ($generated@@155 $generated@@852)) (let (($generated@@874 ($generated@@156 $generated@@852)))
(let (($generated@@875 ($generated@@157 $generated@@852)))
 (=> ($generated@@158 $generated@@875) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@874))))))) (and (=> (= (ControlFlow 0 11) (- 0 16)) (=> ($generated@@217 $generated@@843 $generated@@852) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@852) (=> (not ($generated@@155 $generated@@852)) (let (($generated@@876 ($generated@@157 $generated@@852)))
 (=> (not ($generated@@158 $generated@@876)) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@852) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@852) (=> (not ($generated@@155 $generated@@852)) (let (($generated@@877 ($generated@@157 $generated@@852)))
 (=> (not ($generated@@158 $generated@@877)) ($generated@@0 ($generated@@218 ($generated@@11 false)))))))) (=> (and ($generated@@89 $generated@@853) ($generated@@854 $generated@@853)) (=> (and (and (and ($generated@@153 $generated@@843 $generated@@848) ($generated@@153 $generated@@843 $generated@@852)) (and ($generated@@310 $generated@@843 $generated@@848 $generated@@852) ($generated@@153 $generated@@843 ($generated@@309 $generated@@843 ($generated@@151 $generated@@208) $generated@@848 $generated@@852)))) (and ($generated@@382 ($generated@@163 ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@848) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@852)) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) ($generated@@309 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@848 $generated@@852))) (= $generated@@849 $generated@@853))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (or (< ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@845) ($generated@@705 $generated@@845))))) (=> (or (< ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@845) ($generated@@705 $generated@@845)))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> ($generated@@155 $generated@@845) ($generated@@0 ($generated@@218 ($generated@@11 true))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> ($generated@@155 $generated@@845) ($generated@@0 ($generated@@218 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@878 ($generated@@156 $generated@@845)))
(let (($generated@@879 ($generated@@157 $generated@@845)))
 (=> ($generated@@158 $generated@@879) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@878)))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@880 ($generated@@156 $generated@@845)))
(let (($generated@@881 ($generated@@157 $generated@@845)))
 (=> ($generated@@158 $generated@@881) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@880))))))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@882 ($generated@@157 $generated@@845)))
 (=> (not ($generated@@158 $generated@@882)) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@883 ($generated@@157 $generated@@845)))
 (=> (not ($generated@@158 $generated@@883)) ($generated@@0 ($generated@@218 ($generated@@11 false)))))))) (=> (and ($generated@@89 $generated@@855) ($generated@@854 $generated@@855)) (=> (and (and (and (and ($generated@@153 $generated@@843 $generated@@851) ($generated@@153 $generated@@843 $generated@@845)) (and ($generated@@310 $generated@@843 $generated@@851 $generated@@845) ($generated@@153 $generated@@843 ($generated@@309 $generated@@843 ($generated@@151 $generated@@208) $generated@@851 $generated@@845)))) ($generated@@382 ($generated@@163 ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@851) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@845)) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) ($generated@@309 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@851 $generated@@845)))) (and (= $generated@@853 $generated@@855) (= (ControlFlow 0 11) 4))) $generated@@867))))))))))))))))))))))))))))
(let (($generated@@884  (=> (and (= $generated@@846 ($generated@@410 $generated@@856)) ($generated@@328 $generated@@856 $generated@@843)) (=> (and (and (and ($generated@@328 $generated@@857 $generated@@843) ($generated@@369 $generated@@857 $generated@@843 $generated@@849)) (= $generated@@858 $generated@@856)) (and ($generated@@328 $generated@@858 $generated@@843) (= $generated@@857 $generated@@858))) (and (=> (= (ControlFlow 0 6) (- 0 10)) (or (< ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@845) ($generated@@705 $generated@@845))))) (=> (or (< ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@851) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@845) ($generated@@705 $generated@@845)))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> ($generated@@155 $generated@@845) ($generated@@0 ($generated@@218 ($generated@@11 true))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> ($generated@@155 $generated@@845) ($generated@@0 ($generated@@218 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@885 ($generated@@156 $generated@@845)))
(let (($generated@@886 ($generated@@157 $generated@@845)))
 (=> ($generated@@158 $generated@@886) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@885)))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@887 ($generated@@156 $generated@@845)))
(let (($generated@@888 ($generated@@157 $generated@@845)))
 (=> ($generated@@158 $generated@@888) ($generated@@194 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@887))))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@889 ($generated@@157 $generated@@845)))
 (=> (not ($generated@@158 $generated@@889)) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))) (=> (=> ($generated@@217 $generated@@843 $generated@@845) (or ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (=> (not ($generated@@155 $generated@@845)) (let (($generated@@890 ($generated@@157 $generated@@845)))
 (=> (not ($generated@@158 $generated@@890)) ($generated@@0 ($generated@@218 ($generated@@11 false)))))))) (=> (and ($generated@@89 $generated@@859) ($generated@@854 $generated@@859)) (=> (and (and (and (and ($generated@@153 $generated@@843 $generated@@851) ($generated@@153 $generated@@843 $generated@@845)) (and ($generated@@310 $generated@@843 $generated@@851 $generated@@845) ($generated@@153 $generated@@843 ($generated@@309 $generated@@843 ($generated@@151 $generated@@208) $generated@@851 $generated@@845)))) ($generated@@382 ($generated@@163 ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@851) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@845)) ($generated@@150 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) ($generated@@309 $generated@@843 ($generated@@151 ($generated@@151 $generated@@208)) $generated@@851 $generated@@845)))) (and (= $generated@@849 $generated@@859) (= (ControlFlow 0 6) 4))) $generated@@867))))))))))))))
(let (($generated@@891  (=> (and (= $generated@@844 $generated@@246) (= (ControlFlow 0 5) 4)) $generated@@867)))
(let (($generated@@892 true))
(let (($generated@@893  (=> (not (= $generated@@846 ($generated@@410 $generated@@856))) (and (=> (= (ControlFlow 0 23) 11) $generated@@868) (=> (= (ControlFlow 0 23) 2) $generated@@892)))))
(let (($generated@@894  (=> (= $generated@@844 ($generated@@83 $generated@@860 $generated@@861)) (=> (and ($generated@@154 $generated@@860 ($generated@@90 $generated@@843)) ($generated@@154 $generated@@861 ($generated@@84 $generated@@843))) (=> (and (and (and (and ($generated@@154 $generated@@851 ($generated@@84 $generated@@843)) ($generated@@82 $generated@@851 ($generated@@84 $generated@@843) $generated@@849)) (= $generated@@862 $generated@@861)) (and ($generated@@154 $generated@@862 ($generated@@84 $generated@@843)) (= $generated@@851 $generated@@862))) (and (and (and ($generated@@154 $generated@@846 ($generated@@90 $generated@@843)) ($generated@@82 $generated@@846 ($generated@@90 $generated@@843) $generated@@849)) (= $generated@@863 $generated@@860)) (and ($generated@@154 $generated@@863 ($generated@@90 $generated@@843)) (= $generated@@846 $generated@@863)))) (and (=> (= (ControlFlow 0 24) 6) $generated@@884) (=> (= (ControlFlow 0 24) 23) $generated@@893)))))))
(let (($generated@@895 true))
(let (($generated@@896  (=> (not (= $generated@@844 $generated@@246)) (and (=> (= (ControlFlow 0 25) 24) $generated@@894) (=> (= (ControlFlow 0 25) 1) $generated@@895)))))
(let (($generated@@897  (=> (= $generated@@864 ($generated@@254 $generated@@865 $generated@@866 $generated@@60 false)) (=> (and ($generated@@519 $generated@@844) ($generated@@519 $generated@@845)) (=> (and (and ($generated@@89 $generated@@849) ($generated@@854 $generated@@849)) (and (= $generated@@866 $generated@@849) (forall (($generated@@898 T@U) ($generated@@899 T@U) ) (!  (=> (and (= (type $generated@@898) $generated@@85) (= (type $generated@@899) $generated@@85)) (=> (and (and (and ($generated@@154 $generated@@898 ($generated@@84 $generated@@843)) ($generated@@154 $generated@@899 ($generated@@84 $generated@@843))) ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@899)) (or (< ($generated@@705 $generated@@898) ($generated@@705 $generated@@844)) (and (= ($generated@@705 $generated@@898) ($generated@@705 $generated@@844)) (< ($generated@@705 $generated@@899) ($generated@@705 $generated@@845))))) ($generated@@382 ($generated@@163 ($generated@@150 $generated@@843 ($generated@@151 $generated@@208) $generated@@898) ($generated@@150 $generated@@843 ($generated@@151 $generated@@208) $generated@@899)) ($generated@@150 $generated@@843 ($generated@@151 $generated@@208) ($generated@@309 $generated@@843 ($generated@@151 $generated@@208) $generated@@898 $generated@@899)))))
 :no-pattern (type $generated@@898)
 :no-pattern (type $generated@@899)
 :no-pattern ($generated $generated@@898)
 :no-pattern ($generated@@0 $generated@@898)
 :no-pattern ($generated $generated@@899)
 :no-pattern ($generated@@0 $generated@@899)
)))) (and (=> (= (ControlFlow 0 26) 5) $generated@@891) (=> (= (ControlFlow 0 26) 25) $generated@@896)))))))
(let (($generated@@900  (=> (and ($generated@@89 $generated@@866) ($generated@@854 $generated@@866)) (=> (and (and ($generated@@154 $generated@@844 ($generated@@84 $generated@@843)) ($generated@@82 $generated@@844 ($generated@@84 $generated@@843) $generated@@866)) ($generated@@519 $generated@@844)) (=> (and (and (and (and ($generated@@154 $generated@@845 ($generated@@84 $generated@@843)) ($generated@@82 $generated@@845 ($generated@@84 $generated@@843) $generated@@866)) ($generated@@519 $generated@@845)) (= 3 $generated@@149)) (and (and ($generated@@217 $generated@@843 $generated@@845) (and ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@845) (ite ($generated@@155 $generated@@845) true (let (($generated@@901 ($generated@@156 $generated@@845)))
(let (($generated@@902 ($generated@@157 $generated@@845)))
(ite ($generated@@158 $generated@@902) ($generated@@194 $generated@@843 ($generated@@151 $generated@@208) $generated@@901) ($generated@@0 ($generated@@218 ($generated@@11 false))))))))) (= (ControlFlow 0 27) 26))) $generated@@897)))))
$generated@@900))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (T@U Int) Int)
(declare-fun $generated@@251 () T@T)
(declare-fun $generated@@252 (Int) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (Int Int) Int)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 () T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (= ($generated@@1 $generated@@251) 17))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@253 T@U) ($generated@@254 Int) ) (!  (=> (and (= (type $generated@@253) $generated@@251) (or ($generated@@252 $generated@@254) (not (= 0 $generated@@249)))) true)
 :pattern ( ($generated@@250 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@255 $generated@@261)) (= ($generated@@74 ($generated@@223 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@136) (= ($generated@@134 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@134 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (= $generated@@265 ($generated@@223 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@134 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 18)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@145)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@74 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@76 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@76 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@81 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 20)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@151 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@151 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@251)
 :pattern ( ($generated@@348 $generated@@350))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (!  (=> (and (= (type $generated@@351) $generated@@251) (or ($generated@@252 ($generated@@243 $generated@@352)) (not (= 0 $generated@@249)))) (and (=> (< ($generated@@243 $generated@@352) ($generated@@243 (- 0 1))) ($generated@@252 ($generated@@243 (+ $generated@@352 1)))) (= ($generated@@250 ($generated@@348 $generated@@351) ($generated@@243 $generated@@352)) (ite (<= ($generated@@243 (- 0 1)) ($generated@@243 $generated@@352)) (- 0 1) ($generated@@349 ($generated@@243 (- 0 ($generated@@250 ($generated@@348 $generated@@351) ($generated@@243 (+ $generated@@352 1))))) ($generated@@243 $generated@@352))))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@348 $generated@@351) ($generated@@243 $generated@@352)))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@354) $generated@@64)) (= ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@353 $generated@@355)))) ($generated@@224 $generated@@355 $generated@@354))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@356 T@U) ($generated@@357 Int) ) (!  (=> (and (= (type $generated@@356) $generated@@251) (or ($generated@@252 $generated@@357) (not (= 0 $generated@@249)))) (and (=> (< $generated@@357 ($generated@@243 (- 0 1))) ($generated@@252 (+ $generated@@357 1))) (= ($generated@@250 ($generated@@348 $generated@@356) $generated@@357) (ite (<= ($generated@@243 (- 0 1)) $generated@@357) (- 0 1) ($generated@@349 (- 0 ($generated@@250 $generated@@356 (+ $generated@@357 1))) $generated@@357)))))
 :pattern ( ($generated@@250 ($generated@@348 $generated@@356) $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@233 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@145) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@256 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@233 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@256 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@81 ($generated@@282 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@81 ($generated@@282 $generated@@367) $generated@@366)))
)))
(assert  (and (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@371)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@368 $generated@@371))
)) (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@369 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@369 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@291 (type $generated@@374))))
(let (($generated@@376 ($generated@@290 (type $generated@@374))))
(= (type ($generated@@370 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@370 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@377) ($generated@@143 ($generated@@369 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@370 $generated@@377) ($generated@@143 ($generated@@369 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@369 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@309 (type $generated@@382))))
(let (($generated@@384 ($generated@@308 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@385) ($generated@@143 ($generated@@369 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@143 ($generated@@369 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@369 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@290 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@289 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@308 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@307 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@400) $generated@@404))) (and ($generated@@256 ($generated@@81 ($generated@@370 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@256 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@408) $generated@@412))) (and ($generated@@256 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@256 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@305 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@305 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@341 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@341 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@309 (type $generated@@421))))
(let (($generated@@423 ($generated@@308 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@307 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@306 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@145))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@291 (type $generated@@424))))
(let (($generated@@426 ($generated@@290 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@289 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@288 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@424) ($generated@@276 ($generated@@223 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@309 (type $generated@@429))))
(let (($generated@@431 ($generated@@308 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@307 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@306 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@145) (= (type $generated@@433) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@429) ($generated@@276 ($generated@@223 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@224 $generated@@434 $generated@@46)) (and (= ($generated@@276 ($generated@@369 $generated@@2 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@369 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@224 $generated@@435 $generated@@47)) (and (= ($generated@@276 ($generated@@369 $generated@@3 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@369 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@44)) (and (= ($generated@@276 ($generated@@369 $generated@@4 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@369 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 21))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@45)) (and (= ($generated@@276 ($generated@@369 $generated@@437 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@369 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@224 ($generated@@276 $generated@@439) $generated@@440) ($generated@@132 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@224 ($generated@@276 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@76 $generated@@442 $generated@@2)) (<= 0 ($generated@@281 $generated@@441))))
 :pattern ( ($generated@@281 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@271 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@270 $generated@@444)) (<= 0 ($generated@@269 $generated@@443))))
 :pattern ( ($generated@@269 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) (= (type $generated@@466) $generated@@145)) (= ($generated@@262 ($generated@@223 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@135 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@135 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@135 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@135 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@251)
 :pattern ( ($generated@@479 $generated@@481))
)) (= (type $generated@@480) $generated@@251)))
(assert (forall (($generated@@482 T@U) ($generated@@483 Int) ) (!  (=> (= (type $generated@@482) $generated@@251) (= ($generated@@250 $generated@@482 $generated@@483) ($generated@@250 $generated@@480 $generated@@483)))
 :pattern ( ($generated@@250 ($generated@@479 $generated@@482) $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@271 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@270 $generated@@145)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@269 $generated@@490))) ($generated@@256 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@74 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@233 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@233 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@238 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@150 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@369 $generated@@513 ($generated@@276 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@276 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@132 $generated@@514 ($generated@@397 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@514) $generated@@517))) (and ($generated@@224 ($generated@@81 ($generated@@370 $generated@@514) $generated@@517) $generated@@516) ($generated@@224 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@132 $generated@@514 ($generated@@397 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@132 $generated@@518 ($generated@@405 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@518) $generated@@521))) (and ($generated@@224 ($generated@@81 ($generated@@380 $generated@@518) $generated@@521) $generated@@520) ($generated@@224 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@132 $generated@@518 ($generated@@405 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@223 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@145)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@223 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@223 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 Int) ) (!  (=> (= (type $generated@@528) $generated@@251) (= ($generated@@250 ($generated@@348 $generated@@528) $generated@@529) ($generated@@250 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@250 ($generated@@348 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@224 $generated@@530 ($generated@@397 $generated@@531 $generated@@532))) (and (= ($generated@@276 ($generated@@369 ($generated@@289 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@369 ($generated@@289 $generated@@145 $generated@@145) $generated@@530) ($generated@@397 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@397 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@533 ($generated@@405 $generated@@534 $generated@@535))) (and (= ($generated@@276 ($generated@@369 ($generated@@307 $generated@@145 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@369 ($generated@@307 $generated@@145 $generated@@145) $generated@@533) ($generated@@405 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@533 ($generated@@405 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@145)) ($generated@@224 $generated@@538 ($generated@@135 $generated@@536 $generated@@537))) (and (= ($generated@@276 ($generated@@369 $generated@@136 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@369 $generated@@136 $generated@@538) ($generated@@135 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@135 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@413 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@135 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 Int) ($generated@@546 Int) ) (! (= ($generated@@349 $generated@@545 $generated@@546) (* $generated@@545 $generated@@546))
 :pattern ( ($generated@@349 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@136) (= ($generated@@522 ($generated@@276 $generated@@547)) ($generated@@523 $generated@@547)))
 :pattern ( ($generated@@522 ($generated@@276 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) ($generated@@224 $generated@@548 ($generated@@75 0))) (and (= ($generated@@276 ($generated@@369 $generated@@2 $generated@@548)) $generated@@548) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) ($generated@@224 $generated@@549 ($generated@@233 $generated@@550))) (and (= ($generated@@276 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@233 $generated@@550))))
 :pattern ( ($generated@@224 $generated@@549 ($generated@@233 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@224 $generated@@551 ($generated@@238 $generated@@552))) (and (= ($generated@@276 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@551) ($generated@@238 $generated@@552))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@238 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@224 $generated@@553 ($generated@@150 $generated@@554))) (and (= ($generated@@276 ($generated@@369 ($generated@@76 $generated@@145 $generated@@2) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@2) $generated@@553) ($generated@@150 $generated@@554))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@150 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) ($generated@@224 $generated@@555 ($generated@@484 $generated@@556))) (and (= ($generated@@276 ($generated@@369 ($generated@@270 $generated@@145) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@369 ($generated@@270 $generated@@145) $generated@@555) ($generated@@484 $generated@@556))))
 :pattern ( ($generated@@224 $generated@@555 ($generated@@484 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@150 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@256 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@150 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@136) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@135 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@135 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@256 ($generated@@143 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@256 ($generated@@143 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@567) (and ($generated@@134 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@135 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@135 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@256 ($generated@@144 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@256 ($generated@@144 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@569) ($generated@@245 $generated@@570)) ($generated@@245 ($generated@@223 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@569) ($generated@@245 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@243 $generated@@571))) ($generated@@245 ($generated@@276 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@243 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@276 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@276 $generated@@572)))
 :pattern ( ($generated@@276 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@271 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@270 $generated@@574)) (= ($generated@@269 $generated@@573) 0)) (= $generated@@573 ($generated@@268 $generated@@574))))
 :pattern ( ($generated@@269 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@281 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@281 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@281 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@437)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@145)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@270 $generated@@145)) (= (type $generated@@590) $generated@@64)) (= ($generated@@132 $generated@@589 ($generated@@484 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@269 $generated@@589))) ($generated@@224 ($generated@@485 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@485 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@132 $generated@@589 ($generated@@484 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@270 $generated@@145)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@269 $generated@@593))) (< ($generated@@523 ($generated@@369 $generated@@136 ($generated@@485 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@523 ($generated@@369 $generated@@136 ($generated@@485 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@397 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@287 $generated@@595) ($generated@@233 $generated@@596)) ($generated@@132 ($generated@@330 $generated@@595) ($generated@@233 $generated@@597))) ($generated@@132 ($generated@@368 $generated@@595) ($generated@@233 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@397 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@132 $generated@@598 ($generated@@405 $generated@@599 $generated@@600))) (and (and ($generated@@132 ($generated@@305 $generated@@598) ($generated@@238 $generated@@599)) ($generated@@132 ($generated@@341 $generated@@598) ($generated@@238 $generated@@600))) ($generated@@132 ($generated@@379 $generated@@598) ($generated@@238 ($generated@@135 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@132 $generated@@598 ($generated@@405 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@132 $generated@@601 $generated@@46))
 :pattern ( ($generated@@132 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@132 $generated@@602 $generated@@47))
 :pattern ( ($generated@@132 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@132 $generated@@603 $generated@@44))
 :pattern ( ($generated@@132 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@437) ($generated@@132 $generated@@604 $generated@@45))
 :pattern ( ($generated@@132 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@145) ($generated@@132 $generated@@605 $generated@@48))
 :pattern ( ($generated@@132 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@610) $generated@@77)) (= (type $generated@@611) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@613  (=> (< $generated@@606 ($generated@@243 (- 0 1))) (=> (and (= $generated@@607 (+ $generated@@606 1)) ($generated@@74 ($generated@@8 $generated@@607) $generated@@46 $generated@@608)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 (- 0 $generated@@606)) (= (- 0 $generated@@607) (- 0 $generated@@606)))) (=> (or (<= 0 (- 0 $generated@@606)) (= (- 0 $generated@@607) (- 0 $generated@@606))) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- 0 $generated@@607) (- 0 $generated@@606)))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@609 ($generated@@211 $generated@@610 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@614) (=> (= (ControlFlow 0 6) 4) $generated@@613)))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (= $generated@@611 ($generated@@156 $generated@@610 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@616) (=> (= (ControlFlow 0 7) 6) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@255 $generated@@608) ($generated@@612 $generated@@608)) (and (= 0 $generated@@249) (= (ControlFlow 0 8) 7))) $generated@@617)))
$generated@@618)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Int)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (Int) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (Int Int) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@T T@U) T@U)
(declare-fun $generated@@183 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (= ($generated@@1 $generated@@165) 11))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@165) (or ($generated@@166 $generated@@168) (not (= 0 $generated@@163)))) true)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@165)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (and (= (type $generated@@172) $generated@@165) (or ($generated@@166 ($generated@@157 $generated@@173)) (not (= 0 $generated@@163)))) (and (=> (< ($generated@@157 $generated@@173) ($generated@@157 (- 0 1))) ($generated@@166 ($generated@@157 (+ $generated@@173 1)))) (= ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)) (ite (<= ($generated@@157 (- 0 1)) ($generated@@157 $generated@@173)) (- 0 1) ($generated@@170 ($generated@@157 (- 0 ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 (+ $generated@@173 1))))) ($generated@@157 $generated@@173))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)))
))))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@165) (or ($generated@@166 $generated@@175) (not (= 0 $generated@@163)))) (and (=> (< $generated@@175 ($generated@@157 (- 0 1))) ($generated@@166 (+ $generated@@175 1))) (= ($generated@@164 ($generated@@169 $generated@@174) $generated@@175) (ite (<= ($generated@@157 (- 0 1)) $generated@@175) (- 0 1) ($generated@@170 (- 0 ($generated@@164 $generated@@174 (+ $generated@@175 1))) $generated@@175)))))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@174) $generated@@175))
))))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@165)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@165)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) $generated@@165) (= ($generated@@164 $generated@@179 $generated@@180) ($generated@@164 $generated@@177 $generated@@180)))
 :pattern ( ($generated@@164 ($generated@@176 $generated@@179) $generated@@180))
)))
(assert  (and (and (= ($generated@@1 $generated@@183) 12) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@182 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@182 $generated@@188 ($generated@@181 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@181 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (= (type $generated@@189) $generated@@165) (= ($generated@@164 ($generated@@169 $generated@@189) $generated@@190) ($generated@@164 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@170 $generated@@191 $generated@@192) (* $generated@@191 $generated@@192))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))) ($generated@@159 ($generated@@181 ($generated@@8 $generated@@193))))
 :pattern ( ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@181 ($generated@@159 $generated@@194)) ($generated@@159 ($generated@@181 $generated@@194)))
 :pattern ( ($generated@@181 ($generated@@159 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@195) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@196) $generated@@47)) (= (type $generated@@197) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@198) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@201  (=> (and (= $generated@@195 ($generated@@45 $generated@@196 $generated@@197 $generated@@198 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@202 Int) ) (!  (=> true (<= ($generated@@164 ($generated@@169 ($generated@@169 $generated@@177)) $generated@@202) ($generated@@157 (- 0 1))))
 :pattern ( ($generated@@164 ($generated@@169 ($generated@@169 $generated@@177)) $generated@@202))
)))))
(let (($generated@@203  (=> (and (and ($generated@@199 $generated@@197) ($generated@@200 $generated@@197)) (and (= 1 $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@201)))
$generated@@203)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Int)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (Int) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (Int Int) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@T T@U) T@U)
(declare-fun $generated@@183 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (= ($generated@@1 $generated@@165) 11))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@165) (or ($generated@@166 $generated@@168) (not (= 0 $generated@@163)))) true)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@165)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (and (= (type $generated@@172) $generated@@165) (or ($generated@@166 ($generated@@157 $generated@@173)) (not (= 0 $generated@@163)))) (and (=> (< ($generated@@157 $generated@@173) ($generated@@157 (- 0 1))) ($generated@@166 ($generated@@157 (+ $generated@@173 1)))) (= ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)) (ite (<= ($generated@@157 (- 0 1)) ($generated@@157 $generated@@173)) (- 0 1) ($generated@@170 ($generated@@157 (- 0 ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 (+ $generated@@173 1))))) ($generated@@157 $generated@@173))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)))
))))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@165) (or ($generated@@166 $generated@@175) (not (= 0 $generated@@163)))) (and (=> (< $generated@@175 ($generated@@157 (- 0 1))) ($generated@@166 (+ $generated@@175 1))) (= ($generated@@164 ($generated@@169 $generated@@174) $generated@@175) (ite (<= ($generated@@157 (- 0 1)) $generated@@175) (- 0 1) ($generated@@170 (- 0 ($generated@@164 $generated@@174 (+ $generated@@175 1))) $generated@@175)))))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@174) $generated@@175))
))))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@165)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@165)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) $generated@@165) (= ($generated@@164 $generated@@179 $generated@@180) ($generated@@164 $generated@@177 $generated@@180)))
 :pattern ( ($generated@@164 ($generated@@176 $generated@@179) $generated@@180))
)))
(assert  (and (and (= ($generated@@1 $generated@@183) 12) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@182 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@182 $generated@@188 ($generated@@181 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@181 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (= (type $generated@@189) $generated@@165) (= ($generated@@164 ($generated@@169 $generated@@189) $generated@@190) ($generated@@164 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@170 $generated@@191 $generated@@192) (* $generated@@191 $generated@@192))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))) ($generated@@159 ($generated@@181 ($generated@@8 $generated@@193))))
 :pattern ( ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@181 ($generated@@159 $generated@@194)) ($generated@@159 ($generated@@181 $generated@@194)))
 :pattern ( ($generated@@181 ($generated@@159 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@195) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@196) $generated@@47)) (= (type $generated@@197) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@198) ($generated@@50 $generated@@4))) (= (type $generated@@200) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@203  (=> (= $generated@@195 ($generated@@45 $generated@@196 $generated@@197 $generated@@198 false)) (=> (and (and (and ($generated@@199 $generated@@200) ($generated@@201 $generated@@200)) (= $generated@@197 $generated@@200)) (and (forall (($generated@@204 Int) )  (=> (and ($generated@@0 ($generated@@159 ($generated@@11 true))) (and (<= 0 $generated@@204) (< $generated@@204 $generated@@202))) (<= ($generated@@164 ($generated@@169 $generated@@177) $generated@@204) ($generated@@157 (- 0 1))))) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@164 ($generated@@169 ($generated@@169 $generated@@177)) $generated@@202) ($generated@@157 (- 0 1)))))))
(let (($generated@@205  (=> (and (and ($generated@@199 $generated@@197) ($generated@@201 $generated@@197)) (and (= 1 $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@203)))
$generated@@205)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Int)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (Int) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (Int Int) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@T T@U) T@U)
(declare-fun $generated@@183 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (= ($generated@@1 $generated@@165) 11))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@165) (or ($generated@@166 $generated@@168) (not (= 0 $generated@@163)))) true)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@165)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (and (= (type $generated@@172) $generated@@165) (or ($generated@@166 ($generated@@157 $generated@@173)) (not (= 0 $generated@@163)))) (and (=> (< ($generated@@157 $generated@@173) ($generated@@157 (- 0 1))) ($generated@@166 ($generated@@157 (+ $generated@@173 1)))) (= ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)) (ite (<= ($generated@@157 (- 0 1)) ($generated@@157 $generated@@173)) (- 0 1) ($generated@@170 ($generated@@157 (- 0 ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 (+ $generated@@173 1))))) ($generated@@157 $generated@@173))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)))
))))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@165) (or ($generated@@166 $generated@@175) (not (= 0 $generated@@163)))) (and (=> (< $generated@@175 ($generated@@157 (- 0 1))) ($generated@@166 (+ $generated@@175 1))) (= ($generated@@164 ($generated@@169 $generated@@174) $generated@@175) (ite (<= ($generated@@157 (- 0 1)) $generated@@175) (- 0 1) ($generated@@170 (- 0 ($generated@@164 $generated@@174 (+ $generated@@175 1))) $generated@@175)))))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@174) $generated@@175))
))))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@165)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@165)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) $generated@@165) (= ($generated@@164 $generated@@179 $generated@@180) ($generated@@164 $generated@@177 $generated@@180)))
 :pattern ( ($generated@@164 ($generated@@176 $generated@@179) $generated@@180))
)))
(assert  (and (and (= ($generated@@1 $generated@@183) 12) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@182 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@182 $generated@@188 ($generated@@181 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@181 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (= (type $generated@@189) $generated@@165) (= ($generated@@164 ($generated@@169 $generated@@189) $generated@@190) ($generated@@164 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@170 $generated@@191 $generated@@192) (* $generated@@191 $generated@@192))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))) ($generated@@159 ($generated@@181 ($generated@@8 $generated@@193))))
 :pattern ( ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@181 ($generated@@159 $generated@@194)) ($generated@@159 ($generated@@181 $generated@@194)))
 :pattern ( ($generated@@181 ($generated@@159 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@195) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@196) $generated@@47)) (= (type $generated@@197) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@198) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@201  (=> (and (= $generated@@195 ($generated@@45 $generated@@196 $generated@@197 $generated@@198 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@202 Int) )  (=> true (<= ($generated@@164 ($generated@@169 ($generated@@169 $generated@@177)) (- 0 $generated@@202)) ($generated@@157 (- 0 1))))))))
(let (($generated@@203  (=> (and (and ($generated@@199 $generated@@197) ($generated@@200 $generated@@197)) (and (= 1 $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@201)))
$generated@@203)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Int)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (Int) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (Int Int) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@T T@U) T@U)
(declare-fun $generated@@183 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (= ($generated@@1 $generated@@165) 11))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@165) (or ($generated@@166 $generated@@168) (not (= 0 $generated@@163)))) true)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@165)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (and (= (type $generated@@172) $generated@@165) (or ($generated@@166 ($generated@@157 $generated@@173)) (not (= 0 $generated@@163)))) (and (=> (< ($generated@@157 $generated@@173) ($generated@@157 (- 0 1))) ($generated@@166 ($generated@@157 (+ $generated@@173 1)))) (= ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)) (ite (<= ($generated@@157 (- 0 1)) ($generated@@157 $generated@@173)) (- 0 1) ($generated@@170 ($generated@@157 (- 0 ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 (+ $generated@@173 1))))) ($generated@@157 $generated@@173))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)))
))))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@165) (or ($generated@@166 $generated@@175) (not (= 0 $generated@@163)))) (and (=> (< $generated@@175 ($generated@@157 (- 0 1))) ($generated@@166 (+ $generated@@175 1))) (= ($generated@@164 ($generated@@169 $generated@@174) $generated@@175) (ite (<= ($generated@@157 (- 0 1)) $generated@@175) (- 0 1) ($generated@@170 (- 0 ($generated@@164 $generated@@174 (+ $generated@@175 1))) $generated@@175)))))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@174) $generated@@175))
))))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@165)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@165)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) $generated@@165) (= ($generated@@164 $generated@@179 $generated@@180) ($generated@@164 $generated@@177 $generated@@180)))
 :pattern ( ($generated@@164 ($generated@@176 $generated@@179) $generated@@180))
)))
(assert  (and (and (= ($generated@@1 $generated@@183) 12) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@182 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@182 $generated@@188 ($generated@@181 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@181 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (= (type $generated@@189) $generated@@165) (= ($generated@@164 ($generated@@169 $generated@@189) $generated@@190) ($generated@@164 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@170 $generated@@191 $generated@@192) (* $generated@@191 $generated@@192))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))) ($generated@@159 ($generated@@181 ($generated@@8 $generated@@193))))
 :pattern ( ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@181 ($generated@@159 $generated@@194)) ($generated@@159 ($generated@@181 $generated@@194)))
 :pattern ( ($generated@@181 ($generated@@159 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@195) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@196) $generated@@47)) (= (type $generated@@197) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@198) ($generated@@50 $generated@@4))) (= (type $generated@@200) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@203  (=> (= $generated@@195 ($generated@@45 $generated@@196 $generated@@197 $generated@@198 false)) (=> (and (and (and ($generated@@199 $generated@@200) ($generated@@201 $generated@@200)) (= $generated@@197 $generated@@200)) (and (forall (($generated@@204 Int) )  (=> (and ($generated@@0 ($generated@@159 ($generated@@11 true))) (and (<= 0 $generated@@204) (< $generated@@204 $generated@@202))) (<= ($generated@@164 ($generated@@169 $generated@@177) (- 0 $generated@@204)) ($generated@@157 (- 0 1))))) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@164 ($generated@@169 ($generated@@169 $generated@@177)) (- 0 $generated@@202)) ($generated@@157 (- 0 1)))))))
(let (($generated@@205  (=> (and (and ($generated@@199 $generated@@197) ($generated@@201 $generated@@197)) (and (= 1 $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@203)))
$generated@@205)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Int)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (Int) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (Int Int) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@T T@U) T@U)
(declare-fun $generated@@183 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (= ($generated@@1 $generated@@165) 11))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@165) (or ($generated@@166 $generated@@168) (not (= 0 $generated@@163)))) true)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@165)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (and (= (type $generated@@172) $generated@@165) (or ($generated@@166 ($generated@@157 $generated@@173)) (not (= 0 $generated@@163)))) (and (=> (< ($generated@@157 $generated@@173) ($generated@@157 (- 0 1))) ($generated@@166 ($generated@@157 (+ $generated@@173 1)))) (= ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)) (ite (<= ($generated@@157 (- 0 1)) ($generated@@157 $generated@@173)) (- 0 1) ($generated@@170 ($generated@@157 (- 0 ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 (+ $generated@@173 1))))) ($generated@@157 $generated@@173))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@169 $generated@@172) ($generated@@157 $generated@@173)))
))))
(assert  (=> (<= 0 $generated@@163) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@165) (or ($generated@@166 $generated@@175) (not (= 0 $generated@@163)))) (and (=> (< $generated@@175 ($generated@@157 (- 0 1))) ($generated@@166 (+ $generated@@175 1))) (= ($generated@@164 ($generated@@169 $generated@@174) $generated@@175) (ite (<= ($generated@@157 (- 0 1)) $generated@@175) (- 0 1) ($generated@@170 (- 0 ($generated@@164 $generated@@174 (+ $generated@@175 1))) $generated@@175)))))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@174) $generated@@175))
))))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@165)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@165)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) $generated@@165) (= ($generated@@164 $generated@@179 $generated@@180) ($generated@@164 $generated@@177 $generated@@180)))
 :pattern ( ($generated@@164 ($generated@@176 $generated@@179) $generated@@180))
)))
(assert  (and (and (= ($generated@@1 $generated@@183) 12) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@182 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@182 $generated@@188 ($generated@@181 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@181 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (= (type $generated@@189) $generated@@165) (= ($generated@@164 ($generated@@169 $generated@@189) $generated@@190) ($generated@@164 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@164 ($generated@@169 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@170 $generated@@191 $generated@@192) (* $generated@@191 $generated@@192))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))) ($generated@@159 ($generated@@181 ($generated@@8 $generated@@193))))
 :pattern ( ($generated@@181 ($generated@@8 ($generated@@157 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@181 ($generated@@159 $generated@@194)) ($generated@@159 ($generated@@181 $generated@@194)))
 :pattern ( ($generated@@181 ($generated@@159 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@195) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@196) $generated@@47)) (= (type $generated@@197) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@198) ($generated@@50 $generated@@4))) (= (type $generated@@200) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@203  (=> (= $generated@@195 ($generated@@45 $generated@@196 $generated@@197 $generated@@198 false)) (=> (and (and (and ($generated@@199 $generated@@200) ($generated@@201 $generated@@200)) (= $generated@@197 $generated@@200)) (and (forall (($generated@@204 Int) )  (=> (and ($generated@@0 ($generated@@159 ($generated@@11 true))) (and (<= 0 (- 0 $generated@@204)) (< (- 0 $generated@@204) (- 0 $generated@@202)))) (<= ($generated@@164 ($generated@@169 $generated@@177) $generated@@204) ($generated@@157 (- 0 1))))) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@164 ($generated@@169 ($generated@@169 $generated@@177)) $generated@@202) ($generated@@157 (- 0 1)))))))
(let (($generated@@205  (=> (and (and ($generated@@199 $generated@@197) ($generated@@201 $generated@@197)) (and (= 1 $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@203)))
$generated@@205)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
