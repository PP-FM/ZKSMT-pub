(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (Int) Int)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@312 () Int)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@71 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@83) (= (type $generated@@243) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@244) ($generated@@70 $generated@@4))) (= (type $generated@@246) $generated@@83)) (= (type $generated@@247) ($generated@@70 $generated@@248))) (= ($generated@@0 ($generated@@181 ($generated@@237 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@181 ($generated@@237 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@81)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@168)) (= (type $generated@@256) $generated@@168)) (= ($generated@@156 ($generated@@249 $generated@@255 $generated@@256) ($generated@@159 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@156 ($generated@@249 $generated@@255 $generated@@256) ($generated@@159 $generated@@253 $generated@@254)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@257)) ($generated@@78 $generated@@174 $generated@@80 $generated@@257))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@81) (= (type $generated@@259) $generated@@81)) (= ($generated@@165 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@165 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@81) (= (type $generated@@262) $generated@@81)) (= ($generated@@260 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@81)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@81) (= (type $generated@@268) $generated@@81)) (and ($generated@@263 $generated@@267) ($generated@@263 $generated@@268))) (= ($generated@@260 $generated@@267 $generated@@268)  (and (= ($generated@@264 $generated@@267) ($generated@@264 $generated@@268)) ($generated@@260 ($generated@@265 $generated@@267) ($generated@@265 $generated@@268)))))
 :pattern ( ($generated@@260 $generated@@267 $generated@@268) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@260 $generated@@267 $generated@@268) ($generated@@263 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@156 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@168) ($generated@@0 ($generated@@88 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@88 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@156 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@277) $generated@@68)) (= ($generated@@156 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@168) ($generated@@0 ($generated@@88 $generated@@276 $generated@@278))) ($generated@@250 $generated@@278 $generated@@277))
 :pattern ( ($generated@@88 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@156 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@279 $generated@@280) $generated@@280)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
(= (type ($generated@@281 $generated@@282)) $generated@@283))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= ($generated@@281 $generated@@284) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@81) (= (type $generated@@287) $generated@@81)) (and ($generated@@285 $generated@@286) ($generated@@285 $generated@@287))) (= ($generated@@260 $generated@@286 $generated@@287) true))
 :pattern ( ($generated@@260 $generated@@286 $generated@@287) ($generated@@285 $generated@@286))
 :pattern ( ($generated@@260 $generated@@286 $generated@@287) ($generated@@285 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@68) (= (type $generated@@290) $generated@@68)) (= (type $generated@@291) $generated@@168)) (= (type $generated@@292) $generated@@168)) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@293)) (= ($generated@@78 ($generated@@249 $generated@@291 $generated@@292) ($generated@@159 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@291 $generated@@292) ($generated@@159 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@81) (= ($generated@@158 $generated@@294) (= ($generated@@173 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@81) (= ($generated@@285 $generated@@295) (= ($generated@@173 $generated@@295) $generated@@63)))
 :pattern ( ($generated@@285 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@81) (= ($generated@@263 $generated@@296) (= ($generated@@173 $generated@@296) $generated@@65)))
 :pattern ( ($generated@@263 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@81) ($generated@@158 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@168) (= (type $generated@@299) $generated@@168)) (= $generated@@297 ($generated@@249 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@158 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@81) ($generated@@263 $generated@@300)) (exists (($generated@@301 Int) ($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@81) (= $generated@@300 ($generated@@79 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@263 $generated@@300))
)))
(assert  (and (and (forall (($generated@@307 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@307)) 18)) (forall (($generated@@308 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
))) (forall (($generated@@309 T@T) ) (! (= (type ($generated@@303 $generated@@309)) ($generated@@305 $generated@@309))
 :pattern ( ($generated@@303 $generated@@309))
))))
(assert (forall (($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@310)) 0)
 :pattern ( ($generated@@303 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@81) ($generated@@285 $generated@@311)) (= $generated@@311 $generated@@174))
 :pattern ( ($generated@@285 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@313 $generated@@315)) $generated@@147)
 :pattern ( ($generated@@313 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (= (type $generated@@316) $generated@@147) (= (type $generated@@317) $generated@@81)) (= (type $generated@@318) $generated@@81)) (or ($generated@@314 ($generated@@281 $generated@@317) ($generated@@281 $generated@@318)) (and (not (= 1 $generated@@312)) (and ($generated@@156 $generated@@317 $generated@@80) ($generated@@156 $generated@@318 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@281 ($generated@@11 ($generated@@285 ($generated@@281 $generated@@317)))))) (let (($generated@@319 ($generated@@281 ($generated@@265 ($generated@@281 $generated@@317)))))
($generated@@314 $generated@@319 ($generated@@281 $generated@@318)))) (= ($generated@@145 ($generated@@313 $generated@@316) ($generated@@281 $generated@@317) ($generated@@281 $generated@@318)) (ite ($generated@@285 ($generated@@281 $generated@@317)) $generated@@318 (let (($generated@@320 ($generated@@281 ($generated@@265 ($generated@@281 $generated@@317)))))
(let (($generated@@321 ($generated@@279 ($generated@@264 ($generated@@281 $generated@@317)))))
($generated@@281 ($generated@@79 $generated@@321 ($generated@@281 ($generated@@145 ($generated@@313 $generated@@316) $generated@@320 ($generated@@281 $generated@@318)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@313 $generated@@316) ($generated@@281 $generated@@317) ($generated@@281 $generated@@318)))
))))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@168)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@68) (= (type $generated@@326) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@288 ($generated@@322 $generated@@324) $generated@@325 $generated@@326) ($generated@@78 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@288 ($generated@@322 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@82 $generated@@329 $generated@@2))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@86 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@82 $generated@@331 $generated@@2)) (and (= (= ($generated@@327 $generated@@330) 0) (= $generated@@330 ($generated@@328 $generated@@331))) (=> (not (= ($generated@@327 $generated@@330) 0)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) (< 0 ($generated ($generated@@88 $generated@@330 $generated@@332))))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@88 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@88 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 20)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@88 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@88 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@86 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@82 $generated@@370 $generated@@2)) (= ($generated@@177 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@88 $generated@@369 $generated@@371))) (<= ($generated ($generated@@88 $generated@@369 $generated@@371)) ($generated@@327 $generated@@369))))
 :pattern ( ($generated@@88 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@177 $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@168) ($generated@@250 $generated@@375 $generated@@80)) (and (= ($generated@@322 ($generated@@372 $generated@@81 $generated@@375)) $generated@@375) ($generated@@156 ($generated@@372 $generated@@81 $generated@@375) $generated@@80)))
 :pattern ( ($generated@@250 $generated@@375 $generated@@80))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(let (($generated@@378 ($generated@@336 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@335 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@334 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@88 ($generated@@333 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@333 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@337 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@82 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@337 (type $generated@@383))))
(let (($generated@@385 ($generated@@336 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@335 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@334 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@88 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@355 (type $generated@@387))))
(let (($generated@@389 ($generated@@354 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@353 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@352 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@88 ($generated@@351 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@351 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@355 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@82 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@355 (type $generated@@394))))
(let (($generated@@396 ($generated@@354 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@353 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@352 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@88 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) $generated@@147) (= (type $generated@@399) $generated@@81)) (= (type $generated@@400) $generated@@81)) (= ($generated@@145 ($generated@@313 $generated@@398) $generated@@399 $generated@@400) ($generated@@145 $generated@@398 $generated@@399 $generated@@400)))
 :pattern ( ($generated@@145 ($generated@@313 $generated@@398) $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@156 $generated@@401 ($generated@@176 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@401 $generated@@403)))) ($generated@@250 $generated@@403 $generated@@402))
 :pattern ( ($generated@@88 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@156 $generated@@401 ($generated@@176 $generated@@402)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@404 ($generated@@269 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@168) ($generated@@0 ($generated@@88 $generated@@404 $generated@@407))) ($generated@@288 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@88 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@78 $generated@@404 ($generated@@269 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@408 ($generated@@274 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@168) ($generated@@0 ($generated@@88 $generated@@408 $generated@@411))) ($generated@@288 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@88 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@408 ($generated@@274 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@88 ($generated@@328 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@88 ($generated@@328 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@337 (type $generated@@417))))
(let (($generated@@419 ($generated@@336 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@82 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@335 $generated@@168 $generated@@168)) (= (type $generated@@421) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@88 ($generated@@333 $generated@@420) ($generated@@166 ($generated@@372 $generated@@81 $generated@@421)))) (= ($generated@@88 ($generated@@415 $generated@@420) ($generated@@166 ($generated@@372 $generated@@81 $generated@@421))) ($generated@@167 ($generated@@372 $generated@@81 $generated@@421))))))
 :pattern ( ($generated@@88 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@355 (type $generated@@425))))
(let (($generated@@427 ($generated@@354 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@82 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@353 $generated@@168 $generated@@168)) (= (type $generated@@429) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@88 ($generated@@351 $generated@@428) ($generated@@166 ($generated@@372 $generated@@81 $generated@@429)))) (= ($generated@@88 ($generated@@423 $generated@@428) ($generated@@166 ($generated@@372 $generated@@81 $generated@@429))) ($generated@@167 ($generated@@372 $generated@@81 $generated@@429))))))
 :pattern ( ($generated@@88 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@336 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@335 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@88 ($generated@@380 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@88 ($generated@@333 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@88 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@88 ($generated@@333 $generated@@430) $generated@@434))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@88 ($generated@@380 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@354 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@353 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@88 ($generated@@391 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@88 ($generated@@351 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@88 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@88 ($generated@@351 $generated@@435) $generated@@439))
 :pattern ( ($generated@@88 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@88 ($generated@@391 $generated@@435) $generated@@436))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) $generated@@147) (= (type $generated@@441) $generated@@81)) (= (type $generated@@442) $generated@@81)) (or ($generated@@314 $generated@@441 $generated@@442) (and (not (= 1 $generated@@312)) (and ($generated@@156 $generated@@441 $generated@@80) ($generated@@156 $generated@@442 $generated@@80))))) (and (=> (not ($generated@@285 $generated@@441)) (let (($generated@@443 ($generated@@265 $generated@@441)))
($generated@@314 $generated@@443 $generated@@442))) (= ($generated@@145 ($generated@@313 $generated@@440) $generated@@441 $generated@@442) (ite ($generated@@285 $generated@@441) $generated@@442 (let (($generated@@444 ($generated@@265 $generated@@441)))
(let (($generated@@445 ($generated@@264 $generated@@441)))
($generated@@79 $generated@@445 ($generated@@145 $generated@@440 $generated@@444 $generated@@442))))))))
 :pattern ( ($generated@@145 ($generated@@313 $generated@@440) $generated@@441 $generated@@442))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@335 $generated@@168 $generated@@168)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@333 $generated@@449) $generated@@453))) (and ($generated@@288 ($generated@@88 ($generated@@415 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@288 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@449) $generated@@453))
 :pattern ( ($generated@@88 ($generated@@333 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@353 $generated@@168 $generated@@168)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@351 $generated@@457) $generated@@461))) (and ($generated@@288 ($generated@@88 ($generated@@423 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@288 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@88 ($generated@@423 $generated@@457) $generated@@461))
 :pattern ( ($generated@@88 ($generated@@351 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@81) ($generated@@156 $generated@@462 $generated@@80)) (or ($generated@@285 $generated@@462) ($generated@@263 $generated@@462)))
 :pattern ( ($generated@@263 $generated@@462) ($generated@@156 $generated@@462 $generated@@80))
 :pattern ( ($generated@@285 $generated@@462) ($generated@@156 $generated@@462 $generated@@80))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@82 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@355 (type $generated@@465))))
(let (($generated@@467 ($generated@@354 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@353 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@352 $generated@@467 $generated@@466)) (= ($generated@@351 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@351 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@355 (type $generated@@468))))
(let (($generated@@470 ($generated@@354 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@353 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@352 $generated@@470 $generated@@469)) (= ($generated@@391 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@391 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@355 (type $generated@@471))))
(let (($generated@@473 ($generated@@354 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@353 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@352 $generated@@473 $generated@@472)) (= ($generated@@422 $generated@@471) ($generated@@463 $generated@@168))))))
 :pattern ( ($generated@@422 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@337 (type $generated@@474))))
(let (($generated@@476 ($generated@@336 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@335 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@334 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@168) (= (type $generated@@478) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@414 $generated@@474) ($generated@@322 ($generated@@249 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@414 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@355 (type $generated@@479))))
(let (($generated@@481 ($generated@@354 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@353 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@352 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@168) (= (type $generated@@483) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@422 $generated@@479) ($generated@@322 ($generated@@249 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@422 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@168) ($generated@@250 $generated@@484 $generated@@46)) (and (= ($generated@@322 ($generated@@372 $generated@@2 $generated@@484)) $generated@@484) ($generated@@156 ($generated@@372 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@168) ($generated@@250 $generated@@485 $generated@@47)) (and (= ($generated@@322 ($generated@@372 $generated@@3 $generated@@485)) $generated@@485) ($generated@@156 ($generated@@372 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@168) ($generated@@250 $generated@@486 $generated@@44)) (and (= ($generated@@322 ($generated@@372 $generated@@4 $generated@@486)) $generated@@486) ($generated@@156 ($generated@@372 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 21))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@168) ($generated@@250 $generated@@488 $generated@@45)) (and (= ($generated@@322 ($generated@@372 $generated@@487 $generated@@488)) $generated@@488) ($generated@@156 ($generated@@372 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@250 ($generated@@322 $generated@@489) $generated@@490) ($generated@@156 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@250 ($generated@@322 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@86 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@82 $generated@@492 $generated@@2)) (<= 0 ($generated@@327 $generated@@491))))
 :pattern ( ($generated@@327 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@306 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@305 $generated@@494)) (<= 0 ($generated@@304 $generated@@493))))
 :pattern ( ($generated@@304 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@446 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@446 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@446 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@446 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@446 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@446 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@454 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@454 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@454 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@454 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@454 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@173 ($generated@@249 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@159 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@159 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@159 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@159 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@168) (= (type $generated@@526) $generated@@168)) (= ($generated@@166 ($generated@@249 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@249 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@168) (= (type $generated@@528) $generated@@168)) (= ($generated@@167 ($generated@@249 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@249 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@529 $generated@@530)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 Int) ($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@81) (= ($generated@@264 ($generated@@79 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@79 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 Int) ($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@81) (= ($generated@@265 ($generated@@79 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@79 $generated@@533 $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@306 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@305 $generated@@168)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@304 $generated@@541))) ($generated@@288 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@141 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@141 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@269 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@269 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@274 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@274 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@274 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@176 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@176 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(= ($generated@@372 $generated@@564 ($generated@@322 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@322 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@335 $generated@@168 $generated@@168)) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@68)) (= ($generated@@156 $generated@@565 ($generated@@446 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@333 $generated@@565) $generated@@568))) (and ($generated@@250 ($generated@@88 ($generated@@415 $generated@@565) $generated@@568) $generated@@567) ($generated@@250 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@565) $generated@@568))
 :pattern ( ($generated@@88 ($generated@@333 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@156 $generated@@565 ($generated@@446 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@353 $generated@@168 $generated@@168)) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) (= ($generated@@156 $generated@@569 ($generated@@454 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@351 $generated@@569) $generated@@572))) (and ($generated@@250 ($generated@@88 ($generated@@423 $generated@@569) $generated@@572) $generated@@571) ($generated@@250 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@88 ($generated@@423 $generated@@569) $generated@@572))
 :pattern ( ($generated@@88 ($generated@@351 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@156 $generated@@569 ($generated@@454 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@168) (= (type $generated@@576) $generated@@168)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@249 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@249 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@168) (= (type $generated@@578) $generated@@168)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@249 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@249 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 Int) ($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@81) (< ($generated@@574 $generated@@580) ($generated@@574 ($generated@@79 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@79 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@168) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@581 ($generated@@446 $generated@@582 $generated@@583))) (and (= ($generated@@322 ($generated@@372 ($generated@@335 $generated@@168 $generated@@168) $generated@@581)) $generated@@581) ($generated@@156 ($generated@@372 ($generated@@335 $generated@@168 $generated@@168) $generated@@581) ($generated@@446 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@581 ($generated@@446 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@168) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@454 $generated@@585 $generated@@586))) (and (= ($generated@@322 ($generated@@372 ($generated@@353 $generated@@168 $generated@@168) $generated@@584)) $generated@@584) ($generated@@156 ($generated@@372 ($generated@@353 $generated@@168 $generated@@168) $generated@@584) ($generated@@454 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@454 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@168)) ($generated@@250 $generated@@589 ($generated@@159 $generated@@587 $generated@@588))) (and (= ($generated@@322 ($generated@@372 $generated@@81 $generated@@589)) $generated@@589) ($generated@@156 ($generated@@372 $generated@@81 $generated@@589) ($generated@@159 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@250 $generated@@589 ($generated@@159 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@88 ($generated@@463 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@88 ($generated@@463 $generated@@591) $generated@@590)))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) $generated@@81)) (= (type $generated@@594) $generated@@81)) (or ($generated@@314 $generated@@593 $generated@@594) (and (not (= 1 $generated@@312)) (and ($generated@@156 $generated@@593 $generated@@80) ($generated@@156 $generated@@594 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@592 $generated@@593 $generated@@594) $generated@@80))
 :pattern ( ($generated@@145 $generated@@592 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@73)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@68) (= (type $generated@@598) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@159 $generated@@597 $generated@@598)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@81) (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@600) (and ($generated@@263 $generated@@599) ($generated@@78 $generated@@599 $generated@@80 $generated@@600)))) ($generated@@78 ($generated@@8 ($generated@@264 $generated@@599)) $generated@@46 $generated@@600))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@264 $generated@@599)) $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@81) (= ($generated@@573 ($generated@@322 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@322 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@168) ($generated@@250 $generated@@602 ($generated@@141 0))) (and (= ($generated@@322 ($generated@@372 $generated@@2 $generated@@602)) $generated@@602) ($generated@@156 ($generated@@372 ($generated@@82 $generated@@168 $generated@@4) $generated@@602) ($generated@@141 0))))
 :pattern ( ($generated@@250 $generated@@602 ($generated@@141 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@168) (= (type $generated@@604) $generated@@68)) ($generated@@250 $generated@@603 ($generated@@269 $generated@@604))) (and (= ($generated@@322 ($generated@@372 ($generated@@82 $generated@@168 $generated@@4) $generated@@603)) $generated@@603) ($generated@@156 ($generated@@372 ($generated@@82 $generated@@168 $generated@@4) $generated@@603) ($generated@@269 $generated@@604))))
 :pattern ( ($generated@@250 $generated@@603 ($generated@@269 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@168) (= (type $generated@@606) $generated@@68)) ($generated@@250 $generated@@605 ($generated@@274 $generated@@606))) (and (= ($generated@@322 ($generated@@372 ($generated@@82 $generated@@168 $generated@@4) $generated@@605)) $generated@@605) ($generated@@156 ($generated@@372 ($generated@@82 $generated@@168 $generated@@4) $generated@@605) ($generated@@274 $generated@@606))))
 :pattern ( ($generated@@250 $generated@@605 ($generated@@274 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@168) (= (type $generated@@608) $generated@@68)) ($generated@@250 $generated@@607 ($generated@@176 $generated@@608))) (and (= ($generated@@322 ($generated@@372 ($generated@@82 $generated@@168 $generated@@2) $generated@@607)) $generated@@607) ($generated@@156 ($generated@@372 ($generated@@82 $generated@@168 $generated@@2) $generated@@607) ($generated@@176 $generated@@608))))
 :pattern ( ($generated@@250 $generated@@607 ($generated@@176 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@168) (= (type $generated@@610) $generated@@68)) ($generated@@250 $generated@@609 ($generated@@535 $generated@@610))) (and (= ($generated@@322 ($generated@@372 ($generated@@305 $generated@@168) $generated@@609)) $generated@@609) ($generated@@156 ($generated@@372 ($generated@@305 $generated@@168) $generated@@609) ($generated@@535 $generated@@610))))
 :pattern ( ($generated@@250 $generated@@609 ($generated@@535 $generated@@610)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@595 $generated@@80) $generated@@67))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@611 ($generated@@176 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@611 $generated@@614)))) ($generated@@288 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@88 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@78 $generated@@611 ($generated@@176 $generated@@612) $generated@@613))
)))
(assert (= $generated@@174 ($generated@@281 $generated@@174)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@81) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@617) (and ($generated@@158 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@68) ($generated@@78 $generated@@615 ($generated@@159 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@78 $generated@@615 ($generated@@159 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@288 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@288 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@81) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@621) (and ($generated@@158 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@68) ($generated@@78 $generated@@619 ($generated@@159 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@78 $generated@@619 ($generated@@159 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@288 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@288 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@624) (and ($generated@@263 $generated@@623) ($generated@@78 $generated@@623 $generated@@80 $generated@@624)))) ($generated@@78 ($generated@@265 $generated@@623) $generated@@80 $generated@@624))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@623) $generated@@80 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@168) (= (type $generated@@626) $generated@@168)) (= ($generated@@249 ($generated@@281 $generated@@625) ($generated@@281 $generated@@626)) ($generated@@281 ($generated@@249 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@249 ($generated@@281 $generated@@625) ($generated@@281 $generated@@626)))
)))
(assert (forall (($generated@@627 Int) ($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@81) (= ($generated@@79 ($generated@@279 $generated@@627) ($generated@@281 $generated@@628)) ($generated@@281 ($generated@@79 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@79 ($generated@@279 $generated@@627) ($generated@@281 $generated@@628)))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@322 ($generated@@8 ($generated@@279 $generated@@629))) ($generated@@281 ($generated@@322 ($generated@@8 $generated@@629))))
 :pattern ( ($generated@@322 ($generated@@8 ($generated@@279 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ) (! (= ($generated@@322 ($generated@@281 $generated@@630)) ($generated@@281 ($generated@@322 $generated@@630)))
 :pattern ( ($generated@@322 ($generated@@281 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@631 $generated@@632) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@631) $generated@@46) ($generated@@156 $generated@@632 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@631 $generated@@632) $generated@@80))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@306 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@305 $generated@@634)) (= ($generated@@304 $generated@@633) 0)) (= $generated@@633 ($generated@@303 $generated@@634))))
 :pattern ( ($generated@@304 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@82 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@327 ($generated@@89 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@327 $generated@@635) ($generated ($generated@@88 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@327 ($generated@@89 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@640) $generated@@2)) ($generated@@78 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@642) $generated@@3)) ($generated@@78 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@644) $generated@@4)) ($generated@@78 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@646) $generated@@487)) ($generated@@78 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@648) $generated@@168)) ($generated@@78 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@305 $generated@@168)) (= (type $generated@@650) $generated@@68)) (= ($generated@@156 $generated@@649 ($generated@@535 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@304 $generated@@649))) ($generated@@250 ($generated@@536 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@536 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@156 $generated@@649 ($generated@@535 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@305 $generated@@168)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@304 $generated@@653))) (< ($generated@@574 ($generated@@372 $generated@@81 ($generated@@536 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@574 ($generated@@372 $generated@@81 ($generated@@536 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@335 $generated@@168 $generated@@168)) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) $generated@@68)) ($generated@@156 $generated@@655 ($generated@@446 $generated@@656 $generated@@657))) (and (and ($generated@@156 ($generated@@333 $generated@@655) ($generated@@269 $generated@@656)) ($generated@@156 ($generated@@380 $generated@@655) ($generated@@269 $generated@@657))) ($generated@@156 ($generated@@414 $generated@@655) ($generated@@269 ($generated@@159 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@156 $generated@@655 ($generated@@446 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@353 $generated@@168 $generated@@168)) (= (type $generated@@659) $generated@@68)) (= (type $generated@@660) $generated@@68)) ($generated@@156 $generated@@658 ($generated@@454 $generated@@659 $generated@@660))) (and (and ($generated@@156 ($generated@@351 $generated@@658) ($generated@@274 $generated@@659)) ($generated@@156 ($generated@@391 $generated@@658) ($generated@@274 $generated@@660))) ($generated@@156 ($generated@@422 $generated@@658) ($generated@@274 ($generated@@159 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@156 $generated@@658 ($generated@@454 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@156 $generated@@661 $generated@@46))
 :pattern ( ($generated@@156 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@156 $generated@@662 $generated@@47))
 :pattern ( ($generated@@156 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@156 $generated@@663 $generated@@44))
 :pattern ( ($generated@@156 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@487) ($generated@@156 $generated@@664 $generated@@45))
 :pattern ( ($generated@@156 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@168) ($generated@@156 $generated@@665 $generated@@48))
 :pattern ( ($generated@@156 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@666) $generated@@81) (= (type $generated@@668) $generated@@81)) (= (type $generated@@669) $generated@@81)) (= (type $generated@@670) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@671) $generated@@81)) (= (type $generated@@674) $generated@@81)) (= (type $generated@@675) ($generated@@183 $generated@@83 $generated@@4))) (= (type $generated@@676) $generated@@83)) (= (type $generated@@677) ($generated@@183 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@679 true))
(let (($generated@@680  (=> (and (= $generated@@666 ($generated@@79 $generated@@667 $generated@@668)) ($generated@@156 $generated@@668 $generated@@80)) (=> (and (and ($generated@@156 $generated@@669 $generated@@80) ($generated@@78 $generated@@669 $generated@@80 $generated@@670)) (= $generated@@671 $generated@@668)) (=> (and (and (and ($generated@@156 $generated@@671 $generated@@80) (= $generated@@669 $generated@@671)) (and (= $generated@@672 $generated@@667) ($generated@@156 ($generated@@8 $generated@@672) $generated@@46))) (and (and (= $generated@@673 $generated@@672) ($generated@@78 $generated@@669 $generated@@80 $generated@@670)) (and ($generated@@78 $generated@@674 $generated@@80 $generated@@670) (= (ControlFlow 0 4) (- 0 3))))) (or (< ($generated@@574 $generated@@669) ($generated@@574 $generated@@666)) (and (= ($generated@@574 $generated@@669) ($generated@@574 $generated@@666)) (< ($generated@@574 $generated@@674) ($generated@@574 $generated@@674)))))))))
(let (($generated@@681  (=> (not (= $generated@@666 $generated@@174)) (and (=> (= (ControlFlow 0 6) 4) $generated@@680) (=> (= (ControlFlow 0 6) 5) $generated@@679)))))
(let (($generated@@682 true))
(let (($generated@@683  (=> (= $generated@@675 ($generated@@237 $generated@@676 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@682) (=> (= (ControlFlow 0 7) 6) $generated@@681)))))
(let (($generated@@684 true))
(let (($generated@@685  (=> (= $generated@@677 ($generated@@182 $generated@@676 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@684) (=> (= (ControlFlow 0 8) 7) $generated@@683)))))
(let (($generated@@686  (=> (and ($generated@@85 $generated@@670) ($generated@@678 $generated@@670)) (=> (and (and ($generated@@156 $generated@@666 $generated@@80) ($generated@@156 $generated@@674 $generated@@80)) (and (= 1 $generated@@312) (= (ControlFlow 0 9) 8))) $generated@@685))))
$generated@@686)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@81)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@245)) ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) $generated@@81)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@81) (= (type $generated@@250) $generated@@81)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) $generated@@81)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@88 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@88 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@88 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@88 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@281)) (= ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@81) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@81) (= $generated@@288 ($generated@@79 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 18)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@303)) $generated@@147)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@147) (= (type $generated@@305) $generated@@81)) (= (type $generated@@306) $generated@@81)) (or ($generated@@302 ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@305 $generated@@80) ($generated@@156 $generated@@306 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@273 ($generated@@269 $generated@@305)))))) (let (($generated@@307 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
($generated@@302 $generated@@307 ($generated@@269 $generated@@306)))) (= ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (ite ($generated@@273 ($generated@@269 $generated@@305)) $generated@@306 (let (($generated@@308 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
(let (($generated@@309 ($generated@@267 ($generated@@252 ($generated@@269 $generated@@305)))))
($generated@@269 ($generated@@79 $generated@@309 ($generated@@269 ($generated@@145 ($generated@@301 $generated@@304) $generated@@308 ($generated@@269 $generated@@306)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)))
))))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@168)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@82 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@86 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@82 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@88 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 20)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@82 $generated@@358 $generated@@2)) (= ($generated@@177 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@177 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@168) ($generated@@238 $generated@@363 $generated@@80)) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@363)) $generated@@363) ($generated@@156 ($generated@@360 $generated@@81 $generated@@363) $generated@@80)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@80))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@321 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@325 (type $generated@@371))))
(let (($generated@@373 ($generated@@324 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@323 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@322 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@88 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@343 (type $generated@@375))))
(let (($generated@@377 ($generated@@342 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@341 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@340 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@339 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(let (($generated@@384 ($generated@@342 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@341 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@340 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@88 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@147) (= (type $generated@@387) $generated@@81)) (= (type $generated@@388) $generated@@81)) (= ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388) ($generated@@145 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@238 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@81) ($generated@@392 $generated@@393)) (or ($generated@@273 $generated@@393) ($generated@@251 $generated@@393)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@168) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@276 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@168) ($generated@@0 ($generated@@88 $generated@@398 $generated@@401))) ($generated@@276 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@88 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@88 ($generated@@316 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@88 ($generated@@316 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@325 (type $generated@@407))))
(let (($generated@@409 ($generated@@324 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@343 (type $generated@@415))))
(let (($generated@@417 ($generated@@342 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@324 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@323 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@368 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@368 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@342 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@341 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@379 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@379 $generated@@425) $generated@@426))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@81)) (= (type $generated@@432) $generated@@81)) (or ($generated@@302 $generated@@431 $generated@@432) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@431 $generated@@80) ($generated@@156 $generated@@432 $generated@@80))))) (and (=> (not ($generated@@273 $generated@@431)) (let (($generated@@433 ($generated@@253 $generated@@431)))
($generated@@302 $generated@@433 $generated@@432))) (= ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432) (ite ($generated@@273 $generated@@431) $generated@@432 (let (($generated@@434 ($generated@@253 $generated@@431)))
(let (($generated@@435 ($generated@@252 $generated@@431)))
($generated@@79 $generated@@435 ($generated@@145 $generated@@430 $generated@@434 $generated@@432))))))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))) (and ($generated@@276 ($generated@@88 ($generated@@405 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@276 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))) (and ($generated@@276 ($generated@@88 ($generated@@413 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@276 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@447) $generated@@451))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@81) ($generated@@156 $generated@@452 $generated@@80)) (or ($generated@@273 $generated@@452) ($generated@@251 $generated@@452)))
 :pattern ( ($generated@@251 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
 :pattern ( ($generated@@273 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@82 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@339 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@339 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@379 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@379 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@412 $generated@@461) ($generated@@453 $generated@@168))))))
 :pattern ( ($generated@@412 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@325 (type $generated@@464))))
(let (($generated@@466 ($generated@@324 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@323 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@322 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@168) (= (type $generated@@468) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@464) ($generated@@310 ($generated@@237 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@404 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@343 (type $generated@@469))))
(let (($generated@@471 ($generated@@342 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@341 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@340 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@168) (= (type $generated@@473) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@469) ($generated@@310 ($generated@@237 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@412 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@238 $generated@@474 $generated@@46)) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@360 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) ($generated@@238 $generated@@475 $generated@@47)) (and (= ($generated@@310 ($generated@@360 $generated@@3 $generated@@475)) $generated@@475) ($generated@@156 ($generated@@360 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@238 $generated@@476 $generated@@44)) (and (= ($generated@@310 ($generated@@360 $generated@@4 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@360 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 21))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@168) ($generated@@238 $generated@@478 $generated@@45)) (and (= ($generated@@310 ($generated@@360 $generated@@477 $generated@@478)) $generated@@478) ($generated@@156 ($generated@@360 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@238 ($generated@@310 $generated@@479) $generated@@480) ($generated@@156 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@238 ($generated@@310 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@86 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@82 $generated@@482 $generated@@2)) (<= 0 ($generated@@315 $generated@@481))))
 :pattern ( ($generated@@315 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@294 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@293 $generated@@484)) (<= 0 ($generated@@292 $generated@@483))))
 :pattern ( ($generated@@292 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@436 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@436 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@436 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@444 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@168) (= (type $generated@@506) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@159 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@159 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@159 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@168) (= (type $generated@@518) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@237 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (= ($generated@@252 ($generated@@79 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@79 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 Int) ($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@79 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@294 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@293 $generated@@168)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@292 $generated@@531))) ($generated@@276 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@141 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@141 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@257 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@257 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@262 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@262 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@176 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@176 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@360 $generated@@554 ($generated@@310 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@310 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))) (and ($generated@@238 ($generated@@88 ($generated@@405 $generated@@555) $generated@@558) $generated@@557) ($generated@@238 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@555) $generated@@558))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))) (and ($generated@@238 ($generated@@88 ($generated@@413 $generated@@559) $generated@@562) $generated@@561) ($generated@@238 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@168) (= (type $generated@@566) $generated@@168)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@237 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@237 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@168)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@237 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@81) (< ($generated@@564 $generated@@570) ($generated@@564 ($generated@@79 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@79 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573))) (and (= ($generated@@310 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571)) $generated@@571) ($generated@@156 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571) ($generated@@436 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576))) (and (= ($generated@@310 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574)) $generated@@574) ($generated@@156 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574) ($generated@@444 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@168)) ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578))) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@579)) $generated@@579) ($generated@@156 ($generated@@360 $generated@@81 $generated@@579) ($generated@@159 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@88 ($generated@@453 $generated@@581) $generated@@580)))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@147) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (or ($generated@@302 $generated@@583 $generated@@584) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@583 $generated@@80) ($generated@@156 $generated@@584 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@582 $generated@@583 $generated@@584) $generated@@80))
 :pattern ( ($generated@@145 $generated@@582 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@590) (and ($generated@@251 $generated@@589) ($generated@@78 $generated@@589 $generated@@80 $generated@@590)))) ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@81) (= ($generated@@563 ($generated@@310 $generated@@591)) ($generated@@564 $generated@@591)))
 :pattern ( ($generated@@563 ($generated@@310 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) ($generated@@238 $generated@@592 ($generated@@141 0))) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@592) ($generated@@141 0))))
 :pattern ( ($generated@@238 $generated@@592 ($generated@@141 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@257 $generated@@594))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593) ($generated@@257 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@257 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@168) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@262 $generated@@596))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595) ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@262 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@176 $generated@@598))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597) ($generated@@176 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@176 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@68)) ($generated@@238 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@310 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@585 $generated@@80) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@601 $generated@@604)))) ($generated@@276 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@88 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@607) (and ($generated@@158 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@614) (and ($generated@@251 $generated@@613) ($generated@@78 $generated@@613 $generated@@80 $generated@@614)))) ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@168) (= (type $generated@@616) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)) ($generated@@269 ($generated@@237 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@81) (= ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@79 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))) ($generated@@269 ($generated@@310 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@310 ($generated@@269 $generated@@620)) ($generated@@269 ($generated@@310 $generated@@620)))
 :pattern ( ($generated@@310 ($generated@@269 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@621) $generated@@46) ($generated@@156 $generated@@622 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@294 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@293 $generated@@624)) (= ($generated@@292 $generated@@623) 0)) (= $generated@@623 ($generated@@291 $generated@@624))))
 :pattern ( ($generated@@292 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@82 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@315 $generated@@625) ($generated ($generated@@88 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@2)) ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@3)) ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@4)) ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@477)) ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@168)) ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@293 $generated@@168)) (= (type $generated@@640) $generated@@68)) (= ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@292 $generated@@639))) ($generated@@238 ($generated@@526 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@526 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@292 $generated@@643))) (< ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@156 ($generated@@321 $generated@@645) ($generated@@257 $generated@@646)) ($generated@@156 ($generated@@368 $generated@@645) ($generated@@257 $generated@@647))) ($generated@@156 ($generated@@404 $generated@@645) ($generated@@257 ($generated@@159 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650))) (and (and ($generated@@156 ($generated@@339 $generated@@648) ($generated@@262 $generated@@649)) ($generated@@156 ($generated@@379 $generated@@648) ($generated@@262 $generated@@650))) ($generated@@156 ($generated@@412 $generated@@648) ($generated@@262 ($generated@@159 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@156 $generated@@651 $generated@@46))
 :pattern ( ($generated@@156 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@156 $generated@@652 $generated@@47))
 :pattern ( ($generated@@156 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@156 $generated@@653 $generated@@44))
 :pattern ( ($generated@@156 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@477) ($generated@@156 $generated@@654 $generated@@45))
 :pattern ( ($generated@@156 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@168) ($generated@@156 $generated@@655 $generated@@48))
 :pattern ( ($generated@@156 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@656) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@657) $generated@@83)) (= (type $generated@@658) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@659) $generated@@81)) (= (type $generated@@660) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@662  (=> (and (= $generated@@656 ($generated@@182 $generated@@657 $generated@@658 $generated@@60 false)) ($generated@@392 $generated@@659)) (=> (and (and (and ($generated@@85 $generated@@660) ($generated@@661 $generated@@660)) (= $generated@@658 $generated@@660)) (and (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@81) (=> (and (and ($generated@@156 $generated@@663 $generated@@80) ($generated@@0 ($generated@@269 ($generated@@11 true)))) (< ($generated@@564 $generated@@663) ($generated@@564 $generated@@659))) ($generated@@248 ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 ($generated@@269 $generated@@174)) $generated@@663)))
 :no-pattern (type $generated@@663)
 :no-pattern ($generated $generated@@663)
 :no-pattern ($generated@@0 $generated@@663)
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@659 ($generated@@269 $generated@@174)) $generated@@659)))))
(let (($generated@@664  (=> (and ($generated@@85 $generated@@658) ($generated@@661 $generated@@658)) (=> (and (and (and ($generated@@156 $generated@@659 $generated@@80) ($generated@@78 $generated@@659 $generated@@80 $generated@@658)) ($generated@@392 $generated@@659)) (and (= 2 $generated@@300) (= (ControlFlow 0 3) 2))) $generated@@662))))
$generated@@664)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@81)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@245)) ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) $generated@@81)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@81) (= (type $generated@@250) $generated@@81)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) $generated@@81)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@88 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@88 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@88 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@88 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@281)) (= ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@81) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@81) (= $generated@@288 ($generated@@79 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 18)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@303)) $generated@@147)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@147) (= (type $generated@@305) $generated@@81)) (= (type $generated@@306) $generated@@81)) (or ($generated@@302 ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@305 $generated@@80) ($generated@@156 $generated@@306 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@273 ($generated@@269 $generated@@305)))))) (let (($generated@@307 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
($generated@@302 $generated@@307 ($generated@@269 $generated@@306)))) (= ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (ite ($generated@@273 ($generated@@269 $generated@@305)) $generated@@306 (let (($generated@@308 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
(let (($generated@@309 ($generated@@267 ($generated@@252 ($generated@@269 $generated@@305)))))
($generated@@269 ($generated@@79 $generated@@309 ($generated@@269 ($generated@@145 ($generated@@301 $generated@@304) $generated@@308 ($generated@@269 $generated@@306)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)))
))))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@168)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@82 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@86 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@82 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@88 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 20)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@82 $generated@@358 $generated@@2)) (= ($generated@@177 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@177 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@168) ($generated@@238 $generated@@363 $generated@@80)) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@363)) $generated@@363) ($generated@@156 ($generated@@360 $generated@@81 $generated@@363) $generated@@80)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@80))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@321 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@325 (type $generated@@371))))
(let (($generated@@373 ($generated@@324 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@323 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@322 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@88 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@343 (type $generated@@375))))
(let (($generated@@377 ($generated@@342 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@341 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@340 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@339 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(let (($generated@@384 ($generated@@342 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@341 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@340 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@88 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@147) (= (type $generated@@387) $generated@@81)) (= (type $generated@@388) $generated@@81)) (= ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388) ($generated@@145 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@238 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@81) ($generated@@392 $generated@@393)) (or ($generated@@273 $generated@@393) ($generated@@251 $generated@@393)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@168) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@276 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@168) ($generated@@0 ($generated@@88 $generated@@398 $generated@@401))) ($generated@@276 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@88 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@88 ($generated@@316 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@88 ($generated@@316 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@325 (type $generated@@407))))
(let (($generated@@409 ($generated@@324 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@343 (type $generated@@415))))
(let (($generated@@417 ($generated@@342 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@324 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@323 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@368 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@368 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@342 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@341 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@379 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@379 $generated@@425) $generated@@426))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@81)) (= (type $generated@@432) $generated@@81)) (or ($generated@@302 $generated@@431 $generated@@432) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@431 $generated@@80) ($generated@@156 $generated@@432 $generated@@80))))) (and (=> (not ($generated@@273 $generated@@431)) (let (($generated@@433 ($generated@@253 $generated@@431)))
($generated@@302 $generated@@433 $generated@@432))) (= ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432) (ite ($generated@@273 $generated@@431) $generated@@432 (let (($generated@@434 ($generated@@253 $generated@@431)))
(let (($generated@@435 ($generated@@252 $generated@@431)))
($generated@@79 $generated@@435 ($generated@@145 $generated@@430 $generated@@434 $generated@@432))))))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))) (and ($generated@@276 ($generated@@88 ($generated@@405 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@276 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))) (and ($generated@@276 ($generated@@88 ($generated@@413 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@276 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@447) $generated@@451))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@81) ($generated@@156 $generated@@452 $generated@@80)) (or ($generated@@273 $generated@@452) ($generated@@251 $generated@@452)))
 :pattern ( ($generated@@251 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
 :pattern ( ($generated@@273 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@82 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@339 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@339 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@379 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@379 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@412 $generated@@461) ($generated@@453 $generated@@168))))))
 :pattern ( ($generated@@412 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@325 (type $generated@@464))))
(let (($generated@@466 ($generated@@324 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@323 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@322 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@168) (= (type $generated@@468) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@464) ($generated@@310 ($generated@@237 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@404 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@343 (type $generated@@469))))
(let (($generated@@471 ($generated@@342 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@341 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@340 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@168) (= (type $generated@@473) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@469) ($generated@@310 ($generated@@237 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@412 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@238 $generated@@474 $generated@@46)) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@360 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) ($generated@@238 $generated@@475 $generated@@47)) (and (= ($generated@@310 ($generated@@360 $generated@@3 $generated@@475)) $generated@@475) ($generated@@156 ($generated@@360 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@238 $generated@@476 $generated@@44)) (and (= ($generated@@310 ($generated@@360 $generated@@4 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@360 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 21))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@168) ($generated@@238 $generated@@478 $generated@@45)) (and (= ($generated@@310 ($generated@@360 $generated@@477 $generated@@478)) $generated@@478) ($generated@@156 ($generated@@360 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@238 ($generated@@310 $generated@@479) $generated@@480) ($generated@@156 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@238 ($generated@@310 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@86 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@82 $generated@@482 $generated@@2)) (<= 0 ($generated@@315 $generated@@481))))
 :pattern ( ($generated@@315 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@294 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@293 $generated@@484)) (<= 0 ($generated@@292 $generated@@483))))
 :pattern ( ($generated@@292 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@436 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@436 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@436 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@444 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@168) (= (type $generated@@506) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@159 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@159 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@159 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@168) (= (type $generated@@518) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@237 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (= ($generated@@252 ($generated@@79 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@79 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 Int) ($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@79 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@294 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@293 $generated@@168)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@292 $generated@@531))) ($generated@@276 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@141 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@141 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@257 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@257 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@262 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@262 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@176 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@176 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@360 $generated@@554 ($generated@@310 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@310 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))) (and ($generated@@238 ($generated@@88 ($generated@@405 $generated@@555) $generated@@558) $generated@@557) ($generated@@238 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@555) $generated@@558))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))) (and ($generated@@238 ($generated@@88 ($generated@@413 $generated@@559) $generated@@562) $generated@@561) ($generated@@238 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@168) (= (type $generated@@566) $generated@@168)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@237 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@237 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@168)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@237 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@81) (< ($generated@@564 $generated@@570) ($generated@@564 ($generated@@79 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@79 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573))) (and (= ($generated@@310 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571)) $generated@@571) ($generated@@156 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571) ($generated@@436 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576))) (and (= ($generated@@310 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574)) $generated@@574) ($generated@@156 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574) ($generated@@444 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@168)) ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578))) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@579)) $generated@@579) ($generated@@156 ($generated@@360 $generated@@81 $generated@@579) ($generated@@159 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@88 ($generated@@453 $generated@@581) $generated@@580)))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@147) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (or ($generated@@302 $generated@@583 $generated@@584) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@583 $generated@@80) ($generated@@156 $generated@@584 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@582 $generated@@583 $generated@@584) $generated@@80))
 :pattern ( ($generated@@145 $generated@@582 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@590) (and ($generated@@251 $generated@@589) ($generated@@78 $generated@@589 $generated@@80 $generated@@590)))) ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@81) (= ($generated@@563 ($generated@@310 $generated@@591)) ($generated@@564 $generated@@591)))
 :pattern ( ($generated@@563 ($generated@@310 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) ($generated@@238 $generated@@592 ($generated@@141 0))) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@592) ($generated@@141 0))))
 :pattern ( ($generated@@238 $generated@@592 ($generated@@141 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@257 $generated@@594))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593) ($generated@@257 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@257 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@168) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@262 $generated@@596))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595) ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@262 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@176 $generated@@598))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597) ($generated@@176 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@176 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@68)) ($generated@@238 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@310 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@585 $generated@@80) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@601 $generated@@604)))) ($generated@@276 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@88 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@607) (and ($generated@@158 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@614) (and ($generated@@251 $generated@@613) ($generated@@78 $generated@@613 $generated@@80 $generated@@614)))) ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@168) (= (type $generated@@616) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)) ($generated@@269 ($generated@@237 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@81) (= ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@79 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))) ($generated@@269 ($generated@@310 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@310 ($generated@@269 $generated@@620)) ($generated@@269 ($generated@@310 $generated@@620)))
 :pattern ( ($generated@@310 ($generated@@269 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@621) $generated@@46) ($generated@@156 $generated@@622 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@294 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@293 $generated@@624)) (= ($generated@@292 $generated@@623) 0)) (= $generated@@623 ($generated@@291 $generated@@624))))
 :pattern ( ($generated@@292 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@82 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@315 $generated@@625) ($generated ($generated@@88 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@2)) ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@3)) ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@4)) ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@477)) ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@168)) ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@293 $generated@@168)) (= (type $generated@@640) $generated@@68)) (= ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@292 $generated@@639))) ($generated@@238 ($generated@@526 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@526 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@292 $generated@@643))) (< ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@156 ($generated@@321 $generated@@645) ($generated@@257 $generated@@646)) ($generated@@156 ($generated@@368 $generated@@645) ($generated@@257 $generated@@647))) ($generated@@156 ($generated@@404 $generated@@645) ($generated@@257 ($generated@@159 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650))) (and (and ($generated@@156 ($generated@@339 $generated@@648) ($generated@@262 $generated@@649)) ($generated@@156 ($generated@@379 $generated@@648) ($generated@@262 $generated@@650))) ($generated@@156 ($generated@@412 $generated@@648) ($generated@@262 ($generated@@159 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@156 $generated@@651 $generated@@46))
 :pattern ( ($generated@@156 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@156 $generated@@652 $generated@@47))
 :pattern ( ($generated@@156 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@156 $generated@@653 $generated@@44))
 :pattern ( ($generated@@156 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@477) ($generated@@156 $generated@@654 $generated@@45))
 :pattern ( ($generated@@156 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@168) ($generated@@156 $generated@@655 $generated@@48))
 :pattern ( ($generated@@156 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@656) $generated@@81) (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@658) $generated@@81)) (= (type $generated@@659) ($generated@@183 $generated@@83 $generated@@4))) (= (type $generated@@660) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@662  (=> (and (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@81) ($generated@@156 $generated@@663 $generated@@80)) (and (and ($generated@@392 ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 ($generated@@269 $generated@@174))) ($generated@@392 $generated@@663)) ($generated@@302 $generated@@663 ($generated@@269 $generated@@174))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 $generated@@174))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@81) ($generated@@156 $generated@@664 $generated@@80)) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@664 ($generated@@269 $generated@@174)) $generated@@664))
 :pattern ( ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@664 $generated@@174))
)))))
(let (($generated@@665  (=> (and (not (and ($generated@@156 $generated@@656 $generated@@80) ($generated@@78 $generated@@656 $generated@@80 $generated@@657))) (= (ControlFlow 0 4) 2)) $generated@@662)))
(let (($generated@@666  (=> (and (and (and ($generated@@156 $generated@@656 $generated@@80) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)) (and (and (= $generated@@658 ($generated@@269 $generated@@174)) ($generated@@78 $generated@@658 $generated@@80 $generated@@657)) (and ($generated@@302 $generated@@656 ($generated@@269 $generated@@174)) (= (ControlFlow 0 3) 2)))) $generated@@662)))
(let (($generated@@667  (=> (= $generated@@659 ($generated@@182 $generated@@660 $generated@@657 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@666) (=> (= (ControlFlow 0 5) 4) $generated@@665)))))
(let (($generated@@668  (=> (and (and ($generated@@85 $generated@@657) ($generated@@661 $generated@@657)) (and (= 2 $generated@@300) (= (ControlFlow 0 6) 5))) $generated@@667)))
$generated@@668))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@81)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@245)) ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) $generated@@81)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@81) (= (type $generated@@250) $generated@@81)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) $generated@@81)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@88 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@88 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@88 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@88 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@281)) (= ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@81) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@81) (= $generated@@288 ($generated@@79 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 18)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@303)) $generated@@147)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@147) (= (type $generated@@305) $generated@@81)) (= (type $generated@@306) $generated@@81)) (or ($generated@@302 ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@305 $generated@@80) ($generated@@156 $generated@@306 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@273 ($generated@@269 $generated@@305)))))) (let (($generated@@307 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
($generated@@302 $generated@@307 ($generated@@269 $generated@@306)))) (= ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (ite ($generated@@273 ($generated@@269 $generated@@305)) $generated@@306 (let (($generated@@308 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
(let (($generated@@309 ($generated@@267 ($generated@@252 ($generated@@269 $generated@@305)))))
($generated@@269 ($generated@@79 $generated@@309 ($generated@@269 ($generated@@145 ($generated@@301 $generated@@304) $generated@@308 ($generated@@269 $generated@@306)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)))
))))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@168)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@82 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@86 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@82 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@88 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 20)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@82 $generated@@358 $generated@@2)) (= ($generated@@177 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@177 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@168) ($generated@@238 $generated@@363 $generated@@80)) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@363)) $generated@@363) ($generated@@156 ($generated@@360 $generated@@81 $generated@@363) $generated@@80)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@80))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@321 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@325 (type $generated@@371))))
(let (($generated@@373 ($generated@@324 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@323 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@322 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@88 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@343 (type $generated@@375))))
(let (($generated@@377 ($generated@@342 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@341 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@340 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@339 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(let (($generated@@384 ($generated@@342 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@341 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@340 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@88 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@147) (= (type $generated@@387) $generated@@81)) (= (type $generated@@388) $generated@@81)) (= ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388) ($generated@@145 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@238 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@392 ($generated@@257 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@168) ($generated@@0 ($generated@@88 $generated@@392 $generated@@395))) ($generated@@276 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@88 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@78 $generated@@392 ($generated@@257 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@396 ($generated@@262 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@168) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@276 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@262 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@88 ($generated@@316 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@88 ($generated@@316 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@325 (type $generated@@405))))
(let (($generated@@407 ($generated@@324 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@409) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@408) ($generated@@166 ($generated@@360 $generated@@81 $generated@@409)))) (= ($generated@@88 ($generated@@403 $generated@@408) ($generated@@166 ($generated@@360 $generated@@81 $generated@@409))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@409))))))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@343 (type $generated@@413))))
(let (($generated@@415 ($generated@@342 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@82 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@417) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@416) ($generated@@166 ($generated@@360 $generated@@81 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@166 ($generated@@360 $generated@@81 $generated@@417))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@324 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@323 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@368 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@368 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@342 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@341 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@88 ($generated@@379 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@423) $generated@@427))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@88 ($generated@@379 $generated@@423) $generated@@424))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) $generated@@147) (= (type $generated@@429) $generated@@81)) (= (type $generated@@430) $generated@@81)) (or ($generated@@302 $generated@@429 $generated@@430) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@429 $generated@@80) ($generated@@156 $generated@@430 $generated@@80))))) (and (=> (not ($generated@@273 $generated@@429)) (let (($generated@@431 ($generated@@253 $generated@@429)))
($generated@@302 $generated@@431 $generated@@430))) (= ($generated@@145 ($generated@@301 $generated@@428) $generated@@429 $generated@@430) (ite ($generated@@273 $generated@@429) $generated@@430 (let (($generated@@432 ($generated@@253 $generated@@429)))
(let (($generated@@433 ($generated@@252 $generated@@429)))
($generated@@79 $generated@@433 ($generated@@145 $generated@@428 $generated@@432 $generated@@430))))))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@428) $generated@@429 $generated@@430))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@68)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@437) $generated@@441))) (and ($generated@@276 ($generated@@88 ($generated@@403 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@276 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@437) $generated@@441))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@445) $generated@@449))) (and ($generated@@276 ($generated@@88 ($generated@@411 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@276 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@445) $generated@@449))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@81) ($generated@@156 $generated@@450 $generated@@80)) (or ($generated@@273 $generated@@450) ($generated@@251 $generated@@450)))
 :pattern ( ($generated@@251 $generated@@450) ($generated@@156 $generated@@450 $generated@@80))
 :pattern ( ($generated@@273 $generated@@450) ($generated@@156 $generated@@450 $generated@@80))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@82 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@343 (type $generated@@453))))
(let (($generated@@455 ($generated@@342 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@341 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@340 $generated@@455 $generated@@454)) (= ($generated@@339 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@339 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@343 (type $generated@@456))))
(let (($generated@@458 ($generated@@342 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@341 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@340 $generated@@458 $generated@@457)) (= ($generated@@379 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@379 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@343 (type $generated@@459))))
(let (($generated@@461 ($generated@@342 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@341 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@340 $generated@@461 $generated@@460)) (= ($generated@@410 $generated@@459) ($generated@@451 $generated@@168))))))
 :pattern ( ($generated@@410 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@325 (type $generated@@462))))
(let (($generated@@464 ($generated@@324 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@323 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@322 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@168) (= (type $generated@@466) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@402 $generated@@462) ($generated@@310 ($generated@@237 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@402 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@343 (type $generated@@467))))
(let (($generated@@469 ($generated@@342 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@341 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@340 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@168) (= (type $generated@@471) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@467) ($generated@@310 ($generated@@237 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@410 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@168) ($generated@@238 $generated@@472 $generated@@46)) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@472)) $generated@@472) ($generated@@156 ($generated@@360 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@168) ($generated@@238 $generated@@473 $generated@@47)) (and (= ($generated@@310 ($generated@@360 $generated@@3 $generated@@473)) $generated@@473) ($generated@@156 ($generated@@360 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@238 $generated@@474 $generated@@44)) (and (= ($generated@@310 ($generated@@360 $generated@@4 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@360 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 21))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@238 $generated@@476 $generated@@45)) (and (= ($generated@@310 ($generated@@360 $generated@@475 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@360 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@68) (= ($generated@@238 ($generated@@310 $generated@@477) $generated@@478) ($generated@@156 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@238 ($generated@@310 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@86 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@82 $generated@@480 $generated@@2)) (<= 0 ($generated@@315 $generated@@479))))
 :pattern ( ($generated@@315 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@294 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@293 $generated@@482)) (<= 0 ($generated@@292 $generated@@481))))
 :pattern ( ($generated@@292 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@434 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@434 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@434 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@434 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@76 ($generated@@434 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@442 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@442 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@442 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@442 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@76 ($generated@@442 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@168) (= (type $generated@@504) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@159 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@159 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@159 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@159 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@168) (= (type $generated@@514) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@237 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 Int) ($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@517 $generated@@518)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@252 ($generated@@79 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@79 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@79 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@294 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@293 $generated@@168)) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@292 $generated@@529))) ($generated@@276 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@78 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@141 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@141 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@257 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@262 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@262 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@176 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@176 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(= ($generated@@360 $generated@@552 ($generated@@310 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@310 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) (= ($generated@@156 $generated@@553 ($generated@@434 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@553) $generated@@556))) (and ($generated@@238 ($generated@@88 ($generated@@403 $generated@@553) $generated@@556) $generated@@555) ($generated@@238 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@553) $generated@@556))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@156 $generated@@553 ($generated@@434 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@68)) (= ($generated@@156 $generated@@557 ($generated@@442 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@557) $generated@@560))) (and ($generated@@238 ($generated@@88 ($generated@@411 $generated@@557) $generated@@560) $generated@@559) ($generated@@238 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@557) $generated@@560))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@156 $generated@@557 ($generated@@442 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@168) (= (type $generated@@564) $generated@@168)) (< ($generated@@561 $generated@@563) ($generated@@562 ($generated@@237 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@237 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@168) (= (type $generated@@566) $generated@@168)) (< ($generated@@561 $generated@@566) ($generated@@562 ($generated@@237 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@237 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 Int) ($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@81) (< ($generated@@562 $generated@@568) ($generated@@562 ($generated@@79 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@79 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@168) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) ($generated@@238 $generated@@569 ($generated@@434 $generated@@570 $generated@@571))) (and (= ($generated@@310 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@569)) $generated@@569) ($generated@@156 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@569) ($generated@@434 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@238 $generated@@569 ($generated@@434 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@168) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) ($generated@@238 $generated@@572 ($generated@@442 $generated@@573 $generated@@574))) (and (= ($generated@@310 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@572)) $generated@@572) ($generated@@156 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@572) ($generated@@442 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@238 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@68) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@168)) ($generated@@238 $generated@@577 ($generated@@159 $generated@@575 $generated@@576))) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@577)) $generated@@577) ($generated@@156 ($generated@@360 $generated@@81 $generated@@577) ($generated@@159 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@577 ($generated@@159 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@88 ($generated@@451 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@88 ($generated@@451 $generated@@579) $generated@@578)))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@147) (= (type $generated@@581) $generated@@81)) (= (type $generated@@582) $generated@@81)) (or ($generated@@302 $generated@@581 $generated@@582) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@581 $generated@@80) ($generated@@156 $generated@@582 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@580 $generated@@581 $generated@@582) $generated@@80))
 :pattern ( ($generated@@145 $generated@@580 $generated@@581 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@73)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@585 $generated@@586)) $generated@@62) (= ($generated@@583 ($generated@@159 $generated@@585 $generated@@586)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@81) (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@588) (and ($generated@@251 $generated@@587) ($generated@@78 $generated@@587 $generated@@80 $generated@@588)))) ($generated@@78 ($generated@@8 ($generated@@252 $generated@@587)) $generated@@46 $generated@@588))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@252 $generated@@587)) $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@81) (= ($generated@@561 ($generated@@310 $generated@@589)) ($generated@@562 $generated@@589)))
 :pattern ( ($generated@@561 ($generated@@310 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@168) ($generated@@238 $generated@@590 ($generated@@141 0))) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@590)) $generated@@590) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@590) ($generated@@141 0))))
 :pattern ( ($generated@@238 $generated@@590 ($generated@@141 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@168) (= (type $generated@@592) $generated@@68)) ($generated@@238 $generated@@591 ($generated@@257 $generated@@592))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@591)) $generated@@591) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@591) ($generated@@257 $generated@@592))))
 :pattern ( ($generated@@238 $generated@@591 ($generated@@257 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@262 $generated@@594))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593) ($generated@@262 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@262 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@168) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@176 $generated@@596))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@595) ($generated@@176 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@176 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@523 $generated@@598))) (and (= ($generated@@310 ($generated@@360 ($generated@@293 $generated@@168) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@360 ($generated@@293 $generated@@168) $generated@@597) ($generated@@523 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@523 $generated@@598)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@583 $generated@@80) $generated@@67))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@599 ($generated@@176 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@599 $generated@@602)))) ($generated@@276 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@88 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@176 $generated@@600) $generated@@601))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@605) (and ($generated@@158 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@78 $generated@@603 ($generated@@159 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@159 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@276 ($generated@@166 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@609) (and ($generated@@158 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@68) ($generated@@78 $generated@@607 ($generated@@159 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@78 $generated@@607 ($generated@@159 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@276 ($generated@@167 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@81) (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@612) (and ($generated@@251 $generated@@611) ($generated@@78 $generated@@611 $generated@@80 $generated@@612)))) ($generated@@78 ($generated@@253 $generated@@611) $generated@@80 $generated@@612))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@611) $generated@@80 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@168) (= (type $generated@@614) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@613) ($generated@@269 $generated@@614)) ($generated@@269 ($generated@@237 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@613) ($generated@@269 $generated@@614)))
)))
(assert (forall (($generated@@615 Int) ($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@81) (= ($generated@@79 ($generated@@267 $generated@@615) ($generated@@269 $generated@@616)) ($generated@@269 ($generated@@79 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@79 ($generated@@267 $generated@@615) ($generated@@269 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@267 $generated@@617))) ($generated@@269 ($generated@@310 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@267 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@310 ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@310 $generated@@618)))
 :pattern ( ($generated@@310 ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@619 $generated@@620) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@619) $generated@@46) ($generated@@156 $generated@@620 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@619 $generated@@620) $generated@@80))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@294 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@293 $generated@@622)) (= ($generated@@292 $generated@@621) 0)) (= $generated@@621 ($generated@@291 $generated@@622))))
 :pattern ( ($generated@@292 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@82 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@315 ($generated@@89 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@315 $generated@@623) ($generated ($generated@@88 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@315 ($generated@@89 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@628) $generated@@2)) ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@3)) ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@4)) ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@475)) ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@168)) ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@293 $generated@@168)) (= (type $generated@@638) $generated@@68)) (= ($generated@@156 $generated@@637 ($generated@@523 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@292 $generated@@637))) ($generated@@238 ($generated@@524 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@524 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@156 $generated@@637 ($generated@@523 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@292 $generated@@641))) (< ($generated@@562 ($generated@@360 $generated@@81 ($generated@@524 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@562 ($generated@@360 $generated@@81 ($generated@@524 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@644) $generated@@68)) (= (type $generated@@645) $generated@@68)) ($generated@@156 $generated@@643 ($generated@@434 $generated@@644 $generated@@645))) (and (and ($generated@@156 ($generated@@321 $generated@@643) ($generated@@257 $generated@@644)) ($generated@@156 ($generated@@368 $generated@@643) ($generated@@257 $generated@@645))) ($generated@@156 ($generated@@402 $generated@@643) ($generated@@257 ($generated@@159 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@156 $generated@@643 ($generated@@434 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) ($generated@@156 $generated@@646 ($generated@@442 $generated@@647 $generated@@648))) (and (and ($generated@@156 ($generated@@339 $generated@@646) ($generated@@262 $generated@@647)) ($generated@@156 ($generated@@379 $generated@@646) ($generated@@262 $generated@@648))) ($generated@@156 ($generated@@410 $generated@@646) ($generated@@262 ($generated@@159 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@156 $generated@@646 ($generated@@442 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@2) ($generated@@156 $generated@@649 $generated@@46))
 :pattern ( ($generated@@156 $generated@@649 $generated@@46))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@3) ($generated@@156 $generated@@650 $generated@@47))
 :pattern ( ($generated@@156 $generated@@650 $generated@@47))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@4) ($generated@@156 $generated@@651 $generated@@44))
 :pattern ( ($generated@@156 $generated@@651 $generated@@44))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@475) ($generated@@156 $generated@@652 $generated@@45))
 :pattern ( ($generated@@156 $generated@@652 $generated@@45))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@168) ($generated@@156 $generated@@653 $generated@@48))
 :pattern ( ($generated@@156 $generated@@653 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 (T@U) Bool)
(assert  (and (and (= (type $generated@@654) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@655) $generated@@83)) (= (type $generated@@656) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@658  (=> (and (= $generated@@654 ($generated@@182 $generated@@655 $generated@@656 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@81) ($generated@@156 $generated@@659 $generated@@80)) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@659 ($generated@@269 $generated@@174)) $generated@@659))
 :pattern ( ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@659 $generated@@174))
)))))
(let (($generated@@660  (=> (and (and ($generated@@85 $generated@@656) ($generated@@657 $generated@@656)) (and (= 2 $generated@@300) (= (ControlFlow 0 3) 2))) $generated@@658)))
$generated@@660)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@81)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@245)) ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) $generated@@81)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@81) (= (type $generated@@250) $generated@@81)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) $generated@@81)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@88 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@88 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@88 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@88 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@281)) (= ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@81) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@81) (= $generated@@288 ($generated@@79 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 18)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@303)) $generated@@147)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@147) (= (type $generated@@305) $generated@@81)) (= (type $generated@@306) $generated@@81)) (or ($generated@@302 ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@305 $generated@@80) ($generated@@156 $generated@@306 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@273 ($generated@@269 $generated@@305)))))) (let (($generated@@307 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
($generated@@302 $generated@@307 ($generated@@269 $generated@@306)))) (= ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (ite ($generated@@273 ($generated@@269 $generated@@305)) $generated@@306 (let (($generated@@308 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
(let (($generated@@309 ($generated@@267 ($generated@@252 ($generated@@269 $generated@@305)))))
($generated@@269 ($generated@@79 $generated@@309 ($generated@@269 ($generated@@145 ($generated@@301 $generated@@304) $generated@@308 ($generated@@269 $generated@@306)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)))
))))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@168)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@82 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@86 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@82 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@88 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 20)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@82 $generated@@358 $generated@@2)) (= ($generated@@177 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@177 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@168) ($generated@@238 $generated@@363 $generated@@80)) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@363)) $generated@@363) ($generated@@156 ($generated@@360 $generated@@81 $generated@@363) $generated@@80)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@80))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@321 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@325 (type $generated@@371))))
(let (($generated@@373 ($generated@@324 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@323 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@322 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@88 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@343 (type $generated@@375))))
(let (($generated@@377 ($generated@@342 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@341 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@340 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@339 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(let (($generated@@384 ($generated@@342 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@341 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@340 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@88 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@147) (= (type $generated@@387) $generated@@81)) (= (type $generated@@388) $generated@@81)) (= ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388) ($generated@@145 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@238 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@81) ($generated@@392 $generated@@393)) (or ($generated@@273 $generated@@393) ($generated@@251 $generated@@393)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@168) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@276 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@168) ($generated@@0 ($generated@@88 $generated@@398 $generated@@401))) ($generated@@276 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@88 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@88 ($generated@@316 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@88 ($generated@@316 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@325 (type $generated@@407))))
(let (($generated@@409 ($generated@@324 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@343 (type $generated@@415))))
(let (($generated@@417 ($generated@@342 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@324 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@323 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@368 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@368 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@342 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@341 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@379 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@379 $generated@@425) $generated@@426))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@81)) (= (type $generated@@432) $generated@@81)) (or ($generated@@302 $generated@@431 $generated@@432) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@431 $generated@@80) ($generated@@156 $generated@@432 $generated@@80))))) (and (=> (not ($generated@@273 $generated@@431)) (let (($generated@@433 ($generated@@253 $generated@@431)))
($generated@@302 $generated@@433 $generated@@432))) (= ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432) (ite ($generated@@273 $generated@@431) $generated@@432 (let (($generated@@434 ($generated@@253 $generated@@431)))
(let (($generated@@435 ($generated@@252 $generated@@431)))
($generated@@79 $generated@@435 ($generated@@145 $generated@@430 $generated@@434 $generated@@432))))))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))) (and ($generated@@276 ($generated@@88 ($generated@@405 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@276 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))) (and ($generated@@276 ($generated@@88 ($generated@@413 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@276 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@447) $generated@@451))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@81) ($generated@@156 $generated@@452 $generated@@80)) (or ($generated@@273 $generated@@452) ($generated@@251 $generated@@452)))
 :pattern ( ($generated@@251 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
 :pattern ( ($generated@@273 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@82 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@339 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@339 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@379 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@379 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@412 $generated@@461) ($generated@@453 $generated@@168))))))
 :pattern ( ($generated@@412 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@325 (type $generated@@464))))
(let (($generated@@466 ($generated@@324 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@323 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@322 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@168) (= (type $generated@@468) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@464) ($generated@@310 ($generated@@237 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@404 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@343 (type $generated@@469))))
(let (($generated@@471 ($generated@@342 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@341 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@340 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@168) (= (type $generated@@473) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@469) ($generated@@310 ($generated@@237 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@412 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@238 $generated@@474 $generated@@46)) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@360 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) ($generated@@238 $generated@@475 $generated@@47)) (and (= ($generated@@310 ($generated@@360 $generated@@3 $generated@@475)) $generated@@475) ($generated@@156 ($generated@@360 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@238 $generated@@476 $generated@@44)) (and (= ($generated@@310 ($generated@@360 $generated@@4 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@360 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 21))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@168) ($generated@@238 $generated@@478 $generated@@45)) (and (= ($generated@@310 ($generated@@360 $generated@@477 $generated@@478)) $generated@@478) ($generated@@156 ($generated@@360 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@238 ($generated@@310 $generated@@479) $generated@@480) ($generated@@156 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@238 ($generated@@310 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@86 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@82 $generated@@482 $generated@@2)) (<= 0 ($generated@@315 $generated@@481))))
 :pattern ( ($generated@@315 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@294 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@293 $generated@@484)) (<= 0 ($generated@@292 $generated@@483))))
 :pattern ( ($generated@@292 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@436 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@436 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@436 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@444 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@168) (= (type $generated@@506) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@159 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@159 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@159 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@168) (= (type $generated@@518) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@237 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (= ($generated@@252 ($generated@@79 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@79 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 Int) ($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@79 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@294 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@293 $generated@@168)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@292 $generated@@531))) ($generated@@276 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@141 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@141 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@257 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@257 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@262 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@262 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@176 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@176 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@360 $generated@@554 ($generated@@310 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@310 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))) (and ($generated@@238 ($generated@@88 ($generated@@405 $generated@@555) $generated@@558) $generated@@557) ($generated@@238 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@555) $generated@@558))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))) (and ($generated@@238 ($generated@@88 ($generated@@413 $generated@@559) $generated@@562) $generated@@561) ($generated@@238 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@168) (= (type $generated@@566) $generated@@168)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@237 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@237 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@168)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@237 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@81) (< ($generated@@564 $generated@@570) ($generated@@564 ($generated@@79 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@79 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573))) (and (= ($generated@@310 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571)) $generated@@571) ($generated@@156 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571) ($generated@@436 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576))) (and (= ($generated@@310 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574)) $generated@@574) ($generated@@156 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574) ($generated@@444 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@168)) ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578))) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@579)) $generated@@579) ($generated@@156 ($generated@@360 $generated@@81 $generated@@579) ($generated@@159 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@88 ($generated@@453 $generated@@581) $generated@@580)))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@147) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (or ($generated@@302 $generated@@583 $generated@@584) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@583 $generated@@80) ($generated@@156 $generated@@584 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@582 $generated@@583 $generated@@584) $generated@@80))
 :pattern ( ($generated@@145 $generated@@582 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@590) (and ($generated@@251 $generated@@589) ($generated@@78 $generated@@589 $generated@@80 $generated@@590)))) ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@81) (= ($generated@@563 ($generated@@310 $generated@@591)) ($generated@@564 $generated@@591)))
 :pattern ( ($generated@@563 ($generated@@310 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) ($generated@@238 $generated@@592 ($generated@@141 0))) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@592) ($generated@@141 0))))
 :pattern ( ($generated@@238 $generated@@592 ($generated@@141 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@257 $generated@@594))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593) ($generated@@257 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@257 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@168) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@262 $generated@@596))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595) ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@262 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@176 $generated@@598))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597) ($generated@@176 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@176 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@68)) ($generated@@238 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@310 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@585 $generated@@80) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@601 $generated@@604)))) ($generated@@276 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@88 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@607) (and ($generated@@158 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@614) (and ($generated@@251 $generated@@613) ($generated@@78 $generated@@613 $generated@@80 $generated@@614)))) ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@168) (= (type $generated@@616) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)) ($generated@@269 ($generated@@237 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@81) (= ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@79 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))) ($generated@@269 ($generated@@310 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@310 ($generated@@269 $generated@@620)) ($generated@@269 ($generated@@310 $generated@@620)))
 :pattern ( ($generated@@310 ($generated@@269 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@621) $generated@@46) ($generated@@156 $generated@@622 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@294 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@293 $generated@@624)) (= ($generated@@292 $generated@@623) 0)) (= $generated@@623 ($generated@@291 $generated@@624))))
 :pattern ( ($generated@@292 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@82 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@315 $generated@@625) ($generated ($generated@@88 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@2)) ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@3)) ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@4)) ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@477)) ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@168)) ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@293 $generated@@168)) (= (type $generated@@640) $generated@@68)) (= ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@292 $generated@@639))) ($generated@@238 ($generated@@526 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@526 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@292 $generated@@643))) (< ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@156 ($generated@@321 $generated@@645) ($generated@@257 $generated@@646)) ($generated@@156 ($generated@@368 $generated@@645) ($generated@@257 $generated@@647))) ($generated@@156 ($generated@@404 $generated@@645) ($generated@@257 ($generated@@159 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650))) (and (and ($generated@@156 ($generated@@339 $generated@@648) ($generated@@262 $generated@@649)) ($generated@@156 ($generated@@379 $generated@@648) ($generated@@262 $generated@@650))) ($generated@@156 ($generated@@412 $generated@@648) ($generated@@262 ($generated@@159 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@156 $generated@@651 $generated@@46))
 :pattern ( ($generated@@156 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@156 $generated@@652 $generated@@47))
 :pattern ( ($generated@@156 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@156 $generated@@653 $generated@@44))
 :pattern ( ($generated@@156 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@477) ($generated@@156 $generated@@654 $generated@@45))
 :pattern ( ($generated@@156 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@168) ($generated@@156 $generated@@655 $generated@@48))
 :pattern ( ($generated@@156 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@656) $generated@@81) (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@658) $generated@@81)) (= (type $generated@@659) ($generated@@183 $generated@@83 $generated@@4))) (= (type $generated@@660) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@662  (=> (and (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@81) ($generated@@156 $generated@@663 $generated@@80)) (and (and ($generated@@392 ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 ($generated@@269 $generated@@174))) ($generated@@392 $generated@@663)) ($generated@@302 $generated@@663 ($generated@@269 $generated@@174))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 $generated@@174))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@81) ($generated@@156 $generated@@664 $generated@@80)) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@664 ($generated@@269 $generated@@174)) $generated@@664))
 :pattern ( ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@664 $generated@@174))
)))))
(let (($generated@@665  (=> (and (not (and ($generated@@156 $generated@@656 $generated@@80) ($generated@@78 $generated@@656 $generated@@80 $generated@@657))) (= (ControlFlow 0 4) 2)) $generated@@662)))
(let (($generated@@666  (=> (and (and (and ($generated@@156 $generated@@656 $generated@@80) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)) (and (and (= $generated@@658 ($generated@@269 $generated@@174)) ($generated@@78 $generated@@658 $generated@@80 $generated@@657)) (and ($generated@@302 $generated@@656 ($generated@@269 $generated@@174)) (= (ControlFlow 0 3) 2)))) $generated@@662)))
(let (($generated@@667  (=> (= $generated@@659 ($generated@@182 $generated@@660 $generated@@657 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@666) (=> (= (ControlFlow 0 5) 4) $generated@@665)))))
(let (($generated@@668  (=> (and (and ($generated@@85 $generated@@657) ($generated@@661 $generated@@657)) (and (= 2 $generated@@300) (= (ControlFlow 0 6) 5))) $generated@@667)))
$generated@@668))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@81)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@245)) ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) $generated@@81)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@81) (= (type $generated@@250) $generated@@81)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) $generated@@81)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@88 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@88 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@88 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@88 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@281)) (= ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@81) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@81) (= $generated@@288 ($generated@@79 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 18)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@303)) $generated@@147)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@147) (= (type $generated@@305) $generated@@81)) (= (type $generated@@306) $generated@@81)) (or ($generated@@302 ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@305 $generated@@80) ($generated@@156 $generated@@306 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@273 ($generated@@269 $generated@@305)))))) (let (($generated@@307 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
($generated@@302 $generated@@307 ($generated@@269 $generated@@306)))) (= ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (ite ($generated@@273 ($generated@@269 $generated@@305)) $generated@@306 (let (($generated@@308 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
(let (($generated@@309 ($generated@@267 ($generated@@252 ($generated@@269 $generated@@305)))))
($generated@@269 ($generated@@79 $generated@@309 ($generated@@269 ($generated@@145 ($generated@@301 $generated@@304) $generated@@308 ($generated@@269 $generated@@306)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)))
))))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@168)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@82 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@86 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@82 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@88 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 20)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@82 $generated@@358 $generated@@2)) (= ($generated@@177 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@177 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@168) ($generated@@238 $generated@@363 $generated@@80)) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@363)) $generated@@363) ($generated@@156 ($generated@@360 $generated@@81 $generated@@363) $generated@@80)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@80))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@321 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@325 (type $generated@@371))))
(let (($generated@@373 ($generated@@324 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@323 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@322 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@88 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@343 (type $generated@@375))))
(let (($generated@@377 ($generated@@342 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@341 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@340 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@339 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(let (($generated@@384 ($generated@@342 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@341 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@340 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@88 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@147) (= (type $generated@@387) $generated@@81)) (= (type $generated@@388) $generated@@81)) (= ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388) ($generated@@145 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@238 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@81) ($generated@@392 $generated@@393)) (or ($generated@@273 $generated@@393) ($generated@@251 $generated@@393)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@168) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@276 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@168) ($generated@@0 ($generated@@88 $generated@@398 $generated@@401))) ($generated@@276 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@88 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@88 ($generated@@316 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@88 ($generated@@316 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@325 (type $generated@@407))))
(let (($generated@@409 ($generated@@324 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@343 (type $generated@@415))))
(let (($generated@@417 ($generated@@342 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@324 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@323 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@368 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@368 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@342 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@341 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@379 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@379 $generated@@425) $generated@@426))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@81)) (= (type $generated@@432) $generated@@81)) (or ($generated@@302 $generated@@431 $generated@@432) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@431 $generated@@80) ($generated@@156 $generated@@432 $generated@@80))))) (and (=> (not ($generated@@273 $generated@@431)) (let (($generated@@433 ($generated@@253 $generated@@431)))
($generated@@302 $generated@@433 $generated@@432))) (= ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432) (ite ($generated@@273 $generated@@431) $generated@@432 (let (($generated@@434 ($generated@@253 $generated@@431)))
(let (($generated@@435 ($generated@@252 $generated@@431)))
($generated@@79 $generated@@435 ($generated@@145 $generated@@430 $generated@@434 $generated@@432))))))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))) (and ($generated@@276 ($generated@@88 ($generated@@405 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@276 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))) (and ($generated@@276 ($generated@@88 ($generated@@413 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@276 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@447) $generated@@451))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@81) ($generated@@156 $generated@@452 $generated@@80)) (or ($generated@@273 $generated@@452) ($generated@@251 $generated@@452)))
 :pattern ( ($generated@@251 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
 :pattern ( ($generated@@273 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@82 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@339 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@339 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@379 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@379 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@412 $generated@@461) ($generated@@453 $generated@@168))))))
 :pattern ( ($generated@@412 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@325 (type $generated@@464))))
(let (($generated@@466 ($generated@@324 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@323 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@322 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@168) (= (type $generated@@468) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@464) ($generated@@310 ($generated@@237 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@404 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@343 (type $generated@@469))))
(let (($generated@@471 ($generated@@342 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@341 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@340 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@168) (= (type $generated@@473) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@469) ($generated@@310 ($generated@@237 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@412 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@238 $generated@@474 $generated@@46)) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@360 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) ($generated@@238 $generated@@475 $generated@@47)) (and (= ($generated@@310 ($generated@@360 $generated@@3 $generated@@475)) $generated@@475) ($generated@@156 ($generated@@360 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@238 $generated@@476 $generated@@44)) (and (= ($generated@@310 ($generated@@360 $generated@@4 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@360 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 21))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@168) ($generated@@238 $generated@@478 $generated@@45)) (and (= ($generated@@310 ($generated@@360 $generated@@477 $generated@@478)) $generated@@478) ($generated@@156 ($generated@@360 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@238 ($generated@@310 $generated@@479) $generated@@480) ($generated@@156 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@238 ($generated@@310 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@86 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@82 $generated@@482 $generated@@2)) (<= 0 ($generated@@315 $generated@@481))))
 :pattern ( ($generated@@315 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@294 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@293 $generated@@484)) (<= 0 ($generated@@292 $generated@@483))))
 :pattern ( ($generated@@292 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@436 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@436 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@436 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@444 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@168) (= (type $generated@@506) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@159 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@159 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@159 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@168) (= (type $generated@@518) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@237 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (= ($generated@@252 ($generated@@79 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@79 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 Int) ($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@79 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@294 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@293 $generated@@168)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@292 $generated@@531))) ($generated@@276 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@141 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@141 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@257 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@257 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@262 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@262 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@176 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@176 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@360 $generated@@554 ($generated@@310 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@310 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))) (and ($generated@@238 ($generated@@88 ($generated@@405 $generated@@555) $generated@@558) $generated@@557) ($generated@@238 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@555) $generated@@558))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))) (and ($generated@@238 ($generated@@88 ($generated@@413 $generated@@559) $generated@@562) $generated@@561) ($generated@@238 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@168) (= (type $generated@@566) $generated@@168)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@237 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@237 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@168)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@237 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@81) (< ($generated@@564 $generated@@570) ($generated@@564 ($generated@@79 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@79 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573))) (and (= ($generated@@310 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571)) $generated@@571) ($generated@@156 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571) ($generated@@436 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576))) (and (= ($generated@@310 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574)) $generated@@574) ($generated@@156 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574) ($generated@@444 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@168)) ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578))) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@579)) $generated@@579) ($generated@@156 ($generated@@360 $generated@@81 $generated@@579) ($generated@@159 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@88 ($generated@@453 $generated@@581) $generated@@580)))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@147) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (or ($generated@@302 $generated@@583 $generated@@584) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@583 $generated@@80) ($generated@@156 $generated@@584 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@582 $generated@@583 $generated@@584) $generated@@80))
 :pattern ( ($generated@@145 $generated@@582 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@590) (and ($generated@@251 $generated@@589) ($generated@@78 $generated@@589 $generated@@80 $generated@@590)))) ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@81) (= ($generated@@563 ($generated@@310 $generated@@591)) ($generated@@564 $generated@@591)))
 :pattern ( ($generated@@563 ($generated@@310 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) ($generated@@238 $generated@@592 ($generated@@141 0))) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@592) ($generated@@141 0))))
 :pattern ( ($generated@@238 $generated@@592 ($generated@@141 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@257 $generated@@594))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593) ($generated@@257 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@257 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@168) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@262 $generated@@596))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595) ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@262 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@176 $generated@@598))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597) ($generated@@176 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@176 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@68)) ($generated@@238 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@310 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@585 $generated@@80) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@601 $generated@@604)))) ($generated@@276 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@88 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@607) (and ($generated@@158 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@614) (and ($generated@@251 $generated@@613) ($generated@@78 $generated@@613 $generated@@80 $generated@@614)))) ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@168) (= (type $generated@@616) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)) ($generated@@269 ($generated@@237 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@81) (= ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@79 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))) ($generated@@269 ($generated@@310 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@310 ($generated@@269 $generated@@620)) ($generated@@269 ($generated@@310 $generated@@620)))
 :pattern ( ($generated@@310 ($generated@@269 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@621) $generated@@46) ($generated@@156 $generated@@622 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@294 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@293 $generated@@624)) (= ($generated@@292 $generated@@623) 0)) (= $generated@@623 ($generated@@291 $generated@@624))))
 :pattern ( ($generated@@292 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@82 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@315 $generated@@625) ($generated ($generated@@88 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@2)) ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@3)) ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@4)) ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@477)) ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@168)) ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@293 $generated@@168)) (= (type $generated@@640) $generated@@68)) (= ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@292 $generated@@639))) ($generated@@238 ($generated@@526 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@526 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@292 $generated@@643))) (< ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@156 ($generated@@321 $generated@@645) ($generated@@257 $generated@@646)) ($generated@@156 ($generated@@368 $generated@@645) ($generated@@257 $generated@@647))) ($generated@@156 ($generated@@404 $generated@@645) ($generated@@257 ($generated@@159 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650))) (and (and ($generated@@156 ($generated@@339 $generated@@648) ($generated@@262 $generated@@649)) ($generated@@156 ($generated@@379 $generated@@648) ($generated@@262 $generated@@650))) ($generated@@156 ($generated@@412 $generated@@648) ($generated@@262 ($generated@@159 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@156 $generated@@651 $generated@@46))
 :pattern ( ($generated@@156 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@156 $generated@@652 $generated@@47))
 :pattern ( ($generated@@156 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@156 $generated@@653 $generated@@44))
 :pattern ( ($generated@@156 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@477) ($generated@@156 $generated@@654 $generated@@45))
 :pattern ( ($generated@@156 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@168) ($generated@@156 $generated@@655 $generated@@48))
 :pattern ( ($generated@@156 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@656) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@657) $generated@@83)) (= (type $generated@@658) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@659) $generated@@81)) (= (type $generated@@660) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@662  (=> (and (= $generated@@656 ($generated@@182 $generated@@657 $generated@@658 $generated@@60 false)) ($generated@@392 $generated@@659)) (=> (and (and (and ($generated@@85 $generated@@660) ($generated@@661 $generated@@660)) (= $generated@@658 $generated@@660)) (and (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@81) (=> (and (and ($generated@@156 $generated@@663 $generated@@80) ($generated@@0 ($generated@@269 ($generated@@11 true)))) (< ($generated@@564 $generated@@663) ($generated@@564 $generated@@659))) ($generated@@248 ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 ($generated@@269 $generated@@174)) $generated@@663)))
 :no-pattern (type $generated@@663)
 :no-pattern ($generated $generated@@663)
 :no-pattern ($generated@@0 $generated@@663)
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@659 ($generated@@269 $generated@@174)) $generated@@659)))))
(let (($generated@@664  (=> (and ($generated@@85 $generated@@658) ($generated@@661 $generated@@658)) (=> (and (and (and ($generated@@156 $generated@@659 $generated@@80) ($generated@@78 $generated@@659 $generated@@80 $generated@@658)) ($generated@@392 $generated@@659)) (and (= 2 $generated@@300) (= (ControlFlow 0 3) 2))) $generated@@662))))
$generated@@664)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@149 $generated@@150 $generated@@151)) $generated@@81)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@152)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@152))
))) (= (type $generated@@148) $generated@@147)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@147) (= (type $generated@@154) $generated@@81)) (= (type $generated@@155) $generated@@81)) (= ($generated@@145 $generated@@153 $generated@@154 $generated@@155) ($generated@@145 $generated@@148 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@141 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@141 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@81)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@72)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@81)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@156 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@156 $generated@@174 $generated@@80))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@245)) ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
 :pattern ( ($generated@@78 $generated@@174 $generated@@80 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) $generated@@81)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@81) (= (type $generated@@250) $generated@@81)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) $generated@@81)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@88 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@88 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@156 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@88 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@88 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@156 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@281)) (= ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@81) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@81) (= $generated@@288 ($generated@@79 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 18)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@303)) $generated@@147)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@147) (= (type $generated@@305) $generated@@81)) (= (type $generated@@306) $generated@@81)) (or ($generated@@302 ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@305 $generated@@80) ($generated@@156 $generated@@306 $generated@@80))))) (and (=> (not ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@273 ($generated@@269 $generated@@305)))))) (let (($generated@@307 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
($generated@@302 $generated@@307 ($generated@@269 $generated@@306)))) (= ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)) (ite ($generated@@273 ($generated@@269 $generated@@305)) $generated@@306 (let (($generated@@308 ($generated@@269 ($generated@@253 ($generated@@269 $generated@@305)))))
(let (($generated@@309 ($generated@@267 ($generated@@252 ($generated@@269 $generated@@305)))))
($generated@@269 ($generated@@79 $generated@@309 ($generated@@269 ($generated@@145 ($generated@@301 $generated@@304) $generated@@308 ($generated@@269 $generated@@306)))))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@301 $generated@@304) ($generated@@269 $generated@@305) ($generated@@269 $generated@@306)))
))))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@168)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@276 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@82 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@86 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@82 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@88 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 20)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@82 $generated@@358 $generated@@2)) (= ($generated@@177 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@177 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@168) ($generated@@238 $generated@@363 $generated@@80)) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@363)) $generated@@363) ($generated@@156 ($generated@@360 $generated@@81 $generated@@363) $generated@@80)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@80))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@321 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@325 (type $generated@@371))))
(let (($generated@@373 ($generated@@324 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@323 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@322 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@88 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@343 (type $generated@@375))))
(let (($generated@@377 ($generated@@342 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@341 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@340 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@339 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(let (($generated@@384 ($generated@@342 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@341 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@340 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@88 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@147) (= (type $generated@@387) $generated@@81)) (= (type $generated@@388) $generated@@81)) (= ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388) ($generated@@145 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@238 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@156 $generated@@389 ($generated@@176 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@81) ($generated@@392 $generated@@393)) (or ($generated@@273 $generated@@393) ($generated@@251 $generated@@393)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@168) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@276 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@257 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@168) ($generated@@0 ($generated@@88 $generated@@398 $generated@@401))) ($generated@@276 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@88 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@262 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@88 ($generated@@316 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@88 ($generated@@316 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@325 (type $generated@@407))))
(let (($generated@@409 ($generated@@324 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@166 ($generated@@360 $generated@@81 $generated@@411))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@343 (type $generated@@415))))
(let (($generated@@417 ($generated@@342 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@168)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@81 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@81 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@324 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@323 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@368 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@368 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@342 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@341 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@379 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@379 $generated@@425) $generated@@426))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@81)) (= (type $generated@@432) $generated@@81)) (or ($generated@@302 $generated@@431 $generated@@432) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@431 $generated@@80) ($generated@@156 $generated@@432 $generated@@80))))) (and (=> (not ($generated@@273 $generated@@431)) (let (($generated@@433 ($generated@@253 $generated@@431)))
($generated@@302 $generated@@433 $generated@@432))) (= ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432) (ite ($generated@@273 $generated@@431) $generated@@432 (let (($generated@@434 ($generated@@253 $generated@@431)))
(let (($generated@@435 ($generated@@252 $generated@@431)))
($generated@@79 $generated@@435 ($generated@@145 $generated@@430 $generated@@434 $generated@@432))))))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@430) $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))) (and ($generated@@276 ($generated@@88 ($generated@@405 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@276 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))) (and ($generated@@276 ($generated@@88 ($generated@@413 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@276 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@447) $generated@@451))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@78 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@81) ($generated@@156 $generated@@452 $generated@@80)) (or ($generated@@273 $generated@@452) ($generated@@251 $generated@@452)))
 :pattern ( ($generated@@251 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
 :pattern ( ($generated@@273 $generated@@452) ($generated@@156 $generated@@452 $generated@@80))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@82 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@339 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@339 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@379 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@379 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@412 $generated@@461) ($generated@@453 $generated@@168))))))
 :pattern ( ($generated@@412 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@325 (type $generated@@464))))
(let (($generated@@466 ($generated@@324 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@323 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@322 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@168) (= (type $generated@@468) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@464) ($generated@@310 ($generated@@237 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@404 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@343 (type $generated@@469))))
(let (($generated@@471 ($generated@@342 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@341 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@340 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@168) (= (type $generated@@473) $generated@@168)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@469) ($generated@@310 ($generated@@237 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@412 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@238 $generated@@474 $generated@@46)) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@360 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) ($generated@@238 $generated@@475 $generated@@47)) (and (= ($generated@@310 ($generated@@360 $generated@@3 $generated@@475)) $generated@@475) ($generated@@156 ($generated@@360 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@238 $generated@@476 $generated@@44)) (and (= ($generated@@310 ($generated@@360 $generated@@4 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@360 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 21))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@168) ($generated@@238 $generated@@478 $generated@@45)) (and (= ($generated@@310 ($generated@@360 $generated@@477 $generated@@478)) $generated@@478) ($generated@@156 ($generated@@360 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@238 ($generated@@310 $generated@@479) $generated@@480) ($generated@@156 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@238 ($generated@@310 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@86 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@82 $generated@@482 $generated@@2)) (<= 0 ($generated@@315 $generated@@481))))
 :pattern ( ($generated@@315 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@294 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@293 $generated@@484)) (<= 0 ($generated@@292 $generated@@483))))
 :pattern ( ($generated@@292 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@436 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@436 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@436 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@444 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@168) (= (type $generated@@506) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@159 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@159 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@159 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@168) (= (type $generated@@518) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@237 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@173 ($generated@@79 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (= ($generated@@252 ($generated@@79 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@79 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 Int) ($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@79 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@294 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@293 $generated@@168)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@292 $generated@@531))) ($generated@@276 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@141 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@141 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@257 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@257 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@262 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@262 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@176 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@176 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@360 $generated@@554 ($generated@@310 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@310 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))) (and ($generated@@238 ($generated@@88 ($generated@@405 $generated@@555) $generated@@558) $generated@@557) ($generated@@238 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@555) $generated@@558))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@436 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@168) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))) (and ($generated@@238 ($generated@@88 ($generated@@413 $generated@@559) $generated@@562) $generated@@561) ($generated@@238 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@168) (= (type $generated@@566) $generated@@168)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@237 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@237 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@168)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@237 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@81) (< ($generated@@564 $generated@@570) ($generated@@564 ($generated@@79 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@79 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573))) (and (= ($generated@@310 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571)) $generated@@571) ($generated@@156 ($generated@@360 ($generated@@323 $generated@@168 $generated@@168) $generated@@571) ($generated@@436 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@436 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576))) (and (= ($generated@@310 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574)) $generated@@574) ($generated@@156 ($generated@@360 ($generated@@341 $generated@@168 $generated@@168) $generated@@574) ($generated@@444 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@444 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@168)) ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578))) (and (= ($generated@@310 ($generated@@360 $generated@@81 $generated@@579)) $generated@@579) ($generated@@156 ($generated@@360 $generated@@81 $generated@@579) ($generated@@159 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@159 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@88 ($generated@@453 $generated@@581) $generated@@580)))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@147) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (or ($generated@@302 $generated@@583 $generated@@584) (and (not (= 1 $generated@@300)) (and ($generated@@156 $generated@@583 $generated@@80) ($generated@@156 $generated@@584 $generated@@80))))) ($generated@@156 ($generated@@145 $generated@@582 $generated@@583 $generated@@584) $generated@@80))
 :pattern ( ($generated@@145 $generated@@582 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@590) (and ($generated@@251 $generated@@589) ($generated@@78 $generated@@589 $generated@@80 $generated@@590)))) ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@252 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@81) (= ($generated@@563 ($generated@@310 $generated@@591)) ($generated@@564 $generated@@591)))
 :pattern ( ($generated@@563 ($generated@@310 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) ($generated@@238 $generated@@592 ($generated@@141 0))) (and (= ($generated@@310 ($generated@@360 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@592) ($generated@@141 0))))
 :pattern ( ($generated@@238 $generated@@592 ($generated@@141 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@257 $generated@@594))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@593) ($generated@@257 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@257 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@168) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@262 $generated@@596))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@4) $generated@@595) ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@262 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@176 $generated@@598))) (and (= ($generated@@310 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@360 ($generated@@82 $generated@@168 $generated@@2) $generated@@597) ($generated@@176 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@176 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@68)) ($generated@@238 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@310 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@360 ($generated@@293 $generated@@168) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@585 $generated@@80) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@168) (< 0 ($generated ($generated@@88 $generated@@601 $generated@@604)))) ($generated@@276 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@88 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@176 $generated@@602) $generated@@603))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@607) (and ($generated@@158 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@159 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@159 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@614) (and ($generated@@251 $generated@@613) ($generated@@78 $generated@@613 $generated@@80 $generated@@614)))) ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@613) $generated@@80 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@168) (= (type $generated@@616) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)) ($generated@@269 ($generated@@237 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@615) ($generated@@269 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@81) (= ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@79 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@79 ($generated@@267 $generated@@617) ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))) ($generated@@269 ($generated@@310 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@267 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@310 ($generated@@269 $generated@@620)) ($generated@@269 ($generated@@310 $generated@@620)))
 :pattern ( ($generated@@310 ($generated@@269 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@81) (= ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80)  (and ($generated@@156 ($generated@@8 $generated@@621) $generated@@46) ($generated@@156 $generated@@622 $generated@@80))))
 :pattern ( ($generated@@156 ($generated@@79 $generated@@621 $generated@@622) $generated@@80))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@294 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@293 $generated@@624)) (= ($generated@@292 $generated@@623) 0)) (= $generated@@623 ($generated@@291 $generated@@624))))
 :pattern ( ($generated@@292 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@82 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@315 $generated@@625) ($generated ($generated@@88 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@315 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@2)) ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@3)) ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@4)) ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@477)) ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@168)) ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@293 $generated@@168)) (= (type $generated@@640) $generated@@68)) (= ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@292 $generated@@639))) ($generated@@238 ($generated@@526 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@526 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@156 $generated@@639 ($generated@@525 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@292 $generated@@643))) (< ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@564 ($generated@@360 $generated@@81 ($generated@@526 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@156 ($generated@@321 $generated@@645) ($generated@@257 $generated@@646)) ($generated@@156 ($generated@@368 $generated@@645) ($generated@@257 $generated@@647))) ($generated@@156 ($generated@@404 $generated@@645) ($generated@@257 ($generated@@159 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@156 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650))) (and (and ($generated@@156 ($generated@@339 $generated@@648) ($generated@@262 $generated@@649)) ($generated@@156 ($generated@@379 $generated@@648) ($generated@@262 $generated@@650))) ($generated@@156 ($generated@@412 $generated@@648) ($generated@@262 ($generated@@159 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@156 $generated@@648 ($generated@@444 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@156 $generated@@651 $generated@@46))
 :pattern ( ($generated@@156 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@156 $generated@@652 $generated@@47))
 :pattern ( ($generated@@156 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@156 $generated@@653 $generated@@44))
 :pattern ( ($generated@@156 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@477) ($generated@@156 $generated@@654 $generated@@45))
 :pattern ( ($generated@@156 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@168) ($generated@@156 $generated@@655 $generated@@48))
 :pattern ( ($generated@@156 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@656) $generated@@81) (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@658) $generated@@81)) (= (type $generated@@659) ($generated@@183 $generated@@83 $generated@@4))) (= (type $generated@@660) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@662  (=> (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@81) ($generated@@156 $generated@@663 $generated@@80)) (and (and ($generated@@392 ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 ($generated@@269 $generated@@174))) ($generated@@392 $generated@@663)) ($generated@@302 $generated@@663 ($generated@@269 $generated@@174))))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@148) $generated@@663 $generated@@174))
)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@81) (=> (and (and ($generated@@156 $generated@@664 $generated@@80) (forall (($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@81) ($generated@@156 $generated@@665 $generated@@80)) (< ($generated@@564 $generated@@665) ($generated@@564 $generated@@664))) ($generated@@248 ($generated@@145 ($generated@@301 $generated@@148) $generated@@665 ($generated@@269 $generated@@174)) $generated@@665))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@148) $generated@@665 $generated@@174))
))) (and true (= $generated@@174 $generated@@664))) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@664 ($generated@@269 $generated@@174)) $generated@@664)))
 :pattern ( ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@664 $generated@@174))
))) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@81) (=> (and (and ($generated@@156 $generated@@666 $generated@@80) (forall (($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@81) ($generated@@156 $generated@@667 $generated@@80)) (< ($generated@@564 $generated@@667) ($generated@@564 $generated@@666))) ($generated@@248 ($generated@@145 ($generated@@301 $generated@@148) $generated@@667 ($generated@@269 $generated@@174)) $generated@@667))
 :pattern ( ($generated@@145 ($generated@@301 $generated@@148) $generated@@667 $generated@@174))
))) (and true (exists (($generated@@668 Int) ($generated@@669 T@U) ) (!  (and (= (type $generated@@669) $generated@@81) (and ($generated@@156 $generated@@669 $generated@@80) (= ($generated@@79 $generated@@668 $generated@@669) $generated@@666)))
 :pattern ( ($generated@@79 $generated@@668 $generated@@669))
)))) ($generated@@248 ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@666 ($generated@@269 $generated@@174)) $generated@@666)))
 :pattern ( ($generated@@145 ($generated@@301 ($generated@@301 $generated@@148)) $generated@@666 $generated@@174))
)))))))
(let (($generated@@670  (=> (and (not (and ($generated@@156 $generated@@656 $generated@@80) ($generated@@78 $generated@@656 $generated@@80 $generated@@657))) (= (ControlFlow 0 5) 2)) $generated@@662)))
(let (($generated@@671  (=> (and (and (and ($generated@@156 $generated@@656 $generated@@80) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)) (and (and (= $generated@@658 ($generated@@269 $generated@@174)) ($generated@@78 $generated@@658 $generated@@80 $generated@@657)) (and ($generated@@302 $generated@@656 ($generated@@269 $generated@@174)) (= (ControlFlow 0 4) 2)))) $generated@@662)))
(let (($generated@@672  (=> (= $generated@@659 ($generated@@182 $generated@@660 $generated@@657 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@671) (=> (= (ControlFlow 0 6) 5) $generated@@670)))))
(let (($generated@@673  (=> (and (and ($generated@@85 $generated@@657) ($generated@@661 $generated@@657)) (and (= 2 $generated@@300) (= (ControlFlow 0 7) 6))) $generated@@672)))
$generated@@673))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
