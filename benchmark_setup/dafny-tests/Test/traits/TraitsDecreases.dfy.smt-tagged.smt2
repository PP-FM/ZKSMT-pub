(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 () Int)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@70) (= (type $generated@@262) $generated@@70)) (= (type $generated@@263) $generated@@159)) (= (type $generated@@264) $generated@@159)) (= (type $generated@@265) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@259 $generated@@265)) (= ($generated@@80 ($generated@@235 $generated@@263 $generated@@264) ($generated@@149 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@263 $generated@@264) ($generated@@149 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@74)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@150) (= ($generated@@148 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@150) ($generated@@148 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@159) (= (type $generated@@271) $generated@@159)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@148 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert  (=> (<= 0 $generated@@280) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@83) (or ($generated@@282 $generated@@283) (and (not (= 0 $generated@@280)) (and (not (= $generated@@283 $generated@@139)) ($generated@@145 $generated@@283 $generated@@232))))) true)
 :pattern ( ($generated@@281 $generated@@283))
))))
(assert  (=> (<= 1 $generated@@280) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@83) (or ($generated@@285 $generated@@286) (and (not (= 1 $generated@@280)) (and (not (= $generated@@286 $generated@@139)) ($generated@@145 $generated@@286 $generated@@164))))) true)
 :pattern ( ($generated@@284 $generated@@286))
))))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@159)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@260 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@260 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@167 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@167 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@236 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@236 $generated@@341 $generated@@164)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@341 $generated@@164))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@236 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@159) ($generated@@236 $generated@@343 $generated@@232)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@343 $generated@@232))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@164)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@164))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@232)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@232))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@236 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@371 ($generated@@245 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) ($generated@@0 ($generated@@87 $generated@@371 $generated@@374))) ($generated@@260 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@87 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@80 $generated@@371 ($generated@@245 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@250 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@260 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@250 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@87 ($generated@@293 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@302 (type $generated@@384))))
(let (($generated@@386 ($generated@@301 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@82 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@388) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@387) ($generated@@157 ($generated@@337 $generated@@150 $generated@@388)))) (= ($generated@@87 ($generated@@382 $generated@@387) ($generated@@157 ($generated@@337 $generated@@150 $generated@@388))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@388))))))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@320 (type $generated@@392))))
(let (($generated@@394 ($generated@@319 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@396) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@395) ($generated@@157 ($generated@@337 $generated@@150 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@157 ($generated@@337 $generated@@150 $generated@@396))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@301 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@300 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@319 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@318 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@70)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) $generated@@70)) (= (type $generated@@413) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))) (and ($generated@@260 ($generated@@87 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@260 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))) (and ($generated@@260 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@260 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@320 (type $generated@@425))))
(let (($generated@@427 ($generated@@319 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@318 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@316 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@316 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@320 (type $generated@@428))))
(let (($generated@@430 ($generated@@319 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@318 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@317 $generated@@430 $generated@@429)) (= ($generated@@361 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@361 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@320 (type $generated@@431))))
(let (($generated@@433 ($generated@@319 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@318 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@317 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@159))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@302 (type $generated@@434))))
(let (($generated@@436 ($generated@@301 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@300 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@299 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@381 $generated@@434) ($generated@@287 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@320 (type $generated@@439))))
(let (($generated@@441 ($generated@@319 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@318 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@317 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@159) (= (type $generated@@443) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@439) ($generated@@287 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@236 $generated@@444 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@337 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@236 $generated@@445 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@337 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@236 $generated@@446 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@70) (= ($generated@@236 ($generated@@287 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@236 ($generated@@287 $generated@@449) $generated@@450))
)))
(assert  (=> (<= 1 $generated@@280) (forall (($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@83) (=> (and (not (= $generated@@451 $generated@@139)) ($generated@@145 $generated@@451 $generated@@232)) (= ($generated@@284 $generated@@451) ($generated@@281 $generated@@451))))
 :pattern ( ($generated@@284 $generated@@451) ($generated@@145 $generated@@451 $generated@@232))
 :pattern ( ($generated@@284 $generated@@451) ($generated@@281 $generated@@451))
))))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@85 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@82 $generated@@453 $generated@@2)) (<= 0 ($generated@@292 $generated@@452))))
 :pattern ( ($generated@@292 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@275 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@274 $generated@@455)) (<= 0 ($generated@@273 $generated@@454))))
 :pattern ( ($generated@@273 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@456 ($generated@@407 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@407 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@407 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@407 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@78 ($generated@@407 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@159) (= (type $generated@@477) $generated@@159)) (= ($generated@@266 ($generated@@235 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@149 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@149 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@149 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@159) (= (type $generated@@487) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@235 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@159) (= (type $generated@@489) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@235 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@275 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@274 $generated@@159)) (= (type $generated@@497) $generated@@70)) (= (type $generated@@498) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@273 $generated@@496))) ($generated@@260 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@80 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@81 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@81 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@502 ($generated@@245 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@245 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@506 ($generated@@250 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@250 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@510 ($generated@@166 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@78 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@337 $generated@@519 ($generated@@287 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@287 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@521) $generated@@70)) (= (type $generated@@522) $generated@@70)) (= ($generated@@145 $generated@@520 ($generated@@407 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@520) $generated@@523))) (and ($generated@@236 ($generated@@87 ($generated@@382 $generated@@520) $generated@@523) $generated@@522) ($generated@@236 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@520) $generated@@523))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@145 $generated@@520 ($generated@@407 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@525) $generated@@70)) (= (type $generated@@526) $generated@@70)) (= ($generated@@145 $generated@@524 ($generated@@415 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@524) $generated@@527))) (and ($generated@@236 ($generated@@87 ($generated@@390 $generated@@524) $generated@@527) $generated@@526) ($generated@@236 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@524) $generated@@527))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@145 $generated@@524 ($generated@@415 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) (= (type $generated@@531) $generated@@159)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@235 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@235 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@159) (= (type $generated@@533) $generated@@159)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@235 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@235 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@159) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@70)) ($generated@@236 $generated@@534 ($generated@@407 $generated@@535 $generated@@536))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@534)) $generated@@534) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@534) ($generated@@407 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@534 ($generated@@407 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) ($generated@@236 $generated@@537 ($generated@@415 $generated@@538 $generated@@539))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@537) ($generated@@415 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@415 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@70) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@159)) ($generated@@236 $generated@@542 ($generated@@149 $generated@@540 $generated@@541))) (and (= ($generated@@287 ($generated@@337 $generated@@150 $generated@@542)) $generated@@542) ($generated@@145 ($generated@@337 $generated@@150 $generated@@542) ($generated@@149 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@236 $generated@@542 ($generated@@149 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@87 ($generated@@423 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@75)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@149 $generated@@547 $generated@@548)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@150) (= ($generated@@528 ($generated@@287 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@287 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@159) ($generated@@236 $generated@@550 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@550)) $generated@@550) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@550) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@81 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) ($generated@@236 $generated@@551 ($generated@@245 $generated@@552))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@551) ($generated@@245 $generated@@552))))
 :pattern ( ($generated@@236 $generated@@551 ($generated@@245 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@159) (= (type $generated@@554) $generated@@70)) ($generated@@236 $generated@@553 ($generated@@250 $generated@@554))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@553) ($generated@@250 $generated@@554))))
 :pattern ( ($generated@@236 $generated@@553 ($generated@@250 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@159) (= (type $generated@@556) $generated@@70)) ($generated@@236 $generated@@555 ($generated@@166 $generated@@556))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@555) ($generated@@166 $generated@@556))))
 :pattern ( ($generated@@236 $generated@@555 ($generated@@166 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@159) (= (type $generated@@558) $generated@@70)) ($generated@@236 $generated@@557 ($generated@@490 $generated@@558))) (and (= ($generated@@287 ($generated@@337 ($generated@@274 $generated@@159) $generated@@557)) $generated@@557) ($generated@@145 ($generated@@337 ($generated@@274 $generated@@159) $generated@@557) ($generated@@490 $generated@@558))))
 :pattern ( ($generated@@236 $generated@@557 ($generated@@490 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@83) (= (type $generated@@560) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@559 $generated@@139)) ($generated@@80 $generated@@559 $generated@@142 $generated@@560))) ($generated@@80 $generated@@559 $generated@@164 $generated@@560))
 :pattern ( ($generated@@80 $generated@@559 $generated@@142 $generated@@560))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@545 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@545 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@545 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@545 $generated@@232) $generated@@69))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@561 ($generated@@166 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@561 $generated@@564)))) ($generated@@260 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@87 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@80 $generated@@561 ($generated@@166 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@83) (= ($generated@@145 $generated@@565 $generated@@138)  (or (= $generated@@565 $generated@@139) ($generated@@147 ($generated@@171 $generated@@565)))))
 :pattern ( ($generated@@145 $generated@@565 $generated@@138))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@149 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@149 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@260 ($generated@@157 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@150) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@572) (and ($generated@@148 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@149 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@149 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@260 ($generated@@158 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@260 ($generated@@158 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@159) (= (type $generated@@575) $generated@@159)) (= ($generated@@235 ($generated@@255 $generated@@574) ($generated@@255 $generated@@575)) ($generated@@255 ($generated@@235 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@235 ($generated@@255 $generated@@574) ($generated@@255 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@287 ($generated@@255 $generated@@576)) ($generated@@255 ($generated@@287 $generated@@576)))
 :pattern ( ($generated@@287 ($generated@@255 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@275 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@274 $generated@@578)) (= ($generated@@273 $generated@@577) 0)) (= $generated@@577 ($generated@@272 $generated@@578))))
 :pattern ( ($generated@@273 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@292 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@292 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@584) $generated@@2)) ($generated@@80 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@80 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@586) $generated@@3)) ($generated@@80 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@80 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@4)) ($generated@@80 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@447)) ($generated@@80 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@159)) ($generated@@80 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@274 $generated@@159)) (= (type $generated@@594) $generated@@70)) (= ($generated@@145 $generated@@593 ($generated@@490 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@273 $generated@@593))) ($generated@@236 ($generated@@491 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@491 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@145 $generated@@593 ($generated@@490 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@274 $generated@@159)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@273 $generated@@597))) (< ($generated@@529 ($generated@@337 $generated@@150 ($generated@@491 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@529 ($generated@@337 $generated@@150 ($generated@@491 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) $generated@@70)) ($generated@@145 $generated@@599 ($generated@@407 $generated@@600 $generated@@601))) (and (and ($generated@@145 ($generated@@298 $generated@@599) ($generated@@245 $generated@@600)) ($generated@@145 ($generated@@350 $generated@@599) ($generated@@245 $generated@@601))) ($generated@@145 ($generated@@381 $generated@@599) ($generated@@245 ($generated@@149 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@145 $generated@@599 ($generated@@407 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@603) $generated@@70)) (= (type $generated@@604) $generated@@70)) ($generated@@145 $generated@@602 ($generated@@415 $generated@@603 $generated@@604))) (and (and ($generated@@145 ($generated@@316 $generated@@602) ($generated@@250 $generated@@603)) ($generated@@145 ($generated@@361 $generated@@602) ($generated@@250 $generated@@604))) ($generated@@145 ($generated@@389 $generated@@602) ($generated@@250 ($generated@@149 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@145 $generated@@602 ($generated@@415 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@145 $generated@@605 $generated@@46))
 :pattern ( ($generated@@145 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@145 $generated@@606 $generated@@47))
 :pattern ( ($generated@@145 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@145 $generated@@607 $generated@@44))
 :pattern ( ($generated@@145 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@447) ($generated@@145 $generated@@608 $generated@@45))
 :pattern ( ($generated@@145 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@159) ($generated@@145 $generated@@609 $generated@@48))
 :pattern ( ($generated@@145 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(assert  (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@613  (=> (= (ControlFlow 0 2) (- 0 3)) false)))
(let (($generated@@614  (=> (and ($generated@@259 $generated@@610) ($generated@@611 $generated@@610)) (=> (and (and (not (= $generated@@612 $generated@@139)) (and ($generated@@145 $generated@@612 $generated@@232) ($generated@@80 $generated@@612 $generated@@232 $generated@@610))) (and (= 1 $generated@@280) (= (ControlFlow 0 4) 2))) $generated@@613))))
$generated@@614)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true))) (=> (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 () Int)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) Bool)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@564 (T@U T@U) Bool)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@70) (= (type $generated@@262) $generated@@70)) (= (type $generated@@263) $generated@@159)) (= (type $generated@@264) $generated@@159)) (= (type $generated@@265) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@259 $generated@@265)) (= ($generated@@80 ($generated@@235 $generated@@263 $generated@@264) ($generated@@149 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@263 $generated@@264) ($generated@@149 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@74)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@150) (= ($generated@@148 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@150) ($generated@@148 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@159) (= (type $generated@@271) $generated@@159)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@148 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert  (=> (<= 1 $generated@@280) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@83) (or ($generated@@282 $generated@@283) (and (not (= 1 $generated@@280)) (and (not (= $generated@@283 $generated@@139)) ($generated@@145 $generated@@283 $generated@@164))))) true)
 :pattern ( ($generated@@281 $generated@@283))
))))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@159)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@260 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@260 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@82 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@85 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@82 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@87 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@82 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@85 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@82 $generated@@332 $generated@@2)) (= ($generated@@167 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@87 $generated@@331 $generated@@333))) (<= ($generated ($generated@@87 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@87 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@167 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@159) ($generated@@236 $generated@@337 $generated@@138)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@334 $generated@@83 $generated@@337) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@337 $generated@@138))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@236 $generated@@338 $generated@@164)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@334 $generated@@83 $generated@@338) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@338 $generated@@164))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@159) ($generated@@236 $generated@@339 $generated@@142)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@339)) $generated@@339) ($generated@@145 ($generated@@334 $generated@@83 $generated@@339) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@339 $generated@@142))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@236 $generated@@340 $generated@@232)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@334 $generated@@83 $generated@@340) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@340 $generated@@232))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@83) (= ($generated@@145 $generated@@341 $generated@@164)  (and ($generated@@145 $generated@@341 $generated@@138) (not (= $generated@@341 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@341 $generated@@164))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@83) (= ($generated@@145 $generated@@342 $generated@@232)  (and ($generated@@145 $generated@@342 $generated@@142) (not (= $generated@@342 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@342 $generated@@232))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@299 (type $generated@@343))))
(let (($generated@@345 ($generated@@298 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@297 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@296 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@295 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@299 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@82 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@299 (type $generated@@350))))
(let (($generated@@352 ($generated@@298 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@297 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@296 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@87 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@366) $generated@@70)) (= ($generated@@145 $generated@@365 ($generated@@166 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@365 $generated@@367)))) ($generated@@236 $generated@@367 $generated@@366))
 :pattern ( ($generated@@87 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@145 $generated@@365 ($generated@@166 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@369) $generated@@70)) (= (type $generated@@370) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@368 ($generated@@245 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@159) ($generated@@0 ($generated@@87 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@87 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@80 $generated@@368 ($generated@@245 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@372 ($generated@@250 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@159) ($generated@@0 ($generated@@87 $generated@@372 $generated@@375))) ($generated@@260 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@87 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@80 $generated@@372 ($generated@@250 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@87 ($generated@@290 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@87 ($generated@@290 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@299 (type $generated@@381))))
(let (($generated@@383 ($generated@@298 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@82 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@297 $generated@@159 $generated@@159)) (= (type $generated@@385) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@384) ($generated@@157 ($generated@@334 $generated@@150 $generated@@385)))) (= ($generated@@87 ($generated@@379 $generated@@384) ($generated@@157 ($generated@@334 $generated@@150 $generated@@385))) ($generated@@158 ($generated@@334 $generated@@150 $generated@@385))))))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@317 (type $generated@@389))))
(let (($generated@@391 ($generated@@316 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@315 $generated@@159 $generated@@159)) (= (type $generated@@393) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@392) ($generated@@157 ($generated@@334 $generated@@150 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@157 ($generated@@334 $generated@@150 $generated@@393))) ($generated@@158 ($generated@@334 $generated@@150 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@298 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@297 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@87 ($generated@@347 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@87 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@394) $generated@@398))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@87 ($generated@@347 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@316 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@315 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@358 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@70)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@297 $generated@@159 $generated@@159)) (= (type $generated@@408) $generated@@70)) (= (type $generated@@409) $generated@@70)) (= (type $generated@@410) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@407) $generated@@411))) (and ($generated@@260 ($generated@@87 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@260 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@80 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@315 $generated@@159 $generated@@159)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@415) $generated@@419))) (and ($generated@@260 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@260 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert  (=> (<= 1 $generated@@280) (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@422) $generated@@83)) (and (not (= $generated@@422 $generated@@139)) ($generated@@145 $generated@@422 $generated@@232))) (= ($generated@@281 $generated@@422) ($generated@@420 $generated@@421 $generated@@422)))
 :pattern ( ($generated@@281 $generated@@422) ($generated@@145 $generated@@422 $generated@@232) ($generated@@259 $generated@@421))
 :pattern ( ($generated@@281 $generated@@422) ($generated@@420 $generated@@421 $generated@@422) ($generated@@259 $generated@@421))
))))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@317 (type $generated@@425))))
(let (($generated@@427 ($generated@@316 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@315 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@314 $generated@@427 $generated@@426)) (= ($generated@@313 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@313 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@317 (type $generated@@428))))
(let (($generated@@430 ($generated@@316 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@315 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@314 $generated@@430 $generated@@429)) (= ($generated@@358 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@358 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@317 (type $generated@@431))))
(let (($generated@@433 ($generated@@316 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@315 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@314 $generated@@433 $generated@@432)) (= ($generated@@386 $generated@@431) ($generated@@423 $generated@@159))))))
 :pattern ( ($generated@@386 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@299 (type $generated@@434))))
(let (($generated@@436 ($generated@@298 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@297 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@296 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@378 $generated@@434) ($generated@@284 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@378 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@317 (type $generated@@439))))
(let (($generated@@441 ($generated@@316 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@315 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@314 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@159) (= (type $generated@@443) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@439) ($generated@@284 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@236 $generated@@444 $generated@@46)) (and (= ($generated@@284 ($generated@@334 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@334 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@236 $generated@@445 $generated@@47)) (and (= ($generated@@284 ($generated@@334 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@334 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@236 $generated@@446 $generated@@44)) (and (= ($generated@@284 ($generated@@334 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@334 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@45)) (and (= ($generated@@284 ($generated@@334 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@334 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@70) (= ($generated@@236 ($generated@@284 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@236 ($generated@@284 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@85 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@2)) (<= 0 ($generated@@289 $generated@@451))))
 :pattern ( ($generated@@289 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@275 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@274 $generated@@454)) (<= 0 ($generated@@273 $generated@@453))))
 :pattern ( ($generated@@273 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@404 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@404 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@78 ($generated@@404 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@412 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@159) (= (type $generated@@476) $generated@@159)) (= ($generated@@266 ($generated@@235 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@149 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@149 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@159) (= (type $generated@@486) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@235 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@275 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@274 $generated@@159)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@273 $generated@@495))) ($generated@@260 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@81 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@81 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@245 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@245 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@250 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@250 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@166 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@166 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@334 $generated@@518 ($generated@@284 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@284 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@297 $generated@@159 $generated@@159)) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) $generated@@70)) (= ($generated@@145 $generated@@519 ($generated@@404 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@519) $generated@@522))) (and ($generated@@236 ($generated@@87 ($generated@@379 $generated@@519) $generated@@522) $generated@@521) ($generated@@236 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@519) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@145 $generated@@519 ($generated@@404 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@315 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@523) $generated@@526))) (and ($generated@@236 ($generated@@87 ($generated@@387 $generated@@523) $generated@@526) $generated@@525) ($generated@@236 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@159)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@235 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@235 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@159)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@235 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) ($generated@@236 $generated@@533 ($generated@@404 $generated@@534 $generated@@535))) (and (= ($generated@@284 ($generated@@334 ($generated@@297 $generated@@159 $generated@@159) $generated@@533)) $generated@@533) ($generated@@145 ($generated@@334 ($generated@@297 $generated@@159 $generated@@159) $generated@@533) ($generated@@404 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@533 ($generated@@404 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@159) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) ($generated@@236 $generated@@536 ($generated@@412 $generated@@537 $generated@@538))) (and (= ($generated@@284 ($generated@@334 ($generated@@315 $generated@@159 $generated@@159) $generated@@536)) $generated@@536) ($generated@@145 ($generated@@334 ($generated@@315 $generated@@159 $generated@@159) $generated@@536) ($generated@@412 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@236 $generated@@536 ($generated@@412 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@70) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@159)) ($generated@@236 $generated@@541 ($generated@@149 $generated@@539 $generated@@540))) (and (= ($generated@@284 ($generated@@334 $generated@@150 $generated@@541)) $generated@@541) ($generated@@145 ($generated@@334 $generated@@150 $generated@@541) ($generated@@149 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@236 $generated@@541 ($generated@@149 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@87 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@75)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@149 $generated@@546 $generated@@547)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@150) (= ($generated@@527 ($generated@@284 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@284 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@159) ($generated@@236 $generated@@549 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@334 $generated@@2 $generated@@549)) $generated@@549) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@159 $generated@@4) $generated@@549) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@549 ($generated@@81 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@159) (= (type $generated@@551) $generated@@70)) ($generated@@236 $generated@@550 ($generated@@245 $generated@@551))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@159 $generated@@4) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@159 $generated@@4) $generated@@550) ($generated@@245 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@245 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@70)) ($generated@@236 $generated@@552 ($generated@@250 $generated@@553))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@159 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@159 $generated@@4) $generated@@552) ($generated@@250 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@250 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@236 $generated@@554 ($generated@@166 $generated@@555))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@159 $generated@@2) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@159 $generated@@2) $generated@@554) ($generated@@166 $generated@@555))))
 :pattern ( ($generated@@236 $generated@@554 ($generated@@166 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@236 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@284 ($generated@@334 ($generated@@274 $generated@@159) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@334 ($generated@@274 $generated@@159) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@83) (= (type $generated@@559) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@558 $generated@@139)) ($generated@@80 $generated@@558 $generated@@142 $generated@@559))) ($generated@@80 $generated@@558 $generated@@164 $generated@@559))
 :pattern ( ($generated@@80 $generated@@558 $generated@@142 $generated@@559))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@544 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@544 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@544 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@544 $generated@@232) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@166 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@260 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@166 $generated@@561) $generated@@562))
)))
(assert  (=> (<= 0 $generated@@280) (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@566) $generated@@83)) (or ($generated@@564 $generated@@565 $generated@@566) (and (not (= 0 $generated@@280)) (and ($generated@@259 $generated@@565) (and (not (= $generated@@566 $generated@@139)) (and ($generated@@145 $generated@@566 $generated@@232) ($generated@@80 $generated@@566 $generated@@232 $generated@@565))))))) true)
 :pattern ( ($generated@@420 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@83) (= ($generated@@145 $generated@@567 $generated@@138)  (or (= $generated@@567 $generated@@139) ($generated@@147 ($generated@@171 $generated@@567)))))
 :pattern ( ($generated@@145 $generated@@567 $generated@@138))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@150) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@570) (and ($generated@@148 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@70) ($generated@@80 $generated@@568 ($generated@@149 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@149 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@260 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@574) (and ($generated@@148 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@70) ($generated@@80 $generated@@572 ($generated@@149 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@149 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@260 ($generated@@158 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@260 ($generated@@158 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@159) (= (type $generated@@577) $generated@@159)) (= ($generated@@235 ($generated@@255 $generated@@576) ($generated@@255 $generated@@577)) ($generated@@255 ($generated@@235 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@235 ($generated@@255 $generated@@576) ($generated@@255 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@284 ($generated@@255 $generated@@578)) ($generated@@255 ($generated@@284 $generated@@578)))
 :pattern ( ($generated@@284 ($generated@@255 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@275 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@274 $generated@@580)) (= ($generated@@273 $generated@@579) 0)) (= $generated@@579 ($generated@@272 $generated@@580))))
 :pattern ( ($generated@@273 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@82 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@289 ($generated@@88 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@289 $generated@@581) ($generated ($generated@@87 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@289 ($generated@@88 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@586) $generated@@2)) ($generated@@80 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@80 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@3)) ($generated@@80 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@4)) ($generated@@80 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@447)) ($generated@@80 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@159)) ($generated@@80 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@274 $generated@@159)) (= (type $generated@@596) $generated@@70)) (= ($generated@@145 $generated@@595 ($generated@@489 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@273 $generated@@595))) ($generated@@236 ($generated@@490 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@490 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@489 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@274 $generated@@159)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@273 $generated@@599))) (< ($generated@@528 ($generated@@334 $generated@@150 ($generated@@490 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@528 ($generated@@334 $generated@@150 ($generated@@490 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@297 $generated@@159 $generated@@159)) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@145 $generated@@601 ($generated@@404 $generated@@602 $generated@@603))) (and (and ($generated@@145 ($generated@@295 $generated@@601) ($generated@@245 $generated@@602)) ($generated@@145 ($generated@@347 $generated@@601) ($generated@@245 $generated@@603))) ($generated@@145 ($generated@@378 $generated@@601) ($generated@@245 ($generated@@149 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@145 $generated@@601 ($generated@@404 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@315 $generated@@159 $generated@@159)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@145 $generated@@604 ($generated@@412 $generated@@605 $generated@@606))) (and (and ($generated@@145 ($generated@@313 $generated@@604) ($generated@@250 $generated@@605)) ($generated@@145 ($generated@@358 $generated@@604) ($generated@@250 $generated@@606))) ($generated@@145 ($generated@@386 $generated@@604) ($generated@@250 ($generated@@149 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@412 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@145 $generated@@607 $generated@@46))
 :pattern ( ($generated@@145 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@145 $generated@@608 $generated@@47))
 :pattern ( ($generated@@145 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@145 $generated@@609 $generated@@44))
 :pattern ( ($generated@@145 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@447) ($generated@@145 $generated@@610 $generated@@45))
 :pattern ( ($generated@@145 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@159) ($generated@@145 $generated@@611 $generated@@48))
 :pattern ( ($generated@@145 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 (T@U) Bool)
(declare-fun $generated@@614 () T@U)
(assert  (and (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@615  (=> (= (ControlFlow 0 2) (- 0 3)) false)))
(let (($generated@@616  (=> (and ($generated@@259 $generated@@612) ($generated@@613 $generated@@612)) (=> (and (and (not (= $generated@@614 $generated@@139)) (and ($generated@@145 $generated@@614 $generated@@232) ($generated@@80 $generated@@614 $generated@@232 $generated@@612))) (and (= 1 $generated@@280) (= (ControlFlow 0 4) 2))) $generated@@615))))
$generated@@616)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 (T@U Int) Bool)
(declare-fun $generated@@402 (T@U T@U Int) Bool)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@532 (T@U Int) Bool)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U T@U Int) Bool)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@70) (= (type $generated@@262) $generated@@70)) (= (type $generated@@263) $generated@@159)) (= (type $generated@@264) $generated@@159)) (= (type $generated@@265) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@259 $generated@@265)) (= ($generated@@80 ($generated@@235 $generated@@263 $generated@@264) ($generated@@149 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@263 $generated@@264) ($generated@@149 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@74)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@150) (= ($generated@@148 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@150) ($generated@@148 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@159) (= (type $generated@@271) $generated@@159)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@148 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@159)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@80 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@82 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@85 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@82 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@87 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@82 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@87 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@87 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@82 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@87 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@87 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@85 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@82 $generated@@328 $generated@@2)) (= ($generated@@167 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@87 $generated@@327 $generated@@329))) (<= ($generated ($generated@@87 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@87 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@167 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@159) ($generated@@236 $generated@@333 $generated@@138)) (and (= ($generated@@280 ($generated@@330 $generated@@83 $generated@@333)) $generated@@333) ($generated@@145 ($generated@@330 $generated@@83 $generated@@333) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@333 $generated@@138))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@159) ($generated@@236 $generated@@334 $generated@@164)) (and (= ($generated@@280 ($generated@@330 $generated@@83 $generated@@334)) $generated@@334) ($generated@@145 ($generated@@330 $generated@@83 $generated@@334) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@334 $generated@@164))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@159) ($generated@@236 $generated@@335 $generated@@142)) (and (= ($generated@@280 ($generated@@330 $generated@@83 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@330 $generated@@83 $generated@@335) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@335 $generated@@142))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@159) ($generated@@236 $generated@@336 $generated@@232)) (and (= ($generated@@280 ($generated@@330 $generated@@83 $generated@@336)) $generated@@336) ($generated@@145 ($generated@@330 $generated@@83 $generated@@336) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@232))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@83) (= ($generated@@145 $generated@@337 $generated@@164)  (and ($generated@@145 $generated@@337 $generated@@138) (not (= $generated@@337 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@337 $generated@@164))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@83) (= ($generated@@145 $generated@@338 $generated@@232)  (and ($generated@@145 $generated@@338 $generated@@142) (not (= $generated@@338 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@338 $generated@@232))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(let (($generated@@341 ($generated@@294 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@293 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@292 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@87 ($generated@@291 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@291 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@295 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@295 (type $generated@@346))))
(let (($generated@@348 ($generated@@294 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@293 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@292 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@87 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@82 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@362) $generated@@70)) (= ($generated@@145 $generated@@361 ($generated@@166 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@361 $generated@@363)))) ($generated@@236 $generated@@363 $generated@@362))
 :pattern ( ($generated@@87 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@145 $generated@@361 ($generated@@166 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@365) $generated@@70)) (= (type $generated@@366) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@364 ($generated@@245 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@159) ($generated@@0 ($generated@@87 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@87 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@80 $generated@@364 ($generated@@245 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@369) $generated@@70)) (= (type $generated@@370) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@368 ($generated@@250 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@159) ($generated@@0 ($generated@@87 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@87 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@80 $generated@@368 ($generated@@250 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@87 ($generated@@286 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@87 ($generated@@286 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@295 (type $generated@@377))))
(let (($generated@@379 ($generated@@294 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@82 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@293 $generated@@159 $generated@@159)) (= (type $generated@@381) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@87 ($generated@@291 $generated@@380) ($generated@@157 ($generated@@330 $generated@@150 $generated@@381)))) (= ($generated@@87 ($generated@@375 $generated@@380) ($generated@@157 ($generated@@330 $generated@@150 $generated@@381))) ($generated@@158 ($generated@@330 $generated@@150 $generated@@381))))))
 :pattern ( ($generated@@87 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@313 (type $generated@@385))))
(let (($generated@@387 ($generated@@312 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@311 $generated@@159 $generated@@159)) (= (type $generated@@389) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@87 ($generated@@309 $generated@@388) ($generated@@157 ($generated@@330 $generated@@150 $generated@@389)))) (= ($generated@@87 ($generated@@383 $generated@@388) ($generated@@157 ($generated@@330 $generated@@150 $generated@@389))) ($generated@@158 ($generated@@330 $generated@@150 $generated@@389))))))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@294 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@293 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@87 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@87 ($generated@@291 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@87 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@87 ($generated@@291 $generated@@390) $generated@@394))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@87 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@312 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@311 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@87 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@87 ($generated@@309 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@87 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@395) $generated@@399))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert  (=> (<= 1 $generated@@400) (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@404) $generated@@83)) (and (not (= $generated@@404 $generated@@139)) ($generated@@145 $generated@@404 $generated@@232))) (= ($generated@@401 $generated@@404 $generated@@405) ($generated@@402 $generated@@403 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@401 $generated@@404 $generated@@405) ($generated@@145 $generated@@404 $generated@@232) ($generated@@259 $generated@@403))
 :pattern ( ($generated@@401 $generated@@404 $generated@@405) ($generated@@402 $generated@@403 $generated@@404 $generated@@405) ($generated@@259 $generated@@403))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@70)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@293 $generated@@159 $generated@@159)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@291 $generated@@409) $generated@@413))) (and ($generated@@260 ($generated@@87 ($generated@@375 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@260 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@291 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@159 $generated@@159)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@260 ($generated@@87 ($generated@@383 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@260 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@313 (type $generated@@424))))
(let (($generated@@426 ($generated@@312 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@311 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@310 $generated@@426 $generated@@425)) (= ($generated@@309 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@309 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@313 (type $generated@@427))))
(let (($generated@@429 ($generated@@312 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@311 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@310 $generated@@429 $generated@@428)) (= ($generated@@354 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@354 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@313 (type $generated@@430))))
(let (($generated@@432 ($generated@@312 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@311 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@310 $generated@@432 $generated@@431)) (= ($generated@@382 $generated@@430) ($generated@@422 $generated@@159))))))
 :pattern ( ($generated@@382 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@295 (type $generated@@433))))
(let (($generated@@435 ($generated@@294 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@293 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@292 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@159) (= (type $generated@@437) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@374 $generated@@433) ($generated@@280 ($generated@@235 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@374 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@313 (type $generated@@438))))
(let (($generated@@440 ($generated@@312 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@311 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@310 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@382 $generated@@438) ($generated@@280 ($generated@@235 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@382 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@159) ($generated@@236 $generated@@443 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@330 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@236 $generated@@444 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@330 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@236 $generated@@445 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@330 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@236 $generated@@447 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@446 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@330 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@70) (= ($generated@@236 ($generated@@280 $generated@@448) $generated@@449) ($generated@@145 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@85 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@82 $generated@@451 $generated@@2)) (<= 0 ($generated@@285 $generated@@450))))
 :pattern ( ($generated@@285 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@275 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@274 $generated@@453)) (<= 0 ($generated@@273 $generated@@452))))
 :pattern ( ($generated@@273 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@70) (= (type $generated@@461) $generated@@70)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@78 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@266 ($generated@@235 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@149 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@159) (= (type $generated@@485) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@235 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@159) (= (type $generated@@487) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@235 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@275 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@159)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@273 $generated@@494))) ($generated@@260 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@81 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@81 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@245 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@245 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@250 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@250 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@166 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@166 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@330 $generated@@517 ($generated@@280 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@280 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@293 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) $generated@@70)) (= ($generated@@145 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@291 $generated@@518) $generated@@521))) (and ($generated@@236 ($generated@@87 ($generated@@375 $generated@@518) $generated@@521) $generated@@520) ($generated@@236 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@518) $generated@@521))
 :pattern ( ($generated@@87 ($generated@@291 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@145 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@311 $generated@@159 $generated@@159)) (= (type $generated@@523) $generated@@70)) (= (type $generated@@524) $generated@@70)) (= ($generated@@145 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@522) $generated@@525))) (and ($generated@@236 ($generated@@87 ($generated@@383 $generated@@522) $generated@@525) $generated@@524) ($generated@@236 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@522) $generated@@525))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@145 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@159)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@235 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@235 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) (= (type $generated@@531) $generated@@159)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@235 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@235 $generated@@530 $generated@@531))
)))
(assert  (=> (<= 1 $generated@@400) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (!  (=> (and (= (type $generated@@533) $generated@@83) (or ($generated@@532 $generated@@533 $generated@@534) (and (not (= 1 $generated@@400)) (and (not (= $generated@@533 $generated@@139)) ($generated@@145 $generated@@533 $generated@@164))))) true)
 :pattern ( ($generated@@401 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@236 $generated@@535 ($generated@@406 $generated@@536 $generated@@537))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@159 $generated@@159) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@330 ($generated@@293 $generated@@159 $generated@@159) $generated@@535) ($generated@@406 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@236 $generated@@535 ($generated@@406 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@159) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@236 $generated@@538 ($generated@@414 $generated@@539 $generated@@540))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@159 $generated@@159) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@330 ($generated@@311 $generated@@159 $generated@@159) $generated@@538) ($generated@@414 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@236 $generated@@538 ($generated@@414 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@159)) ($generated@@236 $generated@@543 ($generated@@149 $generated@@541 $generated@@542))) (and (= ($generated@@280 ($generated@@330 $generated@@150 $generated@@543)) $generated@@543) ($generated@@145 ($generated@@330 $generated@@150 $generated@@543) ($generated@@149 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@236 $generated@@543 ($generated@@149 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@422 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@422 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@149 $generated@@548 $generated@@549)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@548 $generated@@549))
)))
(assert  (=> (<= 0 $generated@@400) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@552) $generated@@83)) (or ($generated@@550 $generated@@551 $generated@@552 $generated@@553) (and (not (= 0 $generated@@400)) (and ($generated@@259 $generated@@551) (and (not (= $generated@@552 $generated@@139)) (and ($generated@@145 $generated@@552 $generated@@232) ($generated@@80 $generated@@552 $generated@@232 $generated@@551))))))) true)
 :pattern ( ($generated@@402 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@150) (= ($generated@@526 ($generated@@280 $generated@@554)) ($generated@@527 $generated@@554)))
 :pattern ( ($generated@@526 ($generated@@280 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@159) ($generated@@236 $generated@@555 ($generated@@81 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@555)) $generated@@555) ($generated@@145 ($generated@@330 ($generated@@82 $generated@@159 $generated@@4) $generated@@555) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@555 ($generated@@81 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@236 $generated@@556 ($generated@@245 $generated@@557))) (and (= ($generated@@280 ($generated@@330 ($generated@@82 $generated@@159 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@330 ($generated@@82 $generated@@159 $generated@@4) $generated@@556) ($generated@@245 $generated@@557))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@245 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@159) (= (type $generated@@559) $generated@@70)) ($generated@@236 $generated@@558 ($generated@@250 $generated@@559))) (and (= ($generated@@280 ($generated@@330 ($generated@@82 $generated@@159 $generated@@4) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@330 ($generated@@82 $generated@@159 $generated@@4) $generated@@558) ($generated@@250 $generated@@559))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@250 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@236 $generated@@560 ($generated@@166 $generated@@561))) (and (= ($generated@@280 ($generated@@330 ($generated@@82 $generated@@159 $generated@@2) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@330 ($generated@@82 $generated@@159 $generated@@2) $generated@@560) ($generated@@166 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@560 ($generated@@166 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@236 $generated@@562 ($generated@@488 $generated@@563))) (and (= ($generated@@280 ($generated@@330 ($generated@@274 $generated@@159) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@330 ($generated@@274 $generated@@159) $generated@@562) ($generated@@488 $generated@@563))))
 :pattern ( ($generated@@236 $generated@@562 ($generated@@488 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@83) (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@564 $generated@@139)) ($generated@@80 $generated@@564 $generated@@142 $generated@@565))) ($generated@@80 $generated@@564 $generated@@164 $generated@@565))
 :pattern ( ($generated@@80 $generated@@564 $generated@@142 $generated@@565))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@546 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@546 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@546 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@546 $generated@@232) $generated@@69))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@566 ($generated@@166 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@566 $generated@@569)))) ($generated@@260 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@87 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@166 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@83) (= ($generated@@145 $generated@@570 $generated@@138)  (or (= $generated@@570 $generated@@139) ($generated@@147 ($generated@@171 $generated@@570)))))
 :pattern ( ($generated@@145 $generated@@570 $generated@@138))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@573) (and ($generated@@148 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@70) ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@260 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@577) (and ($generated@@148 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@260 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@260 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@159) (= (type $generated@@580) $generated@@159)) (= ($generated@@235 ($generated@@255 $generated@@579) ($generated@@255 $generated@@580)) ($generated@@255 ($generated@@235 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@235 ($generated@@255 $generated@@579) ($generated@@255 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@280 ($generated@@255 $generated@@581)) ($generated@@255 ($generated@@280 $generated@@581)))
 :pattern ( ($generated@@280 ($generated@@255 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@275 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@274 $generated@@583)) (= ($generated@@273 $generated@@582) 0)) (= $generated@@582 ($generated@@272 $generated@@583))))
 :pattern ( ($generated@@273 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@82 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@285 ($generated@@88 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@285 $generated@@584) ($generated ($generated@@87 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@285 ($generated@@88 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@2)) ($generated@@80 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@3)) ($generated@@80 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@4)) ($generated@@80 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@446)) ($generated@@80 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@159)) ($generated@@80 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@274 $generated@@159)) (= (type $generated@@599) $generated@@70)) (= ($generated@@145 $generated@@598 ($generated@@488 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@273 $generated@@598))) ($generated@@236 ($generated@@489 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@489 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@488 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@274 $generated@@159)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@273 $generated@@602))) (< ($generated@@527 ($generated@@330 $generated@@150 ($generated@@489 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@527 ($generated@@330 $generated@@150 ($generated@@489 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@293 $generated@@159 $generated@@159)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@145 $generated@@604 ($generated@@406 $generated@@605 $generated@@606))) (and (and ($generated@@145 ($generated@@291 $generated@@604) ($generated@@245 $generated@@605)) ($generated@@145 ($generated@@343 $generated@@604) ($generated@@245 $generated@@606))) ($generated@@145 ($generated@@374 $generated@@604) ($generated@@245 ($generated@@149 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@406 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@311 $generated@@159 $generated@@159)) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@70)) ($generated@@145 $generated@@607 ($generated@@414 $generated@@608 $generated@@609))) (and (and ($generated@@145 ($generated@@309 $generated@@607) ($generated@@250 $generated@@608)) ($generated@@145 ($generated@@354 $generated@@607) ($generated@@250 $generated@@609))) ($generated@@145 ($generated@@382 $generated@@607) ($generated@@250 ($generated@@149 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@145 $generated@@607 ($generated@@414 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@145 $generated@@610 $generated@@46))
 :pattern ( ($generated@@145 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@145 $generated@@611 $generated@@47))
 :pattern ( ($generated@@145 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@145 $generated@@612 $generated@@44))
 :pattern ( ($generated@@145 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@446) ($generated@@145 $generated@@613 $generated@@45))
 :pattern ( ($generated@@145 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@159) ($generated@@145 $generated@@614 $generated@@48))
 :pattern ( ($generated@@145 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () T@U)
(assert  (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@618  (=> (= (ControlFlow 0 2) (- 0 3)) false)))
(let (($generated@@619  (=> (and ($generated@@259 $generated@@615) ($generated@@616 $generated@@615)) (=> (and (and (not (= $generated@@617 $generated@@139)) (and ($generated@@145 $generated@@617 $generated@@232) ($generated@@80 $generated@@617 $generated@@232 $generated@@615))) (and (= 1 $generated@@400) (= (ControlFlow 0 4) 2))) $generated@@618))))
$generated@@619)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true))) (=> (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@T) T@U)
(declare-fun $generated@@217 (T@U) Int)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@T T@T) T@U)
(declare-fun $generated@@241 (T@T T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@243 (T@T) T@T)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@258 (T@T T@T) T@U)
(declare-fun $generated@@259 (T@T T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@278 (T@T T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@348 (T@U T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) Bool)
(declare-fun $generated@@367 (T@T) T@U)
(declare-fun $generated@@391 () T@T)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U Int) T@U)
(declare-fun $generated@@443 (T@U) Int)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@488 (T@U T@U T@U) T@U)
(declare-fun $generated@@489 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@490 (T@T T@T) T@T)
(declare-fun $generated@@491 (T@T) T@T)
(declare-fun $generated@@492 (T@T) T@T)
(declare-fun $generated@@493 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@564 (T@U T@U) Bool)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (= (type $generated@@174) $generated@@83) (= (type $generated@@175) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@174 $generated@@164 $generated@@175) ($generated@@80 $generated@@174 $generated@@138 $generated@@175)))
 :pattern ( ($generated@@80 $generated@@174 $generated@@164 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@70))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@177) $generated@@83) (= (type $generated@@178) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@177 $generated@@176 $generated@@178) ($generated@@80 $generated@@177 $generated@@142 $generated@@178)))
 :pattern ( ($generated@@80 $generated@@177 $generated@@176 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@181 $generated@@182)) $generated@@150)
 :pattern ( ($generated@@179 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@70) (= (type $generated@@184) $generated@@70)) (= (type $generated@@185) $generated@@159)) (= (type $generated@@186) $generated@@159)) (= ($generated@@145 ($generated@@179 $generated@@185 $generated@@186) ($generated@@149 $generated@@183 $generated@@184))  (and ($generated@@180 $generated@@185 $generated@@183) ($generated@@180 $generated@@186 $generated@@184))))
 :pattern ( ($generated@@145 ($generated@@179 $generated@@185 $generated@@186) ($generated@@149 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@187) $generated@@150) (= (type $generated@@188) $generated@@150)) (= ($generated@@156 $generated@@187 $generated@@188) (= $generated@@187 $generated@@188)))
 :pattern ( ($generated@@156 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@70)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@192) $generated@@70)) (= ($generated@@145 $generated@@191 ($generated@@189 $generated@@192)) (forall (($generated@@193 T@U) ) (!  (=> (and (= (type $generated@@193) $generated@@159) ($generated@@0 ($generated@@87 $generated@@191 $generated@@193))) ($generated@@180 $generated@@193 $generated@@192))
 :pattern ( ($generated@@87 $generated@@191 $generated@@193))
))))
 :pattern ( ($generated@@145 $generated@@191 ($generated@@189 $generated@@192)))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@194 $generated@@195)) $generated@@70)
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@197) $generated@@70)) (= ($generated@@145 $generated@@196 ($generated@@194 $generated@@197)) (forall (($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@159) ($generated@@0 ($generated@@87 $generated@@196 $generated@@198))) ($generated@@180 $generated@@198 $generated@@197))
 :pattern ( ($generated@@87 $generated@@196 $generated@@198))
))))
 :pattern ( ($generated@@145 $generated@@196 ($generated@@194 $generated@@197)))
)))
(assert (forall (($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(= (type ($generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@199 $generated@@202) $generated@@202)
 :pattern ( ($generated@@199 $generated@@202))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@205) $generated@@70) (= (type $generated@@206) $generated@@70)) (= (type $generated@@207) $generated@@159)) (= (type $generated@@208) $generated@@159)) (= (type $generated@@209) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@203 $generated@@209)) (= ($generated@@80 ($generated@@179 $generated@@207 $generated@@208) ($generated@@149 $generated@@205 $generated@@206) $generated@@209)  (and ($generated@@204 $generated@@207 $generated@@205 $generated@@209) ($generated@@204 $generated@@208 $generated@@206 $generated@@209))))
 :pattern ( ($generated@@80 ($generated@@179 $generated@@207 $generated@@208) ($generated@@149 $generated@@205 $generated@@206) $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@74)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@150) (= ($generated@@148 $generated@@212) (= ($generated@@210 $generated@@212) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@150) ($generated@@148 $generated@@213)) (exists (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (and (and (= (type $generated@@214) $generated@@159) (= (type $generated@@215) $generated@@159)) (= $generated@@213 ($generated@@179 $generated@@214 $generated@@215)))
 :no-pattern (type $generated@@214)
 :no-pattern (type $generated@@215)
 :no-pattern ($generated $generated@@214)
 :no-pattern ($generated@@0 $generated@@214)
 :no-pattern ($generated $generated@@215)
 :no-pattern ($generated@@0 $generated@@215)
)))
 :pattern ( ($generated@@148 $generated@@213))
)))
(assert  (and (and (forall (($generated@@220 T@T) ) (= ($generated@@1 ($generated@@218 $generated@@220)) 16)) (forall (($generated@@221 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@218 $generated@@221))
))) (forall (($generated@@222 T@T) ) (! (= (type ($generated@@216 $generated@@222)) ($generated@@218 $generated@@222))
 :pattern ( ($generated@@216 $generated@@222))
))))
(assert (forall (($generated@@223 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@223)) 0)
 :pattern ( ($generated@@216 $generated@@223))
)))
(assert  (=> (<= 0 $generated@@224) (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@83) (or ($generated@@226 $generated@@227) (and (not (= 0 $generated@@224)) (and (not (= $generated@@227 $generated@@139)) ($generated@@145 $generated@@227 $generated@@176))))) true)
 :pattern ( ($generated@@225 $generated@@227))
))))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@159)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@70) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@204 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@80 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@204 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@T) ) (! (= (type ($generated@@234 $generated@@235)) ($generated@@82 $generated@@235 $generated@@2))
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@85 (type $generated@@236))))
 (=> (= (type $generated@@236) ($generated@@82 $generated@@237 $generated@@2)) (and (= (= ($generated@@233 $generated@@236) 0) (= $generated@@236 ($generated@@234 $generated@@237))) (=> (not (= ($generated@@233 $generated@@236) 0)) (exists (($generated@@238 T@U) ) (!  (and (= (type $generated@@238) $generated@@237) (< 0 ($generated ($generated@@87 $generated@@236 $generated@@238))))
 :no-pattern (type $generated@@238)
 :no-pattern ($generated $generated@@238)
 :no-pattern ($generated@@0 $generated@@238)
))))))
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (and (and (and (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (= ($generated@@1 ($generated@@241 $generated@@244 $generated@@245)) 17)) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@242 ($generated@@241 $generated@@246 $generated@@247)) $generated@@246)
 :pattern ( ($generated@@241 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@243 ($generated@@241 $generated@@248 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@241 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@242 (type $generated@@250))))
(= (type ($generated@@239 $generated@@250)) ($generated@@82 $generated@@251 $generated@@4)))
 :pattern ( ($generated@@239 $generated@@250))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= (type ($generated@@240 $generated@@252 $generated@@253)) ($generated@@241 $generated@@252 $generated@@253))
 :pattern ( ($generated@@240 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (let (($generated@@256 (type $generated@@254)))
 (not ($generated@@0 ($generated@@87 ($generated@@239 ($generated@@240 $generated@@256 $generated@@255)) $generated@@254))))
 :pattern ( (let (($generated@@256 (type $generated@@254)))
($generated@@87 ($generated@@239 ($generated@@240 $generated@@256 $generated@@255)) $generated@@254)))
)))
(assert  (and (and (and (and (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@262 $generated@@263)) 18)) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@264 $generated@@265)) $generated@@264)
 :pattern ( ($generated@@259 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@259 $generated@@266 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@259 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@260 (type $generated@@268))))
(= (type ($generated@@257 $generated@@268)) ($generated@@82 $generated@@269 $generated@@4)))
 :pattern ( ($generated@@257 $generated@@268))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= (type ($generated@@258 $generated@@270 $generated@@271)) ($generated@@259 $generated@@270 $generated@@271))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@T) ) (! (let (($generated@@274 (type $generated@@272)))
 (not ($generated@@0 ($generated@@87 ($generated@@257 ($generated@@258 $generated@@274 $generated@@273)) $generated@@272))))
 :pattern ( (let (($generated@@274 (type $generated@@272)))
($generated@@87 ($generated@@257 ($generated@@258 $generated@@274 $generated@@273)) $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@85 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@82 $generated@@276 $generated@@2)) (= ($generated@@167 $generated@@275) (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@276) (and (<= 0 ($generated ($generated@@87 $generated@@275 $generated@@277))) (<= ($generated ($generated@@87 $generated@@275 $generated@@277)) ($generated@@233 $generated@@275))))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
)))))
 :pattern ( ($generated@@167 $generated@@275))
)))
(assert (forall (($generated@@279 T@T) ($generated@@280 T@U) ) (! (= (type ($generated@@278 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@278 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@159) ($generated@@180 $generated@@281 $generated@@138)) (and (= ($generated@@228 ($generated@@278 $generated@@83 $generated@@281)) $generated@@281) ($generated@@145 ($generated@@278 $generated@@83 $generated@@281) $generated@@138)))
 :pattern ( ($generated@@180 $generated@@281 $generated@@138))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@159) ($generated@@180 $generated@@282 $generated@@164)) (and (= ($generated@@228 ($generated@@278 $generated@@83 $generated@@282)) $generated@@282) ($generated@@145 ($generated@@278 $generated@@83 $generated@@282) $generated@@164)))
 :pattern ( ($generated@@180 $generated@@282 $generated@@164))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@159) ($generated@@180 $generated@@283 $generated@@142)) (and (= ($generated@@228 ($generated@@278 $generated@@83 $generated@@283)) $generated@@283) ($generated@@145 ($generated@@278 $generated@@83 $generated@@283) $generated@@142)))
 :pattern ( ($generated@@180 $generated@@283 $generated@@142))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@159) ($generated@@180 $generated@@284 $generated@@176)) (and (= ($generated@@228 ($generated@@278 $generated@@83 $generated@@284)) $generated@@284) ($generated@@145 ($generated@@278 $generated@@83 $generated@@284) $generated@@176)))
 :pattern ( ($generated@@180 $generated@@284 $generated@@176))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@83) (= ($generated@@145 $generated@@285 $generated@@164)  (and ($generated@@145 $generated@@285 $generated@@138) (not (= $generated@@285 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@285 $generated@@164))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@83) (= ($generated@@145 $generated@@286 $generated@@176)  (and ($generated@@145 $generated@@286 $generated@@142) (not (= $generated@@286 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@286 $generated@@176))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@243 (type $generated@@287))))
(let (($generated@@289 ($generated@@242 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@241 $generated@@289 $generated@@288)) (or (= $generated@@287 ($generated@@240 $generated@@289 $generated@@288)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) ($generated@@0 ($generated@@87 ($generated@@239 $generated@@287) $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@239 $generated@@287))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@243 (type $generated@@292))))
(= (type ($generated@@291 $generated@@292)) ($generated@@82 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@243 (type $generated@@294))))
(let (($generated@@296 ($generated@@242 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@241 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@240 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@295) ($generated@@0 ($generated@@87 ($generated@@291 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@261 (type $generated@@298))))
(let (($generated@@300 ($generated@@260 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@259 $generated@@300 $generated@@299)) (or (= $generated@@298 ($generated@@258 $generated@@300 $generated@@299)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) ($generated@@0 ($generated@@87 ($generated@@257 $generated@@298) $generated@@301)))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@257 $generated@@298))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@261 (type $generated@@303))))
(= (type ($generated@@302 $generated@@303)) ($generated@@82 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@261 (type $generated@@305))))
(let (($generated@@307 ($generated@@260 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@259 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@258 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@306) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@310) $generated@@70)) (= ($generated@@145 $generated@@309 ($generated@@166 $generated@@310)) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@309 $generated@@311)))) ($generated@@180 $generated@@311 $generated@@310))
 :pattern ( ($generated@@87 $generated@@309 $generated@@311))
))))
 :pattern ( ($generated@@145 $generated@@309 ($generated@@166 $generated@@310)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@312) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@313) $generated@@70)) (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@312 ($generated@@189 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@159) ($generated@@0 ($generated@@87 $generated@@312 $generated@@315))) ($generated@@204 $generated@@315 $generated@@313 $generated@@314))
 :pattern ( ($generated@@87 $generated@@312 $generated@@315))
))))
 :pattern ( ($generated@@80 $generated@@312 ($generated@@189 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@316) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@317) $generated@@70)) (= (type $generated@@318) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@316 ($generated@@194 $generated@@317) $generated@@318) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@159) ($generated@@0 ($generated@@87 $generated@@316 $generated@@319))) ($generated@@204 $generated@@319 $generated@@317 $generated@@318))
 :pattern ( ($generated@@87 $generated@@316 $generated@@319))
))))
 :pattern ( ($generated@@80 $generated@@316 ($generated@@194 $generated@@317) $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 (type $generated@@320)))
(= ($generated ($generated@@87 ($generated@@234 $generated@@321) $generated@@320)) 0))
 :pattern ( (let (($generated@@321 (type $generated@@320)))
($generated@@87 ($generated@@234 $generated@@321) $generated@@320)))
)))
(assert  (and (forall (($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@324)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@322 $generated@@324))
)) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@243 (type $generated@@325))))
(let (($generated@@327 ($generated@@242 (type $generated@@325))))
(= (type ($generated@@323 $generated@@325)) ($generated@@82 $generated@@327 $generated@@326))))
 :pattern ( ($generated@@323 $generated@@325))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@241 $generated@@159 $generated@@159)) (= (type $generated@@329) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@322 $generated@@328) $generated@@329))  (and ($generated@@0 ($generated@@87 ($generated@@239 $generated@@328) ($generated@@157 ($generated@@278 $generated@@150 $generated@@329)))) (= ($generated@@87 ($generated@@323 $generated@@328) ($generated@@157 ($generated@@278 $generated@@150 $generated@@329))) ($generated@@158 ($generated@@278 $generated@@150 $generated@@329))))))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@328) $generated@@329))
)))
(assert  (and (forall (($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@332)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@330 $generated@@332))
)) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@261 (type $generated@@333))))
(let (($generated@@335 ($generated@@260 (type $generated@@333))))
(= (type ($generated@@331 $generated@@333)) ($generated@@82 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@331 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@259 $generated@@159 $generated@@159)) (= (type $generated@@337) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@330 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@87 ($generated@@257 $generated@@336) ($generated@@157 ($generated@@278 $generated@@150 $generated@@337)))) (= ($generated@@87 ($generated@@331 $generated@@336) ($generated@@157 ($generated@@278 $generated@@150 $generated@@337))) ($generated@@158 ($generated@@278 $generated@@150 $generated@@337))))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(let (($generated@@341 ($generated@@242 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@241 $generated@@341 $generated@@340)) (= ($generated@@0 ($generated@@87 ($generated@@291 $generated@@338) $generated@@339)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (and ($generated@@0 ($generated@@87 ($generated@@239 $generated@@338) $generated@@342)) (= $generated@@339 ($generated@@87 ($generated@@323 $generated@@338) $generated@@342))))
 :pattern ( ($generated@@87 ($generated@@239 $generated@@338) $generated@@342))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@338) $generated@@342))
))))))
 :pattern ( ($generated@@87 ($generated@@291 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(let (($generated@@346 ($generated@@260 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@259 $generated@@346 $generated@@345)) (= ($generated@@0 ($generated@@87 ($generated@@302 $generated@@343) $generated@@344)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) (and ($generated@@0 ($generated@@87 ($generated@@257 $generated@@343) $generated@@347)) (= $generated@@344 ($generated@@87 ($generated@@331 $generated@@343) $generated@@347))))
 :pattern ( ($generated@@87 ($generated@@257 $generated@@343) $generated@@347))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@343) $generated@@347))
))))))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@70)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (and (= (type $generated@@351) ($generated@@241 $generated@@159 $generated@@159)) (= (type $generated@@352) $generated@@70)) (= (type $generated@@353) $generated@@70)) (= (type $generated@@354) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@351 ($generated@@348 $generated@@352 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@239 $generated@@351) $generated@@355))) (and ($generated@@204 ($generated@@87 ($generated@@323 $generated@@351) $generated@@355) $generated@@353 $generated@@354) ($generated@@204 $generated@@355 $generated@@352 $generated@@354)))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@351) $generated@@355))
 :pattern ( ($generated@@87 ($generated@@239 $generated@@351) $generated@@355))
))))
 :pattern ( ($generated@@80 $generated@@351 ($generated@@348 $generated@@352 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@70)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@259 $generated@@159 $generated@@159)) (= (type $generated@@360) $generated@@70)) (= (type $generated@@361) $generated@@70)) (= (type $generated@@362) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@257 $generated@@359) $generated@@363))) (and ($generated@@204 ($generated@@87 ($generated@@331 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@204 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@359) $generated@@363))
 :pattern ( ($generated@@87 ($generated@@257 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@80 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert  (=> (<= 1 $generated@@224) (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@366) $generated@@83)) (and (not (= $generated@@366 $generated@@139)) ($generated@@145 $generated@@366 $generated@@176))) (= ($generated@@364 $generated@@365 $generated@@366) ($generated@@225 $generated@@366)))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366) ($generated@@145 $generated@@366 $generated@@176) ($generated@@203 $generated@@365))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366) ($generated@@225 $generated@@366) ($generated@@203 $generated@@365))
))))
(assert (forall (($generated@@368 T@T) ) (! (= (type ($generated@@367 $generated@@368)) ($generated@@82 $generated@@368 $generated@@4))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@261 (type $generated@@369))))
(let (($generated@@371 ($generated@@260 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@259 $generated@@371 $generated@@370)) (= (= $generated@@369 ($generated@@258 $generated@@371 $generated@@370)) (= ($generated@@257 $generated@@369) ($generated@@367 $generated@@371))))))
 :pattern ( ($generated@@257 $generated@@369))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@261 (type $generated@@372))))
(let (($generated@@374 ($generated@@260 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@259 $generated@@374 $generated@@373)) (= (= $generated@@372 ($generated@@258 $generated@@374 $generated@@373)) (= ($generated@@302 $generated@@372) ($generated@@367 $generated@@373))))))
 :pattern ( ($generated@@302 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@261 (type $generated@@375))))
(let (($generated@@377 ($generated@@260 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@259 $generated@@377 $generated@@376)) (= (= $generated@@375 ($generated@@258 $generated@@377 $generated@@376)) (= ($generated@@330 $generated@@375) ($generated@@367 $generated@@159))))))
 :pattern ( ($generated@@330 $generated@@375))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@243 (type $generated@@378))))
(let (($generated@@380 ($generated@@242 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@241 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@240 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (and (and (= (type $generated@@381) $generated@@159) (= (type $generated@@382) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@378) ($generated@@228 ($generated@@179 $generated@@381 $generated@@382)))))
 :no-pattern (type $generated@@381)
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@322 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@261 (type $generated@@383))))
(let (($generated@@385 ($generated@@260 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@259 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@258 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (and (and (= (type $generated@@386) $generated@@159) (= (type $generated@@387) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@383) ($generated@@228 ($generated@@179 $generated@@386 $generated@@387)))))
 :no-pattern (type $generated@@386)
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@330 $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@159) ($generated@@180 $generated@@388 $generated@@46)) (and (= ($generated@@228 ($generated@@278 $generated@@2 $generated@@388)) $generated@@388) ($generated@@145 ($generated@@278 $generated@@2 $generated@@388) $generated@@46)))
 :pattern ( ($generated@@180 $generated@@388 $generated@@46))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@159) ($generated@@180 $generated@@389 $generated@@47)) (and (= ($generated@@228 ($generated@@278 $generated@@3 $generated@@389)) $generated@@389) ($generated@@145 ($generated@@278 $generated@@3 $generated@@389) $generated@@47)))
 :pattern ( ($generated@@180 $generated@@389 $generated@@47))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@159) ($generated@@180 $generated@@390 $generated@@44)) (and (= ($generated@@228 ($generated@@278 $generated@@4 $generated@@390)) $generated@@390) ($generated@@145 ($generated@@278 $generated@@4 $generated@@390) $generated@@44)))
 :pattern ( ($generated@@180 $generated@@390 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@391) 19))
(assert (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@159) ($generated@@180 $generated@@392 $generated@@45)) (and (= ($generated@@228 ($generated@@278 $generated@@391 $generated@@392)) $generated@@392) ($generated@@145 ($generated@@278 $generated@@391 $generated@@392) $generated@@45)))
 :pattern ( ($generated@@180 $generated@@392 $generated@@45))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@70) (= ($generated@@180 ($generated@@228 $generated@@393) $generated@@394) ($generated@@145 $generated@@393 $generated@@394)))
 :pattern ( ($generated@@180 ($generated@@228 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@85 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@82 $generated@@396 $generated@@2)) (<= 0 ($generated@@233 $generated@@395))))
 :pattern ( ($generated@@233 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@219 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@218 $generated@@398)) (<= 0 ($generated@@217 $generated@@397))))
 :pattern ( ($generated@@217 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (= (type ($generated@@399 $generated@@400)) $generated@@70)
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@70) (= (type $generated@@402) $generated@@70)) (= ($generated@@399 ($generated@@348 $generated@@401 $generated@@402)) $generated@@401))
 :pattern ( ($generated@@348 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (= (type ($generated@@403 $generated@@404)) $generated@@70)
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@70) (= (type $generated@@406) $generated@@70)) (= ($generated@@403 ($generated@@348 $generated@@405 $generated@@406)) $generated@@406))
 :pattern ( ($generated@@348 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@70) (= (type $generated@@408) $generated@@70)) (= ($generated@@78 ($generated@@348 $generated@@407 $generated@@408)) $generated@@58))
 :pattern ( ($generated@@348 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (= (type ($generated@@409 $generated@@410)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@70) (= (type $generated@@412) $generated@@70)) (= ($generated@@409 ($generated@@356 $generated@@411 $generated@@412)) $generated@@411))
 :pattern ( ($generated@@356 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@70) (= (type $generated@@416) $generated@@70)) (= ($generated@@413 ($generated@@356 $generated@@415 $generated@@416)) $generated@@416))
 :pattern ( ($generated@@356 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@70) (= (type $generated@@418) $generated@@70)) (= ($generated@@78 ($generated@@356 $generated@@417 $generated@@418)) $generated@@59))
 :pattern ( ($generated@@356 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@159) (= (type $generated@@420) $generated@@159)) (= ($generated@@210 ($generated@@179 $generated@@419 $generated@@420)) $generated@@61))
 :pattern ( ($generated@@179 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@70) (= (type $generated@@424) $generated@@70)) (= ($generated@@421 ($generated@@149 $generated@@423 $generated@@424)) $generated@@423))
 :pattern ( ($generated@@149 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@70)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@70) (= (type $generated@@428) $generated@@70)) (= ($generated@@425 ($generated@@149 $generated@@427 $generated@@428)) $generated@@428))
 :pattern ( ($generated@@149 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) (= ($generated@@157 ($generated@@179 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@179 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@159) (= (type $generated@@432) $generated@@159)) (= ($generated@@158 ($generated@@179 $generated@@431 $generated@@432)) $generated@@432))
 :pattern ( ($generated@@179 $generated@@431 $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ($generated@@437 Int) ) (! (let (($generated@@438 ($generated@@219 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436 $generated@@437)) $generated@@438))
 :pattern ( ($generated@@434 $generated@@436 $generated@@437))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@439) ($generated@@218 $generated@@159)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@439 ($generated@@433 $generated@@440) $generated@@441) (forall (($generated@@442 Int) ) (!  (=> (and (<= 0 $generated@@442) (< $generated@@442 ($generated@@217 $generated@@439))) ($generated@@204 ($generated@@434 $generated@@439 $generated@@442) $generated@@440 $generated@@441))
 :pattern ( ($generated@@434 $generated@@439 $generated@@442))
))))
 :pattern ( ($generated@@80 $generated@@439 ($generated@@433 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 Int) ) (! (= ($generated@@443 ($generated@@81 $generated@@444)) $generated@@444)
 :pattern ( ($generated@@81 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@70)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@70) (= ($generated@@445 ($generated@@189 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@189 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@70) (= ($generated@@78 ($generated@@189 $generated@@448)) $generated@@54))
 :pattern ( ($generated@@189 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@70)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@70) (= ($generated@@449 ($generated@@194 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@194 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@78 ($generated@@194 $generated@@452)) $generated@@55))
 :pattern ( ($generated@@194 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@70) (= ($generated@@453 ($generated@@166 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@166 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@456)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@70) (= ($generated@@457 ($generated@@433 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@433 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@78 ($generated@@433 $generated@@460)) $generated@@57))
 :pattern ( ($generated@@433 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(= ($generated@@278 $generated@@462 ($generated@@228 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@228 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@463) ($generated@@241 $generated@@159 $generated@@159)) (= (type $generated@@464) $generated@@70)) (= (type $generated@@465) $generated@@70)) (= ($generated@@145 $generated@@463 ($generated@@348 $generated@@464 $generated@@465)) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@239 $generated@@463) $generated@@466))) (and ($generated@@180 ($generated@@87 ($generated@@323 $generated@@463) $generated@@466) $generated@@465) ($generated@@180 $generated@@466 $generated@@464)))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@463) $generated@@466))
 :pattern ( ($generated@@87 ($generated@@239 $generated@@463) $generated@@466))
))))
 :pattern ( ($generated@@145 $generated@@463 ($generated@@348 $generated@@464 $generated@@465)))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@259 $generated@@159 $generated@@159)) (= (type $generated@@468) $generated@@70)) (= (type $generated@@469) $generated@@70)) (= ($generated@@145 $generated@@467 ($generated@@356 $generated@@468 $generated@@469)) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@257 $generated@@467) $generated@@470))) (and ($generated@@180 ($generated@@87 ($generated@@331 $generated@@467) $generated@@470) $generated@@469) ($generated@@180 $generated@@470 $generated@@468)))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@467) $generated@@470))
 :pattern ( ($generated@@87 ($generated@@257 $generated@@467) $generated@@470))
))))
 :pattern ( ($generated@@145 $generated@@467 ($generated@@356 $generated@@468 $generated@@469)))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@159) (= (type $generated@@474) $generated@@159)) (< ($generated@@471 $generated@@473) ($generated@@472 ($generated@@179 $generated@@473 $generated@@474))))
 :pattern ( ($generated@@179 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@159) (= (type $generated@@476) $generated@@159)) (< ($generated@@471 $generated@@476) ($generated@@472 ($generated@@179 $generated@@475 $generated@@476))))
 :pattern ( ($generated@@179 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) $generated@@159) (= (type $generated@@478) $generated@@70)) (= (type $generated@@479) $generated@@70)) ($generated@@180 $generated@@477 ($generated@@348 $generated@@478 $generated@@479))) (and (= ($generated@@228 ($generated@@278 ($generated@@241 $generated@@159 $generated@@159) $generated@@477)) $generated@@477) ($generated@@145 ($generated@@278 ($generated@@241 $generated@@159 $generated@@159) $generated@@477) ($generated@@348 $generated@@478 $generated@@479))))
 :pattern ( ($generated@@180 $generated@@477 ($generated@@348 $generated@@478 $generated@@479)))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) $generated@@159) (= (type $generated@@481) $generated@@70)) (= (type $generated@@482) $generated@@70)) ($generated@@180 $generated@@480 ($generated@@356 $generated@@481 $generated@@482))) (and (= ($generated@@228 ($generated@@278 ($generated@@259 $generated@@159 $generated@@159) $generated@@480)) $generated@@480) ($generated@@145 ($generated@@278 ($generated@@259 $generated@@159 $generated@@159) $generated@@480) ($generated@@356 $generated@@481 $generated@@482))))
 :pattern ( ($generated@@180 $generated@@480 ($generated@@356 $generated@@481 $generated@@482)))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= (type $generated@@485) $generated@@159)) ($generated@@180 $generated@@485 ($generated@@149 $generated@@483 $generated@@484))) (and (= ($generated@@228 ($generated@@278 $generated@@150 $generated@@485)) $generated@@485) ($generated@@145 ($generated@@278 $generated@@150 $generated@@485) ($generated@@149 $generated@@483 $generated@@484))))
 :pattern ( ($generated@@180 $generated@@485 ($generated@@149 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (not ($generated@@0 ($generated@@87 ($generated@@367 $generated@@487) $generated@@486))))
 :pattern ( (let (($generated@@487 (type $generated@@486)))
($generated@@87 ($generated@@367 $generated@@487) $generated@@486)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@494 T@T) ($generated@@495 T@T) ) (= ($generated@@1 ($generated@@490 $generated@@494 $generated@@495)) 20)) (forall (($generated@@496 T@T) ($generated@@497 T@T) ) (! (= ($generated@@491 ($generated@@490 $generated@@496 $generated@@497)) $generated@@496)
 :pattern ( ($generated@@490 $generated@@496 $generated@@497))
))) (forall (($generated@@498 T@T) ($generated@@499 T@T) ) (! (= ($generated@@492 ($generated@@490 $generated@@498 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@490 $generated@@498 $generated@@499))
))) (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@492 (type $generated@@500))))
(= (type ($generated@@488 $generated@@500 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@488 $generated@@500 $generated@@501 $generated@@502))
))) (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(let (($generated@@509 (type $generated@@505)))
(= (type ($generated@@493 $generated@@504 $generated@@505 $generated@@506 $generated@@507)) ($generated@@490 $generated@@509 $generated@@508))))
 :pattern ( ($generated@@493 $generated@@504 $generated@@505 $generated@@506 $generated@@507))
))) (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@492 (type $generated@@510))))
 (=> (= (type $generated@@513) $generated@@514) (= ($generated@@488 ($generated@@493 $generated@@510 $generated@@511 $generated@@512 $generated@@513) $generated@@511 $generated@@512) $generated@@513)))
 :weight 0
))) (and (and (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (or (= $generated@@517 $generated@@519) (= ($generated@@488 ($generated@@493 $generated@@516 $generated@@517 $generated@@518 $generated@@515) $generated@@519 $generated@@520) ($generated@@488 $generated@@516 $generated@@519 $generated@@520)))
 :weight 0
)) (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (or (= $generated@@524 $generated@@526) (= ($generated@@488 ($generated@@493 $generated@@522 $generated@@523 $generated@@524 $generated@@521) $generated@@525 $generated@@526) ($generated@@488 $generated@@522 $generated@@525 $generated@@526)))
 :weight 0
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (or true (= ($generated@@488 ($generated@@493 $generated@@528 $generated@@529 $generated@@530 $generated@@527) $generated@@531 $generated@@532) ($generated@@488 $generated@@528 $generated@@531 $generated@@532)))
 :weight 0
)))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (= (type ($generated@@489 $generated@@533 $generated@@534 $generated@@535 $generated@@536)) ($generated@@490 $generated@@83 $generated@@4))
 :pattern ( ($generated@@489 $generated@@533 $generated@@534 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@73 (type $generated@@542))))
 (=> (and (and (and (and (and (= (type $generated@@537) $generated@@83) (= (type $generated@@538) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@539) ($generated@@72 $generated@@4))) (= (type $generated@@540) $generated@@83)) (= (type $generated@@541) $generated@@83)) (= (type $generated@@542) ($generated@@72 $generated@@543))) (= ($generated@@0 ($generated@@488 ($generated@@489 $generated@@537 $generated@@538 $generated@@539 $generated@@540) $generated@@541 $generated@@542))  (=> (and (not (= $generated@@541 $generated@@537)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@538 $generated@@541) $generated@@539))) (= $generated@@541 $generated@@540)))))
 :pattern ( ($generated@@488 ($generated@@489 $generated@@537 $generated@@538 $generated@@539 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@75)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@149 $generated@@546 $generated@@547)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@150) (= ($generated@@471 ($generated@@228 $generated@@548)) ($generated@@472 $generated@@548)))
 :pattern ( ($generated@@471 ($generated@@228 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@159) ($generated@@180 $generated@@549 ($generated@@81 0))) (and (= ($generated@@228 ($generated@@278 $generated@@2 $generated@@549)) $generated@@549) ($generated@@145 ($generated@@278 ($generated@@82 $generated@@159 $generated@@4) $generated@@549) ($generated@@81 0))))
 :pattern ( ($generated@@180 $generated@@549 ($generated@@81 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@159) (= (type $generated@@551) $generated@@70)) ($generated@@180 $generated@@550 ($generated@@189 $generated@@551))) (and (= ($generated@@228 ($generated@@278 ($generated@@82 $generated@@159 $generated@@4) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@278 ($generated@@82 $generated@@159 $generated@@4) $generated@@550) ($generated@@189 $generated@@551))))
 :pattern ( ($generated@@180 $generated@@550 ($generated@@189 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@70)) ($generated@@180 $generated@@552 ($generated@@194 $generated@@553))) (and (= ($generated@@228 ($generated@@278 ($generated@@82 $generated@@159 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@278 ($generated@@82 $generated@@159 $generated@@4) $generated@@552) ($generated@@194 $generated@@553))))
 :pattern ( ($generated@@180 $generated@@552 ($generated@@194 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@180 $generated@@554 ($generated@@166 $generated@@555))) (and (= ($generated@@228 ($generated@@278 ($generated@@82 $generated@@159 $generated@@2) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@278 ($generated@@82 $generated@@159 $generated@@2) $generated@@554) ($generated@@166 $generated@@555))))
 :pattern ( ($generated@@180 $generated@@554 ($generated@@166 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@180 $generated@@556 ($generated@@433 $generated@@557))) (and (= ($generated@@228 ($generated@@278 ($generated@@218 $generated@@159) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@278 ($generated@@218 $generated@@159) $generated@@556) ($generated@@433 $generated@@557))))
 :pattern ( ($generated@@180 $generated@@556 ($generated@@433 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@83) (= (type $generated@@559) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@558 $generated@@139)) ($generated@@80 $generated@@558 $generated@@142 $generated@@559))) ($generated@@80 $generated@@558 $generated@@164 $generated@@559))
 :pattern ( ($generated@@80 $generated@@558 $generated@@142 $generated@@559))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@544 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@544 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@544 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@176) $generated@@66))
(assert (= ($generated@@544 $generated@@176) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@166 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@204 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@166 $generated@@561) $generated@@562))
)))
(assert  (=> (<= 1 $generated@@224) (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@566) $generated@@83)) (or ($generated@@564 $generated@@565 $generated@@566) (and (not (= 1 $generated@@224)) (and ($generated@@203 $generated@@565) (and (not (= $generated@@566 $generated@@139)) (and ($generated@@145 $generated@@566 $generated@@164) ($generated@@80 $generated@@566 $generated@@164 $generated@@565))))))) true)
 :pattern ( ($generated@@364 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@83) (= ($generated@@145 $generated@@567 $generated@@138)  (or (= $generated@@567 $generated@@139) ($generated@@147 ($generated@@171 $generated@@567)))))
 :pattern ( ($generated@@145 $generated@@567 $generated@@138))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@150) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@203 $generated@@570) (and ($generated@@148 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@70) ($generated@@80 $generated@@568 ($generated@@149 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@149 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@204 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@204 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@203 $generated@@574) (and ($generated@@148 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@70) ($generated@@80 $generated@@572 ($generated@@149 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@149 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@204 ($generated@@158 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@204 ($generated@@158 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@159) (= (type $generated@@577) $generated@@159)) (= ($generated@@179 ($generated@@199 $generated@@576) ($generated@@199 $generated@@577)) ($generated@@199 ($generated@@179 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@179 ($generated@@199 $generated@@576) ($generated@@199 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@228 ($generated@@199 $generated@@578)) ($generated@@199 ($generated@@228 $generated@@578)))
 :pattern ( ($generated@@228 ($generated@@199 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@219 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@218 $generated@@580)) (= ($generated@@217 $generated@@579) 0)) (= $generated@@579 ($generated@@216 $generated@@580))))
 :pattern ( ($generated@@217 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@82 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@233 ($generated@@88 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@233 $generated@@581) ($generated ($generated@@87 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@233 ($generated@@88 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@586) $generated@@2)) ($generated@@80 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@80 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@3)) ($generated@@80 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@4)) ($generated@@80 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@391)) ($generated@@80 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@159)) ($generated@@80 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@218 $generated@@159)) (= (type $generated@@596) $generated@@70)) (= ($generated@@145 $generated@@595 ($generated@@433 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@217 $generated@@595))) ($generated@@180 ($generated@@434 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@434 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@433 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@218 $generated@@159)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@217 $generated@@599))) (< ($generated@@472 ($generated@@278 $generated@@150 ($generated@@434 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@472 ($generated@@278 $generated@@150 ($generated@@434 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@241 $generated@@159 $generated@@159)) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@145 $generated@@601 ($generated@@348 $generated@@602 $generated@@603))) (and (and ($generated@@145 ($generated@@239 $generated@@601) ($generated@@189 $generated@@602)) ($generated@@145 ($generated@@291 $generated@@601) ($generated@@189 $generated@@603))) ($generated@@145 ($generated@@322 $generated@@601) ($generated@@189 ($generated@@149 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@145 $generated@@601 ($generated@@348 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@259 $generated@@159 $generated@@159)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@145 $generated@@604 ($generated@@356 $generated@@605 $generated@@606))) (and (and ($generated@@145 ($generated@@257 $generated@@604) ($generated@@194 $generated@@605)) ($generated@@145 ($generated@@302 $generated@@604) ($generated@@194 $generated@@606))) ($generated@@145 ($generated@@330 $generated@@604) ($generated@@194 ($generated@@149 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@356 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@145 $generated@@607 $generated@@46))
 :pattern ( ($generated@@145 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@145 $generated@@608 $generated@@47))
 :pattern ( ($generated@@145 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@145 $generated@@609 $generated@@44))
 :pattern ( ($generated@@145 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@391) ($generated@@145 $generated@@610 $generated@@45))
 :pattern ( ($generated@@145 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@159) ($generated@@145 $generated@@611 $generated@@48))
 :pattern ( ($generated@@145 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 (T@U) Bool)
(declare-fun $generated@@614 () T@U)
(assert  (and (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@615  (=> (= (ControlFlow 0 2) (- 0 3)) false)))
(let (($generated@@616  (=> (and ($generated@@203 $generated@@612) ($generated@@613 $generated@@612)) (=> (and (and (not (= $generated@@614 $generated@@139)) (and ($generated@@145 $generated@@614 $generated@@176) ($generated@@80 $generated@@614 $generated@@176 $generated@@612))) (and (= 1 $generated@@224) (= (ControlFlow 0 4) 2))) $generated@@615))))
$generated@@616)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true))) (=> (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 (T@U Int) Bool)
(declare-fun $generated@@420 (T@U Int) Bool)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@533 (T@U Int) Bool)
(declare-fun $generated@@536 (T@U Int) Bool)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@159)) (= (type $generated@@266) $generated@@159)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@150) (= ($generated@@148 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@159) (= (type $generated@@273) $generated@@159)) (= $generated@@271 ($generated@@235 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@159)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@82 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@85 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@82 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@87 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@82 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@82 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (= ($generated@@167 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@87 $generated@@329 $generated@@331))) (<= ($generated ($generated@@87 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@87 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@167 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@159) ($generated@@236 $generated@@335 $generated@@138)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@83 $generated@@335) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@335 $generated@@138))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@159) ($generated@@236 $generated@@336 $generated@@164)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@336)) $generated@@336) ($generated@@145 ($generated@@332 $generated@@83 $generated@@336) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@164))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@159) ($generated@@236 $generated@@337 $generated@@142)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@332 $generated@@83 $generated@@337) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@337 $generated@@142))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@236 $generated@@338 $generated@@232)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@332 $generated@@83 $generated@@338) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@338 $generated@@232))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@83) (= ($generated@@145 $generated@@339 $generated@@164)  (and ($generated@@145 $generated@@339 $generated@@138) (not (= $generated@@339 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@339 $generated@@164))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@83) (= ($generated@@145 $generated@@340 $generated@@232)  (and ($generated@@145 $generated@@340 $generated@@142) (not (= $generated@@340 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@340 $generated@@232))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(let (($generated@@343 ($generated@@296 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@295 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@294 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@293 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@297 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@297 (type $generated@@348))))
(let (($generated@@350 ($generated@@296 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@295 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@294 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@87 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(let (($generated@@354 ($generated@@314 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@313 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@312 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@311 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@82 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(let (($generated@@361 ($generated@@314 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@313 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@312 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@364) $generated@@70)) (= ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@363 $generated@@365)))) ($generated@@236 $generated@@365 $generated@@364))
 :pattern ( ($generated@@87 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@262 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@262 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@87 ($generated@@288 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@87 ($generated@@288 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@297 (type $generated@@379))))
(let (($generated@@381 ($generated@@296 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@82 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383)))) (= ($generated@@87 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@315 (type $generated@@387))))
(let (($generated@@389 ($generated@@314 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@391) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@296 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@295 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@87 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@392) $generated@@396))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@87 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@314 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@313 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@70)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))) (and ($generated@@262 ($generated@@87 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@262 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert  (=> (<= 1 $generated@@418) (forall (($generated@@421 T@U) ($generated@@422 Int) ) (!  (=> (= (type $generated@@421) $generated@@83) (=> (and (not (= $generated@@421 $generated@@139)) ($generated@@145 $generated@@421 $generated@@232)) (= ($generated@@419 $generated@@421 $generated@@422) ($generated@@420 $generated@@421 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421 $generated@@422) ($generated@@145 $generated@@421 $generated@@232))
 :pattern ( ($generated@@419 $generated@@421 $generated@@422) ($generated@@420 $generated@@421 $generated@@422))
))))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@315 (type $generated@@425))))
(let (($generated@@427 ($generated@@314 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@313 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@312 $generated@@427 $generated@@426)) (= ($generated@@311 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@311 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@315 (type $generated@@428))))
(let (($generated@@430 ($generated@@314 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@313 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@312 $generated@@430 $generated@@429)) (= ($generated@@356 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@356 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@315 (type $generated@@431))))
(let (($generated@@433 ($generated@@314 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@313 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@312 $generated@@433 $generated@@432)) (= ($generated@@384 $generated@@431) ($generated@@423 $generated@@159))))))
 :pattern ( ($generated@@384 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@297 (type $generated@@434))))
(let (($generated@@436 ($generated@@296 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@295 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@294 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@376 $generated@@434) ($generated@@282 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@376 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@315 (type $generated@@439))))
(let (($generated@@441 ($generated@@314 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@313 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@312 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@159) (= (type $generated@@443) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@439) ($generated@@282 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@384 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@236 $generated@@444 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@332 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@236 $generated@@445 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@332 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@236 $generated@@446 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@332 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@332 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@70) (= ($generated@@236 ($generated@@282 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@236 ($generated@@282 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@85 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@2)) (<= 0 ($generated@@287 $generated@@451))))
 :pattern ( ($generated@@287 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@277 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@276 $generated@@454)) (<= 0 ($generated@@275 $generated@@453))))
 :pattern ( ($generated@@275 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@402 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@402 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@402 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@78 ($generated@@402 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@410 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@410 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@159) (= (type $generated@@476) $generated@@159)) (= ($generated@@268 ($generated@@235 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@149 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@149 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@159) (= (type $generated@@486) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@235 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@277 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@276 $generated@@159)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@275 $generated@@495))) ($generated@@262 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@81 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@81 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@245 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@245 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@250 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@250 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@166 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@166 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@332 $generated@@518 ($generated@@282 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@282 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) $generated@@70)) (= ($generated@@145 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@519) $generated@@522))) (and ($generated@@236 ($generated@@87 ($generated@@377 $generated@@519) $generated@@522) $generated@@521) ($generated@@236 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@519) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@145 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@410 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@523) $generated@@526))) (and ($generated@@236 ($generated@@87 ($generated@@385 $generated@@523) $generated@@526) $generated@@525) ($generated@@236 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@410 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@159)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@235 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@235 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@159)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@235 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert  (=> (<= 0 $generated@@418) (forall (($generated@@534 T@U) ($generated@@535 Int) ) (!  (=> (and (= (type $generated@@534) $generated@@83) (or ($generated@@533 $generated@@534 $generated@@535) (and (not (= 0 $generated@@418)) (and (not (= $generated@@534 $generated@@139)) ($generated@@145 $generated@@534 $generated@@232))))) true)
 :pattern ( ($generated@@420 $generated@@534 $generated@@535))
))))
(assert  (=> (<= 1 $generated@@418) (forall (($generated@@537 T@U) ($generated@@538 Int) ) (!  (=> (and (= (type $generated@@537) $generated@@83) (or ($generated@@536 $generated@@537 $generated@@538) (and (not (= 1 $generated@@418)) (and (not (= $generated@@537 $generated@@139)) ($generated@@145 $generated@@537 $generated@@164))))) true)
 :pattern ( ($generated@@419 $generated@@537 $generated@@538))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@159) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@70)) ($generated@@236 $generated@@539 ($generated@@402 $generated@@540 $generated@@541))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@539)) $generated@@539) ($generated@@145 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@539) ($generated@@402 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@236 $generated@@539 ($generated@@402 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@159) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) ($generated@@236 $generated@@542 ($generated@@410 $generated@@543 $generated@@544))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@542)) $generated@@542) ($generated@@145 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@542) ($generated@@410 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@236 $generated@@542 ($generated@@410 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@159)) ($generated@@236 $generated@@547 ($generated@@149 $generated@@545 $generated@@546))) (and (= ($generated@@282 ($generated@@332 $generated@@150 $generated@@547)) $generated@@547) ($generated@@145 ($generated@@332 $generated@@150 $generated@@547) ($generated@@149 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@236 $generated@@547 ($generated@@149 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@87 ($generated@@423 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@75)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@70) (= (type $generated@@553) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@149 $generated@@552 $generated@@553)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@150) (= ($generated@@527 ($generated@@282 $generated@@554)) ($generated@@528 $generated@@554)))
 :pattern ( ($generated@@527 ($generated@@282 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@159) ($generated@@236 $generated@@555 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@555)) $generated@@555) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@555) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@555 ($generated@@81 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@236 $generated@@556 ($generated@@245 $generated@@557))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@556) ($generated@@245 $generated@@557))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@245 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@159) (= (type $generated@@559) $generated@@70)) ($generated@@236 $generated@@558 ($generated@@250 $generated@@559))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@558) ($generated@@250 $generated@@559))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@250 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@236 $generated@@560 ($generated@@166 $generated@@561))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@560) ($generated@@166 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@560 ($generated@@166 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@236 $generated@@562 ($generated@@489 $generated@@563))) (and (= ($generated@@282 ($generated@@332 ($generated@@276 $generated@@159) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@332 ($generated@@276 $generated@@159) $generated@@562) ($generated@@489 $generated@@563))))
 :pattern ( ($generated@@236 $generated@@562 ($generated@@489 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@83) (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@564 $generated@@139)) ($generated@@80 $generated@@564 $generated@@142 $generated@@565))) ($generated@@80 $generated@@564 $generated@@164 $generated@@565))
 :pattern ( ($generated@@80 $generated@@564 $generated@@142 $generated@@565))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@550 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@550 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@550 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@550 $generated@@232) $generated@@69))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@566 ($generated@@166 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@566 $generated@@569)))) ($generated@@262 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@87 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@166 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@83) (= ($generated@@145 $generated@@570 $generated@@138)  (or (= $generated@@570 $generated@@139) ($generated@@147 ($generated@@171 $generated@@570)))))
 :pattern ( ($generated@@145 $generated@@570 $generated@@138))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@573) (and ($generated@@148 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@70) ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@262 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@262 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@577) (and ($generated@@148 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@262 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@262 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@159) (= (type $generated@@580) $generated@@159)) (= ($generated@@235 ($generated@@257 $generated@@579) ($generated@@257 $generated@@580)) ($generated@@257 ($generated@@235 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@579) ($generated@@257 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@255 $generated@@581))) ($generated@@257 ($generated@@282 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@255 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@582)) ($generated@@257 ($generated@@282 $generated@@582)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@277 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@276 $generated@@584)) (= ($generated@@275 $generated@@583) 0)) (= $generated@@583 ($generated@@274 $generated@@584))))
 :pattern ( ($generated@@275 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@82 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@287 ($generated@@88 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@287 $generated@@585) ($generated ($generated@@87 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@287 ($generated@@88 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@2)) ($generated@@80 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@3)) ($generated@@80 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@4)) ($generated@@80 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@447)) ($generated@@80 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@159)) ($generated@@80 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@276 $generated@@159)) (= (type $generated@@600) $generated@@70)) (= ($generated@@145 $generated@@599 ($generated@@489 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@275 $generated@@599))) ($generated@@236 ($generated@@490 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@490 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@145 $generated@@599 ($generated@@489 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@276 $generated@@159)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@275 $generated@@603))) (< ($generated@@528 ($generated@@332 $generated@@150 ($generated@@490 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@528 ($generated@@332 $generated@@150 ($generated@@490 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) $generated@@70)) ($generated@@145 $generated@@605 ($generated@@402 $generated@@606 $generated@@607))) (and (and ($generated@@145 ($generated@@293 $generated@@605) ($generated@@245 $generated@@606)) ($generated@@145 ($generated@@345 $generated@@605) ($generated@@245 $generated@@607))) ($generated@@145 ($generated@@376 $generated@@605) ($generated@@245 ($generated@@149 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@402 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) ($generated@@145 $generated@@608 ($generated@@410 $generated@@609 $generated@@610))) (and (and ($generated@@145 ($generated@@311 $generated@@608) ($generated@@250 $generated@@609)) ($generated@@145 ($generated@@356 $generated@@608) ($generated@@250 $generated@@610))) ($generated@@145 ($generated@@384 $generated@@608) ($generated@@250 ($generated@@149 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@145 $generated@@608 ($generated@@410 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@145 $generated@@611 $generated@@46))
 :pattern ( ($generated@@145 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@145 $generated@@612 $generated@@47))
 :pattern ( ($generated@@145 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@145 $generated@@613 $generated@@44))
 :pattern ( ($generated@@145 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@447) ($generated@@145 $generated@@614 $generated@@45))
 :pattern ( ($generated@@145 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@159) ($generated@@145 $generated@@615 $generated@@48))
 :pattern ( ($generated@@145 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () T@U)
(assert  (and (and (= (type $generated@@617) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@620) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@621  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@616 ($generated@@255 5)) (=> (= $generated@@616 ($generated@@255 5)) true))) (=> (and (<= $generated@@616 ($generated@@255 5)) (=> (= $generated@@616 ($generated@@255 5)) true)) (=> (and (= $generated@@617 ($generated@@175 $generated@@139 $generated@@618 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@622 T@T) )  (=> false false)))))))
(let (($generated@@623  (=> (and ($generated@@261 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (not (= $generated@@620 $generated@@139)) (and ($generated@@145 $generated@@620 $generated@@232) ($generated@@80 $generated@@620 $generated@@232 $generated@@618))) (and (= 1 $generated@@418) (= (ControlFlow 0 4) 2))) $generated@@621))))
$generated@@623)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true))) (=> (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 ($generated@@259 5)) (=> (= $generated@@620 ($generated@@259 5)) true))) (=> (and (<= $generated@@620 ($generated@@259 5)) (=> (= $generated@@620 ($generated@@259 5)) true)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (and (= 1 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(assert  (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@625  (=> (= (ControlFlow 0 2) (- 0 3)) false)))
(let (($generated@@626  (=> (and ($generated@@265 $generated@@620) ($generated@@621 $generated@@620)) (=> (and (and (and (not (= $generated@@622 $generated@@143)) (and ($generated@@149 $generated@@622 $generated@@236) ($generated@@80 $generated@@622 $generated@@236 $generated@@620))) (<= ($generated@@259 0) $generated@@623)) (and (= 2 $generated@@624) (= (ControlFlow 0 4) 2))) $generated@@625))))
$generated@@626)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (< $generated@@620 (+ $generated@@620 1))) (=> (< $generated@@620 (+ $generated@@620 1)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true))) (=> (and (<= $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) true)) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false)))))))
(let (($generated@@628  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@625) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 (+ $generated@@620 1)) (=> (= $generated@@620 (+ $generated@@620 1)) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true))))) (=> (and (<= $generated@@620 (+ $generated@@620 1)) (=> (= $generated@@620 (+ $generated@@620 1)) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@626) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (=> $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) (and (<= (+ $generated@@621 1) $generated@@621) (=> (= (+ $generated@@621 1) $generated@@621) true))))) (=> (and (=> $generated@@620 $generated@@620) (=> (= $generated@@620 $generated@@620) (and (<= (+ $generated@@621 1) $generated@@621) (=> (= (+ $generated@@621 1) $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@621)) (and (= 2 $generated@@626) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@621) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (not $generated@@620) $generated@@620)) (=> (and (not $generated@@620) $generated@@620) (=> (and (= $generated@@621 ($generated@@179 $generated@@143 $generated@@622 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and (not (= $generated@@624 $generated@@143)) (and ($generated@@149 $generated@@624 $generated@@236) ($generated@@80 $generated@@624 $generated@@236 $generated@@622))) (<= ($generated@@259 0) $generated@@625)) (and (= 2 $generated@@626) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (=> $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 true)))) (=> (= $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 true)))) (and (<= $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true))))) (=> (and (=> $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 true)))) (=> (= $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 true)))) (and (<= $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@621)) (and (= 2 $generated@@626) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (=> $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 false)))) (=> (= $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 false)))) (and (<= $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true))))) (=> (and (=> $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 false)))) (=> (= $generated@@620 ($generated@@0 ($generated@@261 ($generated@@11 false)))) (and (<= $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@621)) (and (= 2 $generated@@626) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (=> (< $generated@@620 100) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@620 ($generated@@259 120)) (=> (= $generated@@620 ($generated@@259 120)) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true))))) (=> (and (<= $generated@@620 ($generated@@259 120)) (=> (= $generated@@620 ($generated@@259 120)) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false))))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@626) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (=> (< $generated@@620 100) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@620 105)) (=> (< $generated@@620 105) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@259 120) ($generated@@259 120)) (=> (= ($generated@@259 120) ($generated@@259 120)) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true))))) (=> (and (<= ($generated@@259 120) ($generated@@259 120)) (=> (= ($generated@@259 120) ($generated@@259 120)) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false))))))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@626) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@240 $generated@@559 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@249 $generated@@561))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@249 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@170 $generated@@565))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@564) ($generated@@170 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@170 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@240 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@143)) ($generated@@80 $generated@@568 $generated@@146 $generated@@569))) ($generated@@80 $generated@@568 $generated@@168 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@146 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@170 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@149 $generated@@574 $generated@@142)  (or (= $generated@@574 $generated@@143) ($generated@@151 ($generated@@175 $generated@@574)))))
 :pattern ( ($generated@@149 $generated@@574 $generated@@142))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@577) (and ($generated@@152 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@153 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)) ($generated@@261 ($generated@@239 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@583) ($generated@@261 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@586)) ($generated@@261 ($generated@@286 $generated@@586)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@281 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@280 $generated@@588)) (= ($generated@@279 $generated@@587) 0)) (= $generated@@587 ($generated@@278 $generated@@588))))
 :pattern ( ($generated@@279 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@82 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@299 $generated@@589) ($generated ($generated@@87 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@2)) ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@3)) ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@4)) ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@457)) ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@163)) ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@280 $generated@@163)) (= (type $generated@@604) $generated@@70)) (= ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@279 $generated@@603))) ($generated@@240 ($generated@@500 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@500 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@499 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@607))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@305 $generated@@609) ($generated@@249 $generated@@610)) ($generated@@149 ($generated@@357 $generated@@609) ($generated@@249 $generated@@611))) ($generated@@149 ($generated@@388 $generated@@609) ($generated@@249 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@414 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@323 $generated@@612) ($generated@@254 $generated@@613)) ($generated@@149 ($generated@@368 $generated@@612) ($generated@@254 $generated@@614))) ($generated@@149 ($generated@@396 $generated@@612) ($generated@@254 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@422 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@149 $generated@@615 $generated@@46))
 :pattern ( ($generated@@149 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@149 $generated@@616 $generated@@47))
 :pattern ( ($generated@@149 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@149 $generated@@617 $generated@@44))
 :pattern ( ($generated@@149 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@457) ($generated@@149 $generated@@618 $generated@@45))
 :pattern ( ($generated@@149 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@163) ($generated@@149 $generated@@619 $generated@@48))
 :pattern ( ($generated@@149 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@622) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (=> (< $generated@@620 100) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@620 100)) (=> (< $generated@@620 100) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@259 120) $generated@@620) (=> (= ($generated@@259 120) $generated@@620) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true))))) (=> (and (<= ($generated@@259 120) $generated@@620) (=> (= ($generated@@259 120) $generated@@620) (and (=> $generated@@621 $generated@@621) (=> (= $generated@@621 $generated@@621) true)))) (=> (and (= $generated@@622 ($generated@@179 $generated@@143 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false))))))))))
(let (($generated@@629  (=> (and ($generated@@265 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (and (not (= $generated@@625 $generated@@143)) (and ($generated@@149 $generated@@625 $generated@@236) ($generated@@80 $generated@@625 $generated@@236 $generated@@623))) (<= ($generated@@259 0) $generated@@620)) (and (= 2 $generated@@626) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@163)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@154) (= ($generated@@152 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@154) ($generated@@152 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@163) (= (type $generated@@275) $generated@@163)) (= $generated@@273 ($generated@@239 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@163)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@291) $generated@@163)) (= (type $generated@@292) $generated@@70)) ($generated@@138 $generated@@289 $generated@@290)) ($generated@@264 $generated@@291 $generated@@292 $generated@@289)) ($generated@@264 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@138 $generated@@289 $generated@@290) ($generated@@264 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@296) $generated@@70)) ($generated@@138 $generated@@293 $generated@@294)) ($generated@@80 $generated@@295 $generated@@296 $generated@@293)) ($generated@@80 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@138 $generated@@293 $generated@@294) ($generated@@80 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@82 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@85 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@82 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@87 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@82 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@85 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@82 $generated@@340 $generated@@2)) (= ($generated@@171 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@87 $generated@@339 $generated@@341))) (<= ($generated ($generated@@87 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@87 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@171 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@163) ($generated@@240 $generated@@345 $generated@@142)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@342 $generated@@83 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@163) ($generated@@240 $generated@@346 $generated@@168)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@342 $generated@@83 $generated@@346) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@346 $generated@@168))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@146)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@342 $generated@@83 $generated@@347) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@146))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@236)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@342 $generated@@83 $generated@@348) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@236))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@149 $generated@@349 $generated@@168)  (and ($generated@@149 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@349 $generated@@168))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@83) (= ($generated@@149 $generated@@350 $generated@@236)  (and ($generated@@149 $generated@@350 $generated@@146) (not (= $generated@@350 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(let (($generated@@353 ($generated@@306 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@305 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@304 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@303 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@82 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@307 (type $generated@@358))))
(let (($generated@@360 ($generated@@306 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@305 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@304 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(let (($generated@@364 ($generated@@324 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@323 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@322 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(let (($generated@@371 ($generated@@324 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@323 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@322 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@70)) (= ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@87 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@87 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@87 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@307 (type $generated@@389))))
(let (($generated@@391 ($generated@@306 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@393) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@325 (type $generated@@397))))
(let (($generated@@399 ($generated@@324 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@401) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@306 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@305 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@324 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@323 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@428 $generated@@430))) (and ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))) ($generated@@138 $generated@@428 $generated@@430))
 :pattern ( ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@321 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@321 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@366 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@366 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@325 (type $generated@@439))))
(let (($generated@@441 ($generated@@324 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@323 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@322 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@163))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@307 (type $generated@@442))))
(let (($generated@@444 ($generated@@306 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@305 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@304 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@163) (= (type $generated@@446) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@442) ($generated@@284 ($generated@@239 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@325 (type $generated@@447))))
(let (($generated@@449 ($generated@@324 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@323 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@322 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@163) (= (type $generated@@451) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@239 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@240 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@342 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@163) ($generated@@240 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@342 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@342 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@342 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@342 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@342 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@342 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@240 ($generated@@284 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@240 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@279 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@278 $generated@@462)) (<= 0 ($generated@@277 $generated@@461))))
 :pattern ( ($generated@@277 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@163) (= (type $generated@@484) $generated@@163)) (= ($generated@@270 ($generated@@239 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@153 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@153 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@153 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@163) (= (type $generated@@494) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@279 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@278 $generated@@163)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@277 $generated@@503))) ($generated@@264 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@81 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@81 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@249 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@249 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@254 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@170 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@170 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@342 $generated@@526 ($generated@@284 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@284 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@87 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))) (and ($generated@@240 ($generated@@87 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@240 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@239 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@239 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541)) $generated@@541) ($generated@@149 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541) ($generated@@412 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544)) $generated@@544) ($generated@@149 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544) ($generated@@420 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@163)) ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@342 $generated@@154 $generated@@549)) $generated@@549) ($generated@@149 ($generated@@342 $generated@@154 $generated@@549) ($generated@@153 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@87 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@75)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@153 $generated@@554 $generated@@555)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@154) (= ($generated@@535 ($generated@@284 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) ($generated@@240 $generated@@557 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@557)) $generated@@557) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@557) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@81 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@70)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@170 $generated@@563))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562) ($generated@@170 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@170 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@497 $generated@@565))) (and (= ($generated@@284 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564) ($generated@@497 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@497 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@83) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@566 $generated@@143)) ($generated@@80 $generated@@566 $generated@@146 $generated@@567))) ($generated@@80 $generated@@566 $generated@@168 $generated@@567))
 :pattern ( ($generated@@80 $generated@@566 $generated@@146 $generated@@567))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@552 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@552 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@552 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@552 $generated@@236) $generated@@69))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@568 $generated@@571)))) ($generated@@264 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@87 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@83) (= ($generated@@149 $generated@@572 $generated@@142)  (or (= $generated@@572 $generated@@143) ($generated@@151 ($generated@@175 $generated@@572)))))
 :pattern ( ($generated@@149 $generated@@572 $generated@@142))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@575) (and ($generated@@152 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@579) (and ($generated@@152 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@163)) (= ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)) ($generated@@259 ($generated@@239 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@284 ($generated@@259 $generated@@583)) ($generated@@259 ($generated@@284 $generated@@583)))
 :pattern ( ($generated@@284 ($generated@@259 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@279 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@278 $generated@@585)) (= ($generated@@277 $generated@@584) 0)) (= $generated@@584 ($generated@@276 $generated@@585))))
 :pattern ( ($generated@@277 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@297 $generated@@586) ($generated ($generated@@87 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@2)) ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@3)) ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@4)) ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@455)) ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@163)) ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@278 $generated@@163)) (= (type $generated@@601) $generated@@70)) (= ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@277 $generated@@600))) ($generated@@240 ($generated@@498 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@498 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@278 $generated@@163)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@277 $generated@@604))) (< ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608))) (and (and ($generated@@149 ($generated@@303 $generated@@606) ($generated@@249 $generated@@607)) ($generated@@149 ($generated@@355 $generated@@606) ($generated@@249 $generated@@608))) ($generated@@149 ($generated@@386 $generated@@606) ($generated@@249 ($generated@@153 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@321 $generated@@609) ($generated@@254 $generated@@610)) ($generated@@149 ($generated@@366 $generated@@609) ($generated@@254 $generated@@611))) ($generated@@149 ($generated@@394 $generated@@609) ($generated@@254 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@149 $generated@@612 $generated@@46))
 :pattern ( ($generated@@149 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@149 $generated@@613 $generated@@47))
 :pattern ( ($generated@@149 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@149 $generated@@614 $generated@@44))
 :pattern ( ($generated@@149 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@455) ($generated@@149 $generated@@615 $generated@@45))
 :pattern ( ($generated@@149 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) ($generated@@149 $generated@@616 $generated@@48))
 :pattern ( ($generated@@149 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(assert  (and (and (= (type $generated@@617) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@620) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@622  (=> (and (= $generated@@617 ($generated@@179 $generated@@143 $generated@@618 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@623 T@T) )  (=> false false)))))
(let (($generated@@624  (=> (and ($generated@@263 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (not (= $generated@@620 $generated@@143)) (and ($generated@@149 $generated@@620 $generated@@236) ($generated@@80 $generated@@620 $generated@@236 $generated@@618))) (and (= 1 $generated@@621) (= (ControlFlow 0 3) 2))) $generated@@622))))
$generated@@624)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@163)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@154) (= ($generated@@152 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@154) ($generated@@152 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@163) (= (type $generated@@275) $generated@@163)) (= $generated@@273 ($generated@@239 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@163)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@291) $generated@@163)) (= (type $generated@@292) $generated@@70)) ($generated@@138 $generated@@289 $generated@@290)) ($generated@@264 $generated@@291 $generated@@292 $generated@@289)) ($generated@@264 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@138 $generated@@289 $generated@@290) ($generated@@264 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@296) $generated@@70)) ($generated@@138 $generated@@293 $generated@@294)) ($generated@@80 $generated@@295 $generated@@296 $generated@@293)) ($generated@@80 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@138 $generated@@293 $generated@@294) ($generated@@80 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@82 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@85 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@82 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@87 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@82 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@85 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@82 $generated@@340 $generated@@2)) (= ($generated@@171 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@87 $generated@@339 $generated@@341))) (<= ($generated ($generated@@87 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@87 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@171 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@163) ($generated@@240 $generated@@345 $generated@@142)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@342 $generated@@83 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@163) ($generated@@240 $generated@@346 $generated@@168)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@342 $generated@@83 $generated@@346) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@346 $generated@@168))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@146)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@342 $generated@@83 $generated@@347) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@146))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@236)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@342 $generated@@83 $generated@@348) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@236))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@149 $generated@@349 $generated@@168)  (and ($generated@@149 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@349 $generated@@168))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@83) (= ($generated@@149 $generated@@350 $generated@@236)  (and ($generated@@149 $generated@@350 $generated@@146) (not (= $generated@@350 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(let (($generated@@353 ($generated@@306 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@305 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@304 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@303 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@82 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@307 (type $generated@@358))))
(let (($generated@@360 ($generated@@306 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@305 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@304 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(let (($generated@@364 ($generated@@324 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@323 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@322 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(let (($generated@@371 ($generated@@324 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@323 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@322 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@70)) (= ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@87 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@87 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@87 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@307 (type $generated@@389))))
(let (($generated@@391 ($generated@@306 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@393) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@325 (type $generated@@397))))
(let (($generated@@399 ($generated@@324 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@401) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@306 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@305 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@324 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@323 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@428 $generated@@430))) (and ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))) ($generated@@138 $generated@@428 $generated@@430))
 :pattern ( ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@321 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@321 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@366 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@366 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@325 (type $generated@@439))))
(let (($generated@@441 ($generated@@324 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@323 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@322 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@163))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@307 (type $generated@@442))))
(let (($generated@@444 ($generated@@306 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@305 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@304 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@163) (= (type $generated@@446) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@442) ($generated@@284 ($generated@@239 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@325 (type $generated@@447))))
(let (($generated@@449 ($generated@@324 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@323 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@322 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@163) (= (type $generated@@451) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@239 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@240 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@342 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@163) ($generated@@240 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@342 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@342 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@342 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@342 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@342 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@342 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@240 ($generated@@284 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@240 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@279 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@278 $generated@@462)) (<= 0 ($generated@@277 $generated@@461))))
 :pattern ( ($generated@@277 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@163) (= (type $generated@@484) $generated@@163)) (= ($generated@@270 ($generated@@239 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@153 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@153 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@153 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@163) (= (type $generated@@494) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@279 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@278 $generated@@163)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@277 $generated@@503))) ($generated@@264 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@81 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@81 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@249 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@249 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@254 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@170 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@170 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@342 $generated@@526 ($generated@@284 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@284 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@87 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))) (and ($generated@@240 ($generated@@87 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@240 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@239 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@239 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541)) $generated@@541) ($generated@@149 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541) ($generated@@412 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544)) $generated@@544) ($generated@@149 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544) ($generated@@420 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@163)) ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@342 $generated@@154 $generated@@549)) $generated@@549) ($generated@@149 ($generated@@342 $generated@@154 $generated@@549) ($generated@@153 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@87 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@75)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@153 $generated@@554 $generated@@555)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@154) (= ($generated@@535 ($generated@@284 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) ($generated@@240 $generated@@557 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@557)) $generated@@557) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@557) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@81 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@70)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@170 $generated@@563))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562) ($generated@@170 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@170 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@497 $generated@@565))) (and (= ($generated@@284 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564) ($generated@@497 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@497 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@83) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@566 $generated@@143)) ($generated@@80 $generated@@566 $generated@@146 $generated@@567))) ($generated@@80 $generated@@566 $generated@@168 $generated@@567))
 :pattern ( ($generated@@80 $generated@@566 $generated@@146 $generated@@567))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@552 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@552 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@552 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@552 $generated@@236) $generated@@69))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@568 $generated@@571)))) ($generated@@264 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@87 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@83) (= ($generated@@149 $generated@@572 $generated@@142)  (or (= $generated@@572 $generated@@143) ($generated@@151 ($generated@@175 $generated@@572)))))
 :pattern ( ($generated@@149 $generated@@572 $generated@@142))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@575) (and ($generated@@152 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@579) (and ($generated@@152 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@163)) (= ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)) ($generated@@259 ($generated@@239 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@284 ($generated@@259 $generated@@583)) ($generated@@259 ($generated@@284 $generated@@583)))
 :pattern ( ($generated@@284 ($generated@@259 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@279 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@278 $generated@@585)) (= ($generated@@277 $generated@@584) 0)) (= $generated@@584 ($generated@@276 $generated@@585))))
 :pattern ( ($generated@@277 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@297 $generated@@586) ($generated ($generated@@87 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@2)) ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@3)) ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@4)) ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@455)) ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@163)) ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@278 $generated@@163)) (= (type $generated@@601) $generated@@70)) (= ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@277 $generated@@600))) ($generated@@240 ($generated@@498 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@498 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@278 $generated@@163)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@277 $generated@@604))) (< ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608))) (and (and ($generated@@149 ($generated@@303 $generated@@606) ($generated@@249 $generated@@607)) ($generated@@149 ($generated@@355 $generated@@606) ($generated@@249 $generated@@608))) ($generated@@149 ($generated@@386 $generated@@606) ($generated@@249 ($generated@@153 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@321 $generated@@609) ($generated@@254 $generated@@610)) ($generated@@149 ($generated@@366 $generated@@609) ($generated@@254 $generated@@611))) ($generated@@149 ($generated@@394 $generated@@609) ($generated@@254 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@149 $generated@@612 $generated@@46))
 :pattern ( ($generated@@149 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@149 $generated@@613 $generated@@47))
 :pattern ( ($generated@@149 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@149 $generated@@614 $generated@@44))
 :pattern ( ($generated@@149 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@455) ($generated@@149 $generated@@615 $generated@@45))
 :pattern ( ($generated@@149 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) ($generated@@149 $generated@@616 $generated@@48))
 :pattern ( ($generated@@149 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(assert  (and (and (= (type $generated@@617) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@620) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@622  (=> (and (= $generated@@617 ($generated@@179 $generated@@143 $generated@@618 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@623 T@T) )  (=> false false)))))
(let (($generated@@624  (=> (and ($generated@@263 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (not (= $generated@@620 $generated@@143)) (and ($generated@@149 $generated@@620 $generated@@236) ($generated@@80 $generated@@620 $generated@@236 $generated@@618))) (and (= 1 $generated@@621) (= (ControlFlow 0 3) 2))) $generated@@622))))
$generated@@624)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
