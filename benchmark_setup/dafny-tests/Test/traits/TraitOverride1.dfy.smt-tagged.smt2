(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 (T@U Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@239 (T@U Int) Bool)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@459 (T@U Int) Int)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@542 (T@U Int) Bool)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@237 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@242 T@U) ($generated@@243 Int) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (or ($generated@@239 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@242 $generated@@139)) ($generated@@145 $generated@@242 $generated@@232))))) (= ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@238 2)))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@150)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@159)) (= (type $generated@@251) $generated@@159)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) (= (type $generated@@253) $generated@@150)) (= ($generated@@156 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@156 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@238 $generated@@264) $generated@@264)
 :pattern ( ($generated@@238 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@237 $generated@@265) $generated@@265)
 :pattern ( ($generated@@237 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@244 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@159)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@167 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@167 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@245 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@245 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@245 $generated@@341 $generated@@164)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@164)))
 :pattern ( ($generated@@245 $generated@@341 $generated@@164))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@245 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@245 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@159) ($generated@@245 $generated@@343 $generated@@232)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@232)))
 :pattern ( ($generated@@245 $generated@@343 $generated@@232))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@164)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@164))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@232)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@232))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@245 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@371 T@U) ($generated@@372 Int) ) (!  (=> (and (= (type $generated@@371) $generated@@83) (or ($generated@@239 $generated@@371 $generated@@372) (and (not (= 0 $generated@@235)) (and (not (= $generated@@371 $generated@@139)) ($generated@@145 $generated@@371 $generated@@232))))) (= ($generated@@236 $generated@@371 $generated@@372) ($generated@@238 2)))
 :pattern ( ($generated@@236 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@254 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@159) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@267 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@254 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@259 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@159) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@267 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@259 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@293 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@302 (type $generated@@386))))
(let (($generated@@388 ($generated@@301 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@390) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@389) ($generated@@157 ($generated@@337 $generated@@150 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@157 ($generated@@337 $generated@@150 $generated@@390))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@320 (type $generated@@394))))
(let (($generated@@396 ($generated@@319 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@397) ($generated@@157 ($generated@@337 $generated@@150 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@157 ($generated@@337 $generated@@150 $generated@@398))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@301 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@300 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@319 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@318 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@412) $generated@@416))) (and ($generated@@267 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@267 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@320 (type $generated@@427))))
(let (($generated@@429 ($generated@@319 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@318 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@317 $generated@@429 $generated@@428)) (= ($generated@@316 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@316 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@320 (type $generated@@430))))
(let (($generated@@432 ($generated@@319 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@318 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@317 $generated@@432 $generated@@431)) (= ($generated@@361 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@361 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@320 (type $generated@@433))))
(let (($generated@@435 ($generated@@319 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@318 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@317 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@159))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@302 (type $generated@@436))))
(let (($generated@@438 ($generated@@301 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@300 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@299 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@159) (= (type $generated@@440) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@287 ($generated@@244 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@320 (type $generated@@441))))
(let (($generated@@443 ($generated@@319 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@318 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@317 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@159) (= (type $generated@@445) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@287 ($generated@@244 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@245 $generated@@446 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@245 $generated@@447 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@337 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@245 $generated@@448 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@245 $generated@@450 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@449 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@337 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@245 ($generated@@287 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@245 ($generated@@287 $generated@@451) $generated@@452))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@453 T@U) ($generated@@454 Int) ) (!  (=> (and (= (type $generated@@453) $generated@@83) (or ($generated@@239 $generated@@453 ($generated@@238 $generated@@454)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@453 $generated@@139)) ($generated@@145 $generated@@453 $generated@@232))))) (= ($generated@@236 $generated@@453 ($generated@@238 $generated@@454)) ($generated@@238 2)))
 :weight 3
 :pattern ( ($generated@@236 $generated@@453 ($generated@@238 $generated@@454)))
))))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@292 $generated@@455))))
 :pattern ( ($generated@@292 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@282 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@281 $generated@@458)) (<= 0 ($generated@@280 $generated@@457))))
 :pattern ( ($generated@@280 $generated@@457))
)))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@460 T@U) ($generated@@461 Int) ) (!  (=> (= (type $generated@@460) $generated@@83) (=> (and (not (= $generated@@460 $generated@@139)) ($generated@@145 $generated@@460 $generated@@232)) (= ($generated@@459 $generated@@460 $generated@@461) ($generated@@236 $generated@@460 $generated@@461))))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461) ($generated@@145 $generated@@460 $generated@@232))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461) ($generated@@236 $generated@@460 $generated@@461))
))))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@417 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@417 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@159) (= (type $generated@@483) $generated@@159)) (= ($generated@@273 ($generated@@244 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@149 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@149 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@149 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@149 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@159) (= (type $generated@@493) $generated@@159)) (= ($generated@@157 ($generated@@244 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@244 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@159) (= (type $generated@@495) $generated@@159)) (= ($generated@@158 ($generated@@244 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@244 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@282 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@281 $generated@@159)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@280 $generated@@502))) ($generated@@267 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@81 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@81 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@254 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@254 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@259 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@259 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@259 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@166 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@166 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@337 $generated@@525 ($generated@@287 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@287 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) $generated@@70)) (= ($generated@@145 $generated@@526 ($generated@@409 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@526) $generated@@529))) (and ($generated@@245 ($generated@@87 ($generated@@384 $generated@@526) $generated@@529) $generated@@528) ($generated@@245 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@526) $generated@@529))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@145 $generated@@526 ($generated@@409 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@145 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@530) $generated@@533))) (and ($generated@@245 ($generated@@87 ($generated@@392 $generated@@530) $generated@@533) $generated@@532) ($generated@@245 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@145 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@159) (= (type $generated@@537) $generated@@159)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@244 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@244 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@159) (= (type $generated@@539) $generated@@159)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@244 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@244 $generated@@538 $generated@@539))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@540 T@U) ($generated@@541 Int) ) (!  (=> (and (= (type $generated@@540) $generated@@83) (or ($generated@@239 $generated@@540 $generated@@541) (and (not (= 0 $generated@@235)) (and (not (= $generated@@540 $generated@@139)) ($generated@@145 $generated@@540 $generated@@232))))) true)
 :pattern ( ($generated@@236 $generated@@540 $generated@@541))
))))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (!  (=> (and (= (type $generated@@543) $generated@@83) (or ($generated@@542 $generated@@543 $generated@@544) (and (not (= 1 $generated@@235)) (and (not (= $generated@@543 $generated@@139)) ($generated@@145 $generated@@543 $generated@@164))))) true)
 :pattern ( ($generated@@459 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) ($generated@@245 $generated@@545 ($generated@@409 $generated@@546 $generated@@547))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@545) ($generated@@409 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@245 $generated@@545 ($generated@@409 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@245 $generated@@548 ($generated@@417 $generated@@549 $generated@@550))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@548) ($generated@@417 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@159)) ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552))) (and (= ($generated@@287 ($generated@@337 $generated@@150 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@337 $generated@@150 $generated@@553) ($generated@@149 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@425 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@149 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@150) (= ($generated@@534 ($generated@@287 $generated@@560)) ($generated@@535 $generated@@560)))
 :pattern ( ($generated@@534 ($generated@@287 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) ($generated@@245 $generated@@561 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@245 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@159) (= (type $generated@@565) $generated@@70)) ($generated@@245 $generated@@564 ($generated@@259 $generated@@565))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@564) ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@259 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@70)) ($generated@@245 $generated@@566 ($generated@@166 $generated@@567))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@566) ($generated@@166 $generated@@567))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@166 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@70)) ($generated@@245 $generated@@568 ($generated@@496 $generated@@569))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@159) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@337 ($generated@@281 $generated@@159) $generated@@568) ($generated@@496 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 ($generated@@496 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@164 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@556 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@556 $generated@@232) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@145 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@147 ($generated@@171 $generated@@576)))))
 :pattern ( ($generated@@145 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@148 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@148 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@159) (= (type $generated@@586) $generated@@159)) (= ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)) ($generated@@237 ($generated@@244 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@238 $generated@@587))) ($generated@@237 ($generated@@287 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@238 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@287 ($generated@@237 $generated@@588)) ($generated@@237 ($generated@@287 $generated@@588)))
 :pattern ( ($generated@@287 ($generated@@237 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@282 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@281 $generated@@590)) (= ($generated@@280 $generated@@589) 0)) (= $generated@@589 ($generated@@279 $generated@@590))))
 :pattern ( ($generated@@280 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@292 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@292 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@449)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@159)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@281 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= ($generated@@145 $generated@@605 ($generated@@496 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@280 $generated@@605))) ($generated@@245 ($generated@@497 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@497 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@496 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@609))) (< ($generated@@535 ($generated@@337 $generated@@150 ($generated@@497 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@535 ($generated@@337 $generated@@150 ($generated@@497 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@145 $generated@@611 ($generated@@409 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@298 $generated@@611) ($generated@@254 $generated@@612)) ($generated@@145 ($generated@@350 $generated@@611) ($generated@@254 $generated@@613))) ($generated@@145 ($generated@@383 $generated@@611) ($generated@@254 ($generated@@149 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@409 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@145 $generated@@614 ($generated@@417 $generated@@615 $generated@@616))) (and (and ($generated@@145 ($generated@@316 $generated@@614) ($generated@@259 $generated@@615)) ($generated@@145 ($generated@@361 $generated@@614) ($generated@@259 $generated@@616))) ($generated@@145 ($generated@@391 $generated@@614) ($generated@@259 ($generated@@149 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@417 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@145 $generated@@617 $generated@@46))
 :pattern ( ($generated@@145 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@145 $generated@@618 $generated@@47))
 :pattern ( ($generated@@145 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@145 $generated@@619 $generated@@44))
 :pattern ( ($generated@@145 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@449) ($generated@@145 $generated@@620 $generated@@45))
 :pattern ( ($generated@@145 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@159) ($generated@@145 $generated@@621 $generated@@48))
 :pattern ( ($generated@@145 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (= (type $generated@@623) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (and (= $generated@@623 ($generated@@175 $generated@@139 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@266 $generated@@624) ($generated@@625 $generated@@624)) (=> (and (and (not (= $generated@@626 $generated@@139)) (and ($generated@@145 $generated@@626 $generated@@232) ($generated@@80 $generated@@626 $generated@@232 $generated@@624))) (and (= 1 $generated@@235) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@163)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@154) (= ($generated@@152 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@154) ($generated@@152 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@163) (= (type $generated@@275) $generated@@163)) (= $generated@@273 ($generated@@239 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@163)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@291) $generated@@163)) (= (type $generated@@292) $generated@@70)) ($generated@@138 $generated@@289 $generated@@290)) ($generated@@264 $generated@@291 $generated@@292 $generated@@289)) ($generated@@264 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@138 $generated@@289 $generated@@290) ($generated@@264 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@296) $generated@@70)) ($generated@@138 $generated@@293 $generated@@294)) ($generated@@80 $generated@@295 $generated@@296 $generated@@293)) ($generated@@80 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@138 $generated@@293 $generated@@294) ($generated@@80 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@82 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@85 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@82 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@87 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@82 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@85 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@82 $generated@@340 $generated@@2)) (= ($generated@@171 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@87 $generated@@339 $generated@@341))) (<= ($generated ($generated@@87 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@87 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@171 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@163) ($generated@@240 $generated@@345 $generated@@142)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@342 $generated@@83 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@163) ($generated@@240 $generated@@346 $generated@@168)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@342 $generated@@83 $generated@@346) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@346 $generated@@168))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@146)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@342 $generated@@83 $generated@@347) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@146))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@236)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@342 $generated@@83 $generated@@348) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@236))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@149 $generated@@349 $generated@@168)  (and ($generated@@149 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@349 $generated@@168))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@83) (= ($generated@@149 $generated@@350 $generated@@236)  (and ($generated@@149 $generated@@350 $generated@@146) (not (= $generated@@350 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(let (($generated@@353 ($generated@@306 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@305 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@304 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@303 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@82 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@307 (type $generated@@358))))
(let (($generated@@360 ($generated@@306 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@305 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@304 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(let (($generated@@364 ($generated@@324 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@323 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@322 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(let (($generated@@371 ($generated@@324 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@323 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@322 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@70)) (= ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@87 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@87 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@87 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@307 (type $generated@@389))))
(let (($generated@@391 ($generated@@306 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@393) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@325 (type $generated@@397))))
(let (($generated@@399 ($generated@@324 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@401) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@306 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@305 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@324 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@323 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@428 $generated@@430))) (and ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))) ($generated@@138 $generated@@428 $generated@@430))
 :pattern ( ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@321 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@321 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@366 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@366 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@325 (type $generated@@439))))
(let (($generated@@441 ($generated@@324 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@323 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@322 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@163))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@307 (type $generated@@442))))
(let (($generated@@444 ($generated@@306 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@305 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@304 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@163) (= (type $generated@@446) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@442) ($generated@@284 ($generated@@239 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@325 (type $generated@@447))))
(let (($generated@@449 ($generated@@324 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@323 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@322 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@163) (= (type $generated@@451) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@239 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@240 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@342 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@163) ($generated@@240 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@342 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@342 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@342 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@342 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@342 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@342 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@240 ($generated@@284 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@240 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@279 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@278 $generated@@462)) (<= 0 ($generated@@277 $generated@@461))))
 :pattern ( ($generated@@277 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@163) (= (type $generated@@484) $generated@@163)) (= ($generated@@270 ($generated@@239 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@153 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@153 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@153 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@163) (= (type $generated@@494) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@279 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@278 $generated@@163)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@277 $generated@@503))) ($generated@@264 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@81 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@81 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@249 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@249 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@254 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@170 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@170 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@342 $generated@@526 ($generated@@284 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@284 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@87 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))) (and ($generated@@240 ($generated@@87 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@240 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@239 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@239 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541)) $generated@@541) ($generated@@149 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541) ($generated@@412 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544)) $generated@@544) ($generated@@149 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544) ($generated@@420 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@163)) ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@342 $generated@@154 $generated@@549)) $generated@@549) ($generated@@149 ($generated@@342 $generated@@154 $generated@@549) ($generated@@153 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@87 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@75)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@153 $generated@@554 $generated@@555)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@154) (= ($generated@@535 ($generated@@284 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) ($generated@@240 $generated@@557 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@557)) $generated@@557) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@557) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@81 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@70)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@170 $generated@@563))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562) ($generated@@170 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@170 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@497 $generated@@565))) (and (= ($generated@@284 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564) ($generated@@497 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@497 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@83) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@566 $generated@@143)) ($generated@@80 $generated@@566 $generated@@146 $generated@@567))) ($generated@@80 $generated@@566 $generated@@168 $generated@@567))
 :pattern ( ($generated@@80 $generated@@566 $generated@@146 $generated@@567))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@552 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@552 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@552 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@552 $generated@@236) $generated@@69))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@568 $generated@@571)))) ($generated@@264 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@87 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@83) (= ($generated@@149 $generated@@572 $generated@@142)  (or (= $generated@@572 $generated@@143) ($generated@@151 ($generated@@175 $generated@@572)))))
 :pattern ( ($generated@@149 $generated@@572 $generated@@142))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@575) (and ($generated@@152 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@579) (and ($generated@@152 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@163)) (= ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)) ($generated@@259 ($generated@@239 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@284 ($generated@@259 $generated@@583)) ($generated@@259 ($generated@@284 $generated@@583)))
 :pattern ( ($generated@@284 ($generated@@259 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@279 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@278 $generated@@585)) (= ($generated@@277 $generated@@584) 0)) (= $generated@@584 ($generated@@276 $generated@@585))))
 :pattern ( ($generated@@277 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@297 $generated@@586) ($generated ($generated@@87 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@2)) ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@3)) ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@4)) ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@455)) ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@163)) ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@278 $generated@@163)) (= (type $generated@@601) $generated@@70)) (= ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@277 $generated@@600))) ($generated@@240 ($generated@@498 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@498 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@278 $generated@@163)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@277 $generated@@604))) (< ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608))) (and (and ($generated@@149 ($generated@@303 $generated@@606) ($generated@@249 $generated@@607)) ($generated@@149 ($generated@@355 $generated@@606) ($generated@@249 $generated@@608))) ($generated@@149 ($generated@@386 $generated@@606) ($generated@@249 ($generated@@153 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@321 $generated@@609) ($generated@@254 $generated@@610)) ($generated@@149 ($generated@@366 $generated@@609) ($generated@@254 $generated@@611))) ($generated@@149 ($generated@@394 $generated@@609) ($generated@@254 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@149 $generated@@612 $generated@@46))
 :pattern ( ($generated@@149 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@149 $generated@@613 $generated@@47))
 :pattern ( ($generated@@149 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@149 $generated@@614 $generated@@44))
 :pattern ( ($generated@@149 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@455) ($generated@@149 $generated@@615 $generated@@45))
 :pattern ( ($generated@@149 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) ($generated@@149 $generated@@616 $generated@@48))
 :pattern ( ($generated@@149 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(assert  (and (and (= (type $generated@@617) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@620) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@622  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@617 ($generated@@179 $generated@@143 $generated@@618 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@623 T@T) )  (=> false false))))))
(let (($generated@@624  (=> (and ($generated@@263 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (not (= $generated@@620 $generated@@143)) (and ($generated@@149 $generated@@620 $generated@@236) ($generated@@80 $generated@@620 $generated@@236 $generated@@618))) (and (= 2 $generated@@621) (= (ControlFlow 0 4) 2))) $generated@@622))))
$generated@@624)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U Int) Int)
(declare-fun $generated@@168 (T@U Int) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (= (type $generated@@169) $generated@@70))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@170 T@U) ($generated@@171 Int) ) (!  (=> (and (= (type $generated@@170) $generated@@83) (or ($generated@@168 $generated@@170 $generated@@171) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@170 $generated@@139)) ($generated@@145 $generated@@170 $generated@@169)) (> $generated@@171 10))))) (= ($generated@@167 $generated@@170 $generated@@171) $generated@@171))
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@70)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@176) $generated@@70)) ($generated@@145 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@145 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@83) (= ($generated@@145 $generated@@179 $generated@@142)  (or (= $generated@@179 $generated@@139) (= ($generated@@177 $generated@@179) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@179 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 16)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@83 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@73 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@83) (= (type $generated@@230) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@231) ($generated@@72 $generated@@4))) (= (type $generated@@233) $generated@@83)) (= (type $generated@@234) ($generated@@72 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@83) (= (type $generated@@237) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@236 $generated@@164 $generated@@237) ($generated@@80 $generated@@236 $generated@@138 $generated@@237)))
 :pattern ( ($generated@@80 $generated@@236 $generated@@164 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@83) (= (type $generated@@239) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@238 $generated@@169 $generated@@239) ($generated@@80 $generated@@238 $generated@@142 $generated@@239)))
 :pattern ( ($generated@@80 $generated@@238 $generated@@169 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@150)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@159)) (= (type $generated@@247) $generated@@159)) (= ($generated@@145 ($generated@@240 $generated@@246 $generated@@247) ($generated@@149 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@145 ($generated@@240 $generated@@246 $generated@@247) ($generated@@149 $generated@@244 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@150) (= (type $generated@@249) $generated@@150)) (= ($generated@@156 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@156 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@241 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@145 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@159) ($generated@@0 ($generated@@87 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@87 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@145 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@240 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@240 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@240 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@83) (or ($generated@@168 $generated@@287 ($generated@@260 $generated@@288)) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@287 $generated@@139)) ($generated@@145 $generated@@287 $generated@@169)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@288 10)))))))) (= ($generated@@167 $generated@@287 ($generated@@260 $generated@@288)) ($generated@@260 $generated@@288)))
 :weight 3
 :pattern ( ($generated@@167 $generated@@287 ($generated@@260 $generated@@288)))
))))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@289 T@U) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@289) $generated@@83) (or ($generated@@168 $generated@@289 $generated@@290) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@289 $generated@@139)) ($generated@@145 $generated@@289 $generated@@169)) (> $generated@@290 10))))) true)
 :pattern ( ($generated@@167 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@159)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@70) (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@80 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@267 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@82 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@85 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@82 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@87 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@82 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@82 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@85 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@82 $generated@@339 $generated@@2)) (= ($generated@@173 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@87 $generated@@338 $generated@@340))) (<= ($generated ($generated@@87 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@87 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@173 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@159) ($generated@@241 $generated@@344 $generated@@138)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@344)) $generated@@344) ($generated@@145 ($generated@@341 $generated@@83 $generated@@344) $generated@@138)))
 :pattern ( ($generated@@241 $generated@@344 $generated@@138))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@159) ($generated@@241 $generated@@345 $generated@@164)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@345)) $generated@@345) ($generated@@145 ($generated@@341 $generated@@83 $generated@@345) $generated@@164)))
 :pattern ( ($generated@@241 $generated@@345 $generated@@164))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@159) ($generated@@241 $generated@@346 $generated@@142)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@346)) $generated@@346) ($generated@@145 ($generated@@341 $generated@@83 $generated@@346) $generated@@142)))
 :pattern ( ($generated@@241 $generated@@346 $generated@@142))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@159) ($generated@@241 $generated@@347 $generated@@169)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@347)) $generated@@347) ($generated@@145 ($generated@@341 $generated@@83 $generated@@347) $generated@@169)))
 :pattern ( ($generated@@241 $generated@@347 $generated@@169))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@83) (= ($generated@@145 $generated@@348 $generated@@164)  (and ($generated@@145 $generated@@348 $generated@@138) (not (= $generated@@348 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@348 $generated@@164))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@145 $generated@@349 $generated@@169)  (and ($generated@@145 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@349 $generated@@169))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(let (($generated@@352 ($generated@@305 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@304 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@303 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@302 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@306 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@82 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@306 (type $generated@@357))))
(let (($generated@@359 ($generated@@305 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@304 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@303 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(let (($generated@@363 ($generated@@323 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@322 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@321 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@320 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@324 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@82 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@324 (type $generated@@368))))
(let (($generated@@370 ($generated@@323 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@322 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@321 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@373) $generated@@70)) (= ($generated@@145 $generated@@372 ($generated@@172 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@372 $generated@@374)))) ($generated@@241 $generated@@374 $generated@@373))
 :pattern ( ($generated@@87 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@145 $generated@@372 ($generated@@172 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@250 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@250 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@255 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@255 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@87 ($generated@@297 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@87 ($generated@@297 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@392) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392)))) (= ($generated@@87 ($generated@@386 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@392))))))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@400) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@87 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@87 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@70)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@267 ($generated@@87 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@267 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@267 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@267 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@82 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@324 (type $generated@@429))))
(let (($generated@@431 ($generated@@323 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@322 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@321 $generated@@431 $generated@@430)) (= ($generated@@320 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@320 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@324 (type $generated@@432))))
(let (($generated@@434 ($generated@@323 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@322 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@321 $generated@@434 $generated@@433)) (= ($generated@@365 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@365 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@324 (type $generated@@435))))
(let (($generated@@437 ($generated@@323 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@322 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@321 $generated@@437 $generated@@436)) (= ($generated@@393 $generated@@435) ($generated@@427 $generated@@159))))))
 :pattern ( ($generated@@393 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@306 (type $generated@@438))))
(let (($generated@@440 ($generated@@305 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@304 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@303 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@385 $generated@@438) ($generated@@291 ($generated@@240 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@324 (type $generated@@443))))
(let (($generated@@445 ($generated@@323 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@322 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@321 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@159) (= (type $generated@@447) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@443) ($generated@@291 ($generated@@240 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@393 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@241 $generated@@448 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@341 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@159) ($generated@@241 $generated@@449 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@341 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@241 $generated@@450 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@341 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@241 $generated@@452 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@451 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@341 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@70) (= ($generated@@241 ($generated@@291 $generated@@453) $generated@@454) ($generated@@145 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@241 ($generated@@291 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@296 $generated@@455))))
 :pattern ( ($generated@@296 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@282 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@281 $generated@@458)) (<= 0 ($generated@@280 $generated@@457))))
 :pattern ( ($generated@@280 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@411 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@411 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@78 ($generated@@411 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@273 ($generated@@240 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@149 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@149 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@159) (= (type $generated@@490) $generated@@159)) (= ($generated@@157 ($generated@@240 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@240 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@159) (= (type $generated@@492) $generated@@159)) (= ($generated@@158 ($generated@@240 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@240 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@282 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@281 $generated@@159)) (= (type $generated@@500) $generated@@70)) (= (type $generated@@501) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@280 $generated@@499))) ($generated@@267 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@81 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@81 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@250 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@250 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@255 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@255 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@255 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@172 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@172 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@172 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@341 $generated@@522 ($generated@@291 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@291 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))) (and ($generated@@241 ($generated@@87 ($generated@@386 $generated@@523) $generated@@526) $generated@@525) ($generated@@241 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))) (and ($generated@@241 ($generated@@87 ($generated@@394 $generated@@527) $generated@@530) $generated@@529) ($generated@@241 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@159)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@240 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@240 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@159)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@240 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@240 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) ($generated@@241 $generated@@537 ($generated@@411 $generated@@538 $generated@@539))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@537) ($generated@@411 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@241 $generated@@537 ($generated@@411 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@159) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@241 $generated@@540 ($generated@@419 $generated@@541 $generated@@542))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@540)) $generated@@540) ($generated@@145 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@540) ($generated@@419 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@540 ($generated@@419 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@159)) ($generated@@241 $generated@@545 ($generated@@149 $generated@@543 $generated@@544))) (and (= ($generated@@291 ($generated@@341 $generated@@150 $generated@@545)) $generated@@545) ($generated@@145 ($generated@@341 $generated@@150 $generated@@545) ($generated@@149 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@241 $generated@@545 ($generated@@149 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@87 ($generated@@427 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@87 ($generated@@427 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@75)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@70) (= (type $generated@@551) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@149 $generated@@550 $generated@@551)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@150) (= ($generated@@531 ($generated@@291 $generated@@552)) ($generated@@532 $generated@@552)))
 :pattern ( ($generated@@531 ($generated@@291 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@159) ($generated@@241 $generated@@553 ($generated@@81 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@553) ($generated@@81 0))))
 :pattern ( ($generated@@241 $generated@@553 ($generated@@81 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@241 $generated@@554 ($generated@@250 $generated@@555))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554) ($generated@@250 $generated@@555))))
 :pattern ( ($generated@@241 $generated@@554 ($generated@@250 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@241 $generated@@556 ($generated@@255 $generated@@557))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@556) ($generated@@255 $generated@@557))))
 :pattern ( ($generated@@241 $generated@@556 ($generated@@255 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@159) (= (type $generated@@559) $generated@@70)) ($generated@@241 $generated@@558 ($generated@@172 $generated@@559))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@558) ($generated@@172 $generated@@559))))
 :pattern ( ($generated@@241 $generated@@558 ($generated@@172 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@241 $generated@@560 ($generated@@493 $generated@@561))) (and (= ($generated@@291 ($generated@@341 ($generated@@281 $generated@@159) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@341 ($generated@@281 $generated@@159) $generated@@560) ($generated@@493 $generated@@561))))
 :pattern ( ($generated@@241 $generated@@560 ($generated@@493 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@83) (= (type $generated@@563) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@562 $generated@@139)) ($generated@@80 $generated@@562 $generated@@142 $generated@@563))) ($generated@@80 $generated@@562 $generated@@164 $generated@@563))
 :pattern ( ($generated@@80 $generated@@562 $generated@@142 $generated@@563))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@548 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@548 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@548 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@169) $generated@@66))
(assert (= ($generated@@548 $generated@@169) $generated@@69))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@564 ($generated@@172 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@564 $generated@@567)))) ($generated@@267 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@87 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@172 $generated@@565) $generated@@566))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (and (= (type $generated@@568) $generated@@83) (or ($generated@@168 ($generated@@262 $generated@@568) ($generated@@260 $generated@@569)) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@568 $generated@@139)) ($generated@@145 $generated@@568 $generated@@169)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@569 10)))))))) (= ($generated@@167 ($generated@@262 $generated@@568) ($generated@@260 $generated@@569)) ($generated@@260 $generated@@569)))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@262 $generated@@568) ($generated@@260 $generated@@569)))
))))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@83) (= ($generated@@145 $generated@@570 $generated@@138)  (or (= $generated@@570 $generated@@139) ($generated@@147 ($generated@@177 $generated@@570)))))
 :pattern ( ($generated@@145 $generated@@570 $generated@@138))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@573) (and ($generated@@148 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@70) ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@267 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@577) (and ($generated@@148 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@267 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@159) (= (type $generated@@580) $generated@@159)) (= ($generated@@240 ($generated@@262 $generated@@579) ($generated@@262 $generated@@580)) ($generated@@262 ($generated@@240 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@240 ($generated@@262 $generated@@579) ($generated@@262 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@260 $generated@@581))) ($generated@@262 ($generated@@291 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@260 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@291 ($generated@@262 $generated@@582)) ($generated@@262 ($generated@@291 $generated@@582)))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@282 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@281 $generated@@584)) (= ($generated@@280 $generated@@583) 0)) (= $generated@@583 ($generated@@279 $generated@@584))))
 :pattern ( ($generated@@280 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@82 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@296 ($generated@@88 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@296 $generated@@585) ($generated ($generated@@87 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@296 ($generated@@88 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@2)) ($generated@@80 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@3)) ($generated@@80 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@4)) ($generated@@80 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@451)) ($generated@@80 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@159)) ($generated@@80 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@281 $generated@@159)) (= (type $generated@@600) $generated@@70)) (= ($generated@@145 $generated@@599 ($generated@@493 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@280 $generated@@599))) ($generated@@241 ($generated@@494 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@494 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@145 $generated@@599 ($generated@@493 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@280 $generated@@603))) (< ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) $generated@@70)) ($generated@@145 $generated@@605 ($generated@@411 $generated@@606 $generated@@607))) (and (and ($generated@@145 ($generated@@302 $generated@@605) ($generated@@250 $generated@@606)) ($generated@@145 ($generated@@354 $generated@@605) ($generated@@250 $generated@@607))) ($generated@@145 ($generated@@385 $generated@@605) ($generated@@250 ($generated@@149 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@411 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) ($generated@@145 $generated@@608 ($generated@@419 $generated@@609 $generated@@610))) (and (and ($generated@@145 ($generated@@320 $generated@@608) ($generated@@255 $generated@@609)) ($generated@@145 ($generated@@365 $generated@@608) ($generated@@255 $generated@@610))) ($generated@@145 ($generated@@393 $generated@@608) ($generated@@255 ($generated@@149 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@145 $generated@@608 ($generated@@419 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@145 $generated@@611 $generated@@46))
 :pattern ( ($generated@@145 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@145 $generated@@612 $generated@@47))
 :pattern ( ($generated@@145 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@145 $generated@@613 $generated@@44))
 :pattern ( ($generated@@145 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@451) ($generated@@145 $generated@@614 $generated@@45))
 :pattern ( ($generated@@145 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@159) ($generated@@145 $generated@@615 $generated@@48))
 :pattern ( ($generated@@145 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (= (type $generated@@616) ($generated@@182 $generated@@83 $generated@@4)) (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@619) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@621  (=> (= $generated@@616 ($generated@@181 $generated@@139 $generated@@617 $generated@@60 false)) (=> (and (and (= $generated@@618 ($generated@@260 11)) ($generated@@80 $generated@@619 $generated@@142 $generated@@617)) (and ($generated@@80 ($generated@@8 $generated@@618) $generated@@46 $generated@@617) (= (ControlFlow 0 2) (- 0 1)))) (> $generated@@618 10)))))
(let (($generated@@622  (=> (and ($generated@@266 $generated@@617) ($generated@@620 $generated@@617)) (=> (and (and (not (= $generated@@619 $generated@@139)) (and ($generated@@145 $generated@@619 $generated@@169) ($generated@@80 $generated@@619 $generated@@169 $generated@@617))) (and (= 1 $generated@@166) (= (ControlFlow 0 3) 2))) $generated@@621))))
$generated@@622)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U Int) Int)
(declare-fun $generated@@168 (T@U Int) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@291 (T@U Int) Int)
(declare-fun $generated@@292 (T@U Int) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (= (type $generated@@169) $generated@@70))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@170 T@U) ($generated@@171 Int) ) (!  (=> (and (= (type $generated@@170) $generated@@83) (or ($generated@@168 $generated@@170 $generated@@171) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@170 $generated@@139)) ($generated@@145 $generated@@170 $generated@@169)) (> $generated@@171 10))))) (= ($generated@@167 $generated@@170 $generated@@171) $generated@@171))
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@70)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@176) $generated@@70)) ($generated@@145 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@145 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@83) (= ($generated@@145 $generated@@179 $generated@@142)  (or (= $generated@@179 $generated@@139) (= ($generated@@177 $generated@@179) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@179 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 16)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@83 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@73 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@83) (= (type $generated@@230) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@231) ($generated@@72 $generated@@4))) (= (type $generated@@233) $generated@@83)) (= (type $generated@@234) ($generated@@72 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@83) (= (type $generated@@237) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@236 $generated@@164 $generated@@237) ($generated@@80 $generated@@236 $generated@@138 $generated@@237)))
 :pattern ( ($generated@@80 $generated@@236 $generated@@164 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@83) (= (type $generated@@239) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@238 $generated@@169 $generated@@239) ($generated@@80 $generated@@238 $generated@@142 $generated@@239)))
 :pattern ( ($generated@@80 $generated@@238 $generated@@169 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@150)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@159)) (= (type $generated@@247) $generated@@159)) (= ($generated@@145 ($generated@@240 $generated@@246 $generated@@247) ($generated@@149 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@145 ($generated@@240 $generated@@246 $generated@@247) ($generated@@149 $generated@@244 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@150) (= (type $generated@@249) $generated@@150)) (= ($generated@@156 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@156 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@241 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@145 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@159) ($generated@@0 ($generated@@87 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@87 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@145 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@240 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@240 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@240 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@83) (or ($generated@@168 $generated@@287 ($generated@@260 $generated@@288)) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@287 $generated@@139)) ($generated@@145 $generated@@287 $generated@@169)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@288 10)))))))) (= ($generated@@167 $generated@@287 ($generated@@260 $generated@@288)) ($generated@@260 $generated@@288)))
 :weight 3
 :pattern ( ($generated@@167 $generated@@287 ($generated@@260 $generated@@288)))
))))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@289 T@U) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@289) $generated@@83) (or ($generated@@168 $generated@@289 $generated@@290) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@289 $generated@@139)) ($generated@@145 $generated@@289 $generated@@169)) (> $generated@@290 10))))) true)
 :pattern ( ($generated@@167 $generated@@289 $generated@@290))
))))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@293 T@U) ($generated@@294 Int) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (or ($generated@@292 $generated@@293 $generated@@294) (and (not (= 1 $generated@@166)) (and (and (not (= $generated@@293 $generated@@139)) ($generated@@145 $generated@@293 $generated@@164)) (> $generated@@294 10))))) true)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@159)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@80 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@267 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@82 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@85 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@82 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@87 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@82 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@82 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@85 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@82 $generated@@343 $generated@@2)) (= ($generated@@173 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@87 $generated@@342 $generated@@344))) (<= ($generated ($generated@@87 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@87 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@173 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@159) ($generated@@241 $generated@@348 $generated@@138)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@348)) $generated@@348) ($generated@@145 ($generated@@345 $generated@@83 $generated@@348) $generated@@138)))
 :pattern ( ($generated@@241 $generated@@348 $generated@@138))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@159) ($generated@@241 $generated@@349 $generated@@164)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@349)) $generated@@349) ($generated@@145 ($generated@@345 $generated@@83 $generated@@349) $generated@@164)))
 :pattern ( ($generated@@241 $generated@@349 $generated@@164))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@159) ($generated@@241 $generated@@350 $generated@@142)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@350)) $generated@@350) ($generated@@145 ($generated@@345 $generated@@83 $generated@@350) $generated@@142)))
 :pattern ( ($generated@@241 $generated@@350 $generated@@142))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@159) ($generated@@241 $generated@@351 $generated@@169)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@351)) $generated@@351) ($generated@@145 ($generated@@345 $generated@@83 $generated@@351) $generated@@169)))
 :pattern ( ($generated@@241 $generated@@351 $generated@@169))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@145 $generated@@352 $generated@@164)  (and ($generated@@145 $generated@@352 $generated@@138) (not (= $generated@@352 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@352 $generated@@164))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@83) (= ($generated@@145 $generated@@353 $generated@@169)  (and ($generated@@145 $generated@@353 $generated@@142) (not (= $generated@@353 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@353 $generated@@169))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@306 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@310 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@310 (type $generated@@361))))
(let (($generated@@363 ($generated@@309 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@308 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@307 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@328 (type $generated@@365))))
(let (($generated@@367 ($generated@@327 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@326 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@325 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@324 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@328 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(let (($generated@@374 ($generated@@327 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@326 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@325 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@377) $generated@@70)) (= ($generated@@145 $generated@@376 ($generated@@172 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@376 $generated@@378)))) ($generated@@241 $generated@@378 $generated@@377))
 :pattern ( ($generated@@87 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@145 $generated@@376 ($generated@@172 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@250 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@250 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@255 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@159) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@255 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@301 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@301 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@396) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@395) ($generated@@157 ($generated@@345 $generated@@150 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@157 ($generated@@345 $generated@@150 $generated@@396))) ($generated@@158 ($generated@@345 $generated@@150 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@404) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@403) ($generated@@157 ($generated@@345 $generated@@150 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@157 ($generated@@345 $generated@@150 $generated@@404))) ($generated@@158 ($generated@@345 $generated@@150 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@328 (type $generated@@433))))
(let (($generated@@435 ($generated@@327 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@326 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@325 $generated@@435 $generated@@434)) (= ($generated@@324 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@324 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@328 (type $generated@@436))))
(let (($generated@@438 ($generated@@327 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@326 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@325 $generated@@438 $generated@@437)) (= ($generated@@369 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@369 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@159))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@310 (type $generated@@442))))
(let (($generated@@444 ($generated@@309 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@308 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@307 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@159) (= (type $generated@@446) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@295 ($generated@@240 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@159) (= (type $generated@@451) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@295 ($generated@@240 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@241 $generated@@452 $generated@@46)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@345 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@159) ($generated@@241 $generated@@453 $generated@@47)) (and (= ($generated@@295 ($generated@@345 $generated@@3 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@345 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@159) ($generated@@241 $generated@@454 $generated@@44)) (and (= ($generated@@295 ($generated@@345 $generated@@4 $generated@@454)) $generated@@454) ($generated@@145 ($generated@@345 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@159) ($generated@@241 $generated@@456 $generated@@45)) (and (= ($generated@@295 ($generated@@345 $generated@@455 $generated@@456)) $generated@@456) ($generated@@145 ($generated@@345 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@241 ($generated@@295 $generated@@457) $generated@@458) ($generated@@145 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@241 ($generated@@295 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@300 $generated@@459))))
 :pattern ( ($generated@@300 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@282 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@281 $generated@@462)) (<= 0 ($generated@@280 $generated@@461))))
 :pattern ( ($generated@@280 $generated@@461))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@145 $generated@@463 $generated@@169)) (= ($generated@@291 $generated@@463 $generated@@464) ($generated@@167 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@291 $generated@@463 $generated@@464) ($generated@@145 $generated@@463 $generated@@169))
 :pattern ( ($generated@@291 $generated@@463 $generated@@464) ($generated@@167 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@159) (= (type $generated@@486) $generated@@159)) (= ($generated@@273 ($generated@@240 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@149 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@149 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@149 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@149 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@159) (= (type $generated@@496) $generated@@159)) (= ($generated@@157 ($generated@@240 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@240 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@159) (= (type $generated@@498) $generated@@159)) (= ($generated@@158 ($generated@@240 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@240 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@282 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@281 $generated@@159)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@280 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@250 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@250 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@255 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@255 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@255 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@172 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@172 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@172 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@345 $generated@@528 ($generated@@295 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@295 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@145 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@529) $generated@@532))) (and ($generated@@241 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@241 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@145 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@145 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@533) $generated@@536))) (and ($generated@@241 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@241 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@145 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@159) (= (type $generated@@540) $generated@@159)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@240 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@240 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@159)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@240 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@240 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@241 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@295 ($generated@@345 ($generated@@308 $generated@@159 $generated@@159) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@345 ($generated@@308 $generated@@159 $generated@@159) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@241 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@159) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@241 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@295 ($generated@@345 ($generated@@326 $generated@@159 $generated@@159) $generated@@546)) $generated@@546) ($generated@@145 ($generated@@345 ($generated@@326 $generated@@159 $generated@@159) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@241 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@159)) ($generated@@241 $generated@@551 ($generated@@149 $generated@@549 $generated@@550))) (and (= ($generated@@295 ($generated@@345 $generated@@150 $generated@@551)) $generated@@551) ($generated@@145 ($generated@@345 $generated@@150 $generated@@551) ($generated@@149 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@241 $generated@@551 ($generated@@149 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@431 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@149 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@150) (= ($generated@@537 ($generated@@295 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@295 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@159) ($generated@@241 $generated@@559 ($generated@@81 0))) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@559)) $generated@@559) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@241 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@241 $generated@@560 ($generated@@250 $generated@@561))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@560) ($generated@@250 $generated@@561))))
 :pattern ( ($generated@@241 $generated@@560 ($generated@@250 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@241 $generated@@562 ($generated@@255 $generated@@563))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@562) ($generated@@255 $generated@@563))))
 :pattern ( ($generated@@241 $generated@@562 ($generated@@255 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@159) (= (type $generated@@565) $generated@@70)) ($generated@@241 $generated@@564 ($generated@@172 $generated@@565))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@159 $generated@@2) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@2) $generated@@564) ($generated@@172 $generated@@565))))
 :pattern ( ($generated@@241 $generated@@564 ($generated@@172 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@70)) ($generated@@241 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@295 ($generated@@345 ($generated@@281 $generated@@159) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@345 ($generated@@281 $generated@@159) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@241 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@139)) ($generated@@80 $generated@@568 $generated@@142 $generated@@569))) ($generated@@80 $generated@@568 $generated@@164 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@142 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@554 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@554 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@554 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@169) $generated@@66))
(assert (= ($generated@@554 $generated@@169) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@172 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@267 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@172 $generated@@571) $generated@@572))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (and (= (type $generated@@574) $generated@@83) (or ($generated@@168 ($generated@@262 $generated@@574) ($generated@@260 $generated@@575)) (and (not (= 0 $generated@@166)) (and (and (not (= $generated@@574 $generated@@139)) ($generated@@145 $generated@@574 $generated@@169)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@575 10)))))))) (= ($generated@@167 ($generated@@262 $generated@@574) ($generated@@260 $generated@@575)) ($generated@@260 $generated@@575)))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@262 $generated@@574) ($generated@@260 $generated@@575)))
))))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@145 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@147 ($generated@@177 $generated@@576)))))
 :pattern ( ($generated@@145 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@148 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@148 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@159) (= (type $generated@@586) $generated@@159)) (= ($generated@@240 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@240 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@240 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@260 $generated@@587))) ($generated@@262 ($generated@@295 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@260 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@295 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@295 $generated@@588)))
 :pattern ( ($generated@@295 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@282 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@281 $generated@@590)) (= ($generated@@280 $generated@@589) 0)) (= $generated@@589 ($generated@@279 $generated@@590))))
 :pattern ( ($generated@@280 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@300 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@300 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@300 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@159)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@281 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= ($generated@@145 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@280 $generated@@605))) ($generated@@241 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@609))) (< ($generated@@538 ($generated@@345 $generated@@150 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@345 $generated@@150 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@145 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@306 $generated@@611) ($generated@@250 $generated@@612)) ($generated@@145 ($generated@@358 $generated@@611) ($generated@@250 $generated@@613))) ($generated@@145 ($generated@@389 $generated@@611) ($generated@@250 ($generated@@149 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@145 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@145 ($generated@@324 $generated@@614) ($generated@@255 $generated@@615)) ($generated@@145 ($generated@@369 $generated@@614) ($generated@@255 $generated@@616))) ($generated@@145 ($generated@@397 $generated@@614) ($generated@@255 ($generated@@149 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@145 $generated@@617 $generated@@46))
 :pattern ( ($generated@@145 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@145 $generated@@618 $generated@@47))
 :pattern ( ($generated@@145 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@145 $generated@@619 $generated@@44))
 :pattern ( ($generated@@145 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@145 $generated@@620 $generated@@45))
 :pattern ( ($generated@@145 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@159) ($generated@@145 $generated@@621 $generated@@48))
 :pattern ( ($generated@@145 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (= (type $generated@@623) ($generated@@182 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (=> (> $generated@@622 10) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@622 10)) (=> (> $generated@@622 10) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (and (= $generated@@623 ($generated@@181 $generated@@139 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false))))))))))
(let (($generated@@629  (=> (and ($generated@@266 $generated@@624) ($generated@@625 $generated@@624)) (=> (and (and (not (= $generated@@626 $generated@@139)) (and ($generated@@145 $generated@@626 $generated@@169) ($generated@@80 $generated@@626 $generated@@169 $generated@@624))) (and (= 1 $generated@@166) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 (T@U Int) Int)
(declare-fun $generated@@247 (T@U Int) Bool)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@291 (T@U Int) Int)
(declare-fun $generated@@292 (T@U Int) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@249 T@U) ($generated@@250 Int) ) (!  (=> (and (= (type $generated@@249) $generated@@83) (or ($generated@@247 $generated@@249 $generated@@250) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@249 $generated@@139)) ($generated@@145 $generated@@249 $generated@@232)) (> $generated@@250 (- 0 10)))))) (= ($generated@@246 $generated@@249 $generated@@250) ($generated@@248 2)))
 :pattern ( ($generated@@246 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@159) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@236 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@145 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@159) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@145 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@248 $generated@@261) $generated@@261)
 :pattern ( ($generated@@248 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@235 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@235 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@83) (or ($generated@@247 $generated@@287 ($generated@@248 $generated@@288)) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@287 $generated@@139)) ($generated@@145 $generated@@287 $generated@@232)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@288 (- 0 10))))))))) (= ($generated@@246 $generated@@287 ($generated@@248 $generated@@288)) ($generated@@248 2)))
 :weight 3
 :pattern ( ($generated@@246 $generated@@287 ($generated@@248 $generated@@288)))
))))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@289 T@U) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@289) $generated@@83) (or ($generated@@247 $generated@@289 $generated@@290) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@289 $generated@@139)) ($generated@@145 $generated@@289 $generated@@232)) (> $generated@@290 (- 0 10)))))) true)
 :pattern ( ($generated@@246 $generated@@289 $generated@@290))
))))
(assert  (=> (<= 1 $generated@@245) (forall (($generated@@293 T@U) ($generated@@294 Int) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (or ($generated@@292 $generated@@293 $generated@@294) (and (not (= 1 $generated@@245)) (and (and (not (= $generated@@293 $generated@@139)) ($generated@@145 $generated@@293 $generated@@164)) (> $generated@@294 0))))) true)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@159)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@80 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@267 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@82 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@85 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@82 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@87 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@82 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@82 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@85 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@82 $generated@@343 $generated@@2)) (= ($generated@@167 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@87 $generated@@342 $generated@@344))) (<= ($generated ($generated@@87 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@87 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@167 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@159) ($generated@@236 $generated@@348 $generated@@138)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@348)) $generated@@348) ($generated@@145 ($generated@@345 $generated@@83 $generated@@348) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@348 $generated@@138))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@159) ($generated@@236 $generated@@349 $generated@@164)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@349)) $generated@@349) ($generated@@145 ($generated@@345 $generated@@83 $generated@@349) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@349 $generated@@164))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@159) ($generated@@236 $generated@@350 $generated@@142)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@350)) $generated@@350) ($generated@@145 ($generated@@345 $generated@@83 $generated@@350) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@350 $generated@@142))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@159) ($generated@@236 $generated@@351 $generated@@232)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@351)) $generated@@351) ($generated@@145 ($generated@@345 $generated@@83 $generated@@351) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@351 $generated@@232))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@145 $generated@@352 $generated@@164)  (and ($generated@@145 $generated@@352 $generated@@138) (not (= $generated@@352 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@352 $generated@@164))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@83) (= ($generated@@145 $generated@@353 $generated@@232)  (and ($generated@@145 $generated@@353 $generated@@142) (not (= $generated@@353 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@353 $generated@@232))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@306 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@310 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@310 (type $generated@@361))))
(let (($generated@@363 ($generated@@309 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@308 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@307 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@328 (type $generated@@365))))
(let (($generated@@367 ($generated@@327 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@326 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@325 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@324 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@328 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(let (($generated@@374 ($generated@@327 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@326 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@325 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@377) $generated@@70)) (= ($generated@@145 $generated@@376 ($generated@@166 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@376 $generated@@378)))) ($generated@@236 $generated@@378 $generated@@377))
 :pattern ( ($generated@@87 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@145 $generated@@376 ($generated@@166 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@159) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@301 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@301 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@396) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@395) ($generated@@157 ($generated@@345 $generated@@150 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@157 ($generated@@345 $generated@@150 $generated@@396))) ($generated@@158 ($generated@@345 $generated@@150 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@404) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@403) ($generated@@157 ($generated@@345 $generated@@150 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@157 ($generated@@345 $generated@@150 $generated@@404))) ($generated@@158 ($generated@@345 $generated@@150 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@328 (type $generated@@433))))
(let (($generated@@435 ($generated@@327 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@326 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@325 $generated@@435 $generated@@434)) (= ($generated@@324 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@324 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@328 (type $generated@@436))))
(let (($generated@@438 ($generated@@327 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@326 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@325 $generated@@438 $generated@@437)) (= ($generated@@369 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@369 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@159))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@310 (type $generated@@442))))
(let (($generated@@444 ($generated@@309 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@308 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@307 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@159) (= (type $generated@@446) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@295 ($generated@@235 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@159) (= (type $generated@@451) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@295 ($generated@@235 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@236 $generated@@452 $generated@@46)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@345 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@159) ($generated@@236 $generated@@453 $generated@@47)) (and (= ($generated@@295 ($generated@@345 $generated@@3 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@345 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@159) ($generated@@236 $generated@@454 $generated@@44)) (and (= ($generated@@295 ($generated@@345 $generated@@4 $generated@@454)) $generated@@454) ($generated@@145 ($generated@@345 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@159) ($generated@@236 $generated@@456 $generated@@45)) (and (= ($generated@@295 ($generated@@345 $generated@@455 $generated@@456)) $generated@@456) ($generated@@145 ($generated@@345 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@236 ($generated@@295 $generated@@457) $generated@@458) ($generated@@145 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@236 ($generated@@295 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@300 $generated@@459))))
 :pattern ( ($generated@@300 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@282 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@281 $generated@@462)) (<= 0 ($generated@@280 $generated@@461))))
 :pattern ( ($generated@@280 $generated@@461))
)))
(assert  (=> (<= 1 $generated@@245) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@145 $generated@@463 $generated@@232)) (= ($generated@@291 $generated@@463 $generated@@464) ($generated@@246 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@291 $generated@@463 $generated@@464) ($generated@@145 $generated@@463 $generated@@232))
 :pattern ( ($generated@@291 $generated@@463 $generated@@464) ($generated@@246 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@159) (= (type $generated@@486) $generated@@159)) (= ($generated@@273 ($generated@@235 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@149 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@149 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@149 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@149 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@159) (= (type $generated@@496) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@235 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@159) (= (type $generated@@498) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@235 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@282 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@281 $generated@@159)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@280 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@166 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@166 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@345 $generated@@528 ($generated@@295 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@295 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@145 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@529) $generated@@532))) (and ($generated@@236 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@236 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@145 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@145 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@533) $generated@@536))) (and ($generated@@236 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@236 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@145 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@159) (= (type $generated@@540) $generated@@159)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@235 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@235 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@159)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@235 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@235 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@236 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@295 ($generated@@345 ($generated@@308 $generated@@159 $generated@@159) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@345 ($generated@@308 $generated@@159 $generated@@159) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@236 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@159) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@236 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@295 ($generated@@345 ($generated@@326 $generated@@159 $generated@@159) $generated@@546)) $generated@@546) ($generated@@145 ($generated@@345 ($generated@@326 $generated@@159 $generated@@159) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@159)) ($generated@@236 $generated@@551 ($generated@@149 $generated@@549 $generated@@550))) (and (= ($generated@@295 ($generated@@345 $generated@@150 $generated@@551)) $generated@@551) ($generated@@145 ($generated@@345 $generated@@150 $generated@@551) ($generated@@149 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@236 $generated@@551 ($generated@@149 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@431 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@149 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@150) (= ($generated@@537 ($generated@@295 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@295 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@159) ($generated@@236 $generated@@559 ($generated@@81 0))) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@559)) $generated@@559) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@236 $generated@@560 ($generated@@251 $generated@@561))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@560) ($generated@@251 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@560 ($generated@@251 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@236 $generated@@562 ($generated@@256 $generated@@563))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@4) $generated@@562) ($generated@@256 $generated@@563))))
 :pattern ( ($generated@@236 $generated@@562 ($generated@@256 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@159) (= (type $generated@@565) $generated@@70)) ($generated@@236 $generated@@564 ($generated@@166 $generated@@565))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@159 $generated@@2) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@345 ($generated@@82 $generated@@159 $generated@@2) $generated@@564) ($generated@@166 $generated@@565))))
 :pattern ( ($generated@@236 $generated@@564 ($generated@@166 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@70)) ($generated@@236 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@295 ($generated@@345 ($generated@@281 $generated@@159) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@345 ($generated@@281 $generated@@159) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@236 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@139)) ($generated@@80 $generated@@568 $generated@@142 $generated@@569))) ($generated@@80 $generated@@568 $generated@@164 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@142 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@554 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@554 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@554 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@554 $generated@@232) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@166 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@267 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@166 $generated@@571) $generated@@572))
)))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (and (= (type $generated@@574) $generated@@83) (or ($generated@@247 ($generated@@262 $generated@@574) ($generated@@248 $generated@@575)) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@574 $generated@@139)) ($generated@@145 $generated@@574 $generated@@232)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@575 (- 0 10))))))))) (= ($generated@@246 ($generated@@262 $generated@@574) ($generated@@248 $generated@@575)) ($generated@@248 2)))
 :weight 3
 :pattern ( ($generated@@246 ($generated@@262 $generated@@574) ($generated@@248 $generated@@575)))
))))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@145 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@147 ($generated@@171 $generated@@576)))))
 :pattern ( ($generated@@145 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@148 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@148 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@159) (= (type $generated@@586) $generated@@159)) (= ($generated@@235 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@235 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@235 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@248 $generated@@587))) ($generated@@262 ($generated@@295 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@248 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@295 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@295 $generated@@588)))
 :pattern ( ($generated@@295 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@282 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@281 $generated@@590)) (= ($generated@@280 $generated@@589) 0)) (= $generated@@589 ($generated@@279 $generated@@590))))
 :pattern ( ($generated@@280 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@300 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@300 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@300 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@159)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@281 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= ($generated@@145 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@280 $generated@@605))) ($generated@@236 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@609))) (< ($generated@@538 ($generated@@345 $generated@@150 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@345 $generated@@150 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@308 $generated@@159 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@145 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@306 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@145 ($generated@@358 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@145 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@149 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@326 $generated@@159 $generated@@159)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@145 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@145 ($generated@@324 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@145 ($generated@@369 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@145 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@149 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@145 $generated@@617 $generated@@46))
 :pattern ( ($generated@@145 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@145 $generated@@618 $generated@@47))
 :pattern ( ($generated@@145 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@145 $generated@@619 $generated@@44))
 :pattern ( ($generated@@145 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@145 $generated@@620 $generated@@45))
 :pattern ( ($generated@@145 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@159) ($generated@@145 $generated@@621 $generated@@48))
 :pattern ( ($generated@@145 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (= (type $generated@@623) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (=> (> $generated@@622 0) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@622 (- 0 10))) (=> (> $generated@@622 (- 0 10)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (and (= $generated@@623 ($generated@@175 $generated@@139 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false))))))))))
(let (($generated@@629  (=> (and ($generated@@266 $generated@@624) ($generated@@625 $generated@@624)) (=> (and (and (not (= $generated@@626 $generated@@139)) (and ($generated@@145 $generated@@626 $generated@@232) ($generated@@80 $generated@@626 $generated@@232 $generated@@624))) (and (= 1 $generated@@245) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 (T@U Int) Int)
(declare-fun $generated@@247 (T@U Int) Bool)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@249 T@U) ($generated@@250 Int) ) (!  (=> (and (= (type $generated@@249) $generated@@83) (or ($generated@@247 $generated@@249 $generated@@250) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@249 $generated@@139)) ($generated@@145 $generated@@249 $generated@@232)) (> $generated@@250 (- 0 10)))))) (= ($generated@@246 $generated@@249 $generated@@250) ($generated@@248 2)))
 :pattern ( ($generated@@246 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@159) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@236 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@145 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@159) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@145 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@248 $generated@@261) $generated@@261)
 :pattern ( ($generated@@248 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@235 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@235 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@83) (or ($generated@@247 $generated@@287 ($generated@@248 $generated@@288)) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@287 $generated@@139)) ($generated@@145 $generated@@287 $generated@@232)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@288 (- 0 10))))))))) (= ($generated@@246 $generated@@287 ($generated@@248 $generated@@288)) ($generated@@248 2)))
 :weight 3
 :pattern ( ($generated@@246 $generated@@287 ($generated@@248 $generated@@288)))
))))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@289 T@U) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@289) $generated@@83) (or ($generated@@247 $generated@@289 $generated@@290) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@289 $generated@@139)) ($generated@@145 $generated@@289 $generated@@232)) (> $generated@@290 (- 0 10)))))) true)
 :pattern ( ($generated@@246 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@159)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@70) (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@80 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@267 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@82 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@85 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@82 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@87 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@82 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@82 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@85 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@82 $generated@@339 $generated@@2)) (= ($generated@@167 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@87 $generated@@338 $generated@@340))) (<= ($generated ($generated@@87 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@87 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@167 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@159) ($generated@@236 $generated@@344 $generated@@138)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@344)) $generated@@344) ($generated@@145 ($generated@@341 $generated@@83 $generated@@344) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@344 $generated@@138))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@159) ($generated@@236 $generated@@345 $generated@@164)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@345)) $generated@@345) ($generated@@145 ($generated@@341 $generated@@83 $generated@@345) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@345 $generated@@164))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@159) ($generated@@236 $generated@@346 $generated@@142)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@346)) $generated@@346) ($generated@@145 ($generated@@341 $generated@@83 $generated@@346) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@346 $generated@@142))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@159) ($generated@@236 $generated@@347 $generated@@232)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@347)) $generated@@347) ($generated@@145 ($generated@@341 $generated@@83 $generated@@347) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@347 $generated@@232))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@83) (= ($generated@@145 $generated@@348 $generated@@164)  (and ($generated@@145 $generated@@348 $generated@@138) (not (= $generated@@348 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@348 $generated@@164))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@145 $generated@@349 $generated@@232)  (and ($generated@@145 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(let (($generated@@352 ($generated@@305 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@304 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@303 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@302 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@306 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@82 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@306 (type $generated@@357))))
(let (($generated@@359 ($generated@@305 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@304 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@303 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(let (($generated@@363 ($generated@@323 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@322 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@321 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@320 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@324 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@82 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@324 (type $generated@@368))))
(let (($generated@@370 ($generated@@323 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@322 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@321 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@373) $generated@@70)) (= ($generated@@145 $generated@@372 ($generated@@166 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@372 $generated@@374)))) ($generated@@236 $generated@@374 $generated@@373))
 :pattern ( ($generated@@87 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@145 $generated@@372 ($generated@@166 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@251 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@251 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@256 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@256 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@87 ($generated@@297 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@87 ($generated@@297 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@392) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392)))) (= ($generated@@87 ($generated@@386 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@392))))))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@400) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@87 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@87 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@70)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@267 ($generated@@87 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@267 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@267 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@267 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@82 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@324 (type $generated@@429))))
(let (($generated@@431 ($generated@@323 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@322 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@321 $generated@@431 $generated@@430)) (= ($generated@@320 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@320 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@324 (type $generated@@432))))
(let (($generated@@434 ($generated@@323 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@322 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@321 $generated@@434 $generated@@433)) (= ($generated@@365 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@365 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@324 (type $generated@@435))))
(let (($generated@@437 ($generated@@323 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@322 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@321 $generated@@437 $generated@@436)) (= ($generated@@393 $generated@@435) ($generated@@427 $generated@@159))))))
 :pattern ( ($generated@@393 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@306 (type $generated@@438))))
(let (($generated@@440 ($generated@@305 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@304 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@303 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@385 $generated@@438) ($generated@@291 ($generated@@235 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@324 (type $generated@@443))))
(let (($generated@@445 ($generated@@323 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@322 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@321 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@159) (= (type $generated@@447) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@443) ($generated@@291 ($generated@@235 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@393 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@341 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@159) ($generated@@236 $generated@@449 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@341 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@236 $generated@@450 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@341 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@236 $generated@@452 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@451 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@341 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@70) (= ($generated@@236 ($generated@@291 $generated@@453) $generated@@454) ($generated@@145 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@236 ($generated@@291 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@296 $generated@@455))))
 :pattern ( ($generated@@296 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@282 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@281 $generated@@458)) (<= 0 ($generated@@280 $generated@@457))))
 :pattern ( ($generated@@280 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@411 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@411 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@78 ($generated@@411 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@273 ($generated@@235 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@149 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@149 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@159) (= (type $generated@@490) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@235 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@159) (= (type $generated@@492) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@282 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@281 $generated@@159)) (= (type $generated@@500) $generated@@70)) (= (type $generated@@501) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@280 $generated@@499))) ($generated@@267 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@81 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@81 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@251 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@251 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@256 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@256 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@166 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@341 $generated@@522 ($generated@@291 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@291 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))) (and ($generated@@236 ($generated@@87 ($generated@@386 $generated@@523) $generated@@526) $generated@@525) ($generated@@236 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))) (and ($generated@@236 ($generated@@87 ($generated@@394 $generated@@527) $generated@@530) $generated@@529) ($generated@@236 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@159)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@235 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@235 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@159)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@235 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@235 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) ($generated@@236 $generated@@537 ($generated@@411 $generated@@538 $generated@@539))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@537) ($generated@@411 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@411 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@159) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@236 $generated@@540 ($generated@@419 $generated@@541 $generated@@542))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@540)) $generated@@540) ($generated@@145 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@540) ($generated@@419 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@236 $generated@@540 ($generated@@419 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@159)) ($generated@@236 $generated@@545 ($generated@@149 $generated@@543 $generated@@544))) (and (= ($generated@@291 ($generated@@341 $generated@@150 $generated@@545)) $generated@@545) ($generated@@145 ($generated@@341 $generated@@150 $generated@@545) ($generated@@149 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@149 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@87 ($generated@@427 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@87 ($generated@@427 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@75)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@70) (= (type $generated@@551) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@149 $generated@@550 $generated@@551)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@150) (= ($generated@@531 ($generated@@291 $generated@@552)) ($generated@@532 $generated@@552)))
 :pattern ( ($generated@@531 ($generated@@291 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@159) ($generated@@236 $generated@@553 ($generated@@81 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@553) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@553 ($generated@@81 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@236 $generated@@554 ($generated@@251 $generated@@555))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554) ($generated@@251 $generated@@555))))
 :pattern ( ($generated@@236 $generated@@554 ($generated@@251 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@236 $generated@@556 ($generated@@256 $generated@@557))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@556) ($generated@@256 $generated@@557))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@256 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@159) (= (type $generated@@559) $generated@@70)) ($generated@@236 $generated@@558 ($generated@@166 $generated@@559))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@558) ($generated@@166 $generated@@559))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@166 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@236 $generated@@560 ($generated@@493 $generated@@561))) (and (= ($generated@@291 ($generated@@341 ($generated@@281 $generated@@159) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@341 ($generated@@281 $generated@@159) $generated@@560) ($generated@@493 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@560 ($generated@@493 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@83) (= (type $generated@@563) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@562 $generated@@139)) ($generated@@80 $generated@@562 $generated@@142 $generated@@563))) ($generated@@80 $generated@@562 $generated@@164 $generated@@563))
 :pattern ( ($generated@@80 $generated@@562 $generated@@142 $generated@@563))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@548 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@548 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@548 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@548 $generated@@232) $generated@@69))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@564 ($generated@@166 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@564 $generated@@567)))) ($generated@@267 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@87 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@166 $generated@@565) $generated@@566))
)))
(assert  (=> (<= 0 $generated@@245) (forall (($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (and (= (type $generated@@568) $generated@@83) (or ($generated@@247 ($generated@@262 $generated@@568) ($generated@@248 $generated@@569)) (and (not (= 0 $generated@@245)) (and (and (not (= $generated@@568 $generated@@139)) ($generated@@145 $generated@@568 $generated@@232)) ($generated@@0 ($generated@@262 ($generated@@11 (> $generated@@569 (- 0 10))))))))) (= ($generated@@246 ($generated@@262 $generated@@568) ($generated@@248 $generated@@569)) ($generated@@248 2)))
 :weight 3
 :pattern ( ($generated@@246 ($generated@@262 $generated@@568) ($generated@@248 $generated@@569)))
))))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@83) (= ($generated@@145 $generated@@570 $generated@@138)  (or (= $generated@@570 $generated@@139) ($generated@@147 ($generated@@171 $generated@@570)))))
 :pattern ( ($generated@@145 $generated@@570 $generated@@138))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@573) (and ($generated@@148 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@70) ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@267 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@577) (and ($generated@@148 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@267 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@159) (= (type $generated@@580) $generated@@159)) (= ($generated@@235 ($generated@@262 $generated@@579) ($generated@@262 $generated@@580)) ($generated@@262 ($generated@@235 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@235 ($generated@@262 $generated@@579) ($generated@@262 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@248 $generated@@581))) ($generated@@262 ($generated@@291 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@248 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@291 ($generated@@262 $generated@@582)) ($generated@@262 ($generated@@291 $generated@@582)))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@282 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@281 $generated@@584)) (= ($generated@@280 $generated@@583) 0)) (= $generated@@583 ($generated@@279 $generated@@584))))
 :pattern ( ($generated@@280 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@82 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@296 ($generated@@88 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@296 $generated@@585) ($generated ($generated@@87 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@296 ($generated@@88 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@2)) ($generated@@80 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@3)) ($generated@@80 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@4)) ($generated@@80 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@451)) ($generated@@80 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@159)) ($generated@@80 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@281 $generated@@159)) (= (type $generated@@600) $generated@@70)) (= ($generated@@145 $generated@@599 ($generated@@493 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@280 $generated@@599))) ($generated@@236 ($generated@@494 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@494 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@145 $generated@@599 ($generated@@493 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@280 $generated@@603))) (< ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) $generated@@70)) ($generated@@145 $generated@@605 ($generated@@411 $generated@@606 $generated@@607))) (and (and ($generated@@145 ($generated@@302 $generated@@605) ($generated@@251 $generated@@606)) ($generated@@145 ($generated@@354 $generated@@605) ($generated@@251 $generated@@607))) ($generated@@145 ($generated@@385 $generated@@605) ($generated@@251 ($generated@@149 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@411 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) ($generated@@145 $generated@@608 ($generated@@419 $generated@@609 $generated@@610))) (and (and ($generated@@145 ($generated@@320 $generated@@608) ($generated@@256 $generated@@609)) ($generated@@145 ($generated@@365 $generated@@608) ($generated@@256 $generated@@610))) ($generated@@145 ($generated@@393 $generated@@608) ($generated@@256 ($generated@@149 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@145 $generated@@608 ($generated@@419 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@145 $generated@@611 $generated@@46))
 :pattern ( ($generated@@145 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@145 $generated@@612 $generated@@47))
 :pattern ( ($generated@@145 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@145 $generated@@613 $generated@@44))
 :pattern ( ($generated@@145 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@451) ($generated@@145 $generated@@614 $generated@@45))
 :pattern ( ($generated@@145 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@159) ($generated@@145 $generated@@615 $generated@@48))
 :pattern ( ($generated@@145 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 (T@U) Bool)
(assert  (and (and (= (type $generated@@616) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@618) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@622  (=> (= $generated@@616 ($generated@@175 $generated@@139 $generated@@617 $generated@@60 false)) (=> (and ($generated@@80 $generated@@618 $generated@@142 $generated@@617) ($generated@@80 ($generated@@8 $generated@@619) $generated@@46 $generated@@617)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@619 (- 0 10))) (=> (> $generated@@619 (- 0 10)) (=> (and (and ($generated@@247 $generated@@618 $generated@@619) ($generated@@247 $generated@@618 $generated@@619)) (and (= $generated@@620 ($generated@@246 $generated@@618 $generated@@619)) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@620 ($generated@@248 2)))))))))
(let (($generated@@623  (=> (and ($generated@@266 $generated@@617) ($generated@@621 $generated@@617)) (=> (and (and (and (not (= $generated@@618 $generated@@139)) (and ($generated@@145 $generated@@618 $generated@@232) ($generated@@80 $generated@@618 $generated@@232 $generated@@617))) (= 1 $generated@@245)) (and (> $generated@@619 (- 0 10)) (= (ControlFlow 0 4) 2))) $generated@@622))))
$generated@@623)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U Int) Int)
(declare-fun $generated@@137 (T@U Int) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@138) $generated@@80) (= (type $generated@@140) $generated@@67)))
(assert  (=> (<= 1 $generated@@135) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (or ($generated@@137 $generated@@141 $generated@@142) (and (not (= 1 $generated@@135)) (and (and (not (= $generated@@141 $generated@@138)) ($generated@@139 $generated@@141 $generated@@140)) (< $generated@@142 100))))) (< ($generated@@136 $generated@@141 $generated@@142) 100))
 :pattern ( ($generated@@136 $generated@@141 $generated@@142))
))))
(assert (= (type $generated@@143) $generated@@67))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@80) (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@144 $generated@@143 $generated@@145)  (or (= $generated@@144 $generated@@138) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@144 $generated@@143 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@139 $generated@@146 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@146 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@67)) (= (type $generated@@154) $generated@@149)) ($generated@@139 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@139 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@79 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@67)) ($generated@@139 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@139 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@80 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@70 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@80) (= (type $generated@@218) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@219) ($generated@@69 $generated@@4))) (= (type $generated@@221) $generated@@80)) (= (type $generated@@222) ($generated@@69 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@80) (= (type $generated@@225) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@224 $generated@@140 $generated@@225) ($generated@@77 $generated@@224 $generated@@143 $generated@@225)))
 :pattern ( ($generated@@77 $generated@@224 $generated@@140 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@149)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@67) (= (type $generated@@231) $generated@@67)) (= (type $generated@@232) $generated@@158)) (= (type $generated@@233) $generated@@158)) (= ($generated@@139 ($generated@@226 $generated@@232 $generated@@233) ($generated@@148 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@139 ($generated@@226 $generated@@232 $generated@@233) ($generated@@148 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) (= (type $generated@@235) $generated@@149)) (= ($generated@@155 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@155 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@158 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@158) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@227 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@67)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@79 $generated@@158 $generated@@4)) (= (type $generated@@244) $generated@@67)) (= ($generated@@139 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@158) ($generated@@0 ($generated@@84 $generated@@243 $generated@@245))) ($generated@@227 $generated@@245 $generated@@244))
 :pattern ( ($generated@@84 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@139 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@158)) (= (type $generated@@255) $generated@@158)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@226 $generated@@254 $generated@@255) ($generated@@148 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@226 $generated@@254 $generated@@255) ($generated@@148 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@149) (= ($generated@@147 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@149) ($generated@@147 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@158) (= (type $generated@@262) $generated@@158)) (= $generated@@260 ($generated@@226 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@147 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@158)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@164 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@164 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@158) ($generated@@227 $generated@@324 $generated@@143)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@143)))
 :pattern ( ($generated@@227 $generated@@324 $generated@@143))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@158) ($generated@@227 $generated@@325 $generated@@140)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@140)))
 :pattern ( ($generated@@227 $generated@@325 $generated@@140))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@140)  (and ($generated@@139 $generated@@326 $generated@@143) (not (= $generated@@326 $generated@@138)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@140))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@158 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@163 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@158) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@227 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@163 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@158 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@236 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@158) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@251 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@236 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@158 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@241 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@251 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@241 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@158 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@158 $generated@@158)) (= (type $generated@@369) $generated@@158)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@156 ($generated@@321 $generated@@149 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@156 ($generated@@321 $generated@@149 $generated@@369))) ($generated@@157 ($generated@@321 $generated@@149 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@158 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@377) $generated@@158)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@156 ($generated@@321 $generated@@149 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@156 ($generated@@321 $generated@@149 $generated@@377))) ($generated@@157 ($generated@@321 $generated@@149 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@158) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@251 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@251 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@158) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@158))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@158) (= (type $generated@@419) $generated@@158)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@226 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@158) (= (type $generated@@424) $generated@@158)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@226 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@158) ($generated@@227 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@158) ($generated@@227 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@158) ($generated@@227 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@158) ($generated@@227 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@227 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@227 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@158) (= (type $generated@@457) $generated@@158)) (= ($generated@@257 ($generated@@226 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@226 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@148 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@148 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@148 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@148 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@158) (= (type $generated@@467) $generated@@158)) (= ($generated@@156 ($generated@@226 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@226 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@158) (= (type $generated@@469) $generated@@158)) (= ($generated@@157 ($generated@@226 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@226 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@158)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@251 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@236 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@241 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@241 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@241 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@163 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@163 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@163 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@158 $generated@@158)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@158) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@227 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@227 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@158) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@227 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@227 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@158) (= (type $generated@@511) $generated@@158)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@226 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@226 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) (= (type $generated@@513) $generated@@158)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@226 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@226 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@158) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@227 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@158 $generated@@158) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@158 $generated@@158) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@227 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@158) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@227 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@158 $generated@@158) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@158 $generated@@158) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@227 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@158)) ($generated@@227 $generated@@522 ($generated@@148 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@149 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@149 $generated@@522) ($generated@@148 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@227 $generated@@522 ($generated@@148 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@148 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@148 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@149) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@158) ($generated@@227 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@158 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@227 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@67)) ($generated@@227 $generated@@531 ($generated@@236 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@158 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@158 $generated@@4) $generated@@531) ($generated@@236 $generated@@532))))
 :pattern ( ($generated@@227 $generated@@531 ($generated@@236 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@67)) ($generated@@227 $generated@@533 ($generated@@241 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@158 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@158 $generated@@4) $generated@@533) ($generated@@241 $generated@@534))))
 :pattern ( ($generated@@227 $generated@@533 ($generated@@241 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@158) (= (type $generated@@536) $generated@@67)) ($generated@@227 $generated@@535 ($generated@@163 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@158 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@158 $generated@@2) $generated@@535) ($generated@@163 $generated@@536))))
 :pattern ( ($generated@@227 $generated@@535 ($generated@@163 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@158) (= (type $generated@@538) $generated@@67)) ($generated@@227 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@158) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@158) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@227 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@143) $generated@@63))
(assert (= ($generated@@525 $generated@@143) $generated@@66))
(assert (= ($generated@@75 $generated@@140) $generated@@64))
(assert (= ($generated@@525 $generated@@140) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@158 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@163 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@158) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@251 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@163 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@143)  (or (= $generated@@546 $generated@@138) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@143))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@549) (and ($generated@@147 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@148 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@148 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@251 ($generated@@156 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@251 ($generated@@156 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@553) (and ($generated@@147 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@148 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@148 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@251 ($generated@@157 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@251 ($generated@@157 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@158)) (= ($generated@@226 ($generated@@246 $generated@@555) ($generated@@246 $generated@@556)) ($generated@@246 ($generated@@226 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@226 ($generated@@246 $generated@@555) ($generated@@246 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@557)) ($generated@@246 ($generated@@271 $generated@@557)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@266 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@265 $generated@@559)) (= ($generated@@264 $generated@@558) 0)) (= $generated@@558 ($generated@@263 $generated@@559))))
 :pattern ( ($generated@@264 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@561)))
 (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@563 $generated@@2)) (= (type $generated@@562) $generated@@2)) (<= 0 ($generated $generated@@562))) (= ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)) (+ (- ($generated@@276 $generated@@560) ($generated ($generated@@84 $generated@@560 $generated@@561))) ($generated $generated@@562)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@2)) ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@3)) ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@4)) ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@428)) ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@158)) ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@265 $generated@@158)) (= (type $generated@@575) $generated@@67)) (= ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@574))) ($generated@@227 ($generated@@471 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@471 $generated@@574 $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@265 $generated@@158)) (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@264 $generated@@578))) (< ($generated@@509 ($generated@@321 $generated@@149 ($generated@@471 $generated@@578 $generated@@579))) ($generated@@577 $generated@@578))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@149 ($generated@@471 $generated@@578 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@284 $generated@@158 $generated@@158)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@282 $generated@@580) ($generated@@236 $generated@@581)) ($generated@@139 ($generated@@331 $generated@@580) ($generated@@236 $generated@@582))) ($generated@@139 ($generated@@362 $generated@@580) ($generated@@236 ($generated@@148 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@300 $generated@@583) ($generated@@241 $generated@@584)) ($generated@@139 ($generated@@342 $generated@@583) ($generated@@241 $generated@@585))) ($generated@@139 ($generated@@370 $generated@@583) ($generated@@241 ($generated@@148 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@2) ($generated@@139 $generated@@586 $generated@@46))
 :pattern ( ($generated@@139 $generated@@586 $generated@@46))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@3) ($generated@@139 $generated@@587 $generated@@47))
 :pattern ( ($generated@@139 $generated@@587 $generated@@47))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) ($generated@@139 $generated@@588 $generated@@44))
 :pattern ( ($generated@@139 $generated@@588 $generated@@44))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@428) ($generated@@139 $generated@@589 $generated@@45))
 :pattern ( ($generated@@139 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@158) ($generated@@139 $generated@@590 $generated@@48))
 :pattern ( ($generated@@139 $generated@@590 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (= (type $generated@@591) $generated@@80) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@594) ($generated@@170 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@596 true))
(let (($generated@@597  (=> (and ($generated@@77 $generated@@591 $generated@@143 $generated@@592) ($generated@@77 ($generated@@8 $generated@@593) $generated@@46 $generated@@592)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@593 100)) (=> (< $generated@@593 100) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@593) (= $generated@@593 $generated@@593))) (=> (or (<= 0 $generated@@593) (= $generated@@593 $generated@@593)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@591 $generated@@591) (= $generated@@593 $generated@@593)) (< $generated@@593 $generated@@593))))))))))
(let (($generated@@598  (=> (and (= $generated@@594 ($generated@@169 $generated@@138 $generated@@592 $generated@@60 false)) (< $generated@@593 100)) (and (=> (= (ControlFlow 0 6) 2) $generated@@597) (=> (= (ControlFlow 0 6) 5) $generated@@596)))))
(let (($generated@@599  (=> (and ($generated@@250 $generated@@592) ($generated@@595 $generated@@592)) (=> (and (and (not (= $generated@@591 $generated@@138)) (and ($generated@@139 $generated@@591 $generated@@140) ($generated@@77 $generated@@591 $generated@@140 $generated@@592))) (and (= 1 $generated@@135) (= (ControlFlow 0 7) 6))) $generated@@598))))
$generated@@599)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U Int) Int)
(declare-fun $generated@@140 (T@U Int) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@141) $generated@@83) (= (type $generated@@143) $generated@@70)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (or ($generated@@140 $generated@@144 $generated@@145) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@144 $generated@@141)) ($generated@@142 $generated@@144 $generated@@143)) (< $generated@@145 100))))) (< ($generated@@139 $generated@@144 $generated@@145) 100))
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@141) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@83) (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@150 $generated@@149 $generated@@151)  (or (= $generated@@150 $generated@@141) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@142 $generated@@152 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@152 ($generated@@81 0)))
)))
(assert ($generated@@153 $generated@@149))
(assert  (and (= ($generated@@1 $generated@@156) 14) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@157 $generated@@158)) $generated@@70)
 :pattern ( ($generated@@155 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) $generated@@70)) (= (type $generated@@161) $generated@@156)) ($generated@@142 $generated@@161 ($generated@@155 $generated@@159 $generated@@160))) ($generated@@154 $generated@@161))
 :pattern ( ($generated@@154 $generated@@161) ($generated@@142 $generated@@161 ($generated@@155 $generated@@159 $generated@@160)))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 15) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@165)
 :pattern ( ($generated@@164 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@156) (= (type $generated@@169) $generated@@156)) true) (= ($generated@@162 $generated@@168 $generated@@169)  (and (= ($generated@@163 $generated@@168) ($generated@@163 $generated@@169)) (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)))))
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
)))
(assert (= (type $generated@@170) $generated@@70))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@83) (=> (and (not (= $generated@@171 $generated@@141)) ($generated@@142 $generated@@171 $generated@@149)) ($generated@@142 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@142 $generated@@171 $generated@@149))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (and (= (type $generated@@172) $generated@@83) (or ($generated@@140 $generated@@172 $generated@@173) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@172 $generated@@141)) ($generated@@142 $generated@@172 $generated@@143)) (< $generated@@173 100))))) (= ($generated@@139 $generated@@172 $generated@@173) $generated@@173))
 :pattern ( ($generated@@139 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@82 $generated@@165 $generated@@2)) (= (type $generated@@178) $generated@@70)) ($generated@@142 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@142 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@70)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@83) (= ($generated@@142 $generated@@181 $generated@@149)  (or (= $generated@@181 $generated@@141) (= ($generated@@179 $generated@@181) $generated@@149))))
 :pattern ( ($generated@@142 $generated@@181 $generated@@149))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@83 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@73 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@233) ($generated@@72 $generated@@4))) (= (type $generated@@235) $generated@@83)) (= (type $generated@@236) ($generated@@72 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@184 $generated@@83 $generated@@4))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@73 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@83) (= (type $generated@@244) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@245) ($generated@@72 $generated@@4))) (= (type $generated@@247) $generated@@83)) (= (type $generated@@248) ($generated@@72 $generated@@249))) (= ($generated@@0 ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@83) (= (type $generated@@251) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@250 $generated@@170 $generated@@251) ($generated@@80 $generated@@250 $generated@@146 $generated@@251)))
 :pattern ( ($generated@@80 $generated@@250 $generated@@170 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@83) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@252 $generated@@143 $generated@@253) ($generated@@80 $generated@@252 $generated@@149 $generated@@253)))
 :pattern ( ($generated@@80 $generated@@252 $generated@@143 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@156)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@70) (= (type $generated@@259) $generated@@70)) (= (type $generated@@260) $generated@@165)) (= (type $generated@@261) $generated@@165)) (= ($generated@@142 ($generated@@254 $generated@@260 $generated@@261) ($generated@@155 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@142 ($generated@@254 $generated@@260 $generated@@261) ($generated@@155 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@156) (= (type $generated@@263) $generated@@156)) (= ($generated@@162 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@162 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@142 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@165) ($generated@@0 ($generated@@87 $generated@@266 $generated@@268))) ($generated@@255 $generated@@268 $generated@@267))
 :pattern ( ($generated@@87 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@142 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@272) $generated@@70)) (= ($generated@@142 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@165) ($generated@@0 ($generated@@87 $generated@@271 $generated@@273))) ($generated@@255 $generated@@273 $generated@@272))
 :pattern ( ($generated@@87 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@142 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@70) (= (type $generated@@283) $generated@@70)) (= (type $generated@@284) $generated@@165)) (= (type $generated@@285) $generated@@165)) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@280 $generated@@286)) (= ($generated@@80 ($generated@@254 $generated@@284 $generated@@285) ($generated@@155 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@80 ($generated@@254 $generated@@284 $generated@@285) ($generated@@155 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@74)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@156) (= ($generated@@154 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@156) ($generated@@154 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@165) (= (type $generated@@292) $generated@@165)) (= $generated@@290 ($generated@@254 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@154 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 17)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@301 T@U) ($generated@@302 Int) ) (!  (=> (and (= (type $generated@@301) $generated@@83) (or ($generated@@140 $generated@@301 ($generated@@274 $generated@@302)) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@301 $generated@@141)) ($generated@@142 $generated@@301 $generated@@143)) ($generated@@0 ($generated@@276 ($generated@@11 (< $generated@@302 100)))))))) (= ($generated@@139 $generated@@301 ($generated@@274 $generated@@302)) ($generated@@274 $generated@@302)))
 :weight 3
 :pattern ( ($generated@@139 $generated@@301 ($generated@@274 $generated@@302)))
))))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@165)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@70) (= (type $generated@@307) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@281 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@80 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@281 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@82 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@85 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@82 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@87 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@82 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@82 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@85 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@82 $generated@@351 $generated@@2)) (= ($generated@@175 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@87 $generated@@350 $generated@@352))) (<= ($generated ($generated@@87 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@87 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@175 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@165) ($generated@@255 $generated@@356 $generated@@146)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@356)) $generated@@356) ($generated@@142 ($generated@@353 $generated@@83 $generated@@356) $generated@@146)))
 :pattern ( ($generated@@255 $generated@@356 $generated@@146))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@165) ($generated@@255 $generated@@357 $generated@@170)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@357)) $generated@@357) ($generated@@142 ($generated@@353 $generated@@83 $generated@@357) $generated@@170)))
 :pattern ( ($generated@@255 $generated@@357 $generated@@170))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@165) ($generated@@255 $generated@@358 $generated@@149)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@358)) $generated@@358) ($generated@@142 ($generated@@353 $generated@@83 $generated@@358) $generated@@149)))
 :pattern ( ($generated@@255 $generated@@358 $generated@@149))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@165) ($generated@@255 $generated@@359 $generated@@143)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@359)) $generated@@359) ($generated@@142 ($generated@@353 $generated@@83 $generated@@359) $generated@@143)))
 :pattern ( ($generated@@255 $generated@@359 $generated@@143))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@83) (= ($generated@@142 $generated@@360 $generated@@170)  (and ($generated@@142 $generated@@360 $generated@@146) (not (= $generated@@360 $generated@@141)))))
 :pattern ( ($generated@@142 $generated@@360 $generated@@170))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@142 $generated@@361 $generated@@143)  (and ($generated@@142 $generated@@361 $generated@@149) (not (= $generated@@361 $generated@@141)))))
 :pattern ( ($generated@@142 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(let (($generated@@364 ($generated@@317 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@316 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@315 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@314 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@318 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@318 (type $generated@@369))))
(let (($generated@@371 ($generated@@317 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@316 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@315 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(let (($generated@@375 ($generated@@335 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@334 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@333 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@332 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@336 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@336 (type $generated@@380))))
(let (($generated@@382 ($generated@@335 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@334 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@333 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@82 $generated@@165 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@142 $generated@@384 ($generated@@174 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@165) (< 0 ($generated ($generated@@87 $generated@@384 $generated@@386)))) ($generated@@255 $generated@@386 $generated@@385))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@142 $generated@@384 ($generated@@174 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@264 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@165) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@281 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@264 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@269 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@165) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@281 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@269 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@309 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@309 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@165 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@404) $generated@@165)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@403) ($generated@@163 ($generated@@353 $generated@@156 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@163 ($generated@@353 $generated@@156 $generated@@404))) ($generated@@164 ($generated@@353 $generated@@156 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@165 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@165 $generated@@165)) (= (type $generated@@412) $generated@@165)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@411) ($generated@@163 ($generated@@353 $generated@@156 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@163 ($generated@@353 $generated@@156 $generated@@412))) ($generated@@164 ($generated@@353 $generated@@156 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@281 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@281 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@165 $generated@@165)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@281 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@281 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@82 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@336 (type $generated@@441))))
(let (($generated@@443 ($generated@@335 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@334 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@333 $generated@@443 $generated@@442)) (= ($generated@@332 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@332 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@336 (type $generated@@444))))
(let (($generated@@446 ($generated@@335 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@334 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@333 $generated@@446 $generated@@445)) (= ($generated@@377 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@377 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@405 $generated@@447) ($generated@@439 $generated@@165))))))
 :pattern ( ($generated@@405 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@318 (type $generated@@450))))
(let (($generated@@452 ($generated@@317 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@316 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@315 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@165) (= (type $generated@@454) $generated@@165)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@450) ($generated@@303 ($generated@@254 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@336 (type $generated@@455))))
(let (($generated@@457 ($generated@@335 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@334 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@333 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@165) (= (type $generated@@459) $generated@@165)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@455) ($generated@@303 ($generated@@254 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@405 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@165) ($generated@@255 $generated@@460 $generated@@46)) (and (= ($generated@@303 ($generated@@353 $generated@@2 $generated@@460)) $generated@@460) ($generated@@142 ($generated@@353 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@165) ($generated@@255 $generated@@461 $generated@@47)) (and (= ($generated@@303 ($generated@@353 $generated@@3 $generated@@461)) $generated@@461) ($generated@@142 ($generated@@353 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@165) ($generated@@255 $generated@@462 $generated@@44)) (and (= ($generated@@303 ($generated@@353 $generated@@4 $generated@@462)) $generated@@462) ($generated@@142 ($generated@@353 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@165) ($generated@@255 $generated@@464 $generated@@45)) (and (= ($generated@@303 ($generated@@353 $generated@@463 $generated@@464)) $generated@@464) ($generated@@142 ($generated@@353 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@70) (= ($generated@@255 ($generated@@303 $generated@@465) $generated@@466) ($generated@@142 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@255 ($generated@@303 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@85 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@82 $generated@@468 $generated@@2)) (<= 0 ($generated@@308 $generated@@467))))
 :pattern ( ($generated@@308 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@296 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@295 $generated@@470)) (<= 0 ($generated@@294 $generated@@469))))
 :pattern ( ($generated@@294 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@423 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@423 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@431 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@431 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@431 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@165) (= (type $generated@@492) $generated@@165)) (= ($generated@@287 ($generated@@254 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@254 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@155 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@155 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@155 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@155 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@165) (= (type $generated@@502) $generated@@165)) (= ($generated@@163 ($generated@@254 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@254 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@165) (= (type $generated@@504) $generated@@165)) (= ($generated@@164 ($generated@@254 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@254 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@296 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@295 $generated@@165)) (= (type $generated@@512) $generated@@70)) (= (type $generated@@513) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@294 $generated@@511))) ($generated@@281 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@80 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@81 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@81 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@264 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@264 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@264 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@269 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@269 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@269 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@174 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@174 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@174 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@505 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@505 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@505 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@353 $generated@@534 ($generated@@303 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@303 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) (= ($generated@@142 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@535) $generated@@538))) (and ($generated@@255 ($generated@@87 ($generated@@398 $generated@@535) $generated@@538) $generated@@537) ($generated@@255 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@535) $generated@@538))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@142 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@334 $generated@@165 $generated@@165)) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@70)) (= ($generated@@142 $generated@@539 ($generated@@431 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@539) $generated@@542))) (and ($generated@@255 ($generated@@87 ($generated@@406 $generated@@539) $generated@@542) $generated@@541) ($generated@@255 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@539) $generated@@542))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@142 $generated@@539 ($generated@@431 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@165) (= (type $generated@@546) $generated@@165)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@254 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@254 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@165) (= (type $generated@@548) $generated@@165)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@254 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@254 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@165) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@70)) ($generated@@255 $generated@@549 ($generated@@423 $generated@@550 $generated@@551))) (and (= ($generated@@303 ($generated@@353 ($generated@@316 $generated@@165 $generated@@165) $generated@@549)) $generated@@549) ($generated@@142 ($generated@@353 ($generated@@316 $generated@@165 $generated@@165) $generated@@549) ($generated@@423 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@255 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@165) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) ($generated@@255 $generated@@552 ($generated@@431 $generated@@553 $generated@@554))) (and (= ($generated@@303 ($generated@@353 ($generated@@334 $generated@@165 $generated@@165) $generated@@552)) $generated@@552) ($generated@@142 ($generated@@353 ($generated@@334 $generated@@165 $generated@@165) $generated@@552) ($generated@@431 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@255 $generated@@552 ($generated@@431 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@70) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@165)) ($generated@@255 $generated@@557 ($generated@@155 $generated@@555 $generated@@556))) (and (= ($generated@@303 ($generated@@353 $generated@@156 $generated@@557)) $generated@@557) ($generated@@142 ($generated@@353 $generated@@156 $generated@@557) ($generated@@155 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@255 $generated@@557 ($generated@@155 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@87 ($generated@@439 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@87 ($generated@@439 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@75)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (and (= ($generated@@78 ($generated@@155 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@155 $generated@@562 $generated@@563)) $generated@@67)))
 :pattern ( ($generated@@155 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@156) (= ($generated@@543 ($generated@@303 $generated@@564)) ($generated@@544 $generated@@564)))
 :pattern ( ($generated@@543 ($generated@@303 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@165) ($generated@@255 $generated@@565 ($generated@@81 0))) (and (= ($generated@@303 ($generated@@353 $generated@@2 $generated@@565)) $generated@@565) ($generated@@142 ($generated@@353 ($generated@@82 $generated@@165 $generated@@4) $generated@@565) ($generated@@81 0))))
 :pattern ( ($generated@@255 $generated@@565 ($generated@@81 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@165) (= (type $generated@@567) $generated@@70)) ($generated@@255 $generated@@566 ($generated@@264 $generated@@567))) (and (= ($generated@@303 ($generated@@353 ($generated@@82 $generated@@165 $generated@@4) $generated@@566)) $generated@@566) ($generated@@142 ($generated@@353 ($generated@@82 $generated@@165 $generated@@4) $generated@@566) ($generated@@264 $generated@@567))))
 :pattern ( ($generated@@255 $generated@@566 ($generated@@264 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@165) (= (type $generated@@569) $generated@@70)) ($generated@@255 $generated@@568 ($generated@@269 $generated@@569))) (and (= ($generated@@303 ($generated@@353 ($generated@@82 $generated@@165 $generated@@4) $generated@@568)) $generated@@568) ($generated@@142 ($generated@@353 ($generated@@82 $generated@@165 $generated@@4) $generated@@568) ($generated@@269 $generated@@569))))
 :pattern ( ($generated@@255 $generated@@568 ($generated@@269 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@165) (= (type $generated@@571) $generated@@70)) ($generated@@255 $generated@@570 ($generated@@174 $generated@@571))) (and (= ($generated@@303 ($generated@@353 ($generated@@82 $generated@@165 $generated@@2) $generated@@570)) $generated@@570) ($generated@@142 ($generated@@353 ($generated@@82 $generated@@165 $generated@@2) $generated@@570) ($generated@@174 $generated@@571))))
 :pattern ( ($generated@@255 $generated@@570 ($generated@@174 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@165) (= (type $generated@@573) $generated@@70)) ($generated@@255 $generated@@572 ($generated@@505 $generated@@573))) (and (= ($generated@@303 ($generated@@353 ($generated@@295 $generated@@165) $generated@@572)) $generated@@572) ($generated@@142 ($generated@@353 ($generated@@295 $generated@@165) $generated@@572) ($generated@@505 $generated@@573))))
 :pattern ( ($generated@@255 $generated@@572 ($generated@@505 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@83) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@574 $generated@@141)) ($generated@@80 $generated@@574 $generated@@149 $generated@@575))) ($generated@@80 $generated@@574 $generated@@170 $generated@@575))
 :pattern ( ($generated@@80 $generated@@574 $generated@@149 $generated@@575))
)))
(assert (= ($generated@@78 $generated@@146) $generated@@63))
(assert (= ($generated@@560 $generated@@146) $generated@@68))
(assert (= ($generated@@78 $generated@@170) $generated@@64))
(assert (= ($generated@@560 $generated@@170) $generated@@68))
(assert (= ($generated@@78 $generated@@149) $generated@@65))
(assert (= ($generated@@560 $generated@@149) $generated@@69))
(assert (= ($generated@@78 $generated@@143) $generated@@66))
(assert (= ($generated@@560 $generated@@143) $generated@@69))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@82 $generated@@165 $generated@@2)) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@576 ($generated@@174 $generated@@577) $generated@@578) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@165) (< 0 ($generated ($generated@@87 $generated@@576 $generated@@579)))) ($generated@@281 $generated@@579 $generated@@577 $generated@@578))
 :pattern ( ($generated@@87 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@80 $generated@@576 ($generated@@174 $generated@@577) $generated@@578))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (and (= (type $generated@@580) $generated@@83) (or ($generated@@140 ($generated@@276 $generated@@580) ($generated@@274 $generated@@581)) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@580 $generated@@141)) ($generated@@142 $generated@@580 $generated@@143)) ($generated@@0 ($generated@@276 ($generated@@11 (< $generated@@581 100)))))))) (= ($generated@@139 ($generated@@276 $generated@@580) ($generated@@274 $generated@@581)) ($generated@@274 $generated@@581)))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@276 $generated@@580) ($generated@@274 $generated@@581)))
))))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@83) (= ($generated@@142 $generated@@582 $generated@@146)  (or (= $generated@@582 $generated@@141) ($generated@@153 ($generated@@179 $generated@@582)))))
 :pattern ( ($generated@@142 $generated@@582 $generated@@146))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@156) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@280 $generated@@585) (and ($generated@@154 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@70) ($generated@@80 $generated@@583 ($generated@@155 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@155 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@281 ($generated@@163 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@281 ($generated@@163 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@156) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@280 $generated@@589) (and ($generated@@154 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@70) ($generated@@80 $generated@@587 ($generated@@155 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@155 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@281 ($generated@@164 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@281 ($generated@@164 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@165) (= (type $generated@@592) $generated@@165)) (= ($generated@@254 ($generated@@276 $generated@@591) ($generated@@276 $generated@@592)) ($generated@@276 ($generated@@254 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@254 ($generated@@276 $generated@@591) ($generated@@276 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@593))) ($generated@@276 ($generated@@303 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@303 ($generated@@276 $generated@@594)) ($generated@@276 ($generated@@303 $generated@@594)))
 :pattern ( ($generated@@303 ($generated@@276 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@296 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@295 $generated@@596)) (= ($generated@@294 $generated@@595) 0)) (= $generated@@595 ($generated@@293 $generated@@596))))
 :pattern ( ($generated@@294 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@82 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@308 ($generated@@88 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@308 $generated@@597) ($generated ($generated@@87 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@308 ($generated@@88 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@2)) ($generated@@80 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@3)) ($generated@@80 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@606) $generated@@4)) ($generated@@80 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@80 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@463)) ($generated@@80 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@165)) ($generated@@80 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@295 $generated@@165)) (= (type $generated@@612) $generated@@70)) (= ($generated@@142 $generated@@611 ($generated@@505 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@294 $generated@@611))) ($generated@@255 ($generated@@506 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@506 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@142 $generated@@611 ($generated@@505 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@295 $generated@@165)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@294 $generated@@615))) (< ($generated@@544 ($generated@@353 $generated@@156 ($generated@@506 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@544 ($generated@@353 $generated@@156 ($generated@@506 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) ($generated@@142 $generated@@617 ($generated@@423 $generated@@618 $generated@@619))) (and (and ($generated@@142 ($generated@@314 $generated@@617) ($generated@@264 $generated@@618)) ($generated@@142 ($generated@@366 $generated@@617) ($generated@@264 $generated@@619))) ($generated@@142 ($generated@@397 $generated@@617) ($generated@@264 ($generated@@155 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@142 $generated@@617 ($generated@@423 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@334 $generated@@165 $generated@@165)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) $generated@@70)) ($generated@@142 $generated@@620 ($generated@@431 $generated@@621 $generated@@622))) (and (and ($generated@@142 ($generated@@332 $generated@@620) ($generated@@269 $generated@@621)) ($generated@@142 ($generated@@377 $generated@@620) ($generated@@269 $generated@@622))) ($generated@@142 ($generated@@405 $generated@@620) ($generated@@269 ($generated@@155 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@142 $generated@@620 ($generated@@431 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@142 $generated@@623 $generated@@46))
 :pattern ( ($generated@@142 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@142 $generated@@624 $generated@@47))
 :pattern ( ($generated@@142 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@142 $generated@@625 $generated@@44))
 :pattern ( ($generated@@142 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@463) ($generated@@142 $generated@@626 $generated@@45))
 :pattern ( ($generated@@142 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@165) ($generated@@142 $generated@@627 $generated@@48))
 :pattern ( ($generated@@142 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@628) $generated@@83) (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) ($generated@@184 $generated@@83 $generated@@4))) (= (type $generated@@632) ($generated@@184 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@634  (=> (= (ControlFlow 0 6) (- 0 5)) (< ($generated@@139 $generated@@628 $generated@@629) 100))))
(let (($generated@@635  (=> (and (and (= $generated@@630 ($generated@@238 $generated@@141 $generated@@631 $generated@@60 false)) (= ($generated@@139 $generated@@628 $generated@@629) $generated@@629)) (and ($generated@@142 ($generated@@8 ($generated@@139 $generated@@628 $generated@@629)) $generated@@46) (= (ControlFlow 0 7) 6))) $generated@@634)))
(let (($generated@@636  (=> (and ($generated@@80 $generated@@628 $generated@@149 $generated@@631) ($generated@@80 ($generated@@8 $generated@@629) $generated@@46 $generated@@631)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@629 100)) (=> (< $generated@@629 100) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@629) (= $generated@@629 $generated@@629))) (=> (or (<= 0 $generated@@629) (= $generated@@629 $generated@@629)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@628 $generated@@628) (= $generated@@629 $generated@@629)) (< $generated@@629 $generated@@629))))))))))
(let (($generated@@637  (=> (and (= $generated@@632 ($generated@@183 $generated@@141 $generated@@631 $generated@@60 false)) (< $generated@@629 100)) (and (=> (= (ControlFlow 0 8) 2) $generated@@636) (=> (= (ControlFlow 0 8) 7) $generated@@635)))))
(let (($generated@@638  (=> (and ($generated@@280 $generated@@631) ($generated@@633 $generated@@631)) (=> (and (and (not (= $generated@@628 $generated@@141)) (and ($generated@@142 $generated@@628 $generated@@143) ($generated@@80 $generated@@628 $generated@@143 $generated@@631))) (and (= 0 $generated@@138) (= (ControlFlow 0 9) 8))) $generated@@637))))
$generated@@638))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U Int) Int)
(declare-fun $generated@@140 (T@U Int) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@141) $generated@@83) (= (type $generated@@143) $generated@@70)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (or ($generated@@140 $generated@@144 $generated@@145) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@144 $generated@@141)) ($generated@@142 $generated@@144 $generated@@143)) (< $generated@@145 100))))) (< ($generated@@139 $generated@@144 $generated@@145) 100))
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (= (type $generated@@148) $generated@@70))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@149) $generated@@83) (or ($generated@@147 $generated@@149 $generated@@150) (and (not (= 1 $generated@@138)) (and (and (not (= $generated@@149 $generated@@141)) ($generated@@142 $generated@@149 $generated@@148)) (< $generated@@150 100))))) (< ($generated@@146 $generated@@149 $generated@@150) 100))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
))))
(assert (= (type $generated@@151) $generated@@70))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@83) (= (type $generated@@153) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@152 $generated@@151 $generated@@153)  (or (= $generated@@152 $generated@@141) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@70))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@83) (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@141) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@142 $generated@@157 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@157 ($generated@@81 0)))
)))
(assert ($generated@@158 $generated@@154))
(assert  (and (= ($generated@@1 $generated@@161) 14) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@142 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@142 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 15) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@83) (=> (and (not (= $generated@@175 $generated@@141)) ($generated@@142 $generated@@175 $generated@@154)) ($generated@@142 $generated@@175 $generated@@148)))
 :pattern ( ($generated@@142 $generated@@175 $generated@@154))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@176 T@U) ($generated@@177 Int) ) (!  (=> (and (= (type $generated@@176) $generated@@83) (or ($generated@@140 $generated@@176 $generated@@177) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@176 $generated@@141)) ($generated@@142 $generated@@176 $generated@@143)) (< $generated@@177 100))))) (= ($generated@@139 $generated@@176 $generated@@177) $generated@@177))
 :pattern ( ($generated@@139 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@182) $generated@@70)) ($generated@@142 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@142 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@83) (= ($generated@@142 $generated@@185 $generated@@154)  (or (= $generated@@185 $generated@@141) (= ($generated@@183 $generated@@185) $generated@@154))))
 :pattern ( ($generated@@142 $generated@@185 $generated@@154))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@83 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@73 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@83) (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@237) ($generated@@72 $generated@@4))) (= (type $generated@@239) $generated@@83)) (= (type $generated@@240) ($generated@@72 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (= (type $generated@@243) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@242 $generated@@148 $generated@@243) ($generated@@80 $generated@@242 $generated@@151 $generated@@243)))
 :pattern ( ($generated@@80 $generated@@242 $generated@@148 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@244 $generated@@143 $generated@@245) ($generated@@80 $generated@@244 $generated@@154 $generated@@245)))
 :pattern ( ($generated@@80 $generated@@244 $generated@@143 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@161)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@170)) (= (type $generated@@253) $generated@@170)) (= ($generated@@142 ($generated@@246 $generated@@252 $generated@@253) ($generated@@160 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@142 ($generated@@246 $generated@@252 $generated@@253) ($generated@@160 $generated@@250 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@161) (= (type $generated@@255) $generated@@161)) (= ($generated@@167 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@167 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@142 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@170) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@247 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@142 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@142 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@170) ($generated@@0 ($generated@@87 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@87 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@142 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@170)) (= (type $generated@@277) $generated@@170)) (= (type $generated@@278) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@272 $generated@@278)) (= ($generated@@80 ($generated@@246 $generated@@276 $generated@@277) ($generated@@160 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@80 ($generated@@246 $generated@@276 $generated@@277) ($generated@@160 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@74)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@161) (= ($generated@@159 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@159 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@161) ($generated@@159 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@170) (= (type $generated@@284) $generated@@170)) (= $generated@@282 ($generated@@246 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@159 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 17)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@293 T@U) ($generated@@294 Int) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (or ($generated@@140 $generated@@293 ($generated@@266 $generated@@294)) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@293 $generated@@141)) ($generated@@142 $generated@@293 $generated@@143)) ($generated@@0 ($generated@@268 ($generated@@11 (< $generated@@294 100)))))))) (= ($generated@@139 $generated@@293 ($generated@@266 $generated@@294)) ($generated@@266 $generated@@294)))
 :weight 3
 :pattern ( ($generated@@139 $generated@@293 ($generated@@266 $generated@@294)))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@170)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@273 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@80 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@273 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@82 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@85 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@82 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@87 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@82 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@82 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@85 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@82 $generated@@343 $generated@@2)) (= ($generated@@179 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@87 $generated@@342 $generated@@344))) (<= ($generated ($generated@@87 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@87 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@179 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@170) ($generated@@247 $generated@@348 $generated@@151)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@348)) $generated@@348) ($generated@@142 ($generated@@345 $generated@@83 $generated@@348) $generated@@151)))
 :pattern ( ($generated@@247 $generated@@348 $generated@@151))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@170) ($generated@@247 $generated@@349 $generated@@148)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@349)) $generated@@349) ($generated@@142 ($generated@@345 $generated@@83 $generated@@349) $generated@@148)))
 :pattern ( ($generated@@247 $generated@@349 $generated@@148))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@170) ($generated@@247 $generated@@350 $generated@@154)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@350)) $generated@@350) ($generated@@142 ($generated@@345 $generated@@83 $generated@@350) $generated@@154)))
 :pattern ( ($generated@@247 $generated@@350 $generated@@154))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@170) ($generated@@247 $generated@@351 $generated@@143)) (and (= ($generated@@295 ($generated@@345 $generated@@83 $generated@@351)) $generated@@351) ($generated@@142 ($generated@@345 $generated@@83 $generated@@351) $generated@@143)))
 :pattern ( ($generated@@247 $generated@@351 $generated@@143))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@142 $generated@@352 $generated@@148)  (and ($generated@@142 $generated@@352 $generated@@151) (not (= $generated@@352 $generated@@141)))))
 :pattern ( ($generated@@142 $generated@@352 $generated@@148))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@83) (= ($generated@@142 $generated@@353 $generated@@143)  (and ($generated@@142 $generated@@353 $generated@@154) (not (= $generated@@353 $generated@@141)))))
 :pattern ( ($generated@@142 $generated@@353 $generated@@143))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@306 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@310 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@310 (type $generated@@361))))
(let (($generated@@363 ($generated@@309 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@308 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@307 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@328 (type $generated@@365))))
(let (($generated@@367 ($generated@@327 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@326 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@325 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@324 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@328 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(let (($generated@@374 ($generated@@327 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@326 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@325 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@377) $generated@@70)) (= ($generated@@142 $generated@@376 ($generated@@178 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@170) (< 0 ($generated ($generated@@87 $generated@@376 $generated@@378)))) ($generated@@247 $generated@@378 $generated@@377))
 :pattern ( ($generated@@87 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@142 $generated@@376 ($generated@@178 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@256 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@170) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@273 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@256 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@261 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@170) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@273 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@261 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@301 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@301 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@170 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@170 $generated@@170)) (= (type $generated@@396) $generated@@170)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@395) ($generated@@168 ($generated@@345 $generated@@161 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@168 ($generated@@345 $generated@@161 $generated@@396))) ($generated@@169 ($generated@@345 $generated@@161 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@170 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@170 $generated@@170)) (= (type $generated@@404) $generated@@170)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@403) ($generated@@168 ($generated@@345 $generated@@161 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@168 ($generated@@345 $generated@@161 $generated@@404))) ($generated@@169 ($generated@@345 $generated@@161 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@170 $generated@@170)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@273 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@273 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@170 $generated@@170)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@273 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@273 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@328 (type $generated@@433))))
(let (($generated@@435 ($generated@@327 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@326 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@325 $generated@@435 $generated@@434)) (= ($generated@@324 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@324 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@328 (type $generated@@436))))
(let (($generated@@438 ($generated@@327 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@326 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@325 $generated@@438 $generated@@437)) (= ($generated@@369 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@369 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@170))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@310 (type $generated@@442))))
(let (($generated@@444 ($generated@@309 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@308 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@307 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@170) (= (type $generated@@446) $generated@@170)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@295 ($generated@@246 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@170) (= (type $generated@@451) $generated@@170)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@295 ($generated@@246 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) ($generated@@247 $generated@@452 $generated@@46)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@452)) $generated@@452) ($generated@@142 ($generated@@345 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@170) ($generated@@247 $generated@@453 $generated@@47)) (and (= ($generated@@295 ($generated@@345 $generated@@3 $generated@@453)) $generated@@453) ($generated@@142 ($generated@@345 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) ($generated@@247 $generated@@454 $generated@@44)) (and (= ($generated@@295 ($generated@@345 $generated@@4 $generated@@454)) $generated@@454) ($generated@@142 ($generated@@345 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@170) ($generated@@247 $generated@@456 $generated@@45)) (and (= ($generated@@295 ($generated@@345 $generated@@455 $generated@@456)) $generated@@456) ($generated@@142 ($generated@@345 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@247 ($generated@@295 $generated@@457) $generated@@458) ($generated@@142 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@247 ($generated@@295 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@300 $generated@@459))))
 :pattern ( ($generated@@300 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@288 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@287 $generated@@462)) (<= 0 ($generated@@286 $generated@@461))))
 :pattern ( ($generated@@286 $generated@@461))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@141)) ($generated@@142 $generated@@463 $generated@@143)) (= ($generated@@146 $generated@@463 $generated@@464) ($generated@@139 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@146 $generated@@463 $generated@@464) ($generated@@142 $generated@@463 $generated@@143))
 :pattern ( ($generated@@146 $generated@@463 $generated@@464) ($generated@@139 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@170) (= (type $generated@@486) $generated@@170)) (= ($generated@@279 ($generated@@246 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@160 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@160 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@160 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@160 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) (= (type $generated@@496) $generated@@170)) (= ($generated@@168 ($generated@@246 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@246 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@170) (= (type $generated@@498) $generated@@170)) (= ($generated@@169 ($generated@@246 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@246 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@288 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@287 $generated@@170)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@286 $generated@@505))) ($generated@@273 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@256 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@256 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@261 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@261 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@261 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@178 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@178 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@178 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@345 $generated@@528 ($generated@@295 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@295 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@308 $generated@@170 $generated@@170)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@142 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@529) $generated@@532))) (and ($generated@@247 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@247 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@142 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@326 $generated@@170 $generated@@170)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@142 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@533) $generated@@536))) (and ($generated@@247 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@247 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@142 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@170) (= (type $generated@@540) $generated@@170)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@246 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@246 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@170) (= (type $generated@@542) $generated@@170)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@246 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@246 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@170) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@247 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@295 ($generated@@345 ($generated@@308 $generated@@170 $generated@@170) $generated@@543)) $generated@@543) ($generated@@142 ($generated@@345 ($generated@@308 $generated@@170 $generated@@170) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@247 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@170) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@247 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@295 ($generated@@345 ($generated@@326 $generated@@170 $generated@@170) $generated@@546)) $generated@@546) ($generated@@142 ($generated@@345 ($generated@@326 $generated@@170 $generated@@170) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@247 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@170)) ($generated@@247 $generated@@551 ($generated@@160 $generated@@549 $generated@@550))) (and (= ($generated@@295 ($generated@@345 $generated@@161 $generated@@551)) $generated@@551) ($generated@@142 ($generated@@345 $generated@@161 $generated@@551) ($generated@@160 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@247 $generated@@551 ($generated@@160 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@431 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@160 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@160 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@161) (= ($generated@@537 ($generated@@295 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@295 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@170) ($generated@@247 $generated@@559 ($generated@@81 0))) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@559)) $generated@@559) ($generated@@142 ($generated@@345 ($generated@@82 $generated@@170 $generated@@4) $generated@@559) ($generated@@81 0))))
 :pattern ( ($generated@@247 $generated@@559 ($generated@@81 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@170) (= (type $generated@@561) $generated@@70)) ($generated@@247 $generated@@560 ($generated@@256 $generated@@561))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@170 $generated@@4) $generated@@560)) $generated@@560) ($generated@@142 ($generated@@345 ($generated@@82 $generated@@170 $generated@@4) $generated@@560) ($generated@@256 $generated@@561))))
 :pattern ( ($generated@@247 $generated@@560 ($generated@@256 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@170) (= (type $generated@@563) $generated@@70)) ($generated@@247 $generated@@562 ($generated@@261 $generated@@563))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@170 $generated@@4) $generated@@562)) $generated@@562) ($generated@@142 ($generated@@345 ($generated@@82 $generated@@170 $generated@@4) $generated@@562) ($generated@@261 $generated@@563))))
 :pattern ( ($generated@@247 $generated@@562 ($generated@@261 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@170) (= (type $generated@@565) $generated@@70)) ($generated@@247 $generated@@564 ($generated@@178 $generated@@565))) (and (= ($generated@@295 ($generated@@345 ($generated@@82 $generated@@170 $generated@@2) $generated@@564)) $generated@@564) ($generated@@142 ($generated@@345 ($generated@@82 $generated@@170 $generated@@2) $generated@@564) ($generated@@178 $generated@@565))))
 :pattern ( ($generated@@247 $generated@@564 ($generated@@178 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@170) (= (type $generated@@567) $generated@@70)) ($generated@@247 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@295 ($generated@@345 ($generated@@287 $generated@@170) $generated@@566)) $generated@@566) ($generated@@142 ($generated@@345 ($generated@@287 $generated@@170) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@247 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@568 $generated@@141)) ($generated@@80 $generated@@568 $generated@@154 $generated@@569))) ($generated@@80 $generated@@568 $generated@@148 $generated@@569))
 :pattern ( ($generated@@80 $generated@@568 $generated@@154 $generated@@569))
)))
(assert (= ($generated@@78 $generated@@151) $generated@@63))
(assert (= ($generated@@554 $generated@@151) $generated@@68))
(assert (= ($generated@@78 $generated@@148) $generated@@64))
(assert (= ($generated@@554 $generated@@148) $generated@@68))
(assert (= ($generated@@78 $generated@@154) $generated@@65))
(assert (= ($generated@@554 $generated@@154) $generated@@69))
(assert (= ($generated@@78 $generated@@143) $generated@@66))
(assert (= ($generated@@554 $generated@@143) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@178 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@170) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@273 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@178 $generated@@571) $generated@@572))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (and (= (type $generated@@574) $generated@@83) (or ($generated@@140 ($generated@@268 $generated@@574) ($generated@@266 $generated@@575)) (and (not (= 0 $generated@@138)) (and (and (not (= $generated@@574 $generated@@141)) ($generated@@142 $generated@@574 $generated@@143)) ($generated@@0 ($generated@@268 ($generated@@11 (< $generated@@575 100)))))))) (= ($generated@@139 ($generated@@268 $generated@@574) ($generated@@266 $generated@@575)) ($generated@@266 $generated@@575)))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@268 $generated@@574) ($generated@@266 $generated@@575)))
))))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@142 $generated@@576 $generated@@151)  (or (= $generated@@576 $generated@@141) ($generated@@158 ($generated@@183 $generated@@576)))))
 :pattern ( ($generated@@142 $generated@@576 $generated@@151))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@161) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@579) (and ($generated@@159 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@160 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@160 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@273 ($generated@@168 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@273 ($generated@@168 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@161) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@583) (and ($generated@@159 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@160 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@160 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@273 ($generated@@169 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@273 ($generated@@169 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@170) (= (type $generated@@586) $generated@@170)) (= ($generated@@246 ($generated@@268 $generated@@585) ($generated@@268 $generated@@586)) ($generated@@268 ($generated@@246 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@246 ($generated@@268 $generated@@585) ($generated@@268 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@266 $generated@@587))) ($generated@@268 ($generated@@295 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@266 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@295 ($generated@@268 $generated@@588)) ($generated@@268 ($generated@@295 $generated@@588)))
 :pattern ( ($generated@@295 ($generated@@268 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@288 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@287 $generated@@590)) (= ($generated@@286 $generated@@589) 0)) (= $generated@@589 ($generated@@285 $generated@@590))))
 :pattern ( ($generated@@286 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@300 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@300 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@300 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@170)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@287 $generated@@170)) (= (type $generated@@606) $generated@@70)) (= ($generated@@142 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@286 $generated@@605))) ($generated@@247 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@142 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@287 $generated@@170)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@286 $generated@@609))) (< ($generated@@538 ($generated@@345 $generated@@161 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@345 $generated@@161 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@308 $generated@@170 $generated@@170)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@142 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@142 ($generated@@306 $generated@@611) ($generated@@256 $generated@@612)) ($generated@@142 ($generated@@358 $generated@@611) ($generated@@256 $generated@@613))) ($generated@@142 ($generated@@389 $generated@@611) ($generated@@256 ($generated@@160 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@142 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@326 $generated@@170 $generated@@170)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@142 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@142 ($generated@@324 $generated@@614) ($generated@@261 $generated@@615)) ($generated@@142 ($generated@@369 $generated@@614) ($generated@@261 $generated@@616))) ($generated@@142 ($generated@@397 $generated@@614) ($generated@@261 ($generated@@160 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@142 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@142 $generated@@617 $generated@@46))
 :pattern ( ($generated@@142 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@142 $generated@@618 $generated@@47))
 :pattern ( ($generated@@142 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@142 $generated@@619 $generated@@44))
 :pattern ( ($generated@@142 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@142 $generated@@620 $generated@@45))
 :pattern ( ($generated@@142 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@170) ($generated@@142 $generated@@621 $generated@@48))
 :pattern ( ($generated@@142 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@188 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@627  (=> (< $generated@@622 100) (and (=> (= (ControlFlow 0 2) (- 0 5)) (< $generated@@622 100)) (=> (< $generated@@622 100) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@187 $generated@@141 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@628 T@T) )  (=> false false))) (=> (forall (($generated@@629 T@T) )  (=> false false)) (=> (< ($generated@@139 $generated@@625 $generated@@622) 100) (=> (and (= ($generated@@139 $generated@@625 $generated@@622) ($generated@@146 $generated@@625 $generated@@622)) (= (ControlFlow 0 2) (- 0 1))) (< ($generated@@146 $generated@@625 $generated@@622) 100)))))))))))))
(let (($generated@@630  (=> (and ($generated@@272 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (not (= $generated@@625 $generated@@141)) (and ($generated@@142 $generated@@625 $generated@@143) ($generated@@80 $generated@@625 $generated@@143 $generated@@624))) (and (= 1 $generated@@138) (= (ControlFlow 0 6) 2))) $generated@@627))))
$generated@@630)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (Int Int) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 Int) ($generated@@560 Int) ) (! (= ($generated@@558 $generated@@559 $generated@@560) (* $generated@@559 $generated@@560))
 :pattern ( ($generated@@558 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@561)) ($generated@@538 $generated@@561)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@163) ($generated@@240 $generated@@562 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@81 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@163) (= (type $generated@@564) $generated@@70)) ($generated@@240 $generated@@563 ($generated@@249 $generated@@564))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@563) ($generated@@249 $generated@@564))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@249 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@70)) ($generated@@240 $generated@@565 ($generated@@254 $generated@@566))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@565)) $generated@@565) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@565) ($generated@@254 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@254 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@70)) ($generated@@240 $generated@@567 ($generated@@170 $generated@@568))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@567)) $generated@@567) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@567) ($generated@@170 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@170 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@240 $generated@@569 ($generated@@499 $generated@@570))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@569) ($generated@@499 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 ($generated@@499 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@83) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@571 $generated@@143)) ($generated@@80 $generated@@571 $generated@@146 $generated@@572))) ($generated@@80 $generated@@571 $generated@@168 $generated@@572))
 :pattern ( ($generated@@80 $generated@@571 $generated@@146 $generated@@572))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@573 ($generated@@170 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@573 $generated@@576)))) ($generated@@266 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@87 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@170 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@83) (= ($generated@@149 $generated@@577 $generated@@142)  (or (= $generated@@577 $generated@@143) ($generated@@151 ($generated@@175 $generated@@577)))))
 :pattern ( ($generated@@149 $generated@@577 $generated@@142))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@580) (and ($generated@@152 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@70) ($generated@@80 $generated@@578 ($generated@@153 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@153 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@266 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@584) (and ($generated@@152 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@70) ($generated@@80 $generated@@582 ($generated@@153 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@80 $generated@@582 ($generated@@153 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@266 ($generated@@162 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@586) ($generated@@261 $generated@@587)) ($generated@@261 ($generated@@239 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@586) ($generated@@261 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@588))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@286 $generated@@589)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@281 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@280 $generated@@591)) (= ($generated@@279 $generated@@590) 0)) (= $generated@@590 ($generated@@278 $generated@@591))))
 :pattern ( ($generated@@279 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@82 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@299 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@299 $generated@@592) ($generated ($generated@@87 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@2)) ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@3)) ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@4)) ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@457)) ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@163)) ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@280 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= ($generated@@149 $generated@@606 ($generated@@499 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@606))) ($generated@@240 ($generated@@500 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@500 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@499 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@279 $generated@@610))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@414 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@305 $generated@@612) ($generated@@249 $generated@@613)) ($generated@@149 ($generated@@357 $generated@@612) ($generated@@249 $generated@@614))) ($generated@@149 ($generated@@388 $generated@@612) ($generated@@249 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@414 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) $generated@@70)) ($generated@@149 $generated@@615 ($generated@@422 $generated@@616 $generated@@617))) (and (and ($generated@@149 ($generated@@323 $generated@@615) ($generated@@254 $generated@@616)) ($generated@@149 ($generated@@368 $generated@@615) ($generated@@254 $generated@@617))) ($generated@@149 ($generated@@396 $generated@@615) ($generated@@254 ($generated@@153 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@422 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@149 $generated@@618 $generated@@46))
 :pattern ( ($generated@@149 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@149 $generated@@619 $generated@@47))
 :pattern ( ($generated@@149 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@149 $generated@@620 $generated@@44))
 :pattern ( ($generated@@149 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@457) ($generated@@149 $generated@@621 $generated@@45))
 :pattern ( ($generated@@149 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@163) ($generated@@149 $generated@@622 $generated@@48))
 :pattern ( ($generated@@149 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (= (type $generated@@624) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@625) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@629) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@631  (=> (<= ($generated@@259 0) $generated@@623) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@259 (- 0 2000)) $generated@@623)) (=> (<= ($generated@@259 (- 0 2000)) $generated@@623) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@623 $generated@@623) (=> (= $generated@@623 $generated@@623) true))) (=> (and (<= $generated@@623 $generated@@623) (=> (= $generated@@623 $generated@@623) true)) (=> (= $generated@@624 ($generated@@179 $generated@@143 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@632 T@T) )  (=> false false))) (=> (forall (($generated@@633 T@T) )  (=> false false)) (=> (and ($generated@@265 $generated@@626) ($generated@@627 $generated@@626)) (=> (and (and (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@83) (=> (and (not (= $generated@@634 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@625 $generated@@634) $generated@@60))) (= ($generated@@87 $generated@@626 $generated@@634) ($generated@@87 $generated@@625 $generated@@634))))
 :pattern ( ($generated@@87 $generated@@626 $generated@@634))
)) ($generated@@138 $generated@@625 $generated@@626)) (and (< ($generated@@558 ($generated@@259 2) $generated@@623) $generated@@628) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@623 $generated@@628)))))))))))))
(let (($generated@@635  (=> (and ($generated@@265 $generated@@625) ($generated@@627 $generated@@625)) (=> (and (and (not (= $generated@@629 $generated@@143)) (and ($generated@@149 $generated@@629 $generated@@236) ($generated@@80 $generated@@629 $generated@@236 $generated@@625))) (and (= 1 $generated@@630) (= (ControlFlow 0 6) 2))) $generated@@631))))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (Int Int) Int)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@159)) (= (type $generated@@266) $generated@@159)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@150) (= ($generated@@148 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@159) (= (type $generated@@273) $generated@@159)) (= $generated@@271 ($generated@@235 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@159)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@82 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@85 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@82 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@87 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@82 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@82 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (= ($generated@@167 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@87 $generated@@329 $generated@@331))) (<= ($generated ($generated@@87 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@87 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@167 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@159) ($generated@@236 $generated@@335 $generated@@138)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@83 $generated@@335) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@335 $generated@@138))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@159) ($generated@@236 $generated@@336 $generated@@164)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@336)) $generated@@336) ($generated@@145 ($generated@@332 $generated@@83 $generated@@336) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@164))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@159) ($generated@@236 $generated@@337 $generated@@142)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@332 $generated@@83 $generated@@337) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@337 $generated@@142))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@236 $generated@@338 $generated@@232)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@332 $generated@@83 $generated@@338) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@338 $generated@@232))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@83) (= ($generated@@145 $generated@@339 $generated@@164)  (and ($generated@@145 $generated@@339 $generated@@138) (not (= $generated@@339 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@339 $generated@@164))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@83) (= ($generated@@145 $generated@@340 $generated@@232)  (and ($generated@@145 $generated@@340 $generated@@142) (not (= $generated@@340 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@340 $generated@@232))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(let (($generated@@343 ($generated@@296 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@295 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@294 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@293 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@297 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@297 (type $generated@@348))))
(let (($generated@@350 ($generated@@296 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@295 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@294 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@87 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(let (($generated@@354 ($generated@@314 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@313 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@312 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@311 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@82 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(let (($generated@@361 ($generated@@314 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@313 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@312 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@364) $generated@@70)) (= ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@363 $generated@@365)))) ($generated@@236 $generated@@365 $generated@@364))
 :pattern ( ($generated@@87 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@262 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@262 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@87 ($generated@@288 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@87 ($generated@@288 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@297 (type $generated@@379))))
(let (($generated@@381 ($generated@@296 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@82 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383)))) (= ($generated@@87 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@315 (type $generated@@387))))
(let (($generated@@389 ($generated@@314 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@391) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@296 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@295 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@87 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@392) $generated@@396))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@87 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@314 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@313 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@70)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))) (and ($generated@@262 ($generated@@87 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@262 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@82 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@315 (type $generated@@420))))
(let (($generated@@422 ($generated@@314 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@313 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@312 $generated@@422 $generated@@421)) (= ($generated@@311 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@311 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@315 (type $generated@@423))))
(let (($generated@@425 ($generated@@314 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@313 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@312 $generated@@425 $generated@@424)) (= ($generated@@356 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@356 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@315 (type $generated@@426))))
(let (($generated@@428 ($generated@@314 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@313 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@312 $generated@@428 $generated@@427)) (= ($generated@@384 $generated@@426) ($generated@@418 $generated@@159))))))
 :pattern ( ($generated@@384 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@297 (type $generated@@429))))
(let (($generated@@431 ($generated@@296 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@295 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@294 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@159) (= (type $generated@@433) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@376 $generated@@429) ($generated@@282 ($generated@@235 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@315 (type $generated@@434))))
(let (($generated@@436 ($generated@@314 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@313 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@312 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@434) ($generated@@282 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@384 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@159) ($generated@@236 $generated@@439 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@332 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@159) ($generated@@236 $generated@@440 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@332 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@159) ($generated@@236 $generated@@441 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@332 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@159) ($generated@@236 $generated@@443 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@442 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@332 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@70) (= ($generated@@236 ($generated@@282 $generated@@444) $generated@@445) ($generated@@145 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@236 ($generated@@282 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@85 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@82 $generated@@447 $generated@@2)) (<= 0 ($generated@@287 $generated@@446))))
 :pattern ( ($generated@@287 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@277 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@276 $generated@@449)) (<= 0 ($generated@@275 $generated@@448))))
 :pattern ( ($generated@@275 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@402 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@402 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@78 ($generated@@402 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@410 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@410 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@159) (= (type $generated@@471) $generated@@159)) (= ($generated@@268 ($generated@@235 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@149 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@149 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@159) (= (type $generated@@481) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@235 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@159) (= (type $generated@@483) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@235 $generated@@482 $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@277 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@276 $generated@@159)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@275 $generated@@490))) ($generated@@262 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@80 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@81 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@81 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@70) (= ($generated@@496 ($generated@@245 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@250 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@166 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@166 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@332 $generated@@513 ($generated@@282 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@282 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) $generated@@70)) (= ($generated@@145 $generated@@514 ($generated@@402 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@514) $generated@@517))) (and ($generated@@236 ($generated@@87 ($generated@@377 $generated@@514) $generated@@517) $generated@@516) ($generated@@236 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@514) $generated@@517))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@145 $generated@@514 ($generated@@402 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) $generated@@70)) (= ($generated@@145 $generated@@518 ($generated@@410 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@518) $generated@@521))) (and ($generated@@236 ($generated@@87 ($generated@@385 $generated@@518) $generated@@521) $generated@@520) ($generated@@236 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@518) $generated@@521))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@145 $generated@@518 ($generated@@410 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@235 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@235 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@159)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@235 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@235 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) ($generated@@236 $generated@@528 ($generated@@402 $generated@@529 $generated@@530))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@528)) $generated@@528) ($generated@@145 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@528) ($generated@@402 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@236 $generated@@528 ($generated@@402 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) ($generated@@236 $generated@@531 ($generated@@410 $generated@@532 $generated@@533))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@531)) $generated@@531) ($generated@@145 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@531) ($generated@@410 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@236 $generated@@531 ($generated@@410 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@159)) ($generated@@236 $generated@@536 ($generated@@149 $generated@@534 $generated@@535))) (and (= ($generated@@282 ($generated@@332 $generated@@150 $generated@@536)) $generated@@536) ($generated@@145 ($generated@@332 $generated@@150 $generated@@536) ($generated@@149 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@536 ($generated@@149 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@87 ($generated@@418 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@87 ($generated@@418 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@149 $generated@@541 $generated@@542)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 Int) ($generated@@545 Int) ) (! (= ($generated@@543 $generated@@544 $generated@@545) (* $generated@@544 $generated@@545))
 :pattern ( ($generated@@543 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@150) (= ($generated@@522 ($generated@@282 $generated@@546)) ($generated@@523 $generated@@546)))
 :pattern ( ($generated@@522 ($generated@@282 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@159) ($generated@@236 $generated@@547 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@547)) $generated@@547) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@547) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@547 ($generated@@81 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@70)) ($generated@@236 $generated@@548 ($generated@@245 $generated@@549))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@548) ($generated@@245 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@245 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@159) (= (type $generated@@551) $generated@@70)) ($generated@@236 $generated@@550 ($generated@@250 $generated@@551))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@550) ($generated@@250 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@250 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@70)) ($generated@@236 $generated@@552 ($generated@@166 $generated@@553))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@552) ($generated@@166 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@166 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@236 $generated@@554 ($generated@@484 $generated@@555))) (and (= ($generated@@282 ($generated@@332 ($generated@@276 $generated@@159) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@332 ($generated@@276 $generated@@159) $generated@@554) ($generated@@484 $generated@@555))))
 :pattern ( ($generated@@236 $generated@@554 ($generated@@484 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@83) (= (type $generated@@557) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@556 $generated@@139)) ($generated@@80 $generated@@556 $generated@@142 $generated@@557))) ($generated@@80 $generated@@556 $generated@@164 $generated@@557))
 :pattern ( ($generated@@80 $generated@@556 $generated@@142 $generated@@557))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@539 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@539 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@539 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@539 $generated@@232) $generated@@69))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@558 ($generated@@166 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@558 $generated@@561)))) ($generated@@262 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@87 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@80 $generated@@558 ($generated@@166 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@83) (= ($generated@@145 $generated@@562 $generated@@138)  (or (= $generated@@562 $generated@@139) ($generated@@147 ($generated@@171 $generated@@562)))))
 :pattern ( ($generated@@145 $generated@@562 $generated@@138))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@565) (and ($generated@@148 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@70) ($generated@@80 $generated@@563 ($generated@@149 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@80 $generated@@563 ($generated@@149 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@262 ($generated@@157 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@262 ($generated@@157 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@70)) (= (type $generated@@569) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@569) (and ($generated@@148 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@70) ($generated@@80 $generated@@567 ($generated@@149 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@80 $generated@@567 ($generated@@149 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@262 ($generated@@158 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@262 ($generated@@158 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@159) (= (type $generated@@572) $generated@@159)) (= ($generated@@235 ($generated@@257 $generated@@571) ($generated@@257 $generated@@572)) ($generated@@257 ($generated@@235 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@571) ($generated@@257 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@255 $generated@@573))) ($generated@@257 ($generated@@282 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@255 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@574)) ($generated@@257 ($generated@@282 $generated@@574)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@277 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@276 $generated@@576)) (= ($generated@@275 $generated@@575) 0)) (= $generated@@575 ($generated@@274 $generated@@576))))
 :pattern ( ($generated@@275 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@82 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@287 ($generated@@88 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@287 $generated@@577) ($generated ($generated@@87 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@287 ($generated@@88 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@582) $generated@@2)) ($generated@@80 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@80 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@584) $generated@@3)) ($generated@@80 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@80 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@586) $generated@@4)) ($generated@@80 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@80 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@442)) ($generated@@80 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@159)) ($generated@@80 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@276 $generated@@159)) (= (type $generated@@592) $generated@@70)) (= ($generated@@145 $generated@@591 ($generated@@484 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@275 $generated@@591))) ($generated@@236 ($generated@@485 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@485 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@484 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@276 $generated@@159)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@275 $generated@@595))) (< ($generated@@523 ($generated@@332 $generated@@150 ($generated@@485 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@523 ($generated@@332 $generated@@150 ($generated@@485 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@145 $generated@@597 ($generated@@402 $generated@@598 $generated@@599))) (and (and ($generated@@145 ($generated@@293 $generated@@597) ($generated@@245 $generated@@598)) ($generated@@145 ($generated@@345 $generated@@597) ($generated@@245 $generated@@599))) ($generated@@145 ($generated@@376 $generated@@597) ($generated@@245 ($generated@@149 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@402 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@145 $generated@@600 ($generated@@410 $generated@@601 $generated@@602))) (and (and ($generated@@145 ($generated@@311 $generated@@600) ($generated@@250 $generated@@601)) ($generated@@145 ($generated@@356 $generated@@600) ($generated@@250 $generated@@602))) ($generated@@145 ($generated@@384 $generated@@600) ($generated@@250 ($generated@@149 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@410 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@145 $generated@@603 $generated@@46))
 :pattern ( ($generated@@145 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@145 $generated@@604 $generated@@47))
 :pattern ( ($generated@@145 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@145 $generated@@605 $generated@@44))
 :pattern ( ($generated@@145 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@442) ($generated@@145 $generated@@606 $generated@@45))
 :pattern ( ($generated@@145 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@159) ($generated@@145 $generated@@607 $generated@@48))
 :pattern ( ($generated@@145 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(assert  (and (and (= (type $generated@@608) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@613) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@615  (=> (= $generated@@608 ($generated@@175 $generated@@139 $generated@@609 $generated@@60 false)) (=> (and (= $generated@@610 (+ ($generated@@543 ($generated@@255 2) $generated@@611) 1)) (= (ControlFlow 0 2) (- 0 1))) (< ($generated@@543 ($generated@@255 2) $generated@@611) $generated@@610)))))
(let (($generated@@616  (=> (and ($generated@@261 $generated@@609) ($generated@@612 $generated@@609)) (=> (and (and (and (not (= $generated@@613 $generated@@139)) (and ($generated@@145 $generated@@613 $generated@@232) ($generated@@80 $generated@@613 $generated@@232 $generated@@609))) (= 0 $generated@@614)) (and (<= ($generated@@255 (- 0 2000)) $generated@@611) (= (ControlFlow 0 3) 2))) $generated@@615))))
$generated@@616)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@T) T@U)
(declare-fun $generated@@425 () T@T)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U Int) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Bool)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert (forall (($generated@@319 T@T) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@152) ($generated@@222 $generated@@321 $generated@@135)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@321)) $generated@@321) ($generated@@139 ($generated@@318 $generated@@80 $generated@@321) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@321 $generated@@135))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@222 $generated@@322 $generated@@218)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@318 $generated@@80 $generated@@322) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@218))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@80) (= ($generated@@139 $generated@@323 $generated@@218)  (and ($generated@@139 $generated@@323 $generated@@135) (not (= $generated@@323 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@323 $generated@@218))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@283 (type $generated@@324))))
(let (($generated@@326 ($generated@@282 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@281 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@280 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@279 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@283 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@283 (type $generated@@331))))
(let (($generated@@333 ($generated@@282 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@281 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@280 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@301 (type $generated@@335))))
(let (($generated@@337 ($generated@@300 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@299 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@298 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@297 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@301 (type $generated@@342))))
(let (($generated@@344 ($generated@@300 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@299 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@298 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@347) $generated@@67)) (= ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@346 $generated@@348)))) ($generated@@222 $generated@@348 $generated@@347))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@350) $generated@@67)) (= (type $generated@@351) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@349 ($generated@@231 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@152) ($generated@@0 ($generated@@84 $generated@@349 $generated@@352))) ($generated@@248 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@84 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@77 $generated@@349 ($generated@@231 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@354) $generated@@67)) (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@353 ($generated@@236 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) ($generated@@0 ($generated@@84 $generated@@353 $generated@@356))) ($generated@@248 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@84 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@77 $generated@@353 ($generated@@236 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@84 ($generated@@274 $generated@@358) $generated@@357)))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@283 (type $generated@@362))))
(let (($generated@@364 ($generated@@282 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@79 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@366) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@365) ($generated@@150 ($generated@@318 $generated@@143 $generated@@366)))) (= ($generated@@84 ($generated@@360 $generated@@365) ($generated@@150 ($generated@@318 $generated@@143 $generated@@366))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@366))))))
 :pattern ( ($generated@@84 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@301 (type $generated@@370))))
(let (($generated@@372 ($generated@@300 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@374) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@373) ($generated@@150 ($generated@@318 $generated@@143 $generated@@374)))) (= ($generated@@84 ($generated@@368 $generated@@373) ($generated@@150 ($generated@@318 $generated@@143 $generated@@374))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@374))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@282 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@281 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@84 ($generated@@328 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@84 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@375) $generated@@379))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@300 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@299 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@84 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@380) $generated@@384))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@67)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@388) $generated@@392))) (and ($generated@@248 ($generated@@84 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@248 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@67)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@396) $generated@@400))) (and ($generated@@248 ($generated@@84 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@248 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@T) ) (! (= (type ($generated@@401 $generated@@402)) ($generated@@79 $generated@@402 $generated@@4))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@301 (type $generated@@403))))
(let (($generated@@405 ($generated@@300 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@299 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@298 $generated@@405 $generated@@404)) (= ($generated@@297 $generated@@403) ($generated@@401 $generated@@405))))))
 :pattern ( ($generated@@297 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@301 (type $generated@@406))))
(let (($generated@@408 ($generated@@300 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@299 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@298 $generated@@408 $generated@@407)) (= ($generated@@339 $generated@@406) ($generated@@401 $generated@@407))))))
 :pattern ( ($generated@@339 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@301 (type $generated@@409))))
(let (($generated@@411 ($generated@@300 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@299 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@298 $generated@@411 $generated@@410)) (= ($generated@@367 $generated@@409) ($generated@@401 $generated@@152))))))
 :pattern ( ($generated@@367 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@283 (type $generated@@412))))
(let (($generated@@414 ($generated@@282 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@281 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@280 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@152) (= (type $generated@@416) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@359 $generated@@412) ($generated@@268 ($generated@@221 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@301 (type $generated@@417))))
(let (($generated@@419 ($generated@@300 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@299 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@298 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@152) (= (type $generated@@421) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@417) ($generated@@268 ($generated@@221 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@367 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@46)) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@318 $generated@@2 $generated@@422) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@46))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@152) ($generated@@222 $generated@@423 $generated@@47)) (and (= ($generated@@268 ($generated@@318 $generated@@3 $generated@@423)) $generated@@423) ($generated@@139 ($generated@@318 $generated@@3 $generated@@423) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@423 $generated@@47))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@44)) (and (= ($generated@@268 ($generated@@318 $generated@@4 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@318 $generated@@4 $generated@@424) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@425) 20))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@45)) (and (= ($generated@@268 ($generated@@318 $generated@@425 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@318 $generated@@425 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@427) $generated@@428) ($generated@@139 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@82 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@79 $generated@@430 $generated@@2)) (<= 0 ($generated@@273 $generated@@429))))
 :pattern ( ($generated@@273 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@263 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@262 $generated@@432)) (<= 0 ($generated@@261 $generated@@431))))
 :pattern ( ($generated@@261 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@67)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@433 ($generated@@385 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@385 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@437 ($generated@@385 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@75 ($generated@@385 $generated@@441 $generated@@442)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@75 ($generated@@393 $generated@@451 $generated@@452)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@152) (= (type $generated@@454) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@453 $generated@@454)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@142 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@142 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@142 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@142 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@152) (= (type $generated@@466) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@465 $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@263 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470 $generated@@471)) $generated@@472))
 :pattern ( ($generated@@468 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@262 $generated@@152)) (= (type $generated@@474) $generated@@67)) (= (type $generated@@475) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@473 ($generated@@467 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@261 $generated@@473))) ($generated@@248 ($generated@@468 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@468 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@77 $generated@@473 ($generated@@467 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@78 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@78 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@479 ($generated@@231 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@231 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@483 ($generated@@236 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@236 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@157 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@157 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@467 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@467 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@75 ($generated@@467 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@467 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@318 $generated@@496 ($generated@@268 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@268 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@498) $generated@@67)) (= (type $generated@@499) $generated@@67)) (= ($generated@@139 $generated@@497 ($generated@@385 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@497) $generated@@500))) (and ($generated@@222 ($generated@@84 ($generated@@360 $generated@@497) $generated@@500) $generated@@499) ($generated@@222 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@497) $generated@@500))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@139 $generated@@497 ($generated@@385 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) $generated@@67)) (= ($generated@@139 $generated@@501 ($generated@@393 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@501) $generated@@504))) (and ($generated@@222 ($generated@@84 ($generated@@368 $generated@@501) $generated@@504) $generated@@503) ($generated@@222 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@501) $generated@@504))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@139 $generated@@501 ($generated@@393 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@152)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@221 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@221 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@152) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@222 $generated@@511 ($generated@@385 $generated@@512 $generated@@513))) (and (= ($generated@@268 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@511)) $generated@@511) ($generated@@139 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@511) ($generated@@385 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@222 $generated@@511 ($generated@@385 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@393 $generated@@515 $generated@@516))) (and (= ($generated@@268 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@514) ($generated@@393 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@393 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@67) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@152)) ($generated@@222 $generated@@519 ($generated@@142 $generated@@517 $generated@@518))) (and (= ($generated@@268 ($generated@@318 $generated@@143 $generated@@519)) $generated@@519) ($generated@@139 ($generated@@318 $generated@@143 $generated@@519) ($generated@@142 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@222 $generated@@519 ($generated@@142 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@84 ($generated@@401 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@84 ($generated@@401 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@72)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@524 $generated@@525)) $generated@@62) (= ($generated@@522 ($generated@@142 $generated@@524 $generated@@525)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@143) (= ($generated@@505 ($generated@@268 $generated@@526)) ($generated@@506 $generated@@526)))
 :pattern ( ($generated@@505 ($generated@@268 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@152) ($generated@@222 $generated@@527 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@527)) $generated@@527) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@527) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@527 ($generated@@78 0)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@231 $generated@@529))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@231 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@231 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@236 $generated@@531))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@236 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@236 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@157 $generated@@533))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@532) ($generated@@157 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@157 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@152) (= (type $generated@@535) $generated@@67)) ($generated@@222 $generated@@534 ($generated@@467 $generated@@535))) (and (= ($generated@@268 ($generated@@318 ($generated@@262 $generated@@152) $generated@@534)) $generated@@534) ($generated@@139 ($generated@@318 ($generated@@262 $generated@@152) $generated@@534) ($generated@@467 $generated@@535))))
 :pattern ( ($generated@@222 $generated@@534 ($generated@@467 $generated@@535)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@522 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@522 $generated@@218) $generated@@66))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@536 ($generated@@157 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@536 $generated@@539)))) ($generated@@248 $generated@@539 $generated@@537 $generated@@538))
 :pattern ( ($generated@@84 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@77 $generated@@536 ($generated@@157 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@80) (= ($generated@@139 $generated@@543 $generated@@135)  (or (= $generated@@543 $generated@@136) ($generated@@540 ($generated@@541 $generated@@543)))))
 :pattern ( ($generated@@139 $generated@@543 $generated@@135))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@143) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@546) (and ($generated@@141 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@67) ($generated@@77 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@77 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@248 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@143) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@550) (and ($generated@@141 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@67) ($generated@@77 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@248 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@552) ($generated@@243 $generated@@553)) ($generated@@243 ($generated@@221 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@552) ($generated@@243 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@554))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@555)) ($generated@@243 ($generated@@268 $generated@@555)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@263 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@262 $generated@@557)) (= ($generated@@261 $generated@@556) 0)) (= $generated@@556 ($generated@@260 $generated@@557))))
 :pattern ( ($generated@@261 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@273 ($generated@@85 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@273 $generated@@558) ($generated ($generated@@84 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@563) $generated@@2)) ($generated@@77 $generated@@563 $generated@@46 $generated@@562))
 :pattern ( ($generated@@77 $generated@@563 $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@3)) ($generated@@77 $generated@@565 $generated@@47 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@47 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@4)) ($generated@@77 $generated@@567 $generated@@44 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@44 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@425)) ($generated@@77 $generated@@569 $generated@@45 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@45 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@152)) ($generated@@77 $generated@@571 $generated@@48 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@48 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@262 $generated@@152)) (= (type $generated@@573) $generated@@67)) (= ($generated@@139 $generated@@572 ($generated@@467 $generated@@573)) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@261 $generated@@572))) ($generated@@222 ($generated@@468 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@468 $generated@@572 $generated@@574))
))))
 :pattern ( ($generated@@139 $generated@@572 ($generated@@467 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (= (type $generated@@576) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@261 $generated@@576))) (< ($generated@@506 ($generated@@318 $generated@@143 ($generated@@468 $generated@@576 $generated@@577))) ($generated@@575 $generated@@576))))
 :pattern ( ($generated@@506 ($generated@@318 $generated@@143 ($generated@@468 $generated@@576 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@385 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@279 $generated@@578) ($generated@@231 $generated@@579)) ($generated@@139 ($generated@@328 $generated@@578) ($generated@@231 $generated@@580))) ($generated@@139 ($generated@@359 $generated@@578) ($generated@@231 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@385 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@139 $generated@@581 ($generated@@393 $generated@@582 $generated@@583))) (and (and ($generated@@139 ($generated@@297 $generated@@581) ($generated@@236 $generated@@582)) ($generated@@139 ($generated@@339 $generated@@581) ($generated@@236 $generated@@583))) ($generated@@139 ($generated@@367 $generated@@581) ($generated@@236 ($generated@@142 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@393 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@2) ($generated@@139 $generated@@584 $generated@@46))
 :pattern ( ($generated@@139 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@3) ($generated@@139 $generated@@585 $generated@@47))
 :pattern ( ($generated@@139 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@4) ($generated@@139 $generated@@586 $generated@@44))
 :pattern ( ($generated@@139 $generated@@586 $generated@@44))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@425) ($generated@@139 $generated@@587 $generated@@45))
 :pattern ( ($generated@@139 $generated@@587 $generated@@45))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@152) ($generated@@139 $generated@@588 $generated@@48))
 :pattern ( ($generated@@139 $generated@@588 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 (T@U) Bool)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Int)
(assert  (and (and (= (type $generated@@589) ($generated@@164 $generated@@80 $generated@@4)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@593) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@595  (=> (= $generated@@589 ($generated@@163 $generated@@136 $generated@@590 $generated@@60 false)) (=> (and (= $generated@@591 ($generated@@241 100)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@591 ($generated@@241 100))))))
(let (($generated@@596  (=> (and ($generated@@247 $generated@@590) ($generated@@592 $generated@@590)) (=> (and (and (not (= $generated@@593 $generated@@136)) (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@590))) (and (= 0 $generated@@594) (= (ControlFlow 0 3) 2))) $generated@@595))))
$generated@@596)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 (T@U Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@239 (T@U Int) Bool)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@459 (T@U Int) Int)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@542 (T@U Int) Bool)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@237 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@242 T@U) ($generated@@243 Int) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (or ($generated@@239 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@242 $generated@@139)) ($generated@@145 $generated@@242 $generated@@232))))) (= ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@238 20)))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@150)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@159)) (= (type $generated@@251) $generated@@159)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) (= (type $generated@@253) $generated@@150)) (= ($generated@@156 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@156 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@238 $generated@@264) $generated@@264)
 :pattern ( ($generated@@238 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@237 $generated@@265) $generated@@265)
 :pattern ( ($generated@@237 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@244 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@159)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@167 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@167 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@245 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@245 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@245 $generated@@341 $generated@@164)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@164)))
 :pattern ( ($generated@@245 $generated@@341 $generated@@164))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@245 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@245 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@159) ($generated@@245 $generated@@343 $generated@@232)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@232)))
 :pattern ( ($generated@@245 $generated@@343 $generated@@232))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@164)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@164))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@232)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@232))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@245 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@371 T@U) ($generated@@372 Int) ) (!  (=> (and (= (type $generated@@371) $generated@@83) (or ($generated@@239 $generated@@371 $generated@@372) (and (not (= 0 $generated@@235)) (and (not (= $generated@@371 $generated@@139)) ($generated@@145 $generated@@371 $generated@@232))))) (= ($generated@@236 $generated@@371 $generated@@372) ($generated@@238 20)))
 :pattern ( ($generated@@236 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@254 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@159) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@267 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@254 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@259 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@159) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@267 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@259 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@293 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@302 (type $generated@@386))))
(let (($generated@@388 ($generated@@301 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@390) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@389) ($generated@@157 ($generated@@337 $generated@@150 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@157 ($generated@@337 $generated@@150 $generated@@390))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@320 (type $generated@@394))))
(let (($generated@@396 ($generated@@319 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@397) ($generated@@157 ($generated@@337 $generated@@150 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@157 ($generated@@337 $generated@@150 $generated@@398))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@301 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@300 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@319 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@318 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@412) $generated@@416))) (and ($generated@@267 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@267 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@320 (type $generated@@427))))
(let (($generated@@429 ($generated@@319 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@318 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@317 $generated@@429 $generated@@428)) (= ($generated@@316 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@316 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@320 (type $generated@@430))))
(let (($generated@@432 ($generated@@319 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@318 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@317 $generated@@432 $generated@@431)) (= ($generated@@361 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@361 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@320 (type $generated@@433))))
(let (($generated@@435 ($generated@@319 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@318 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@317 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@159))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@302 (type $generated@@436))))
(let (($generated@@438 ($generated@@301 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@300 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@299 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@159) (= (type $generated@@440) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@287 ($generated@@244 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@320 (type $generated@@441))))
(let (($generated@@443 ($generated@@319 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@318 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@317 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@159) (= (type $generated@@445) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@287 ($generated@@244 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@245 $generated@@446 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@245 $generated@@447 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@337 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@245 $generated@@448 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@245 $generated@@450 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@449 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@337 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@245 ($generated@@287 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@245 ($generated@@287 $generated@@451) $generated@@452))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@453 T@U) ($generated@@454 Int) ) (!  (=> (and (= (type $generated@@453) $generated@@83) (or ($generated@@239 $generated@@453 ($generated@@238 $generated@@454)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@453 $generated@@139)) ($generated@@145 $generated@@453 $generated@@232))))) (= ($generated@@236 $generated@@453 ($generated@@238 $generated@@454)) ($generated@@238 20)))
 :weight 3
 :pattern ( ($generated@@236 $generated@@453 ($generated@@238 $generated@@454)))
))))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@292 $generated@@455))))
 :pattern ( ($generated@@292 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@282 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@281 $generated@@458)) (<= 0 ($generated@@280 $generated@@457))))
 :pattern ( ($generated@@280 $generated@@457))
)))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@460 T@U) ($generated@@461 Int) ) (!  (=> (= (type $generated@@460) $generated@@83) (=> (and (not (= $generated@@460 $generated@@139)) ($generated@@145 $generated@@460 $generated@@232)) (= ($generated@@459 $generated@@460 $generated@@461) ($generated@@236 $generated@@460 $generated@@461))))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461) ($generated@@145 $generated@@460 $generated@@232))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461) ($generated@@236 $generated@@460 $generated@@461))
))))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@417 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@417 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@159) (= (type $generated@@483) $generated@@159)) (= ($generated@@273 ($generated@@244 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@149 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@149 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@149 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@149 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@159) (= (type $generated@@493) $generated@@159)) (= ($generated@@157 ($generated@@244 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@244 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@159) (= (type $generated@@495) $generated@@159)) (= ($generated@@158 ($generated@@244 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@244 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@282 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@281 $generated@@159)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@280 $generated@@502))) ($generated@@267 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@81 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@81 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@254 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@254 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@259 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@259 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@259 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@166 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@166 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@337 $generated@@525 ($generated@@287 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@287 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) $generated@@70)) (= ($generated@@145 $generated@@526 ($generated@@409 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@526) $generated@@529))) (and ($generated@@245 ($generated@@87 ($generated@@384 $generated@@526) $generated@@529) $generated@@528) ($generated@@245 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@526) $generated@@529))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@145 $generated@@526 ($generated@@409 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@145 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@530) $generated@@533))) (and ($generated@@245 ($generated@@87 ($generated@@392 $generated@@530) $generated@@533) $generated@@532) ($generated@@245 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@145 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@159) (= (type $generated@@537) $generated@@159)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@244 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@244 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@159) (= (type $generated@@539) $generated@@159)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@244 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@244 $generated@@538 $generated@@539))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@540 T@U) ($generated@@541 Int) ) (!  (=> (and (= (type $generated@@540) $generated@@83) (or ($generated@@239 $generated@@540 $generated@@541) (and (not (= 0 $generated@@235)) (and (not (= $generated@@540 $generated@@139)) ($generated@@145 $generated@@540 $generated@@232))))) true)
 :pattern ( ($generated@@236 $generated@@540 $generated@@541))
))))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (!  (=> (and (= (type $generated@@543) $generated@@83) (or ($generated@@542 $generated@@543 $generated@@544) (and (not (= 1 $generated@@235)) (and (not (= $generated@@543 $generated@@139)) ($generated@@145 $generated@@543 $generated@@164))))) true)
 :pattern ( ($generated@@459 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) ($generated@@245 $generated@@545 ($generated@@409 $generated@@546 $generated@@547))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@545) ($generated@@409 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@245 $generated@@545 ($generated@@409 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@245 $generated@@548 ($generated@@417 $generated@@549 $generated@@550))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@548) ($generated@@417 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@159)) ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552))) (and (= ($generated@@287 ($generated@@337 $generated@@150 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@337 $generated@@150 $generated@@553) ($generated@@149 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@425 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@149 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@150) (= ($generated@@534 ($generated@@287 $generated@@560)) ($generated@@535 $generated@@560)))
 :pattern ( ($generated@@534 ($generated@@287 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) ($generated@@245 $generated@@561 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@245 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@159) (= (type $generated@@565) $generated@@70)) ($generated@@245 $generated@@564 ($generated@@259 $generated@@565))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@564) ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@259 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@70)) ($generated@@245 $generated@@566 ($generated@@166 $generated@@567))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@566) ($generated@@166 $generated@@567))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@166 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@70)) ($generated@@245 $generated@@568 ($generated@@496 $generated@@569))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@159) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@337 ($generated@@281 $generated@@159) $generated@@568) ($generated@@496 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 ($generated@@496 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@164 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@556 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@556 $generated@@232) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@145 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@147 ($generated@@171 $generated@@576)))))
 :pattern ( ($generated@@145 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@148 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@148 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@159) (= (type $generated@@586) $generated@@159)) (= ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)) ($generated@@237 ($generated@@244 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@238 $generated@@587))) ($generated@@237 ($generated@@287 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@238 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@287 ($generated@@237 $generated@@588)) ($generated@@237 ($generated@@287 $generated@@588)))
 :pattern ( ($generated@@287 ($generated@@237 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@282 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@281 $generated@@590)) (= ($generated@@280 $generated@@589) 0)) (= $generated@@589 ($generated@@279 $generated@@590))))
 :pattern ( ($generated@@280 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@292 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@292 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@449)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@159)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@281 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= ($generated@@145 $generated@@605 ($generated@@496 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@280 $generated@@605))) ($generated@@245 ($generated@@497 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@497 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@496 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@609))) (< ($generated@@535 ($generated@@337 $generated@@150 ($generated@@497 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@535 ($generated@@337 $generated@@150 ($generated@@497 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@145 $generated@@611 ($generated@@409 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@298 $generated@@611) ($generated@@254 $generated@@612)) ($generated@@145 ($generated@@350 $generated@@611) ($generated@@254 $generated@@613))) ($generated@@145 ($generated@@383 $generated@@611) ($generated@@254 ($generated@@149 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@409 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@145 $generated@@614 ($generated@@417 $generated@@615 $generated@@616))) (and (and ($generated@@145 ($generated@@316 $generated@@614) ($generated@@259 $generated@@615)) ($generated@@145 ($generated@@361 $generated@@614) ($generated@@259 $generated@@616))) ($generated@@145 ($generated@@391 $generated@@614) ($generated@@259 ($generated@@149 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@417 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@145 $generated@@617 $generated@@46))
 :pattern ( ($generated@@145 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@145 $generated@@618 $generated@@47))
 :pattern ( ($generated@@145 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@145 $generated@@619 $generated@@44))
 :pattern ( ($generated@@145 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@449) ($generated@@145 $generated@@620 $generated@@45))
 :pattern ( ($generated@@145 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@159) ($generated@@145 $generated@@621 $generated@@48))
 :pattern ( ($generated@@145 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (= (type $generated@@623) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (and (= $generated@@623 ($generated@@175 $generated@@139 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@266 $generated@@624) ($generated@@625 $generated@@624)) (=> (and (and (not (= $generated@@626 $generated@@139)) (and ($generated@@145 $generated@@626 $generated@@232) ($generated@@80 $generated@@626 $generated@@232 $generated@@624))) (and (= 1 $generated@@235) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@163)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@154) (= ($generated@@152 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@154) ($generated@@152 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@163) (= (type $generated@@275) $generated@@163)) (= $generated@@273 ($generated@@239 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@163)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@291) $generated@@163)) (= (type $generated@@292) $generated@@70)) ($generated@@138 $generated@@289 $generated@@290)) ($generated@@264 $generated@@291 $generated@@292 $generated@@289)) ($generated@@264 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@138 $generated@@289 $generated@@290) ($generated@@264 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@296) $generated@@70)) ($generated@@138 $generated@@293 $generated@@294)) ($generated@@80 $generated@@295 $generated@@296 $generated@@293)) ($generated@@80 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@138 $generated@@293 $generated@@294) ($generated@@80 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@82 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@85 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@82 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@87 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@82 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@85 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@82 $generated@@340 $generated@@2)) (= ($generated@@171 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@87 $generated@@339 $generated@@341))) (<= ($generated ($generated@@87 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@87 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@171 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@163) ($generated@@240 $generated@@345 $generated@@142)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@342 $generated@@83 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@163) ($generated@@240 $generated@@346 $generated@@168)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@342 $generated@@83 $generated@@346) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@346 $generated@@168))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@146)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@342 $generated@@83 $generated@@347) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@146))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@236)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@342 $generated@@83 $generated@@348) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@236))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@149 $generated@@349 $generated@@168)  (and ($generated@@149 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@349 $generated@@168))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@83) (= ($generated@@149 $generated@@350 $generated@@236)  (and ($generated@@149 $generated@@350 $generated@@146) (not (= $generated@@350 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(let (($generated@@353 ($generated@@306 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@305 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@304 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@303 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@82 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@307 (type $generated@@358))))
(let (($generated@@360 ($generated@@306 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@305 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@304 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(let (($generated@@364 ($generated@@324 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@323 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@322 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(let (($generated@@371 ($generated@@324 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@323 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@322 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@70)) (= ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@87 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@87 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@87 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@307 (type $generated@@389))))
(let (($generated@@391 ($generated@@306 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@393) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@325 (type $generated@@397))))
(let (($generated@@399 ($generated@@324 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@401) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@306 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@305 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@324 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@323 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@428 $generated@@430))) (and ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))) ($generated@@138 $generated@@428 $generated@@430))
 :pattern ( ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@321 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@321 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@366 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@366 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@325 (type $generated@@439))))
(let (($generated@@441 ($generated@@324 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@323 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@322 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@163))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@307 (type $generated@@442))))
(let (($generated@@444 ($generated@@306 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@305 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@304 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@163) (= (type $generated@@446) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@442) ($generated@@284 ($generated@@239 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@325 (type $generated@@447))))
(let (($generated@@449 ($generated@@324 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@323 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@322 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@163) (= (type $generated@@451) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@239 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@240 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@342 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@163) ($generated@@240 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@342 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@342 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@342 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@342 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@342 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@342 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@240 ($generated@@284 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@240 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@279 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@278 $generated@@462)) (<= 0 ($generated@@277 $generated@@461))))
 :pattern ( ($generated@@277 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@163) (= (type $generated@@484) $generated@@163)) (= ($generated@@270 ($generated@@239 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@153 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@153 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@153 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@163) (= (type $generated@@494) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@279 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@278 $generated@@163)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@277 $generated@@503))) ($generated@@264 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@81 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@81 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@249 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@249 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@254 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@170 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@170 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@342 $generated@@526 ($generated@@284 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@284 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@87 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))) (and ($generated@@240 ($generated@@87 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@240 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@239 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@239 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541)) $generated@@541) ($generated@@149 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541) ($generated@@412 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544)) $generated@@544) ($generated@@149 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544) ($generated@@420 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@163)) ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@342 $generated@@154 $generated@@549)) $generated@@549) ($generated@@149 ($generated@@342 $generated@@154 $generated@@549) ($generated@@153 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@87 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@75)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@153 $generated@@554 $generated@@555)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@154) (= ($generated@@535 ($generated@@284 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) ($generated@@240 $generated@@557 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@557)) $generated@@557) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@557) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@81 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@70)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@170 $generated@@563))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562) ($generated@@170 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@170 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@497 $generated@@565))) (and (= ($generated@@284 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564) ($generated@@497 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@497 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@83) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@566 $generated@@143)) ($generated@@80 $generated@@566 $generated@@146 $generated@@567))) ($generated@@80 $generated@@566 $generated@@168 $generated@@567))
 :pattern ( ($generated@@80 $generated@@566 $generated@@146 $generated@@567))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@552 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@552 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@552 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@552 $generated@@236) $generated@@69))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@568 $generated@@571)))) ($generated@@264 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@87 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@83) (= ($generated@@149 $generated@@572 $generated@@142)  (or (= $generated@@572 $generated@@143) ($generated@@151 ($generated@@175 $generated@@572)))))
 :pattern ( ($generated@@149 $generated@@572 $generated@@142))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@575) (and ($generated@@152 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@579) (and ($generated@@152 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@163)) (= ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)) ($generated@@259 ($generated@@239 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@284 ($generated@@259 $generated@@583)) ($generated@@259 ($generated@@284 $generated@@583)))
 :pattern ( ($generated@@284 ($generated@@259 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@279 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@278 $generated@@585)) (= ($generated@@277 $generated@@584) 0)) (= $generated@@584 ($generated@@276 $generated@@585))))
 :pattern ( ($generated@@277 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@297 $generated@@586) ($generated ($generated@@87 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@2)) ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@3)) ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@4)) ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@455)) ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@163)) ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@278 $generated@@163)) (= (type $generated@@601) $generated@@70)) (= ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@277 $generated@@600))) ($generated@@240 ($generated@@498 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@498 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@278 $generated@@163)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@277 $generated@@604))) (< ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608))) (and (and ($generated@@149 ($generated@@303 $generated@@606) ($generated@@249 $generated@@607)) ($generated@@149 ($generated@@355 $generated@@606) ($generated@@249 $generated@@608))) ($generated@@149 ($generated@@386 $generated@@606) ($generated@@249 ($generated@@153 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@321 $generated@@609) ($generated@@254 $generated@@610)) ($generated@@149 ($generated@@366 $generated@@609) ($generated@@254 $generated@@611))) ($generated@@149 ($generated@@394 $generated@@609) ($generated@@254 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@149 $generated@@612 $generated@@46))
 :pattern ( ($generated@@149 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@149 $generated@@613 $generated@@47))
 :pattern ( ($generated@@149 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@149 $generated@@614 $generated@@44))
 :pattern ( ($generated@@149 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@455) ($generated@@149 $generated@@615 $generated@@45))
 :pattern ( ($generated@@149 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) ($generated@@149 $generated@@616 $generated@@48))
 :pattern ( ($generated@@149 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(assert  (and (and (= (type $generated@@618) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@621) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@623  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@617 $generated@@617) (=> (= $generated@@617 $generated@@617) true))) (=> (and (<= $generated@@617 $generated@@617) (=> (= $generated@@617 $generated@@617) true)) (=> (and (= $generated@@618 ($generated@@179 $generated@@143 $generated@@619 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@624 T@T) )  (=> false false)))))))
(let (($generated@@625  (=> (and ($generated@@263 $generated@@619) ($generated@@620 $generated@@619)) (=> (and (and (not (= $generated@@621 $generated@@143)) (and ($generated@@149 $generated@@621 $generated@@236) ($generated@@80 $generated@@621 $generated@@236 $generated@@619))) (and (= 1 $generated@@622) (= (ControlFlow 0 4) 2))) $generated@@623))))
$generated@@625)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@159)) (= (type $generated@@266) $generated@@159)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@150) (= ($generated@@148 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@159) (= (type $generated@@273) $generated@@159)) (= $generated@@271 ($generated@@235 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@159)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@82 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@85 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@82 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@87 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@82 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@82 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (= ($generated@@167 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@87 $generated@@329 $generated@@331))) (<= ($generated ($generated@@87 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@87 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@167 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@159) ($generated@@236 $generated@@335 $generated@@138)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@83 $generated@@335) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@335 $generated@@138))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@159) ($generated@@236 $generated@@336 $generated@@164)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@336)) $generated@@336) ($generated@@145 ($generated@@332 $generated@@83 $generated@@336) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@164))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@159) ($generated@@236 $generated@@337 $generated@@142)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@332 $generated@@83 $generated@@337) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@337 $generated@@142))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@236 $generated@@338 $generated@@232)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@332 $generated@@83 $generated@@338) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@338 $generated@@232))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@83) (= ($generated@@145 $generated@@339 $generated@@164)  (and ($generated@@145 $generated@@339 $generated@@138) (not (= $generated@@339 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@339 $generated@@164))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@83) (= ($generated@@145 $generated@@340 $generated@@232)  (and ($generated@@145 $generated@@340 $generated@@142) (not (= $generated@@340 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@340 $generated@@232))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(let (($generated@@343 ($generated@@296 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@295 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@294 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@293 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@297 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@297 (type $generated@@348))))
(let (($generated@@350 ($generated@@296 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@295 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@294 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@87 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(let (($generated@@354 ($generated@@314 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@313 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@312 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@311 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@82 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(let (($generated@@361 ($generated@@314 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@313 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@312 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@364) $generated@@70)) (= ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@363 $generated@@365)))) ($generated@@236 $generated@@365 $generated@@364))
 :pattern ( ($generated@@87 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@262 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@262 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@87 ($generated@@288 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@87 ($generated@@288 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@297 (type $generated@@379))))
(let (($generated@@381 ($generated@@296 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@82 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383)))) (= ($generated@@87 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@315 (type $generated@@387))))
(let (($generated@@389 ($generated@@314 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@391) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@296 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@295 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@87 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@392) $generated@@396))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@87 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@314 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@313 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@70)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))) (and ($generated@@262 ($generated@@87 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@262 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@82 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@315 (type $generated@@420))))
(let (($generated@@422 ($generated@@314 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@313 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@312 $generated@@422 $generated@@421)) (= ($generated@@311 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@311 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@315 (type $generated@@423))))
(let (($generated@@425 ($generated@@314 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@313 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@312 $generated@@425 $generated@@424)) (= ($generated@@356 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@356 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@315 (type $generated@@426))))
(let (($generated@@428 ($generated@@314 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@313 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@312 $generated@@428 $generated@@427)) (= ($generated@@384 $generated@@426) ($generated@@418 $generated@@159))))))
 :pattern ( ($generated@@384 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@297 (type $generated@@429))))
(let (($generated@@431 ($generated@@296 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@295 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@294 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@159) (= (type $generated@@433) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@376 $generated@@429) ($generated@@282 ($generated@@235 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@315 (type $generated@@434))))
(let (($generated@@436 ($generated@@314 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@313 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@312 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@434) ($generated@@282 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@384 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@159) ($generated@@236 $generated@@439 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@332 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@159) ($generated@@236 $generated@@440 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@332 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@159) ($generated@@236 $generated@@441 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@332 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@159) ($generated@@236 $generated@@443 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@442 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@332 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@70) (= ($generated@@236 ($generated@@282 $generated@@444) $generated@@445) ($generated@@145 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@236 ($generated@@282 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@85 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@82 $generated@@447 $generated@@2)) (<= 0 ($generated@@287 $generated@@446))))
 :pattern ( ($generated@@287 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@277 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@276 $generated@@449)) (<= 0 ($generated@@275 $generated@@448))))
 :pattern ( ($generated@@275 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@402 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@402 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@78 ($generated@@402 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@410 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@410 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@159) (= (type $generated@@471) $generated@@159)) (= ($generated@@268 ($generated@@235 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@149 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@149 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@159) (= (type $generated@@481) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@235 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@159) (= (type $generated@@483) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@235 $generated@@482 $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@277 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@276 $generated@@159)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@275 $generated@@490))) ($generated@@262 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@80 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@81 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@81 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@70) (= ($generated@@496 ($generated@@245 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@250 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@166 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@166 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@332 $generated@@513 ($generated@@282 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@282 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) $generated@@70)) (= ($generated@@145 $generated@@514 ($generated@@402 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@514) $generated@@517))) (and ($generated@@236 ($generated@@87 ($generated@@377 $generated@@514) $generated@@517) $generated@@516) ($generated@@236 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@514) $generated@@517))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@145 $generated@@514 ($generated@@402 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) $generated@@70)) (= ($generated@@145 $generated@@518 ($generated@@410 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@518) $generated@@521))) (and ($generated@@236 ($generated@@87 ($generated@@385 $generated@@518) $generated@@521) $generated@@520) ($generated@@236 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@518) $generated@@521))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@145 $generated@@518 ($generated@@410 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@235 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@235 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@159)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@235 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@235 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) ($generated@@236 $generated@@528 ($generated@@402 $generated@@529 $generated@@530))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@528)) $generated@@528) ($generated@@145 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@528) ($generated@@402 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@236 $generated@@528 ($generated@@402 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) ($generated@@236 $generated@@531 ($generated@@410 $generated@@532 $generated@@533))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@531)) $generated@@531) ($generated@@145 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@531) ($generated@@410 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@236 $generated@@531 ($generated@@410 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@159)) ($generated@@236 $generated@@536 ($generated@@149 $generated@@534 $generated@@535))) (and (= ($generated@@282 ($generated@@332 $generated@@150 $generated@@536)) $generated@@536) ($generated@@145 ($generated@@332 $generated@@150 $generated@@536) ($generated@@149 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@536 ($generated@@149 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@87 ($generated@@418 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@87 ($generated@@418 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@149 $generated@@541 $generated@@542)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@150) (= ($generated@@522 ($generated@@282 $generated@@543)) ($generated@@523 $generated@@543)))
 :pattern ( ($generated@@522 ($generated@@282 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@159) ($generated@@236 $generated@@544 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@544)) $generated@@544) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@544) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@544 ($generated@@81 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@70)) ($generated@@236 $generated@@545 ($generated@@245 $generated@@546))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@545) ($generated@@245 $generated@@546))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@245 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@70)) ($generated@@236 $generated@@547 ($generated@@250 $generated@@548))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@547)) $generated@@547) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@547) ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@236 $generated@@547 ($generated@@250 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@70)) ($generated@@236 $generated@@549 ($generated@@166 $generated@@550))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@549) ($generated@@166 $generated@@550))))
 :pattern ( ($generated@@236 $generated@@549 ($generated@@166 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) ($generated@@236 $generated@@551 ($generated@@484 $generated@@552))) (and (= ($generated@@282 ($generated@@332 ($generated@@276 $generated@@159) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@332 ($generated@@276 $generated@@159) $generated@@551) ($generated@@484 $generated@@552))))
 :pattern ( ($generated@@236 $generated@@551 ($generated@@484 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@83) (= (type $generated@@554) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@553 $generated@@139)) ($generated@@80 $generated@@553 $generated@@142 $generated@@554))) ($generated@@80 $generated@@553 $generated@@164 $generated@@554))
 :pattern ( ($generated@@80 $generated@@553 $generated@@142 $generated@@554))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@539 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@539 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@539 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@539 $generated@@232) $generated@@69))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@555 ($generated@@166 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@555 $generated@@558)))) ($generated@@262 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@87 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@80 $generated@@555 ($generated@@166 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@83) (= ($generated@@145 $generated@@559 $generated@@138)  (or (= $generated@@559 $generated@@139) ($generated@@147 ($generated@@171 $generated@@559)))))
 :pattern ( ($generated@@145 $generated@@559 $generated@@138))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@562) (and ($generated@@148 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@70) ($generated@@80 $generated@@560 ($generated@@149 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@149 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@262 ($generated@@157 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@262 ($generated@@157 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@566) (and ($generated@@148 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@70) ($generated@@80 $generated@@564 ($generated@@149 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@149 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@262 ($generated@@158 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@262 ($generated@@158 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@159)) (= ($generated@@235 ($generated@@257 $generated@@568) ($generated@@257 $generated@@569)) ($generated@@257 ($generated@@235 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@568) ($generated@@257 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@255 $generated@@570))) ($generated@@257 ($generated@@282 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@255 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@571)) ($generated@@257 ($generated@@282 $generated@@571)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@277 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@276 $generated@@573)) (= ($generated@@275 $generated@@572) 0)) (= $generated@@572 ($generated@@274 $generated@@573))))
 :pattern ( ($generated@@275 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@82 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@287 ($generated@@88 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@287 $generated@@574) ($generated ($generated@@87 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@287 ($generated@@88 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@579) $generated@@2)) ($generated@@80 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@80 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@581) $generated@@3)) ($generated@@80 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@80 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@583) $generated@@4)) ($generated@@80 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@80 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@442)) ($generated@@80 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@159)) ($generated@@80 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@276 $generated@@159)) (= (type $generated@@589) $generated@@70)) (= ($generated@@145 $generated@@588 ($generated@@484 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@275 $generated@@588))) ($generated@@236 ($generated@@485 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@485 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@145 $generated@@588 ($generated@@484 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@276 $generated@@159)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@275 $generated@@592))) (< ($generated@@523 ($generated@@332 $generated@@150 ($generated@@485 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@523 ($generated@@332 $generated@@150 ($generated@@485 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) $generated@@70)) ($generated@@145 $generated@@594 ($generated@@402 $generated@@595 $generated@@596))) (and (and ($generated@@145 ($generated@@293 $generated@@594) ($generated@@245 $generated@@595)) ($generated@@145 ($generated@@345 $generated@@594) ($generated@@245 $generated@@596))) ($generated@@145 ($generated@@376 $generated@@594) ($generated@@245 ($generated@@149 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@145 $generated@@594 ($generated@@402 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@145 $generated@@597 ($generated@@410 $generated@@598 $generated@@599))) (and (and ($generated@@145 ($generated@@311 $generated@@597) ($generated@@250 $generated@@598)) ($generated@@145 ($generated@@356 $generated@@597) ($generated@@250 $generated@@599))) ($generated@@145 ($generated@@384 $generated@@597) ($generated@@250 ($generated@@149 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@410 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@145 $generated@@600 $generated@@46))
 :pattern ( ($generated@@145 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@145 $generated@@601 $generated@@47))
 :pattern ( ($generated@@145 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@145 $generated@@602 $generated@@44))
 :pattern ( ($generated@@145 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@442) ($generated@@145 $generated@@603 $generated@@45))
 :pattern ( ($generated@@145 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@159) ($generated@@145 $generated@@604 $generated@@48))
 :pattern ( ($generated@@145 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 (T@U) Bool)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(assert  (and (and (= (type $generated@@605) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@609) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@611  (=> (= $generated@@605 ($generated@@175 $generated@@139 $generated@@606 $generated@@60 false)) (=> (and (= $generated@@607 ($generated@@255 100)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@607 ($generated@@255 100))))))
(let (($generated@@612  (=> (and ($generated@@261 $generated@@606) ($generated@@608 $generated@@606)) (=> (and (and (not (= $generated@@609 $generated@@139)) (and ($generated@@145 $generated@@609 $generated@@232) ($generated@@80 $generated@@609 $generated@@232 $generated@@606))) (and (= 0 $generated@@610) (= (ControlFlow 0 3) 2))) $generated@@611))))
$generated@@612)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 (T@U Int) Int)
(declare-fun $generated@@268 (T@U Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@269) $generated@@80) (or ($generated@@268 $generated@@269 $generated@@270) (and (not (= 1 $generated@@266)) (and (not (= $generated@@269 $generated@@136)) ($generated@@139 $generated@@269 $generated@@218))))) (> ($generated@@267 $generated@@269 $generated@@270) 0))
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@222 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@222 $generated@@325 $generated@@218)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@325 $generated@@218))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@218)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@218))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@246 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@246 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@246 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@246 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@246 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@246 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@261 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@260 $generated@@435)) (<= 0 ($generated@@259 $generated@@434))))
 :pattern ( ($generated@@259 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@261 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@260 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@259 $generated@@476))) ($generated@@246 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@222 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@260 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@260 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@525 $generated@@218) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@246 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@135)  (or (= $generated@@546 $generated@@136) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@135))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)) ($generated@@241 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= ($generated@@271 ($generated@@241 $generated@@557)) ($generated@@241 ($generated@@271 $generated@@557)))
 :pattern ( ($generated@@271 ($generated@@241 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@261 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@260 $generated@@559)) (= ($generated@@259 $generated@@558) 0)) (= $generated@@558 ($generated@@258 $generated@@559))))
 :pattern ( ($generated@@259 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@561)))
 (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@563 $generated@@2)) (= (type $generated@@562) $generated@@2)) (<= 0 ($generated $generated@@562))) (= ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)) (+ (- ($generated@@276 $generated@@560) ($generated ($generated@@84 $generated@@560 $generated@@561))) ($generated $generated@@562)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@2)) ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@3)) ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@4)) ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@428)) ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@152)) ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@260 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@259 $generated@@574))) ($generated@@222 ($generated@@471 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@471 $generated@@574 $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@259 $generated@@578))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))) ($generated@@577 $generated@@578))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@282 $generated@@580) ($generated@@231 $generated@@581)) ($generated@@139 ($generated@@331 $generated@@580) ($generated@@231 $generated@@582))) ($generated@@139 ($generated@@362 $generated@@580) ($generated@@231 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@300 $generated@@583) ($generated@@236 $generated@@584)) ($generated@@139 ($generated@@342 $generated@@583) ($generated@@236 $generated@@585))) ($generated@@139 ($generated@@370 $generated@@583) ($generated@@236 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@2) ($generated@@139 $generated@@586 $generated@@46))
 :pattern ( ($generated@@139 $generated@@586 $generated@@46))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@3) ($generated@@139 $generated@@587 $generated@@47))
 :pattern ( ($generated@@139 $generated@@587 $generated@@47))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) ($generated@@139 $generated@@588 $generated@@44))
 :pattern ( ($generated@@139 $generated@@588 $generated@@44))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@428) ($generated@@139 $generated@@589 $generated@@45))
 :pattern ( ($generated@@139 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@152) ($generated@@139 $generated@@590 $generated@@48))
 :pattern ( ($generated@@139 $generated@@590 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (= (type $generated@@591) $generated@@80) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@594) ($generated@@164 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@596 true))
(let (($generated@@597  (=> (and ($generated@@77 $generated@@591 $generated@@135 $generated@@592) ($generated@@77 ($generated@@8 $generated@@593) $generated@@46 $generated@@592)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@593) (= $generated@@593 $generated@@593))) (=> (or (<= 0 $generated@@593) (= $generated@@593 $generated@@593)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@591 $generated@@591) (= $generated@@593 $generated@@593)) (< $generated@@593 $generated@@593))))))))
(let (($generated@@598  (=> (= $generated@@594 ($generated@@163 $generated@@136 $generated@@592 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@597) (=> (= (ControlFlow 0 5) 4) $generated@@596)))))
(let (($generated@@599  (=> (and ($generated@@245 $generated@@592) ($generated@@595 $generated@@592)) (=> (and (and (not (= $generated@@591 $generated@@136)) (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592))) (and (= 1 $generated@@266) (= (ControlFlow 0 6) 5))) $generated@@598))))
$generated@@599)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 (T@U Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@251 (T@U Int) Bool)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@73 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@83) (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@237) ($generated@@72 $generated@@4))) (= (type $generated@@239) $generated@@83)) (= (type $generated@@240) ($generated@@72 $generated@@241))) (= ($generated@@0 ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (= (type $generated@@243) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@242 $generated@@164 $generated@@243) ($generated@@80 $generated@@242 $generated@@138 $generated@@243)))
 :pattern ( ($generated@@80 $generated@@242 $generated@@164 $generated@@243))
)))
(assert (= (type $generated@@244) $generated@@70))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@83) (= (type $generated@@246) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@245 $generated@@244 $generated@@246) ($generated@@80 $generated@@245 $generated@@142 $generated@@246)))
 :pattern ( ($generated@@80 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@249 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@254 T@U) ($generated@@255 Int) ) (!  (=> (and (= (type $generated@@254) $generated@@83) (or ($generated@@251 ($generated@@249 $generated@@254) ($generated@@250 $generated@@255)) (and (not (= 0 $generated@@247)) (and (not (= $generated@@254 $generated@@139)) ($generated@@145 $generated@@254 $generated@@244))))) (= ($generated@@248 ($generated@@249 $generated@@254) ($generated@@250 $generated@@255)) ($generated@@250 2)))
 :weight 3
 :pattern ( ($generated@@248 ($generated@@249 $generated@@254) ($generated@@250 $generated@@255)))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@150)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@70) (= (type $generated@@261) $generated@@70)) (= (type $generated@@262) $generated@@159)) (= (type $generated@@263) $generated@@159)) (= ($generated@@145 ($generated@@256 $generated@@262 $generated@@263) ($generated@@149 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@145 ($generated@@256 $generated@@262 $generated@@263) ($generated@@149 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@150) (= (type $generated@@265) $generated@@150)) (= ($generated@@156 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@156 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@145 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@159) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@257 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@145 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@274) $generated@@70)) (= ($generated@@145 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@159) ($generated@@0 ($generated@@87 $generated@@273 $generated@@275))) ($generated@@257 $generated@@275 $generated@@274))
 :pattern ( ($generated@@87 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@145 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@250 $generated@@276) $generated@@276)
 :pattern ( ($generated@@250 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@249 $generated@@277) $generated@@277)
 :pattern ( ($generated@@249 $generated@@277))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@70) (= (type $generated@@281) $generated@@70)) (= (type $generated@@282) $generated@@159)) (= (type $generated@@283) $generated@@159)) (= (type $generated@@284) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@278 $generated@@284)) (= ($generated@@80 ($generated@@256 $generated@@282 $generated@@283) ($generated@@149 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@80 ($generated@@256 $generated@@282 $generated@@283) ($generated@@149 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@74)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@150) (= ($generated@@148 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@150) ($generated@@148 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@159) (= (type $generated@@290) $generated@@159)) (= $generated@@288 ($generated@@256 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@148 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@83) (or ($generated@@251 $generated@@299 $generated@@300) (and (not (= 0 $generated@@247)) (and (not (= $generated@@299 $generated@@139)) ($generated@@145 $generated@@299 $generated@@244))))) (> ($generated@@248 $generated@@299 $generated@@300) 1))
 :pattern ( ($generated@@248 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@159)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@70) (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@279 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@80 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@279 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@82 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@85 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@82 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@87 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@82 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@87 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@87 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@82 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@85 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@82 $generated@@349 $generated@@2)) (= ($generated@@167 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@87 $generated@@348 $generated@@350))) (<= ($generated ($generated@@87 $generated@@348 $generated@@350)) ($generated@@306 $generated@@348))))
 :pattern ( ($generated@@87 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@167 $generated@@348))
)))
(assert (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) ($generated@@257 $generated@@354 $generated@@138)) (and (= ($generated@@301 ($generated@@351 $generated@@83 $generated@@354)) $generated@@354) ($generated@@145 ($generated@@351 $generated@@83 $generated@@354) $generated@@138)))
 :pattern ( ($generated@@257 $generated@@354 $generated@@138))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@159) ($generated@@257 $generated@@355 $generated@@164)) (and (= ($generated@@301 ($generated@@351 $generated@@83 $generated@@355)) $generated@@355) ($generated@@145 ($generated@@351 $generated@@83 $generated@@355) $generated@@164)))
 :pattern ( ($generated@@257 $generated@@355 $generated@@164))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@159) ($generated@@257 $generated@@356 $generated@@142)) (and (= ($generated@@301 ($generated@@351 $generated@@83 $generated@@356)) $generated@@356) ($generated@@145 ($generated@@351 $generated@@83 $generated@@356) $generated@@142)))
 :pattern ( ($generated@@257 $generated@@356 $generated@@142))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@159) ($generated@@257 $generated@@357 $generated@@244)) (and (= ($generated@@301 ($generated@@351 $generated@@83 $generated@@357)) $generated@@357) ($generated@@145 ($generated@@351 $generated@@83 $generated@@357) $generated@@244)))
 :pattern ( ($generated@@257 $generated@@357 $generated@@244))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@83) (= ($generated@@145 $generated@@358 $generated@@164)  (and ($generated@@145 $generated@@358 $generated@@138) (not (= $generated@@358 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@358 $generated@@164))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@83) (= ($generated@@145 $generated@@359 $generated@@244)  (and ($generated@@145 $generated@@359 $generated@@142) (not (= $generated@@359 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@359 $generated@@244))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@312 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@312 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@316 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@316 (type $generated@@367))))
(let (($generated@@369 ($generated@@315 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@314 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@313 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@330 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@334 (type $generated@@378))))
(let (($generated@@380 ($generated@@333 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@332 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@331 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@87 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@383) $generated@@70)) (= ($generated@@145 $generated@@382 ($generated@@166 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@382 $generated@@384)))) ($generated@@257 $generated@@384 $generated@@383))
 :pattern ( ($generated@@87 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@145 $generated@@382 ($generated@@166 $generated@@383)))
)))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@385 T@U) ($generated@@386 Int) ) (!  (=> (and (= (type $generated@@385) $generated@@83) (or ($generated@@251 $generated@@385 $generated@@386) (and (not (= 0 $generated@@247)) (and (not (= $generated@@385 $generated@@139)) ($generated@@145 $generated@@385 $generated@@244))))) (= ($generated@@248 $generated@@385 $generated@@386) ($generated@@250 2)))
 :pattern ( ($generated@@248 $generated@@385 $generated@@386))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@266 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@159) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@279 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@266 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@271 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@159) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@279 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@271 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@307 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@307 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@316 (type $generated@@400))))
(let (($generated@@402 ($generated@@315 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@404) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@312 $generated@@403) ($generated@@157 ($generated@@351 $generated@@150 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@157 ($generated@@351 $generated@@150 $generated@@404))) ($generated@@158 ($generated@@351 $generated@@150 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@334 (type $generated@@408))))
(let (($generated@@410 ($generated@@333 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@332 $generated@@159 $generated@@159)) (= (type $generated@@412) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@411) ($generated@@157 ($generated@@351 $generated@@150 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@157 ($generated@@351 $generated@@150 $generated@@412))) ($generated@@158 ($generated@@351 $generated@@150 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@315 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@314 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@312 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@312 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@333 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@332 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@375 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@312 $generated@@426) $generated@@430))) (and ($generated@@279 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@279 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@312 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@332 $generated@@159 $generated@@159)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@434) $generated@@438))) (and ($generated@@279 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@279 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@82 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@334 (type $generated@@441))))
(let (($generated@@443 ($generated@@333 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@332 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@331 $generated@@443 $generated@@442)) (= ($generated@@330 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@330 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@375 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@375 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@405 $generated@@447) ($generated@@439 $generated@@159))))))
 :pattern ( ($generated@@405 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@316 (type $generated@@450))))
(let (($generated@@452 ($generated@@315 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@314 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@313 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@159) (= (type $generated@@454) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@450) ($generated@@301 ($generated@@256 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@334 (type $generated@@455))))
(let (($generated@@457 ($generated@@333 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@332 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@331 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@159) (= (type $generated@@459) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@455) ($generated@@301 ($generated@@256 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@405 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@159) ($generated@@257 $generated@@460 $generated@@46)) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@460)) $generated@@460) ($generated@@145 ($generated@@351 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@159) ($generated@@257 $generated@@461 $generated@@47)) (and (= ($generated@@301 ($generated@@351 $generated@@3 $generated@@461)) $generated@@461) ($generated@@145 ($generated@@351 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) ($generated@@257 $generated@@462 $generated@@44)) (and (= ($generated@@301 ($generated@@351 $generated@@4 $generated@@462)) $generated@@462) ($generated@@145 ($generated@@351 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@159) ($generated@@257 $generated@@464 $generated@@45)) (and (= ($generated@@301 ($generated@@351 $generated@@463 $generated@@464)) $generated@@464) ($generated@@145 ($generated@@351 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@70) (= ($generated@@257 ($generated@@301 $generated@@465) $generated@@466) ($generated@@145 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@257 ($generated@@301 $generated@@465) $generated@@466))
)))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@467 T@U) ($generated@@468 Int) ) (!  (=> (and (= (type $generated@@467) $generated@@83) (or ($generated@@251 $generated@@467 ($generated@@250 $generated@@468)) (and (not (= 0 $generated@@247)) (and (not (= $generated@@467 $generated@@139)) ($generated@@145 $generated@@467 $generated@@244))))) (= ($generated@@248 $generated@@467 ($generated@@250 $generated@@468)) ($generated@@250 2)))
 :weight 3
 :pattern ( ($generated@@248 $generated@@467 ($generated@@250 $generated@@468)))
))))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@85 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@82 $generated@@470 $generated@@2)) (<= 0 ($generated@@306 $generated@@469))))
 :pattern ( ($generated@@306 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@294 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@293 $generated@@472)) (<= 0 ($generated@@292 $generated@@471))))
 :pattern ( ($generated@@292 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@423 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@423 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@423 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@431 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@431 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@431 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@431 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@159) (= (type $generated@@494) $generated@@159)) (= ($generated@@285 ($generated@@256 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@256 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@149 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@149 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@149 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@149 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@159) (= (type $generated@@504) $generated@@159)) (= ($generated@@157 ($generated@@256 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@256 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@159) (= (type $generated@@506) $generated@@159)) (= ($generated@@158 ($generated@@256 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@256 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@294 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@159)) (= (type $generated@@514) $generated@@70)) (= (type $generated@@515) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@292 $generated@@513))) ($generated@@279 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@80 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@81 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@81 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@266 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@266 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@266 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@271 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@271 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@271 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@166 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@166 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(= ($generated@@351 $generated@@536 ($generated@@301 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@301 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) (= ($generated@@145 $generated@@537 ($generated@@423 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@312 $generated@@537) $generated@@540))) (and ($generated@@257 ($generated@@87 ($generated@@398 $generated@@537) $generated@@540) $generated@@539) ($generated@@257 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@537) $generated@@540))
 :pattern ( ($generated@@87 ($generated@@312 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@145 $generated@@537 ($generated@@423 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@332 $generated@@159 $generated@@159)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) (= ($generated@@145 $generated@@541 ($generated@@431 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@541) $generated@@544))) (and ($generated@@257 ($generated@@87 ($generated@@406 $generated@@541) $generated@@544) $generated@@543) ($generated@@257 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@541) $generated@@544))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@145 $generated@@541 ($generated@@431 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@159)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@256 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@256 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@159)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@256 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@256 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) ($generated@@257 $generated@@551 ($generated@@423 $generated@@552 $generated@@553))) (and (= ($generated@@301 ($generated@@351 ($generated@@314 $generated@@159 $generated@@159) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@351 ($generated@@314 $generated@@159 $generated@@159) $generated@@551) ($generated@@423 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@257 $generated@@551 ($generated@@423 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@70)) ($generated@@257 $generated@@554 ($generated@@431 $generated@@555 $generated@@556))) (and (= ($generated@@301 ($generated@@351 ($generated@@332 $generated@@159 $generated@@159) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@351 ($generated@@332 $generated@@159 $generated@@159) $generated@@554) ($generated@@431 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@257 $generated@@554 ($generated@@431 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@70) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@159)) ($generated@@257 $generated@@559 ($generated@@149 $generated@@557 $generated@@558))) (and (= ($generated@@301 ($generated@@351 $generated@@150 $generated@@559)) $generated@@559) ($generated@@145 ($generated@@351 $generated@@150 $generated@@559) ($generated@@149 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@257 $generated@@559 ($generated@@149 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@87 ($generated@@439 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@87 ($generated@@439 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@75)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@564 $generated@@565)) $generated@@62) (= ($generated@@562 ($generated@@149 $generated@@564 $generated@@565)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@150) (= ($generated@@545 ($generated@@301 $generated@@566)) ($generated@@546 $generated@@566)))
 :pattern ( ($generated@@545 ($generated@@301 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@159) ($generated@@257 $generated@@567 ($generated@@81 0))) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@567)) $generated@@567) ($generated@@145 ($generated@@351 ($generated@@82 $generated@@159 $generated@@4) $generated@@567) ($generated@@81 0))))
 :pattern ( ($generated@@257 $generated@@567 ($generated@@81 0)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@70)) ($generated@@257 $generated@@568 ($generated@@266 $generated@@569))) (and (= ($generated@@301 ($generated@@351 ($generated@@82 $generated@@159 $generated@@4) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@351 ($generated@@82 $generated@@159 $generated@@4) $generated@@568) ($generated@@266 $generated@@569))))
 :pattern ( ($generated@@257 $generated@@568 ($generated@@266 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@70)) ($generated@@257 $generated@@570 ($generated@@271 $generated@@571))) (and (= ($generated@@301 ($generated@@351 ($generated@@82 $generated@@159 $generated@@4) $generated@@570)) $generated@@570) ($generated@@145 ($generated@@351 ($generated@@82 $generated@@159 $generated@@4) $generated@@570) ($generated@@271 $generated@@571))))
 :pattern ( ($generated@@257 $generated@@570 ($generated@@271 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@159) (= (type $generated@@573) $generated@@70)) ($generated@@257 $generated@@572 ($generated@@166 $generated@@573))) (and (= ($generated@@301 ($generated@@351 ($generated@@82 $generated@@159 $generated@@2) $generated@@572)) $generated@@572) ($generated@@145 ($generated@@351 ($generated@@82 $generated@@159 $generated@@2) $generated@@572) ($generated@@166 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 ($generated@@166 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@159) (= (type $generated@@575) $generated@@70)) ($generated@@257 $generated@@574 ($generated@@507 $generated@@575))) (and (= ($generated@@301 ($generated@@351 ($generated@@293 $generated@@159) $generated@@574)) $generated@@574) ($generated@@145 ($generated@@351 ($generated@@293 $generated@@159) $generated@@574) ($generated@@507 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 ($generated@@507 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@83) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@576 $generated@@139)) ($generated@@80 $generated@@576 $generated@@142 $generated@@577))) ($generated@@80 $generated@@576 $generated@@164 $generated@@577))
 :pattern ( ($generated@@80 $generated@@576 $generated@@142 $generated@@577))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@562 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@562 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@562 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@244) $generated@@66))
(assert (= ($generated@@562 $generated@@244) $generated@@69))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@578 ($generated@@166 $generated@@579) $generated@@580) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@578 $generated@@581)))) ($generated@@279 $generated@@581 $generated@@579 $generated@@580))
 :pattern ( ($generated@@87 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@166 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@83) (= ($generated@@145 $generated@@582 $generated@@138)  (or (= $generated@@582 $generated@@139) ($generated@@147 ($generated@@171 $generated@@582)))))
 :pattern ( ($generated@@145 $generated@@582 $generated@@138))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@150) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@278 $generated@@585) (and ($generated@@148 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@70) ($generated@@80 $generated@@583 ($generated@@149 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@149 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@279 ($generated@@157 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@279 ($generated@@157 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@150) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@278 $generated@@589) (and ($generated@@148 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@70) ($generated@@80 $generated@@587 ($generated@@149 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@149 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@279 ($generated@@158 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@279 ($generated@@158 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@159) (= (type $generated@@592) $generated@@159)) (= ($generated@@256 ($generated@@249 $generated@@591) ($generated@@249 $generated@@592)) ($generated@@249 ($generated@@256 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@256 ($generated@@249 $generated@@591) ($generated@@249 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@250 $generated@@593))) ($generated@@249 ($generated@@301 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@250 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@301 ($generated@@249 $generated@@594)) ($generated@@249 ($generated@@301 $generated@@594)))
 :pattern ( ($generated@@301 ($generated@@249 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@294 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@293 $generated@@596)) (= ($generated@@292 $generated@@595) 0)) (= $generated@@595 ($generated@@291 $generated@@596))))
 :pattern ( ($generated@@292 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@82 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@306 ($generated@@88 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@306 $generated@@597) ($generated ($generated@@87 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@306 ($generated@@88 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@2)) ($generated@@80 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@3)) ($generated@@80 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@606) $generated@@4)) ($generated@@80 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@80 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@463)) ($generated@@80 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@159)) ($generated@@80 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@293 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= ($generated@@145 $generated@@611 ($generated@@507 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@292 $generated@@611))) ($generated@@257 ($generated@@508 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@508 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@507 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@293 $generated@@159)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@292 $generated@@615))) (< ($generated@@546 ($generated@@351 $generated@@150 ($generated@@508 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@546 ($generated@@351 $generated@@150 ($generated@@508 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) ($generated@@145 $generated@@617 ($generated@@423 $generated@@618 $generated@@619))) (and (and ($generated@@145 ($generated@@312 $generated@@617) ($generated@@266 $generated@@618)) ($generated@@145 ($generated@@364 $generated@@617) ($generated@@266 $generated@@619))) ($generated@@145 ($generated@@397 $generated@@617) ($generated@@266 ($generated@@149 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@145 $generated@@617 ($generated@@423 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@332 $generated@@159 $generated@@159)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) $generated@@70)) ($generated@@145 $generated@@620 ($generated@@431 $generated@@621 $generated@@622))) (and (and ($generated@@145 ($generated@@330 $generated@@620) ($generated@@271 $generated@@621)) ($generated@@145 ($generated@@375 $generated@@620) ($generated@@271 $generated@@622))) ($generated@@145 ($generated@@405 $generated@@620) ($generated@@271 ($generated@@149 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@145 $generated@@620 ($generated@@431 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@145 $generated@@623 $generated@@46))
 :pattern ( ($generated@@145 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@145 $generated@@624 $generated@@47))
 :pattern ( ($generated@@145 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@145 $generated@@625 $generated@@44))
 :pattern ( ($generated@@145 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@463) ($generated@@145 $generated@@626 $generated@@45))
 :pattern ( ($generated@@145 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@159) ($generated@@145 $generated@@627 $generated@@48))
 :pattern ( ($generated@@145 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@628) $generated@@83) (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) ($generated@@176 $generated@@83 $generated@@4))) (= (type $generated@@632) ($generated@@176 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@634  (=> (= (ControlFlow 0 5) (- 0 4)) (> ($generated@@248 $generated@@628 $generated@@629) 1))))
(let (($generated@@635  (=> (and (and (= $generated@@630 ($generated@@230 $generated@@139 $generated@@631 $generated@@60 false)) (= ($generated@@248 $generated@@628 $generated@@629) ($generated@@250 2))) (and ($generated@@145 ($generated@@8 ($generated@@248 $generated@@628 $generated@@629)) $generated@@46) (= (ControlFlow 0 6) 5))) $generated@@634)))
(let (($generated@@636  (=> (and ($generated@@80 $generated@@628 $generated@@142 $generated@@631) ($generated@@80 ($generated@@8 $generated@@629) $generated@@46 $generated@@631)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@629) (= $generated@@629 $generated@@629))) (=> (or (<= 0 $generated@@629) (= $generated@@629 $generated@@629)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@628 $generated@@628) (= $generated@@629 $generated@@629)) (< $generated@@629 $generated@@629))))))))
(let (($generated@@637  (=> (= $generated@@632 ($generated@@175 $generated@@139 $generated@@631 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@636) (=> (= (ControlFlow 0 7) 6) $generated@@635)))))
(let (($generated@@638  (=> (and ($generated@@278 $generated@@631) ($generated@@633 $generated@@631)) (=> (and (and (not (= $generated@@628 $generated@@139)) (and ($generated@@145 $generated@@628 $generated@@244) ($generated@@80 $generated@@628 $generated@@244 $generated@@631))) (and (= 0 $generated@@247) (= (ControlFlow 0 8) 7))) $generated@@637))))
$generated@@638))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 (T@U Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@239 (T@U Int) Bool)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@289 (T@U Int) Int)
(declare-fun $generated@@290 (T@U Int) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@502 (T@U Int) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@237 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@242 T@U) ($generated@@243 Int) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (or ($generated@@239 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@242 $generated@@139)) ($generated@@145 $generated@@242 $generated@@232))))) (= ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@238 2)))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@150)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@159)) (= (type $generated@@251) $generated@@159)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) (= (type $generated@@253) $generated@@150)) (= ($generated@@156 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@156 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@238 $generated@@264) $generated@@264)
 :pattern ( ($generated@@238 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@237 $generated@@265) $generated@@265)
 :pattern ( ($generated@@237 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@244 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@83) (or ($generated@@239 $generated@@287 $generated@@288) (and (not (= 0 $generated@@235)) (and (not (= $generated@@287 $generated@@139)) ($generated@@145 $generated@@287 $generated@@232))))) (> ($generated@@236 $generated@@287 $generated@@288) 1))
 :pattern ( ($generated@@236 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@291 T@U) ($generated@@292 Int) ) (!  (=> (and (= (type $generated@@291) $generated@@83) (or ($generated@@290 $generated@@291 $generated@@292) (and (not (= 1 $generated@@235)) (and (not (= $generated@@291 $generated@@139)) ($generated@@145 $generated@@291 $generated@@164))))) (> ($generated@@289 $generated@@291 $generated@@292) 0))
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@159)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@70) (= (type $generated@@297) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@80 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@267 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@82 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@85 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@82 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@87 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@82 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@87 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@87 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@82 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@87 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@87 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@85 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@82 $generated@@341 $generated@@2)) (= ($generated@@167 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@87 $generated@@340 $generated@@342))) (<= ($generated ($generated@@87 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@87 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@167 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@159) ($generated@@245 $generated@@346 $generated@@138)) (and (= ($generated@@293 ($generated@@343 $generated@@83 $generated@@346)) $generated@@346) ($generated@@145 ($generated@@343 $generated@@83 $generated@@346) $generated@@138)))
 :pattern ( ($generated@@245 $generated@@346 $generated@@138))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@159) ($generated@@245 $generated@@347 $generated@@164)) (and (= ($generated@@293 ($generated@@343 $generated@@83 $generated@@347)) $generated@@347) ($generated@@145 ($generated@@343 $generated@@83 $generated@@347) $generated@@164)))
 :pattern ( ($generated@@245 $generated@@347 $generated@@164))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@159) ($generated@@245 $generated@@348 $generated@@142)) (and (= ($generated@@293 ($generated@@343 $generated@@83 $generated@@348)) $generated@@348) ($generated@@145 ($generated@@343 $generated@@83 $generated@@348) $generated@@142)))
 :pattern ( ($generated@@245 $generated@@348 $generated@@142))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@159) ($generated@@245 $generated@@349 $generated@@232)) (and (= ($generated@@293 ($generated@@343 $generated@@83 $generated@@349)) $generated@@349) ($generated@@145 ($generated@@343 $generated@@83 $generated@@349) $generated@@232)))
 :pattern ( ($generated@@245 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@83) (= ($generated@@145 $generated@@350 $generated@@164)  (and ($generated@@145 $generated@@350 $generated@@138) (not (= $generated@@350 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@350 $generated@@164))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@145 $generated@@351 $generated@@232)  (and ($generated@@145 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@351 $generated@@232))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@308 (type $generated@@352))))
(let (($generated@@354 ($generated@@307 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@306 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@305 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@304 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@304 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@308 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@82 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@308 (type $generated@@359))))
(let (($generated@@361 ($generated@@307 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@306 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@305 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@326 (type $generated@@363))))
(let (($generated@@365 ($generated@@325 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@324 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@323 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@322 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@326 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@82 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@326 (type $generated@@370))))
(let (($generated@@372 ($generated@@325 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@324 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@323 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@87 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@375) $generated@@70)) (= ($generated@@145 $generated@@374 ($generated@@166 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@374 $generated@@376)))) ($generated@@245 $generated@@376 $generated@@375))
 :pattern ( ($generated@@87 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@145 $generated@@374 ($generated@@166 $generated@@375)))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@239 $generated@@377 $generated@@378) (and (not (= 0 $generated@@235)) (and (not (= $generated@@377 $generated@@139)) ($generated@@145 $generated@@377 $generated@@232))))) (= ($generated@@236 $generated@@377 $generated@@378) ($generated@@238 2)))
 :pattern ( ($generated@@236 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@254 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@254 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@259 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@159) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@259 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@299 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@299 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@308 (type $generated@@392))))
(let (($generated@@394 ($generated@@307 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@306 $generated@@159 $generated@@159)) (= (type $generated@@396) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@304 $generated@@395) ($generated@@157 ($generated@@343 $generated@@150 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@157 ($generated@@343 $generated@@150 $generated@@396))) ($generated@@158 ($generated@@343 $generated@@150 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@326 (type $generated@@400))))
(let (($generated@@402 ($generated@@325 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@324 $generated@@159 $generated@@159)) (= (type $generated@@404) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@322 $generated@@403) ($generated@@157 ($generated@@343 $generated@@150 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@157 ($generated@@343 $generated@@150 $generated@@404))) ($generated@@158 ($generated@@343 $generated@@150 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@307 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@306 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@356 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@304 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@304 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@325 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@324 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@367 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@322 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@367 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@306 $generated@@159 $generated@@159)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@304 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@304 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@324 $generated@@159 $generated@@159)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@326 (type $generated@@433))))
(let (($generated@@435 ($generated@@325 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@324 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@323 $generated@@435 $generated@@434)) (= ($generated@@322 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@322 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@326 (type $generated@@436))))
(let (($generated@@438 ($generated@@325 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@324 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@323 $generated@@438 $generated@@437)) (= ($generated@@367 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@367 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@159))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@308 (type $generated@@442))))
(let (($generated@@444 ($generated@@307 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@306 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@305 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@159) (= (type $generated@@446) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@293 ($generated@@244 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@326 (type $generated@@447))))
(let (($generated@@449 ($generated@@325 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@324 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@323 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@159) (= (type $generated@@451) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@293 ($generated@@244 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@245 $generated@@452 $generated@@46)) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@343 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@159) ($generated@@245 $generated@@453 $generated@@47)) (and (= ($generated@@293 ($generated@@343 $generated@@3 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@343 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@159) ($generated@@245 $generated@@454 $generated@@44)) (and (= ($generated@@293 ($generated@@343 $generated@@4 $generated@@454)) $generated@@454) ($generated@@145 ($generated@@343 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@159) ($generated@@245 $generated@@456 $generated@@45)) (and (= ($generated@@293 ($generated@@343 $generated@@455 $generated@@456)) $generated@@456) ($generated@@145 ($generated@@343 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@245 ($generated@@293 $generated@@457) $generated@@458) ($generated@@145 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@245 ($generated@@293 $generated@@457) $generated@@458))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (!  (=> (and (= (type $generated@@459) $generated@@83) (or ($generated@@239 $generated@@459 ($generated@@238 $generated@@460)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@459 $generated@@139)) ($generated@@145 $generated@@459 $generated@@232))))) (= ($generated@@236 $generated@@459 ($generated@@238 $generated@@460)) ($generated@@238 2)))
 :weight 3
 :pattern ( ($generated@@236 $generated@@459 ($generated@@238 $generated@@460)))
))))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@298 $generated@@461))))
 :pattern ( ($generated@@298 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@282 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@281 $generated@@464)) (<= 0 ($generated@@280 $generated@@463))))
 :pattern ( ($generated@@280 $generated@@463))
)))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (!  (=> (= (type $generated@@465) $generated@@83) (=> (and (not (= $generated@@465 $generated@@139)) ($generated@@145 $generated@@465 $generated@@232)) (= ($generated@@289 $generated@@465 $generated@@466) ($generated@@236 $generated@@465 $generated@@466))))
 :pattern ( ($generated@@289 $generated@@465 $generated@@466) ($generated@@145 $generated@@465 $generated@@232))
 :pattern ( ($generated@@289 $generated@@465 $generated@@466) ($generated@@236 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@415 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@415 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@415 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@423 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@423 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@159)) (= ($generated@@273 ($generated@@244 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@149 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@149 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@149 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@149 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@159) (= (type $generated@@498) $generated@@159)) (= ($generated@@157 ($generated@@244 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@244 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@159) (= (type $generated@@500) $generated@@159)) (= ($generated@@158 ($generated@@244 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@244 $generated@@499 $generated@@500))
)))
(assert  (and (forall (($generated@@503 T@U) ) (! (= (type ($generated@@501 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@503))
)) (forall (($generated@@504 T@U) ($generated@@505 Int) ) (! (let (($generated@@506 ($generated@@282 (type $generated@@504))))
(= (type ($generated@@502 $generated@@504 $generated@@505)) $generated@@506))
 :pattern ( ($generated@@502 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@281 $generated@@159)) (= (type $generated@@508) $generated@@70)) (= (type $generated@@509) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@507 ($generated@@501 $generated@@508) $generated@@509) (forall (($generated@@510 Int) ) (!  (=> (and (<= 0 $generated@@510) (< $generated@@510 ($generated@@280 $generated@@507))) ($generated@@267 ($generated@@502 $generated@@507 $generated@@510) $generated@@508 $generated@@509))
 :pattern ( ($generated@@502 $generated@@507 $generated@@510))
))))
 :pattern ( ($generated@@80 $generated@@507 ($generated@@501 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@512 Int) ) (! (= ($generated@@511 ($generated@@81 $generated@@512)) $generated@@512)
 :pattern ( ($generated@@81 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@254 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@516)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@259 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@259 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@259 $generated@@520)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@166 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@166 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@524)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@501 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@501 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@501 $generated@@528)) $generated@@57))
 :pattern ( ($generated@@501 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@343 $generated@@530 ($generated@@293 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@293 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@306 $generated@@159 $generated@@159)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@145 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@304 $generated@@531) $generated@@534))) (and ($generated@@245 ($generated@@87 ($generated@@390 $generated@@531) $generated@@534) $generated@@533) ($generated@@245 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@531) $generated@@534))
 :pattern ( ($generated@@87 ($generated@@304 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@145 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@324 $generated@@159 $generated@@159)) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) (= ($generated@@145 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@535) $generated@@538))) (and ($generated@@245 ($generated@@87 ($generated@@398 $generated@@535) $generated@@538) $generated@@537) ($generated@@245 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@535) $generated@@538))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@145 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@159)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@244 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@244 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@159)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@244 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@244 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) ($generated@@245 $generated@@545 ($generated@@415 $generated@@546 $generated@@547))) (and (= ($generated@@293 ($generated@@343 ($generated@@306 $generated@@159 $generated@@159) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@343 ($generated@@306 $generated@@159 $generated@@159) $generated@@545) ($generated@@415 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@245 $generated@@545 ($generated@@415 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@245 $generated@@548 ($generated@@423 $generated@@549 $generated@@550))) (and (= ($generated@@293 ($generated@@343 ($generated@@324 $generated@@159 $generated@@159) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@343 ($generated@@324 $generated@@159 $generated@@159) $generated@@548) ($generated@@423 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@423 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@159)) ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552))) (and (= ($generated@@293 ($generated@@343 $generated@@150 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@343 $generated@@150 $generated@@553) ($generated@@149 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@149 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@150) (= ($generated@@539 ($generated@@293 $generated@@560)) ($generated@@540 $generated@@560)))
 :pattern ( ($generated@@539 ($generated@@293 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) ($generated@@245 $generated@@561 ($generated@@81 0))) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@343 ($generated@@82 $generated@@159 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@245 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@293 ($generated@@343 ($generated@@82 $generated@@159 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@343 ($generated@@82 $generated@@159 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@159) (= (type $generated@@565) $generated@@70)) ($generated@@245 $generated@@564 ($generated@@259 $generated@@565))) (and (= ($generated@@293 ($generated@@343 ($generated@@82 $generated@@159 $generated@@4) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@343 ($generated@@82 $generated@@159 $generated@@4) $generated@@564) ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@259 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@70)) ($generated@@245 $generated@@566 ($generated@@166 $generated@@567))) (and (= ($generated@@293 ($generated@@343 ($generated@@82 $generated@@159 $generated@@2) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@343 ($generated@@82 $generated@@159 $generated@@2) $generated@@566) ($generated@@166 $generated@@567))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@166 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@70)) ($generated@@245 $generated@@568 ($generated@@501 $generated@@569))) (and (= ($generated@@293 ($generated@@343 ($generated@@281 $generated@@159) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@343 ($generated@@281 $generated@@159) $generated@@568) ($generated@@501 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 ($generated@@501 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@164 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@556 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@556 $generated@@232) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@145 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@147 ($generated@@171 $generated@@576)))))
 :pattern ( ($generated@@145 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@148 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@148 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@159) (= (type $generated@@586) $generated@@159)) (= ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)) ($generated@@237 ($generated@@244 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@238 $generated@@587))) ($generated@@237 ($generated@@293 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@238 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@293 ($generated@@237 $generated@@588)) ($generated@@237 ($generated@@293 $generated@@588)))
 :pattern ( ($generated@@293 ($generated@@237 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@282 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@281 $generated@@590)) (= ($generated@@280 $generated@@589) 0)) (= $generated@@589 ($generated@@279 $generated@@590))))
 :pattern ( ($generated@@280 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@298 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@298 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@298 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@159)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@281 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= ($generated@@145 $generated@@605 ($generated@@501 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@280 $generated@@605))) ($generated@@245 ($generated@@502 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@502 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@501 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@609))) (< ($generated@@540 ($generated@@343 $generated@@150 ($generated@@502 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@540 ($generated@@343 $generated@@150 ($generated@@502 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@306 $generated@@159 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@145 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@304 $generated@@611) ($generated@@254 $generated@@612)) ($generated@@145 ($generated@@356 $generated@@611) ($generated@@254 $generated@@613))) ($generated@@145 ($generated@@389 $generated@@611) ($generated@@254 ($generated@@149 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@324 $generated@@159 $generated@@159)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@145 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@145 ($generated@@322 $generated@@614) ($generated@@259 $generated@@615)) ($generated@@145 ($generated@@367 $generated@@614) ($generated@@259 $generated@@616))) ($generated@@145 ($generated@@397 $generated@@614) ($generated@@259 ($generated@@149 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@145 $generated@@617 $generated@@46))
 :pattern ( ($generated@@145 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@145 $generated@@618 $generated@@47))
 :pattern ( ($generated@@145 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@145 $generated@@619 $generated@@44))
 :pattern ( ($generated@@145 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@145 $generated@@620 $generated@@45))
 :pattern ( ($generated@@145 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@159) ($generated@@145 $generated@@621 $generated@@48))
 :pattern ( ($generated@@145 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@175 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@628 T@T) )  (=> false false))) (=> (forall (($generated@@629 T@T) )  (=> false false)) (=> (> ($generated@@236 $generated@@625 $generated@@622) 1) (=> (and (= ($generated@@236 $generated@@625 $generated@@622) ($generated@@289 $generated@@625 $generated@@622)) (= (ControlFlow 0 2) (- 0 1))) (> ($generated@@289 $generated@@625 $generated@@622) 0))))))))))
(let (($generated@@630  (=> (and ($generated@@266 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (not (= $generated@@625 $generated@@139)) (and ($generated@@145 $generated@@625 $generated@@232) ($generated@@80 $generated@@625 $generated@@232 $generated@@624))) (and (= 1 $generated@@235) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@630)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 (Int Int) Int)
(declare-fun $generated@@402 (Int Int) Bool)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@224 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@233 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@250 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@233 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@238 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@250 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@238 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@365) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@143 ($generated@@356 $generated@@136 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@143 ($generated@@356 $generated@@136 $generated@@365))) ($generated@@144 ($generated@@356 $generated@@136 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@373) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@143 ($generated@@356 $generated@@136 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@143 ($generated@@356 $generated@@136 $generated@@373))) ($generated@@144 ($generated@@356 $generated@@136 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@250 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@250 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@250 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@250 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert  (=> (<= 0 $generated@@400) (forall (($generated@@403 Int) ($generated@@404 Int) ) (!  (=> (or ($generated@@402 ($generated@@243 $generated@@403) ($generated@@243 $generated@@404)) (not (= 0 $generated@@400))) (= ($generated@@401 ($generated@@243 $generated@@403) ($generated@@243 $generated@@404)) ($generated@@243 (+ $generated@@403 $generated@@404))))
 :weight 3
 :pattern ( ($generated@@401 ($generated@@243 $generated@@403) ($generated@@243 $generated@@404)))
))))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@76 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@303 (type $generated@@407))))
(let (($generated@@409 ($generated@@302 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@301 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@300 $generated@@409 $generated@@408)) (= ($generated@@299 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@299 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@303 (type $generated@@410))))
(let (($generated@@412 ($generated@@302 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@301 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@300 $generated@@412 $generated@@411)) (= ($generated@@335 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@335 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@303 (type $generated@@413))))
(let (($generated@@415 ($generated@@302 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@301 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@300 $generated@@415 $generated@@414)) (= ($generated@@366 $generated@@413) ($generated@@405 $generated@@145))))))
 :pattern ( ($generated@@366 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@285 (type $generated@@416))))
(let (($generated@@418 ($generated@@284 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@283 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@282 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@145) (= (type $generated@@420) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@416) ($generated@@270 ($generated@@223 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@355 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@303 (type $generated@@421))))
(let (($generated@@423 ($generated@@302 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@301 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@300 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@145) (= (type $generated@@425) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@421) ($generated@@270 ($generated@@223 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@366 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@46)) (and (= ($generated@@270 ($generated@@356 $generated@@2 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@356 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@47)) (and (= ($generated@@270 ($generated@@356 $generated@@3 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@356 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@44)) (and (= ($generated@@270 ($generated@@356 $generated@@4 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@356 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 20))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@45)) (and (= ($generated@@270 ($generated@@356 $generated@@429 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@356 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@431) $generated@@432) ($generated@@132 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@79 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@76 $generated@@434 $generated@@2)) (<= 0 ($generated@@275 $generated@@433))))
 :pattern ( ($generated@@275 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@265 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@264 $generated@@436)) (<= 0 ($generated@@263 $generated@@435))))
 :pattern ( ($generated@@263 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@384 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@384 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@384 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@392 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@392 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@392 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@457 $generated@@458)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@135 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@135 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@135 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@135 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@223 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@223 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@265 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@264 $generated@@145)) (= (type $generated@@478) $generated@@64)) (= (type $generated@@479) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@263 $generated@@477))) ($generated@@250 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@74 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@75 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@75 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@233 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@238 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@150 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@356 $generated@@500 ($generated@@270 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@270 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@384 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@501) $generated@@504))) (and ($generated@@224 ($generated@@81 ($generated@@357 $generated@@501) $generated@@504) $generated@@503) ($generated@@224 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@384 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@132 $generated@@505 ($generated@@392 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@505) $generated@@508))) (and ($generated@@224 ($generated@@81 ($generated@@367 $generated@@505) $generated@@508) $generated@@507) ($generated@@224 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@132 $generated@@505 ($generated@@392 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@145)) (< ($generated@@509 $generated@@511) ($generated@@510 ($generated@@223 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@223 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@145)) (< ($generated@@509 $generated@@514) ($generated@@510 ($generated@@223 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@223 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) ($generated@@224 $generated@@515 ($generated@@384 $generated@@516 $generated@@517))) (and (= ($generated@@270 ($generated@@356 ($generated@@283 $generated@@145 $generated@@145) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@356 ($generated@@283 $generated@@145 $generated@@145) $generated@@515) ($generated@@384 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@224 $generated@@515 ($generated@@384 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@224 $generated@@518 ($generated@@392 $generated@@519 $generated@@520))) (and (= ($generated@@270 ($generated@@356 ($generated@@301 $generated@@145 $generated@@145) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@356 ($generated@@301 $generated@@145 $generated@@145) $generated@@518) ($generated@@392 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@145)) ($generated@@224 $generated@@523 ($generated@@135 $generated@@521 $generated@@522))) (and (= ($generated@@270 ($generated@@356 $generated@@136 $generated@@523)) $generated@@523) ($generated@@132 ($generated@@356 $generated@@136 $generated@@523) ($generated@@135 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@224 $generated@@523 ($generated@@135 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@81 ($generated@@405 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@81 ($generated@@405 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@135 $generated@@528 $generated@@529)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@136) (= ($generated@@509 ($generated@@270 $generated@@530)) ($generated@@510 $generated@@530)))
 :pattern ( ($generated@@509 ($generated@@270 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) ($generated@@224 $generated@@531 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@356 $generated@@2 $generated@@531)) $generated@@531) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@531) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@75 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@233 $generated@@533))) (and (= ($generated@@270 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@233 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@233 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@238 $generated@@535))) (and (= ($generated@@270 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@238 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@238 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@150 $generated@@537))) (and (= ($generated@@270 ($generated@@356 ($generated@@76 $generated@@145 $generated@@2) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@2) $generated@@536) ($generated@@150 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@150 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@471 $generated@@539))) (and (= ($generated@@270 ($generated@@356 ($generated@@264 $generated@@145) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@356 ($generated@@264 $generated@@145) $generated@@538) ($generated@@471 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@471 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@540 ($generated@@150 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@540 $generated@@543)))) ($generated@@250 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@81 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@150 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@546) (and ($generated@@134 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@135 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@135 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@250 ($generated@@143 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@250 ($generated@@144 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@552) ($generated@@245 $generated@@553)) ($generated@@245 ($generated@@223 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@552) ($generated@@245 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@554))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@555)) ($generated@@245 ($generated@@270 $generated@@555)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@265 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@264 $generated@@557)) (= ($generated@@263 $generated@@556) 0)) (= $generated@@556 ($generated@@262 $generated@@557))))
 :pattern ( ($generated@@263 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@76 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@275 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@275 $generated@@558) ($generated ($generated@@81 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert  (=> (<= 0 $generated@@400) (forall (($generated@@562 Int) ($generated@@563 Int) ) (!  (=> (or ($generated@@402 $generated@@562 $generated@@563) (not (= 0 $generated@@400))) (= ($generated@@401 $generated@@562 $generated@@563) (+ $generated@@562 $generated@@563)))
 :pattern ( ($generated@@401 $generated@@562 $generated@@563))
))))
(assert  (=> (<= 0 $generated@@400) (forall (($generated@@564 Int) ($generated@@565 Int) ) (!  (=> (or ($generated@@402 $generated@@564 $generated@@565) (not (= 0 $generated@@400))) (= ($generated@@401 $generated@@564 $generated@@565) (+ $generated@@564 $generated@@565)))
 :pattern ( ($generated@@401 $generated@@564 $generated@@565))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@429)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@264 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@471 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@263 $generated@@576))) ($generated@@224 ($generated@@472 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@472 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@471 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@263 $generated@@580))) (< ($generated@@510 ($generated@@356 $generated@@136 ($generated@@472 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@510 ($generated@@356 $generated@@136 ($generated@@472 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@384 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@281 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@324 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@355 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@384 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@392 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@299 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@335 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@366 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@392 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@429) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@596) $generated@@77)) (= (type $generated@@598) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@600  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@401 $generated@@593 $generated@@594) (+ $generated@@593 $generated@@594)))))
(let (($generated@@601  (=> (and (and (= $generated@@595 ($generated@@211 $generated@@596 $generated@@597 $generated@@60 false)) (= ($generated@@401 $generated@@593 $generated@@594) (+ $generated@@593 $generated@@594))) (and ($generated@@132 ($generated@@8 ($generated@@401 $generated@@593 $generated@@594)) $generated@@46) (= (ControlFlow 0 7) 6))) $generated@@600)))
(let (($generated@@602  (=> (and ($generated@@74 ($generated@@8 $generated@@593) $generated@@46 $generated@@597) ($generated@@74 ($generated@@8 $generated@@594) $generated@@46 $generated@@597)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@593) (= $generated@@593 $generated@@593))) (=> (or (<= 0 $generated@@593) (= $generated@@593 $generated@@593)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@594) (< $generated@@593 $generated@@593)) (= $generated@@594 $generated@@594))) (=> (or (or (<= 0 $generated@@594) (< $generated@@593 $generated@@593)) (= $generated@@594 $generated@@594)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@593 $generated@@593) (= $generated@@594 $generated@@594)) (or (< $generated@@593 $generated@@593) (and (= $generated@@593 $generated@@593) (< $generated@@594 $generated@@594))))))))))))
(let (($generated@@603  (=> (= $generated@@598 ($generated@@156 $generated@@596 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@602) (=> (= (ControlFlow 0 8) 7) $generated@@601)))))
(let (($generated@@604  (=> (and (and ($generated@@249 $generated@@597) ($generated@@599 $generated@@597)) (and (= 0 $generated@@400) (= (ControlFlow 0 9) 8))) $generated@@603)))
$generated@@604))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 (Int Int) Int)
(declare-fun $generated@@420 (Int Int) Bool)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@159)) (= (type $generated@@266) $generated@@159)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@150) (= ($generated@@148 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@159) (= (type $generated@@273) $generated@@159)) (= $generated@@271 ($generated@@235 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@159)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@82 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@85 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@82 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@87 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@82 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@82 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (= ($generated@@167 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@87 $generated@@329 $generated@@331))) (<= ($generated ($generated@@87 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@87 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@167 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@159) ($generated@@236 $generated@@335 $generated@@138)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@83 $generated@@335) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@335 $generated@@138))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@159) ($generated@@236 $generated@@336 $generated@@164)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@336)) $generated@@336) ($generated@@145 ($generated@@332 $generated@@83 $generated@@336) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@164))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@159) ($generated@@236 $generated@@337 $generated@@142)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@332 $generated@@83 $generated@@337) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@337 $generated@@142))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@236 $generated@@338 $generated@@232)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@332 $generated@@83 $generated@@338) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@338 $generated@@232))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@83) (= ($generated@@145 $generated@@339 $generated@@164)  (and ($generated@@145 $generated@@339 $generated@@138) (not (= $generated@@339 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@339 $generated@@164))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@83) (= ($generated@@145 $generated@@340 $generated@@232)  (and ($generated@@145 $generated@@340 $generated@@142) (not (= $generated@@340 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@340 $generated@@232))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(let (($generated@@343 ($generated@@296 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@295 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@294 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@293 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@297 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@297 (type $generated@@348))))
(let (($generated@@350 ($generated@@296 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@295 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@294 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@87 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(let (($generated@@354 ($generated@@314 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@313 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@312 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@311 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@82 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(let (($generated@@361 ($generated@@314 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@313 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@312 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@364) $generated@@70)) (= ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@363 $generated@@365)))) ($generated@@236 $generated@@365 $generated@@364))
 :pattern ( ($generated@@87 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@262 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@262 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@87 ($generated@@288 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@87 ($generated@@288 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@297 (type $generated@@379))))
(let (($generated@@381 ($generated@@296 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@82 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383)))) (= ($generated@@87 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@315 (type $generated@@387))))
(let (($generated@@389 ($generated@@314 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@391) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@296 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@295 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@87 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@392) $generated@@396))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@87 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@314 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@313 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@70)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))) (and ($generated@@262 ($generated@@87 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@262 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert  (=> (<= 0 $generated@@418) (forall (($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@420 ($generated@@255 $generated@@421) ($generated@@255 $generated@@422)) (not (= 0 $generated@@418))) (= ($generated@@419 ($generated@@255 $generated@@421) ($generated@@255 $generated@@422)) ($generated@@255 (+ $generated@@421 $generated@@422))))
 :weight 3
 :pattern ( ($generated@@419 ($generated@@255 $generated@@421) ($generated@@255 $generated@@422)))
))))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@315 (type $generated@@425))))
(let (($generated@@427 ($generated@@314 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@313 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@312 $generated@@427 $generated@@426)) (= ($generated@@311 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@311 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@315 (type $generated@@428))))
(let (($generated@@430 ($generated@@314 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@313 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@312 $generated@@430 $generated@@429)) (= ($generated@@356 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@356 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@315 (type $generated@@431))))
(let (($generated@@433 ($generated@@314 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@313 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@312 $generated@@433 $generated@@432)) (= ($generated@@384 $generated@@431) ($generated@@423 $generated@@159))))))
 :pattern ( ($generated@@384 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@297 (type $generated@@434))))
(let (($generated@@436 ($generated@@296 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@295 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@294 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@376 $generated@@434) ($generated@@282 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@376 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@315 (type $generated@@439))))
(let (($generated@@441 ($generated@@314 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@313 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@312 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@159) (= (type $generated@@443) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@439) ($generated@@282 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@384 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@236 $generated@@444 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@332 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@236 $generated@@445 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@332 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@236 $generated@@446 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@332 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@332 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@70) (= ($generated@@236 ($generated@@282 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@236 ($generated@@282 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@85 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@2)) (<= 0 ($generated@@287 $generated@@451))))
 :pattern ( ($generated@@287 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@277 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@276 $generated@@454)) (<= 0 ($generated@@275 $generated@@453))))
 :pattern ( ($generated@@275 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@402 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@402 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@402 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@78 ($generated@@402 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@410 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@410 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@159) (= (type $generated@@476) $generated@@159)) (= ($generated@@268 ($generated@@235 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@149 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@149 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@159) (= (type $generated@@486) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@235 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@277 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@276 $generated@@159)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@275 $generated@@495))) ($generated@@262 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@81 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@81 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@245 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@245 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@250 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@250 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@166 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@166 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@332 $generated@@518 ($generated@@282 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@282 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) $generated@@70)) (= ($generated@@145 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@519) $generated@@522))) (and ($generated@@236 ($generated@@87 ($generated@@377 $generated@@519) $generated@@522) $generated@@521) ($generated@@236 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@519) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@145 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@410 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@523) $generated@@526))) (and ($generated@@236 ($generated@@87 ($generated@@385 $generated@@523) $generated@@526) $generated@@525) ($generated@@236 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@410 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@159)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@235 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@235 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@159)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@235 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) ($generated@@236 $generated@@533 ($generated@@402 $generated@@534 $generated@@535))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@533)) $generated@@533) ($generated@@145 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@533) ($generated@@402 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@533 ($generated@@402 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@159) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) ($generated@@236 $generated@@536 ($generated@@410 $generated@@537 $generated@@538))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@536)) $generated@@536) ($generated@@145 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@536) ($generated@@410 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@236 $generated@@536 ($generated@@410 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@70) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@159)) ($generated@@236 $generated@@541 ($generated@@149 $generated@@539 $generated@@540))) (and (= ($generated@@282 ($generated@@332 $generated@@150 $generated@@541)) $generated@@541) ($generated@@145 ($generated@@332 $generated@@150 $generated@@541) ($generated@@149 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@236 $generated@@541 ($generated@@149 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@87 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@75)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@149 $generated@@546 $generated@@547)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@150) (= ($generated@@527 ($generated@@282 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@282 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@159) ($generated@@236 $generated@@549 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@549)) $generated@@549) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@549) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@549 ($generated@@81 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@159) (= (type $generated@@551) $generated@@70)) ($generated@@236 $generated@@550 ($generated@@245 $generated@@551))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@550) ($generated@@245 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@245 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@70)) ($generated@@236 $generated@@552 ($generated@@250 $generated@@553))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@552) ($generated@@250 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@250 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@236 $generated@@554 ($generated@@166 $generated@@555))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@554) ($generated@@166 $generated@@555))))
 :pattern ( ($generated@@236 $generated@@554 ($generated@@166 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@236 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@282 ($generated@@332 ($generated@@276 $generated@@159) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@332 ($generated@@276 $generated@@159) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@83) (= (type $generated@@559) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@558 $generated@@139)) ($generated@@80 $generated@@558 $generated@@142 $generated@@559))) ($generated@@80 $generated@@558 $generated@@164 $generated@@559))
 :pattern ( ($generated@@80 $generated@@558 $generated@@142 $generated@@559))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@544 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@544 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@544 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@544 $generated@@232) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@166 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@262 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@166 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@83) (= ($generated@@145 $generated@@564 $generated@@138)  (or (= $generated@@564 $generated@@139) ($generated@@147 ($generated@@171 $generated@@564)))))
 :pattern ( ($generated@@145 $generated@@564 $generated@@138))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@567) (and ($generated@@148 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@70) ($generated@@80 $generated@@565 ($generated@@149 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@80 $generated@@565 ($generated@@149 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@262 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@262 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@70) ($generated@@80 $generated@@569 ($generated@@149 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@80 $generated@@569 ($generated@@149 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@262 ($generated@@158 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@262 ($generated@@158 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@159) (= (type $generated@@574) $generated@@159)) (= ($generated@@235 ($generated@@257 $generated@@573) ($generated@@257 $generated@@574)) ($generated@@257 ($generated@@235 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@573) ($generated@@257 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@255 $generated@@575))) ($generated@@257 ($generated@@282 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@255 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@576)) ($generated@@257 ($generated@@282 $generated@@576)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@277 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@276 $generated@@578)) (= ($generated@@275 $generated@@577) 0)) (= $generated@@577 ($generated@@274 $generated@@578))))
 :pattern ( ($generated@@275 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@287 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@287 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@287 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert  (=> (<= 0 $generated@@418) (forall (($generated@@583 Int) ($generated@@584 Int) ) (!  (=> (or ($generated@@420 $generated@@583 $generated@@584) (not (= 0 $generated@@418))) (= ($generated@@419 $generated@@583 $generated@@584) (+ $generated@@583 $generated@@584)))
 :pattern ( ($generated@@419 $generated@@583 $generated@@584))
))))
(assert  (=> (<= 0 $generated@@418) (forall (($generated@@585 Int) ($generated@@586 Int) ) (!  (=> (or ($generated@@420 $generated@@585 $generated@@586) (not (= 0 $generated@@418))) (= ($generated@@419 $generated@@585 $generated@@586) (+ $generated@@585 $generated@@586)))
 :pattern ( ($generated@@419 $generated@@585 $generated@@586))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@2)) ($generated@@80 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@3)) ($generated@@80 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@4)) ($generated@@80 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@447)) ($generated@@80 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@159)) ($generated@@80 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@276 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= ($generated@@145 $generated@@597 ($generated@@489 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@275 $generated@@597))) ($generated@@236 ($generated@@490 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@490 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@489 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@276 $generated@@159)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@275 $generated@@601))) (< ($generated@@528 ($generated@@332 $generated@@150 ($generated@@490 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@528 ($generated@@332 $generated@@150 ($generated@@490 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@145 $generated@@603 ($generated@@402 $generated@@604 $generated@@605))) (and (and ($generated@@145 ($generated@@293 $generated@@603) ($generated@@245 $generated@@604)) ($generated@@145 ($generated@@345 $generated@@603) ($generated@@245 $generated@@605))) ($generated@@145 ($generated@@376 $generated@@603) ($generated@@245 ($generated@@149 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@402 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@145 $generated@@606 ($generated@@410 $generated@@607 $generated@@608))) (and (and ($generated@@145 ($generated@@311 $generated@@606) ($generated@@250 $generated@@607)) ($generated@@145 ($generated@@356 $generated@@606) ($generated@@250 $generated@@608))) ($generated@@145 ($generated@@384 $generated@@606) ($generated@@250 ($generated@@149 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@145 $generated@@606 ($generated@@410 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@145 $generated@@609 $generated@@46))
 :pattern ( ($generated@@145 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@145 $generated@@610 $generated@@47))
 :pattern ( ($generated@@145 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@145 $generated@@611 $generated@@44))
 :pattern ( ($generated@@145 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@447) ($generated@@145 $generated@@612 $generated@@45))
 :pattern ( ($generated@@145 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@159) ($generated@@145 $generated@@613 $generated@@48))
 :pattern ( ($generated@@145 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () T@U)
(assert  (and (and (= (type $generated@@614) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@619) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@620  (=> (and (= $generated@@614 ($generated@@175 $generated@@139 $generated@@615 $generated@@60 false)) ($generated@@80 ($generated@@8 $generated@@616) $generated@@46 $generated@@615)) (=> (and (and ($generated@@80 ($generated@@8 $generated@@617) $generated@@46 $generated@@615) ($generated@@420 $generated@@616 $generated@@617)) (and ($generated@@420 $generated@@616 $generated@@617) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@419 $generated@@616 $generated@@617) (+ $generated@@616 $generated@@617))))))
(let (($generated@@621  (=> (and ($generated@@261 $generated@@615) ($generated@@618 $generated@@615)) (=> (and (and (not (= $generated@@619 $generated@@139)) (and ($generated@@145 $generated@@619 $generated@@232) ($generated@@80 $generated@@619 $generated@@232 $generated@@615))) (and (= 1 $generated@@418) (= (ControlFlow 0 3) 2))) $generated@@620))))
$generated@@621)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 (T@U Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@239 (T@U Int) Bool)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@459 (T@U Int) Int)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@542 (T@U Int) Bool)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@237 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@242 T@U) ($generated@@243 Int) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (or ($generated@@239 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@242 $generated@@139)) ($generated@@145 $generated@@242 $generated@@232))))) (= ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@238 200)))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@237 $generated@@242) ($generated@@238 $generated@@243)))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@150)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@159)) (= (type $generated@@251) $generated@@159)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@149 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) (= (type $generated@@253) $generated@@150)) (= ($generated@@156 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@156 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@238 $generated@@264) $generated@@264)
 :pattern ( ($generated@@238 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@237 $generated@@265) $generated@@265)
 :pattern ( ($generated@@237 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@244 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@159)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@167 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@167 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@245 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@245 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@245 $generated@@341 $generated@@164)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@164)))
 :pattern ( ($generated@@245 $generated@@341 $generated@@164))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@245 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@245 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@159) ($generated@@245 $generated@@343 $generated@@232)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@232)))
 :pattern ( ($generated@@245 $generated@@343 $generated@@232))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@164)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@164))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@232)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@232))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@245 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@371 T@U) ($generated@@372 Int) ) (!  (=> (and (= (type $generated@@371) $generated@@83) (or ($generated@@239 $generated@@371 $generated@@372) (and (not (= 0 $generated@@235)) (and (not (= $generated@@371 $generated@@139)) ($generated@@145 $generated@@371 $generated@@232))))) (= ($generated@@236 $generated@@371 $generated@@372) ($generated@@238 200)))
 :pattern ( ($generated@@236 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@254 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@159) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@267 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@254 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@259 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@159) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@267 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@259 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@293 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@302 (type $generated@@386))))
(let (($generated@@388 ($generated@@301 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@390) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@389) ($generated@@157 ($generated@@337 $generated@@150 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@157 ($generated@@337 $generated@@150 $generated@@390))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@320 (type $generated@@394))))
(let (($generated@@396 ($generated@@319 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@397) ($generated@@157 ($generated@@337 $generated@@150 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@157 ($generated@@337 $generated@@150 $generated@@398))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@301 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@300 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@319 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@318 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@412) $generated@@416))) (and ($generated@@267 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@267 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@320 (type $generated@@427))))
(let (($generated@@429 ($generated@@319 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@318 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@317 $generated@@429 $generated@@428)) (= ($generated@@316 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@316 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@320 (type $generated@@430))))
(let (($generated@@432 ($generated@@319 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@318 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@317 $generated@@432 $generated@@431)) (= ($generated@@361 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@361 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@320 (type $generated@@433))))
(let (($generated@@435 ($generated@@319 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@318 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@317 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@159))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@302 (type $generated@@436))))
(let (($generated@@438 ($generated@@301 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@300 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@299 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@159) (= (type $generated@@440) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@287 ($generated@@244 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@320 (type $generated@@441))))
(let (($generated@@443 ($generated@@319 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@318 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@317 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@159) (= (type $generated@@445) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@287 ($generated@@244 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@245 $generated@@446 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@245 $generated@@447 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@337 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@245 $generated@@448 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@245 $generated@@450 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@449 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@337 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@245 ($generated@@287 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@245 ($generated@@287 $generated@@451) $generated@@452))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@453 T@U) ($generated@@454 Int) ) (!  (=> (and (= (type $generated@@453) $generated@@83) (or ($generated@@239 $generated@@453 ($generated@@238 $generated@@454)) (and (not (= 0 $generated@@235)) (and (not (= $generated@@453 $generated@@139)) ($generated@@145 $generated@@453 $generated@@232))))) (= ($generated@@236 $generated@@453 ($generated@@238 $generated@@454)) ($generated@@238 200)))
 :weight 3
 :pattern ( ($generated@@236 $generated@@453 ($generated@@238 $generated@@454)))
))))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@292 $generated@@455))))
 :pattern ( ($generated@@292 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@282 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@281 $generated@@458)) (<= 0 ($generated@@280 $generated@@457))))
 :pattern ( ($generated@@280 $generated@@457))
)))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@460 T@U) ($generated@@461 Int) ) (!  (=> (= (type $generated@@460) $generated@@83) (=> (and (not (= $generated@@460 $generated@@139)) ($generated@@145 $generated@@460 $generated@@232)) (= ($generated@@459 $generated@@460 $generated@@461) ($generated@@236 $generated@@460 $generated@@461))))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461) ($generated@@145 $generated@@460 $generated@@232))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461) ($generated@@236 $generated@@460 $generated@@461))
))))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@417 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@417 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@159) (= (type $generated@@483) $generated@@159)) (= ($generated@@273 ($generated@@244 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@149 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@149 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@149 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@149 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@159) (= (type $generated@@493) $generated@@159)) (= ($generated@@157 ($generated@@244 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@244 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@159) (= (type $generated@@495) $generated@@159)) (= ($generated@@158 ($generated@@244 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@244 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@282 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@281 $generated@@159)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@280 $generated@@502))) ($generated@@267 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@81 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@81 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@254 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@254 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@259 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@259 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@259 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@166 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@166 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@337 $generated@@525 ($generated@@287 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@287 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) $generated@@70)) (= ($generated@@145 $generated@@526 ($generated@@409 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@526) $generated@@529))) (and ($generated@@245 ($generated@@87 ($generated@@384 $generated@@526) $generated@@529) $generated@@528) ($generated@@245 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@526) $generated@@529))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@145 $generated@@526 ($generated@@409 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@145 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@530) $generated@@533))) (and ($generated@@245 ($generated@@87 ($generated@@392 $generated@@530) $generated@@533) $generated@@532) ($generated@@245 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@145 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@159) (= (type $generated@@537) $generated@@159)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@244 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@244 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@159) (= (type $generated@@539) $generated@@159)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@244 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@244 $generated@@538 $generated@@539))
)))
(assert  (=> (<= 0 $generated@@235) (forall (($generated@@540 T@U) ($generated@@541 Int) ) (!  (=> (and (= (type $generated@@540) $generated@@83) (or ($generated@@239 $generated@@540 $generated@@541) (and (not (= 0 $generated@@235)) (and (not (= $generated@@540 $generated@@139)) ($generated@@145 $generated@@540 $generated@@232))))) true)
 :pattern ( ($generated@@236 $generated@@540 $generated@@541))
))))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (!  (=> (and (= (type $generated@@543) $generated@@83) (or ($generated@@542 $generated@@543 $generated@@544) (and (not (= 1 $generated@@235)) (and (not (= $generated@@543 $generated@@139)) ($generated@@145 $generated@@543 $generated@@164))))) true)
 :pattern ( ($generated@@459 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) ($generated@@245 $generated@@545 ($generated@@409 $generated@@546 $generated@@547))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@545) ($generated@@409 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@245 $generated@@545 ($generated@@409 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@245 $generated@@548 ($generated@@417 $generated@@549 $generated@@550))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@548) ($generated@@417 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@159)) ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552))) (and (= ($generated@@287 ($generated@@337 $generated@@150 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@337 $generated@@150 $generated@@553) ($generated@@149 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@245 $generated@@553 ($generated@@149 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@425 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@149 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@150) (= ($generated@@534 ($generated@@287 $generated@@560)) ($generated@@535 $generated@@560)))
 :pattern ( ($generated@@534 ($generated@@287 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) ($generated@@245 $generated@@561 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@159) (= (type $generated@@563) $generated@@70)) ($generated@@245 $generated@@562 ($generated@@254 $generated@@563))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@562) ($generated@@254 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 ($generated@@254 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@159) (= (type $generated@@565) $generated@@70)) ($generated@@245 $generated@@564 ($generated@@259 $generated@@565))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@564) ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@259 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@70)) ($generated@@245 $generated@@566 ($generated@@166 $generated@@567))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@566) ($generated@@166 $generated@@567))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@166 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@70)) ($generated@@245 $generated@@568 ($generated@@496 $generated@@569))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@159) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@337 ($generated@@281 $generated@@159) $generated@@568) ($generated@@496 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 ($generated@@496 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@164 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@556 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@556 $generated@@232) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@166 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@145 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@147 ($generated@@171 $generated@@576)))))
 :pattern ( ($generated@@145 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@148 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@149 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@148 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@149 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@159) (= (type $generated@@586) $generated@@159)) (= ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)) ($generated@@237 ($generated@@244 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@244 ($generated@@237 $generated@@585) ($generated@@237 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@238 $generated@@587))) ($generated@@237 ($generated@@287 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@238 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@287 ($generated@@237 $generated@@588)) ($generated@@237 ($generated@@287 $generated@@588)))
 :pattern ( ($generated@@287 ($generated@@237 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@282 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@281 $generated@@590)) (= ($generated@@280 $generated@@589) 0)) (= $generated@@589 ($generated@@279 $generated@@590))))
 :pattern ( ($generated@@280 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@292 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@292 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@449)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@159)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@281 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= ($generated@@145 $generated@@605 ($generated@@496 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@280 $generated@@605))) ($generated@@245 ($generated@@497 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@497 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@496 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@609))) (< ($generated@@535 ($generated@@337 $generated@@150 ($generated@@497 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@535 ($generated@@337 $generated@@150 ($generated@@497 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@145 $generated@@611 ($generated@@409 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@298 $generated@@611) ($generated@@254 $generated@@612)) ($generated@@145 ($generated@@350 $generated@@611) ($generated@@254 $generated@@613))) ($generated@@145 ($generated@@383 $generated@@611) ($generated@@254 ($generated@@149 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@409 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@145 $generated@@614 ($generated@@417 $generated@@615 $generated@@616))) (and (and ($generated@@145 ($generated@@316 $generated@@614) ($generated@@259 $generated@@615)) ($generated@@145 ($generated@@361 $generated@@614) ($generated@@259 $generated@@616))) ($generated@@145 ($generated@@391 $generated@@614) ($generated@@259 ($generated@@149 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@417 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@145 $generated@@617 $generated@@46))
 :pattern ( ($generated@@145 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@145 $generated@@618 $generated@@47))
 :pattern ( ($generated@@145 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@145 $generated@@619 $generated@@44))
 :pattern ( ($generated@@145 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@449) ($generated@@145 $generated@@620 $generated@@45))
 :pattern ( ($generated@@145 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@159) ($generated@@145 $generated@@621 $generated@@48))
 :pattern ( ($generated@@145 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (= (type $generated@@623) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (and (= $generated@@623 ($generated@@175 $generated@@139 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@T) )  (=> false false)))))))
(let (($generated@@629  (=> (and ($generated@@266 $generated@@624) ($generated@@625 $generated@@624)) (=> (and (and (not (= $generated@@626 $generated@@139)) (and ($generated@@145 $generated@@626 $generated@@232) ($generated@@80 $generated@@626 $generated@@232 $generated@@624))) (and (= 1 $generated@@235) (= (ControlFlow 0 4) 2))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@163)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@267 $generated@@268) ($generated@@153 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@154) (= ($generated@@152 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@154) ($generated@@152 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@163) (= (type $generated@@275) $generated@@163)) (= $generated@@273 ($generated@@239 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@163)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@291) $generated@@163)) (= (type $generated@@292) $generated@@70)) ($generated@@138 $generated@@289 $generated@@290)) ($generated@@264 $generated@@291 $generated@@292 $generated@@289)) ($generated@@264 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@138 $generated@@289 $generated@@290) ($generated@@264 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@296) $generated@@70)) ($generated@@138 $generated@@293 $generated@@294)) ($generated@@80 $generated@@295 $generated@@296 $generated@@293)) ($generated@@80 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@138 $generated@@293 $generated@@294) ($generated@@80 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@82 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@85 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@82 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@87 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@82 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@87 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@82 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@87 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@85 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@82 $generated@@340 $generated@@2)) (= ($generated@@171 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@87 $generated@@339 $generated@@341))) (<= ($generated ($generated@@87 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@87 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@171 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@163) ($generated@@240 $generated@@345 $generated@@142)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@342 $generated@@83 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@163) ($generated@@240 $generated@@346 $generated@@168)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@342 $generated@@83 $generated@@346) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@346 $generated@@168))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@146)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@342 $generated@@83 $generated@@347) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@146))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@236)) (and (= ($generated@@284 ($generated@@342 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@342 $generated@@83 $generated@@348) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@236))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@149 $generated@@349 $generated@@168)  (and ($generated@@149 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@349 $generated@@168))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@83) (= ($generated@@149 $generated@@350 $generated@@236)  (and ($generated@@149 $generated@@350 $generated@@146) (not (= $generated@@350 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(let (($generated@@353 ($generated@@306 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@305 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@304 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@303 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@82 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@307 (type $generated@@358))))
(let (($generated@@360 ($generated@@306 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@305 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@304 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(let (($generated@@364 ($generated@@324 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@323 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@322 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(let (($generated@@371 ($generated@@324 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@323 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@322 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@70)) (= ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@87 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@149 $generated@@373 ($generated@@170 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@87 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@87 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@307 (type $generated@@389))))
(let (($generated@@391 ($generated@@306 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@393) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@161 ($generated@@342 $generated@@154 $generated@@393))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@325 (type $generated@@397))))
(let (($generated@@399 ($generated@@324 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@401) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@161 ($generated@@342 $generated@@154 $generated@@401))) ($generated@@162 ($generated@@342 $generated@@154 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@306 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@305 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@303 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@324 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@323 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@321 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@428 $generated@@430))) (and ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))) ($generated@@138 $generated@@428 $generated@@430))
 :pattern ( ($generated@@138 $generated@@428 $generated@@429) ($generated@@138 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@321 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@321 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@366 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@366 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@325 (type $generated@@439))))
(let (($generated@@441 ($generated@@324 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@323 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@322 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@163))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@307 (type $generated@@442))))
(let (($generated@@444 ($generated@@306 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@305 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@304 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@163) (= (type $generated@@446) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@442) ($generated@@284 ($generated@@239 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@325 (type $generated@@447))))
(let (($generated@@449 ($generated@@324 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@323 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@322 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@163) (= (type $generated@@451) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@239 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@240 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@342 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@163) ($generated@@240 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@342 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@342 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@342 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@342 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@342 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@342 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@240 ($generated@@284 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@240 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@279 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@278 $generated@@462)) (<= 0 ($generated@@277 $generated@@461))))
 :pattern ( ($generated@@277 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@163) (= (type $generated@@484) $generated@@163)) (= ($generated@@270 ($generated@@239 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@153 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@153 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@153 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@163) (= (type $generated@@494) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@279 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@278 $generated@@163)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@277 $generated@@503))) ($generated@@264 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@81 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@81 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@249 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@249 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@254 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@170 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@170 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@342 $generated@@526 ($generated@@284 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@284 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@87 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@303 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@149 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))) (and ($generated@@240 ($generated@@87 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@240 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@87 ($generated@@321 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@149 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@239 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@239 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541)) $generated@@541) ($generated@@149 ($generated@@342 ($generated@@305 $generated@@163 $generated@@163) $generated@@541) ($generated@@412 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@412 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544)) $generated@@544) ($generated@@149 ($generated@@342 ($generated@@323 $generated@@163 $generated@@163) $generated@@544) ($generated@@420 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@163)) ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@342 $generated@@154 $generated@@549)) $generated@@549) ($generated@@149 ($generated@@342 $generated@@154 $generated@@549) ($generated@@153 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@153 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@87 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@75)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@153 $generated@@554 $generated@@555)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@154) (= ($generated@@535 ($generated@@284 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) ($generated@@240 $generated@@557 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@342 $generated@@2 $generated@@557)) $generated@@557) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@557) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@81 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@70)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@163) (= (type $generated@@563) $generated@@70)) ($generated@@240 $generated@@562 ($generated@@170 $generated@@563))) (and (= ($generated@@284 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@342 ($generated@@82 $generated@@163 $generated@@2) $generated@@562) ($generated@@170 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@170 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@240 $generated@@564 ($generated@@497 $generated@@565))) (and (= ($generated@@284 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@342 ($generated@@278 $generated@@163) $generated@@564) ($generated@@497 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@497 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@83) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@566 $generated@@143)) ($generated@@80 $generated@@566 $generated@@146 $generated@@567))) ($generated@@80 $generated@@566 $generated@@168 $generated@@567))
 :pattern ( ($generated@@80 $generated@@566 $generated@@146 $generated@@567))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@552 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@552 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@552 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@552 $generated@@236) $generated@@69))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@568 $generated@@571)))) ($generated@@264 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@87 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@170 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@83) (= ($generated@@149 $generated@@572 $generated@@142)  (or (= $generated@@572 $generated@@143) ($generated@@151 ($generated@@175 $generated@@572)))))
 :pattern ( ($generated@@149 $generated@@572 $generated@@142))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@575) (and ($generated@@152 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@153 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@264 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@579) (and ($generated@@152 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@153 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@163)) (= ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)) ($generated@@259 ($generated@@239 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@239 ($generated@@259 $generated@@581) ($generated@@259 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@284 ($generated@@259 $generated@@583)) ($generated@@259 ($generated@@284 $generated@@583)))
 :pattern ( ($generated@@284 ($generated@@259 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@279 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@278 $generated@@585)) (= ($generated@@277 $generated@@584) 0)) (= $generated@@584 ($generated@@276 $generated@@585))))
 :pattern ( ($generated@@277 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@297 $generated@@586) ($generated ($generated@@87 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@297 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@2)) ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@3)) ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@4)) ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@455)) ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@163)) ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@278 $generated@@163)) (= (type $generated@@601) $generated@@70)) (= ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@277 $generated@@600))) ($generated@@240 ($generated@@498 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@498 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@278 $generated@@163)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@277 $generated@@604))) (< ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@536 ($generated@@342 $generated@@154 ($generated@@498 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@163 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608))) (and (and ($generated@@149 ($generated@@303 $generated@@606) ($generated@@249 $generated@@607)) ($generated@@149 ($generated@@355 $generated@@606) ($generated@@249 $generated@@608))) ($generated@@149 ($generated@@386 $generated@@606) ($generated@@249 ($generated@@153 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@412 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@163 $generated@@163)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611))) (and (and ($generated@@149 ($generated@@321 $generated@@609) ($generated@@254 $generated@@610)) ($generated@@149 ($generated@@366 $generated@@609) ($generated@@254 $generated@@611))) ($generated@@149 ($generated@@394 $generated@@609) ($generated@@254 ($generated@@153 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@149 $generated@@609 ($generated@@420 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@149 $generated@@612 $generated@@46))
 :pattern ( ($generated@@149 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@149 $generated@@613 $generated@@47))
 :pattern ( ($generated@@149 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@149 $generated@@614 $generated@@44))
 :pattern ( ($generated@@149 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@455) ($generated@@149 $generated@@615 $generated@@45))
 :pattern ( ($generated@@149 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) ($generated@@149 $generated@@616 $generated@@48))
 :pattern ( ($generated@@149 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (= (type $generated@@618) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@623) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@625  (=> (> $generated@@617 0) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> $generated@@617 (- 0 1))) (=> (> $generated@@617 (- 0 1)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@617 $generated@@617) (=> (= $generated@@617 $generated@@617) true))) (=> (and (<= $generated@@617 $generated@@617) (=> (= $generated@@617 $generated@@617) true)) (=> (= $generated@@618 ($generated@@179 $generated@@143 $generated@@619 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@626 T@T) )  (=> false false))) (=> (forall (($generated@@627 T@T) )  (=> false false)) (=> (and ($generated@@263 $generated@@620) ($generated@@621 $generated@@620)) (=> (and (and (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@83) (=> (and (not (= $generated@@628 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@619 $generated@@628) $generated@@60))) (= ($generated@@87 $generated@@620 $generated@@628) ($generated@@87 $generated@@619 $generated@@628))))
 :pattern ( ($generated@@87 $generated@@620 $generated@@628))
)) ($generated@@138 $generated@@619 $generated@@620)) (and (> $generated@@622 0) (= (ControlFlow 0 2) (- 0 1)))) (> $generated@@622 0)))))))))))))
(let (($generated@@629  (=> (and ($generated@@263 $generated@@619) ($generated@@621 $generated@@619)) (=> (and (and (not (= $generated@@623 $generated@@143)) (and ($generated@@149 $generated@@623 $generated@@236) ($generated@@80 $generated@@623 $generated@@236 $generated@@619))) (and (= 1 $generated@@624) (= (ControlFlow 0 6) 2))) $generated@@625))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) (= (type $generated@@244) $generated@@150)) (= ($generated@@156 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@156 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@70)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@248) $generated@@70)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@159) ($generated@@0 ($generated@@87 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@87 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@253) $generated@@70)) (= ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@159) ($generated@@0 ($generated@@87 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@87 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@145 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@159)) (= (type $generated@@266) $generated@@159)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@265 $generated@@266) ($generated@@149 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@150) (= ($generated@@148 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@159) (= (type $generated@@273) $generated@@159)) (= $generated@@271 ($generated@@235 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@159)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@82 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@85 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@82 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@87 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@82 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@87 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@82 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@87 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (= ($generated@@167 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@87 $generated@@329 $generated@@331))) (<= ($generated ($generated@@87 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@87 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@167 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@159) ($generated@@236 $generated@@335 $generated@@138)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@83 $generated@@335) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@335 $generated@@138))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@159) ($generated@@236 $generated@@336 $generated@@164)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@336)) $generated@@336) ($generated@@145 ($generated@@332 $generated@@83 $generated@@336) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@164))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@159) ($generated@@236 $generated@@337 $generated@@142)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@332 $generated@@83 $generated@@337) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@337 $generated@@142))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@236 $generated@@338 $generated@@232)) (and (= ($generated@@282 ($generated@@332 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@332 $generated@@83 $generated@@338) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@338 $generated@@232))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@83) (= ($generated@@145 $generated@@339 $generated@@164)  (and ($generated@@145 $generated@@339 $generated@@138) (not (= $generated@@339 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@339 $generated@@164))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@83) (= ($generated@@145 $generated@@340 $generated@@232)  (and ($generated@@145 $generated@@340 $generated@@142) (not (= $generated@@340 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@340 $generated@@232))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(let (($generated@@343 ($generated@@296 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@295 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@294 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@293 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@297 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@297 (type $generated@@348))))
(let (($generated@@350 ($generated@@296 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@295 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@294 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@87 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(let (($generated@@354 ($generated@@314 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@313 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@312 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@311 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@82 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(let (($generated@@361 ($generated@@314 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@313 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@312 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@364) $generated@@70)) (= ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@363 $generated@@365)))) ($generated@@236 $generated@@365 $generated@@364))
 :pattern ( ($generated@@87 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@166 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@262 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@245 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@262 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@250 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@87 ($generated@@288 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@87 ($generated@@288 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@297 (type $generated@@379))))
(let (($generated@@381 ($generated@@296 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@82 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383)))) (= ($generated@@87 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@332 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@87 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@315 (type $generated@@387))))
(let (($generated@@389 ($generated@@314 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@391) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@157 ($generated@@332 $generated@@150 $generated@@391))) ($generated@@158 ($generated@@332 $generated@@150 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@296 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@295 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@87 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@87 ($generated@@293 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@392) $generated@@396))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@87 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@314 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@313 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@311 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@70)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))) (and ($generated@@262 ($generated@@87 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@262 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@82 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@315 (type $generated@@420))))
(let (($generated@@422 ($generated@@314 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@313 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@312 $generated@@422 $generated@@421)) (= ($generated@@311 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@311 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@315 (type $generated@@423))))
(let (($generated@@425 ($generated@@314 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@313 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@312 $generated@@425 $generated@@424)) (= ($generated@@356 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@356 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@315 (type $generated@@426))))
(let (($generated@@428 ($generated@@314 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@313 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@312 $generated@@428 $generated@@427)) (= ($generated@@384 $generated@@426) ($generated@@418 $generated@@159))))))
 :pattern ( ($generated@@384 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@297 (type $generated@@429))))
(let (($generated@@431 ($generated@@296 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@295 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@294 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@159) (= (type $generated@@433) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@376 $generated@@429) ($generated@@282 ($generated@@235 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@315 (type $generated@@434))))
(let (($generated@@436 ($generated@@314 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@313 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@312 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@434) ($generated@@282 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@384 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@159) ($generated@@236 $generated@@439 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@332 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@159) ($generated@@236 $generated@@440 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@332 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@159) ($generated@@236 $generated@@441 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@332 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@159) ($generated@@236 $generated@@443 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@442 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@332 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@70) (= ($generated@@236 ($generated@@282 $generated@@444) $generated@@445) ($generated@@145 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@236 ($generated@@282 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@85 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@82 $generated@@447 $generated@@2)) (<= 0 ($generated@@287 $generated@@446))))
 :pattern ( ($generated@@287 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@277 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@276 $generated@@449)) (<= 0 ($generated@@275 $generated@@448))))
 :pattern ( ($generated@@275 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@402 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@402 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@78 ($generated@@402 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@410 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@410 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@159) (= (type $generated@@471) $generated@@159)) (= ($generated@@268 ($generated@@235 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@149 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@149 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@159) (= (type $generated@@481) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@235 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@159) (= (type $generated@@483) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@235 $generated@@482 $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@277 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@276 $generated@@159)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@275 $generated@@490))) ($generated@@262 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@80 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@81 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@81 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@70) (= ($generated@@496 ($generated@@245 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@70) (= ($generated@@78 ($generated@@245 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@250 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@250 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@166 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@166 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@332 $generated@@513 ($generated@@282 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@282 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) $generated@@70)) (= ($generated@@145 $generated@@514 ($generated@@402 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@293 $generated@@514) $generated@@517))) (and ($generated@@236 ($generated@@87 ($generated@@377 $generated@@514) $generated@@517) $generated@@516) ($generated@@236 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@514) $generated@@517))
 :pattern ( ($generated@@87 ($generated@@293 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@145 $generated@@514 ($generated@@402 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) $generated@@70)) (= ($generated@@145 $generated@@518 ($generated@@410 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@311 $generated@@518) $generated@@521))) (and ($generated@@236 ($generated@@87 ($generated@@385 $generated@@518) $generated@@521) $generated@@520) ($generated@@236 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@518) $generated@@521))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@145 $generated@@518 ($generated@@410 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@235 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@235 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@159)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@235 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@235 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) ($generated@@236 $generated@@528 ($generated@@402 $generated@@529 $generated@@530))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@528)) $generated@@528) ($generated@@145 ($generated@@332 ($generated@@295 $generated@@159 $generated@@159) $generated@@528) ($generated@@402 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@236 $generated@@528 ($generated@@402 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) ($generated@@236 $generated@@531 ($generated@@410 $generated@@532 $generated@@533))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@531)) $generated@@531) ($generated@@145 ($generated@@332 ($generated@@313 $generated@@159 $generated@@159) $generated@@531) ($generated@@410 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@236 $generated@@531 ($generated@@410 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@159)) ($generated@@236 $generated@@536 ($generated@@149 $generated@@534 $generated@@535))) (and (= ($generated@@282 ($generated@@332 $generated@@150 $generated@@536)) $generated@@536) ($generated@@145 ($generated@@332 $generated@@150 $generated@@536) ($generated@@149 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@536 ($generated@@149 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@87 ($generated@@418 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@87 ($generated@@418 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@149 $generated@@541 $generated@@542)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@150) (= ($generated@@522 ($generated@@282 $generated@@543)) ($generated@@523 $generated@@543)))
 :pattern ( ($generated@@522 ($generated@@282 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@159) ($generated@@236 $generated@@544 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@544)) $generated@@544) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@544) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@544 ($generated@@81 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@70)) ($generated@@236 $generated@@545 ($generated@@245 $generated@@546))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@545) ($generated@@245 $generated@@546))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@245 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@70)) ($generated@@236 $generated@@547 ($generated@@250 $generated@@548))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@547)) $generated@@547) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@4) $generated@@547) ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@236 $generated@@547 ($generated@@250 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@70)) ($generated@@236 $generated@@549 ($generated@@166 $generated@@550))) (and (= ($generated@@282 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@332 ($generated@@82 $generated@@159 $generated@@2) $generated@@549) ($generated@@166 $generated@@550))))
 :pattern ( ($generated@@236 $generated@@549 ($generated@@166 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) ($generated@@236 $generated@@551 ($generated@@484 $generated@@552))) (and (= ($generated@@282 ($generated@@332 ($generated@@276 $generated@@159) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@332 ($generated@@276 $generated@@159) $generated@@551) ($generated@@484 $generated@@552))))
 :pattern ( ($generated@@236 $generated@@551 ($generated@@484 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@83) (= (type $generated@@554) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@553 $generated@@139)) ($generated@@80 $generated@@553 $generated@@142 $generated@@554))) ($generated@@80 $generated@@553 $generated@@164 $generated@@554))
 :pattern ( ($generated@@80 $generated@@553 $generated@@142 $generated@@554))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@539 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@539 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@539 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@539 $generated@@232) $generated@@69))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@555 ($generated@@166 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@555 $generated@@558)))) ($generated@@262 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@87 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@80 $generated@@555 ($generated@@166 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@83) (= ($generated@@145 $generated@@559 $generated@@138)  (or (= $generated@@559 $generated@@139) ($generated@@147 ($generated@@171 $generated@@559)))))
 :pattern ( ($generated@@145 $generated@@559 $generated@@138))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@562) (and ($generated@@148 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@70) ($generated@@80 $generated@@560 ($generated@@149 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@149 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@262 ($generated@@157 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@262 ($generated@@157 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@566) (and ($generated@@148 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@70) ($generated@@80 $generated@@564 ($generated@@149 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@149 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@262 ($generated@@158 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@262 ($generated@@158 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@159) (= (type $generated@@569) $generated@@159)) (= ($generated@@235 ($generated@@257 $generated@@568) ($generated@@257 $generated@@569)) ($generated@@257 ($generated@@235 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@568) ($generated@@257 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@255 $generated@@570))) ($generated@@257 ($generated@@282 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@255 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@571)) ($generated@@257 ($generated@@282 $generated@@571)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@277 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@276 $generated@@573)) (= ($generated@@275 $generated@@572) 0)) (= $generated@@572 ($generated@@274 $generated@@573))))
 :pattern ( ($generated@@275 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@82 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@287 ($generated@@88 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@287 $generated@@574) ($generated ($generated@@87 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@287 ($generated@@88 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@579) $generated@@2)) ($generated@@80 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@80 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@581) $generated@@3)) ($generated@@80 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@80 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@583) $generated@@4)) ($generated@@80 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@80 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@442)) ($generated@@80 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@159)) ($generated@@80 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@276 $generated@@159)) (= (type $generated@@589) $generated@@70)) (= ($generated@@145 $generated@@588 ($generated@@484 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@275 $generated@@588))) ($generated@@236 ($generated@@485 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@485 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@145 $generated@@588 ($generated@@484 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@276 $generated@@159)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@275 $generated@@592))) (< ($generated@@523 ($generated@@332 $generated@@150 ($generated@@485 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@523 ($generated@@332 $generated@@150 ($generated@@485 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@295 $generated@@159 $generated@@159)) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) $generated@@70)) ($generated@@145 $generated@@594 ($generated@@402 $generated@@595 $generated@@596))) (and (and ($generated@@145 ($generated@@293 $generated@@594) ($generated@@245 $generated@@595)) ($generated@@145 ($generated@@345 $generated@@594) ($generated@@245 $generated@@596))) ($generated@@145 ($generated@@376 $generated@@594) ($generated@@245 ($generated@@149 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@145 $generated@@594 ($generated@@402 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@145 $generated@@597 ($generated@@410 $generated@@598 $generated@@599))) (and (and ($generated@@145 ($generated@@311 $generated@@597) ($generated@@250 $generated@@598)) ($generated@@145 ($generated@@356 $generated@@597) ($generated@@250 $generated@@599))) ($generated@@145 ($generated@@384 $generated@@597) ($generated@@250 ($generated@@149 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@410 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@145 $generated@@600 $generated@@46))
 :pattern ( ($generated@@145 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@145 $generated@@601 $generated@@47))
 :pattern ( ($generated@@145 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@145 $generated@@602 $generated@@44))
 :pattern ( ($generated@@145 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@442) ($generated@@145 $generated@@603 $generated@@45))
 :pattern ( ($generated@@145 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@159) ($generated@@145 $generated@@604 $generated@@48))
 :pattern ( ($generated@@145 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 (T@U) Bool)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(assert  (and (and (= (type $generated@@605) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@609) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@612  (=> (= $generated@@605 ($generated@@175 $generated@@139 $generated@@606 $generated@@60 false)) (=> (and (= $generated@@607 ($generated@@255 10)) (= (ControlFlow 0 2) (- 0 1))) (> $generated@@607 0)))))
(let (($generated@@613  (=> (and ($generated@@261 $generated@@606) ($generated@@608 $generated@@606)) (=> (and (and (and (not (= $generated@@609 $generated@@139)) (and ($generated@@145 $generated@@609 $generated@@232) ($generated@@80 $generated@@609 $generated@@232 $generated@@606))) (= 0 $generated@@610)) (and (> $generated@@611 (- 0 1)) (= (ControlFlow 0 3) 2))) $generated@@612))))
$generated@@613)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(= (type ($generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@83) (or ($generated@@172 $generated@@176) (and (not (= 0 $generated@@170)) (and (not (= $generated@@176 $generated@@143)) ($generated@@149 $generated@@176 $generated@@168))))) (= ($generated@@171 $generated@@176) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :pattern ( ($generated@@171 $generated@@176))
))))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@181) $generated@@70)) ($generated@@149 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@149 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@83) (= ($generated@@149 $generated@@184 $generated@@146)  (or (= $generated@@184 $generated@@143) (= ($generated@@182 $generated@@184) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@184 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 16)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@83 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@73 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@236) ($generated@@72 $generated@@4))) (= (type $generated@@238) $generated@@83)) (= (type $generated@@239) ($generated@@72 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@83) (= (type $generated@@242) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@241 $generated@@168 $generated@@242) ($generated@@80 $generated@@241 $generated@@142 $generated@@242)))
 :pattern ( ($generated@@80 $generated@@241 $generated@@168 $generated@@242))
)))
(assert (= (type $generated@@243) $generated@@70))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@244 $generated@@243 $generated@@245) ($generated@@80 $generated@@244 $generated@@146 $generated@@245)))
 :pattern ( ($generated@@80 $generated@@244 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@154)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@163)) (= (type $generated@@253) $generated@@163)) (= ($generated@@149 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@149 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@154) (= (type $generated@@255) $generated@@154)) (= ($generated@@160 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@160 $generated@@254 $generated@@255))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@83) (or ($generated@@172 ($generated@@173 $generated@@256)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@256 $generated@@143)) ($generated@@149 $generated@@256 $generated@@168))))) (= ($generated@@171 ($generated@@173 $generated@@256)) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@171 ($generated@@173 $generated@@256)))
))))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@149 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@163) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@247 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@149 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@265) $generated@@70)) (= ($generated@@149 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@163) ($generated@@0 ($generated@@87 $generated@@264 $generated@@266))) ($generated@@247 $generated@@266 $generated@@265))
 :pattern ( ($generated@@87 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@149 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@173 $generated@@267) $generated@@267)
 :pattern ( ($generated@@173 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@163)) (= (type $generated@@273) $generated@@163)) (= (type $generated@@274) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@268 $generated@@274)) (= ($generated@@80 ($generated@@246 $generated@@272 $generated@@273) ($generated@@153 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@80 ($generated@@246 $generated@@272 $generated@@273) ($generated@@153 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@154) (= ($generated@@152 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@154) ($generated@@152 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@163) (= (type $generated@@280) $generated@@163)) (= $generated@@278 ($generated@@246 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@152 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@83) (or ($generated@@172 $generated@@289) (and (not (= 0 $generated@@170)) (and (not (= $generated@@289 $generated@@143)) ($generated@@149 $generated@@289 $generated@@168))))) true)
 :pattern ( ($generated@@171 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@163)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@269 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@80 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@269 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@297) $generated@@163)) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@269 $generated@@297 $generated@@298 $generated@@295)) ($generated@@269 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@269 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@302) $generated@@70)) ($generated@@138 $generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@302 $generated@@299)) ($generated@@80 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@138 $generated@@299 $generated@@300) ($generated@@80 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@82 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@85 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@82 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@87 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@82 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@87 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@87 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@82 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@87 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@87 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@85 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@82 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@87 $generated@@345 $generated@@347))) (<= ($generated ($generated@@87 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@87 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@163) ($generated@@247 $generated@@351 $generated@@142)) (and (= ($generated@@290 ($generated@@348 $generated@@83 $generated@@351)) $generated@@351) ($generated@@149 ($generated@@348 $generated@@83 $generated@@351) $generated@@142)))
 :pattern ( ($generated@@247 $generated@@351 $generated@@142))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@163) ($generated@@247 $generated@@352 $generated@@168)) (and (= ($generated@@290 ($generated@@348 $generated@@83 $generated@@352)) $generated@@352) ($generated@@149 ($generated@@348 $generated@@83 $generated@@352) $generated@@168)))
 :pattern ( ($generated@@247 $generated@@352 $generated@@168))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@163) ($generated@@247 $generated@@353 $generated@@146)) (and (= ($generated@@290 ($generated@@348 $generated@@83 $generated@@353)) $generated@@353) ($generated@@149 ($generated@@348 $generated@@83 $generated@@353) $generated@@146)))
 :pattern ( ($generated@@247 $generated@@353 $generated@@146))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@163) ($generated@@247 $generated@@354 $generated@@243)) (and (= ($generated@@290 ($generated@@348 $generated@@83 $generated@@354)) $generated@@354) ($generated@@149 ($generated@@348 $generated@@83 $generated@@354) $generated@@243)))
 :pattern ( ($generated@@247 $generated@@354 $generated@@243))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@83) (= ($generated@@149 $generated@@355 $generated@@168)  (and ($generated@@149 $generated@@355 $generated@@142) (not (= $generated@@355 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@355 $generated@@168))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@83) (= ($generated@@149 $generated@@356 $generated@@243)  (and ($generated@@149 $generated@@356 $generated@@146) (not (= $generated@@356 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@356 $generated@@243))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@309 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@313 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@313 (type $generated@@364))))
(let (($generated@@366 ($generated@@312 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@311 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@310 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@327 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@327 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@82 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@331 (type $generated@@375))))
(let (($generated@@377 ($generated@@330 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@329 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@328 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@87 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@380) $generated@@70)) (= ($generated@@149 $generated@@379 ($generated@@177 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@379 $generated@@381)))) ($generated@@247 $generated@@381 $generated@@380))
 :pattern ( ($generated@@87 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@149 $generated@@379 ($generated@@177 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@257 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@269 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@257 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@386 ($generated@@262 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@163) ($generated@@0 ($generated@@87 $generated@@386 $generated@@389))) ($generated@@269 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@87 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@80 $generated@@386 ($generated@@262 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@87 ($generated@@304 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@87 ($generated@@304 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@313 (type $generated@@395))))
(let (($generated@@397 ($generated@@312 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@399) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@87 ($generated@@309 $generated@@398) ($generated@@161 ($generated@@348 $generated@@154 $generated@@399)))) (= ($generated@@87 ($generated@@393 $generated@@398) ($generated@@161 ($generated@@348 $generated@@154 $generated@@399))) ($generated@@162 ($generated@@348 $generated@@154 $generated@@399))))))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@331 (type $generated@@403))))
(let (($generated@@405 ($generated@@330 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@329 $generated@@163 $generated@@163)) (= (type $generated@@407) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@87 ($generated@@327 $generated@@406) ($generated@@161 ($generated@@348 $generated@@154 $generated@@407)))) (= ($generated@@87 ($generated@@401 $generated@@406) ($generated@@161 ($generated@@348 $generated@@154 $generated@@407))) ($generated@@162 ($generated@@348 $generated@@154 $generated@@407))))))
 :pattern ( ($generated@@87 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@312 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@311 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@87 ($generated@@309 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@87 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@408) $generated@@412))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@330 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@329 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@372 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@327 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@372 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@70)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@421) $generated@@425))) (and ($generated@@269 ($generated@@87 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@269 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@329 $generated@@163 $generated@@163)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@327 $generated@@429) $generated@@433))) (and ($generated@@269 ($generated@@87 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@269 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@80 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@434) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@436) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@434 $generated@@436))) (and ($generated@@138 $generated@@434 $generated@@435) ($generated@@138 $generated@@435 $generated@@436))) ($generated@@138 $generated@@434 $generated@@436))
 :pattern ( ($generated@@138 $generated@@434 $generated@@435) ($generated@@138 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@331 (type $generated@@439))))
(let (($generated@@441 ($generated@@330 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@329 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@328 $generated@@441 $generated@@440)) (= ($generated@@327 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@327 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@331 (type $generated@@442))))
(let (($generated@@444 ($generated@@330 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@329 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@328 $generated@@444 $generated@@443)) (= ($generated@@372 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@372 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@331 (type $generated@@445))))
(let (($generated@@447 ($generated@@330 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@329 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@328 $generated@@447 $generated@@446)) (= ($generated@@400 $generated@@445) ($generated@@437 $generated@@163))))))
 :pattern ( ($generated@@400 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@313 (type $generated@@448))))
(let (($generated@@450 ($generated@@312 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@311 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@310 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@163) (= (type $generated@@452) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@392 $generated@@448) ($generated@@290 ($generated@@246 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@392 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@331 (type $generated@@453))))
(let (($generated@@455 ($generated@@330 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@329 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@328 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@163) (= (type $generated@@457) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@400 $generated@@453) ($generated@@290 ($generated@@246 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@400 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@247 $generated@@458 $generated@@46)) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@348 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@247 $generated@@459 $generated@@47)) (and (= ($generated@@290 ($generated@@348 $generated@@3 $generated@@459)) $generated@@459) ($generated@@149 ($generated@@348 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@163) ($generated@@247 $generated@@460 $generated@@44)) (and (= ($generated@@290 ($generated@@348 $generated@@4 $generated@@460)) $generated@@460) ($generated@@149 ($generated@@348 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@163) ($generated@@247 $generated@@462 $generated@@45)) (and (= ($generated@@290 ($generated@@348 $generated@@461 $generated@@462)) $generated@@462) ($generated@@149 ($generated@@348 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@247 ($generated@@290 $generated@@463) $generated@@464) ($generated@@149 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@247 ($generated@@290 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@303 $generated@@465))))
 :pattern ( ($generated@@303 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@284 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@283 $generated@@468)) (<= 0 ($generated@@282 $generated@@467))))
 :pattern ( ($generated@@282 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@418 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@418 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@418 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@418 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@418 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@426 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@426 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@426 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@426 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@426 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@163) (= (type $generated@@490) $generated@@163)) (= ($generated@@275 ($generated@@246 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@153 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@153 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@163) (= (type $generated@@500) $generated@@163)) (= ($generated@@161 ($generated@@246 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@246 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@163) (= (type $generated@@502) $generated@@163)) (= ($generated@@162 ($generated@@246 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@246 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@284 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@283 $generated@@163)) (= (type $generated@@510) $generated@@70)) (= (type $generated@@511) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@282 $generated@@509))) ($generated@@269 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@80 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@81 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@81 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@257 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@257 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@262 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@262 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@262 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@177 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@177 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@177 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@348 $generated@@532 ($generated@@290 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@290 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@418 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@533) $generated@@536))) (and ($generated@@247 ($generated@@87 ($generated@@393 $generated@@533) $generated@@536) $generated@@535) ($generated@@247 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@418 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@329 $generated@@163 $generated@@163)) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) (= ($generated@@149 $generated@@537 ($generated@@426 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@327 $generated@@537) $generated@@540))) (and ($generated@@247 ($generated@@87 ($generated@@401 $generated@@537) $generated@@540) $generated@@539) ($generated@@247 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@537) $generated@@540))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@149 $generated@@537 ($generated@@426 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@163)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@246 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@246 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@163) (= (type $generated@@546) $generated@@163)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@246 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@246 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@163) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@70)) ($generated@@247 $generated@@547 ($generated@@418 $generated@@548 $generated@@549))) (and (= ($generated@@290 ($generated@@348 ($generated@@311 $generated@@163 $generated@@163) $generated@@547)) $generated@@547) ($generated@@149 ($generated@@348 ($generated@@311 $generated@@163 $generated@@163) $generated@@547) ($generated@@418 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@247 $generated@@547 ($generated@@418 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) $generated@@70)) ($generated@@247 $generated@@550 ($generated@@426 $generated@@551 $generated@@552))) (and (= ($generated@@290 ($generated@@348 ($generated@@329 $generated@@163 $generated@@163) $generated@@550)) $generated@@550) ($generated@@149 ($generated@@348 ($generated@@329 $generated@@163 $generated@@163) $generated@@550) ($generated@@426 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@247 $generated@@550 ($generated@@426 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@70) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@163)) ($generated@@247 $generated@@555 ($generated@@153 $generated@@553 $generated@@554))) (and (= ($generated@@290 ($generated@@348 $generated@@154 $generated@@555)) $generated@@555) ($generated@@149 ($generated@@348 $generated@@154 $generated@@555) ($generated@@153 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@247 $generated@@555 ($generated@@153 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@87 ($generated@@437 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@75)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@70) (= (type $generated@@561) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@560 $generated@@561)) $generated@@62) (= ($generated@@558 ($generated@@153 $generated@@560 $generated@@561)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@154) (= ($generated@@541 ($generated@@290 $generated@@562)) ($generated@@542 $generated@@562)))
 :pattern ( ($generated@@541 ($generated@@290 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@163) ($generated@@247 $generated@@563 ($generated@@81 0))) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@563)) $generated@@563) ($generated@@149 ($generated@@348 ($generated@@82 $generated@@163 $generated@@4) $generated@@563) ($generated@@81 0))))
 :pattern ( ($generated@@247 $generated@@563 ($generated@@81 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@70)) ($generated@@247 $generated@@564 ($generated@@257 $generated@@565))) (and (= ($generated@@290 ($generated@@348 ($generated@@82 $generated@@163 $generated@@4) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@348 ($generated@@82 $generated@@163 $generated@@4) $generated@@564) ($generated@@257 $generated@@565))))
 :pattern ( ($generated@@247 $generated@@564 ($generated@@257 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@70)) ($generated@@247 $generated@@566 ($generated@@262 $generated@@567))) (and (= ($generated@@290 ($generated@@348 ($generated@@82 $generated@@163 $generated@@4) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@348 ($generated@@82 $generated@@163 $generated@@4) $generated@@566) ($generated@@262 $generated@@567))))
 :pattern ( ($generated@@247 $generated@@566 ($generated@@262 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@163) (= (type $generated@@569) $generated@@70)) ($generated@@247 $generated@@568 ($generated@@177 $generated@@569))) (and (= ($generated@@290 ($generated@@348 ($generated@@82 $generated@@163 $generated@@2) $generated@@568)) $generated@@568) ($generated@@149 ($generated@@348 ($generated@@82 $generated@@163 $generated@@2) $generated@@568) ($generated@@177 $generated@@569))))
 :pattern ( ($generated@@247 $generated@@568 ($generated@@177 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@163) (= (type $generated@@571) $generated@@70)) ($generated@@247 $generated@@570 ($generated@@503 $generated@@571))) (and (= ($generated@@290 ($generated@@348 ($generated@@283 $generated@@163) $generated@@570)) $generated@@570) ($generated@@149 ($generated@@348 ($generated@@283 $generated@@163) $generated@@570) ($generated@@503 $generated@@571))))
 :pattern ( ($generated@@247 $generated@@570 ($generated@@503 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@83) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@572 $generated@@143)) ($generated@@80 $generated@@572 $generated@@146 $generated@@573))) ($generated@@80 $generated@@572 $generated@@168 $generated@@573))
 :pattern ( ($generated@@80 $generated@@572 $generated@@146 $generated@@573))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@558 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@558 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@558 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@243) $generated@@66))
(assert (= ($generated@@558 $generated@@243) $generated@@69))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@574 ($generated@@177 $generated@@575) $generated@@576) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@574 $generated@@577)))) ($generated@@269 $generated@@577 $generated@@575 $generated@@576))
 :pattern ( ($generated@@87 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@80 $generated@@574 ($generated@@177 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@83) (= ($generated@@149 $generated@@578 $generated@@142)  (or (= $generated@@578 $generated@@143) ($generated@@151 ($generated@@182 $generated@@578)))))
 :pattern ( ($generated@@149 $generated@@578 $generated@@142))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@268 $generated@@581) (and ($generated@@152 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@153 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@153 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@269 ($generated@@161 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@269 ($generated@@161 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@268 $generated@@585) (and ($generated@@152 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@70) ($generated@@80 $generated@@583 ($generated@@153 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@153 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@269 ($generated@@162 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@269 ($generated@@162 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@163) (= (type $generated@@588) $generated@@163)) (= ($generated@@246 ($generated@@173 $generated@@587) ($generated@@173 $generated@@588)) ($generated@@173 ($generated@@246 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@246 ($generated@@173 $generated@@587) ($generated@@173 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@290 ($generated@@173 $generated@@589)) ($generated@@173 ($generated@@290 $generated@@589)))
 :pattern ( ($generated@@290 ($generated@@173 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@284 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@283 $generated@@591)) (= ($generated@@282 $generated@@590) 0)) (= $generated@@590 ($generated@@281 $generated@@591))))
 :pattern ( ($generated@@282 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@82 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@303 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@303 $generated@@592) ($generated ($generated@@87 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@303 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@2)) ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@3)) ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@4)) ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@461)) ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@163)) ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@283 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= ($generated@@149 $generated@@606 ($generated@@503 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@282 $generated@@606))) ($generated@@247 ($generated@@504 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@504 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@503 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@283 $generated@@163)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@282 $generated@@610))) (< ($generated@@542 ($generated@@348 $generated@@154 ($generated@@504 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@542 ($generated@@348 $generated@@154 ($generated@@504 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@418 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@309 $generated@@612) ($generated@@257 $generated@@613)) ($generated@@149 ($generated@@361 $generated@@612) ($generated@@257 $generated@@614))) ($generated@@149 ($generated@@392 $generated@@612) ($generated@@257 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@418 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@329 $generated@@163 $generated@@163)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) $generated@@70)) ($generated@@149 $generated@@615 ($generated@@426 $generated@@616 $generated@@617))) (and (and ($generated@@149 ($generated@@327 $generated@@615) ($generated@@262 $generated@@616)) ($generated@@149 ($generated@@372 $generated@@615) ($generated@@262 $generated@@617))) ($generated@@149 ($generated@@400 $generated@@615) ($generated@@262 ($generated@@153 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@426 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@149 $generated@@618 $generated@@46))
 :pattern ( ($generated@@149 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@149 $generated@@619 $generated@@47))
 :pattern ( ($generated@@149 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@149 $generated@@620 $generated@@44))
 :pattern ( ($generated@@149 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@461) ($generated@@149 $generated@@621 $generated@@45))
 :pattern ( ($generated@@149 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@163) ($generated@@149 $generated@@622 $generated@@48))
 :pattern ( ($generated@@149 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () T@U)
(assert  (and (and (and (= (type $generated@@623) ($generated@@187 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@627) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (= $generated@@623 ($generated@@186 $generated@@143 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (and ($generated@@268 $generated@@625) ($generated@@626 $generated@@625)) (and (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@83) (=> (and (not (= $generated@@631 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@624 $generated@@631) $generated@@60))) (= ($generated@@87 $generated@@625 $generated@@631) ($generated@@87 $generated@@624 $generated@@631))))
 :pattern ( ($generated@@87 $generated@@625 $generated@@631))
)) ($generated@@138 $generated@@624 $generated@@625))) (and (and ($generated@@171 $generated@@627) (= (ControlFlow 0 2) (- 0 1))) ($generated@@172 $generated@@627))) (or ($generated@@171 $generated@@627) ($generated@@0 ($generated@@173 ($generated@@11 true)))))))))))
(let (($generated@@632  (=> (and ($generated@@268 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (not (= $generated@@627 $generated@@143)) (and ($generated@@149 $generated@@627 $generated@@243) ($generated@@80 $generated@@627 $generated@@243 $generated@@624))) (and (= 2 $generated@@170) (= (ControlFlow 0 5) 2))) $generated@@628))))
$generated@@632)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
(= (type ($generated@@169 $generated@@170)) $generated@@171))
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@83) (or ($generated@@168 $generated@@172) (and (not (= 0 $generated@@166)) (and (not (= $generated@@172 $generated@@139)) ($generated@@145 $generated@@172 $generated@@164))))) (= ($generated@@167 $generated@@172) ($generated@@0 ($generated@@169 ($generated@@11 true)))))
 :pattern ( ($generated@@167 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@145 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@145 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@145 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@164 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@164 $generated@@238))
)))
(assert (= (type $generated@@239) $generated@@70))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@240 $generated@@239 $generated@@241) ($generated@@80 $generated@@240 $generated@@142 $generated@@241)))
 :pattern ( ($generated@@80 $generated@@240 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@150)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@159)) (= (type $generated@@249) $generated@@159)) (= ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@149 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@149 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@150) (= (type $generated@@251) $generated@@150)) (= ($generated@@156 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@156 $generated@@250 $generated@@251))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@83) (or ($generated@@168 ($generated@@169 $generated@@252)) (and (not (= 0 $generated@@166)) (and (not (= $generated@@252 $generated@@139)) ($generated@@145 $generated@@252 $generated@@164))))) (= ($generated@@167 ($generated@@169 $generated@@252)) ($generated@@0 ($generated@@169 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@169 $generated@@252)))
))))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@256) $generated@@70)) (= ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@159) ($generated@@0 ($generated@@87 $generated@@255 $generated@@257))) ($generated@@243 $generated@@257 $generated@@256))
 :pattern ( ($generated@@87 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@261) $generated@@70)) (= ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@159) ($generated@@0 ($generated@@87 $generated@@260 $generated@@262))) ($generated@@243 $generated@@262 $generated@@261))
 :pattern ( ($generated@@87 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@169 $generated@@263) $generated@@263)
 :pattern ( ($generated@@169 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@70) (= (type $generated@@267) $generated@@70)) (= (type $generated@@268) $generated@@159)) (= (type $generated@@269) $generated@@159)) (= (type $generated@@270) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@264 $generated@@270)) (= ($generated@@80 ($generated@@242 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@74)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@150) (= ($generated@@148 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@150) ($generated@@148 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@159) (= (type $generated@@276) $generated@@159)) (= $generated@@274 ($generated@@242 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@148 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@83) (or ($generated@@168 $generated@@285) (and (not (= 0 $generated@@166)) (and (not (= $generated@@285 $generated@@139)) ($generated@@145 $generated@@285 $generated@@164))))) true)
 :pattern ( ($generated@@167 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@159)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@82 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@85 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@82 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@87 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@82 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@87 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@87 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@85 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@82 $generated@@334 $generated@@2)) (= ($generated@@174 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@87 $generated@@333 $generated@@335))) (<= ($generated ($generated@@87 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@87 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@174 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@159) ($generated@@243 $generated@@339 $generated@@138)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@339)) $generated@@339) ($generated@@145 ($generated@@336 $generated@@83 $generated@@339) $generated@@138)))
 :pattern ( ($generated@@243 $generated@@339 $generated@@138))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@243 $generated@@340 $generated@@164)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@336 $generated@@83 $generated@@340) $generated@@164)))
 :pattern ( ($generated@@243 $generated@@340 $generated@@164))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@243 $generated@@341 $generated@@142)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@336 $generated@@83 $generated@@341) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@341 $generated@@142))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@243 $generated@@342 $generated@@239)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@336 $generated@@83 $generated@@342) $generated@@239)))
 :pattern ( ($generated@@243 $generated@@342 $generated@@239))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@83) (= ($generated@@145 $generated@@343 $generated@@164)  (and ($generated@@145 $generated@@343 $generated@@138) (not (= $generated@@343 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@343 $generated@@164))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@239)  (and ($generated@@145 $generated@@344 $generated@@142) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@239))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(let (($generated@@347 ($generated@@300 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@299 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@298 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@87 ($generated@@297 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@297 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@301 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@301 (type $generated@@352))))
(let (($generated@@354 ($generated@@300 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@299 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@298 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(let (($generated@@358 ($generated@@318 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@317 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@316 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@315 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@319 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(let (($generated@@365 ($generated@@318 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@317 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@316 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@368) $generated@@70)) (= ($generated@@145 $generated@@367 ($generated@@173 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@367 $generated@@369)))) ($generated@@243 $generated@@369 $generated@@368))
 :pattern ( ($generated@@87 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@145 $generated@@367 ($generated@@173 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@253 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@253 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@375) $generated@@70)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@374 ($generated@@258 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@159) ($generated@@0 ($generated@@87 $generated@@374 $generated@@377))) ($generated@@265 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@87 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@80 $generated@@374 ($generated@@258 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@87 ($generated@@292 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@87 ($generated@@292 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@301 (type $generated@@383))))
(let (($generated@@385 ($generated@@300 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@387) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@87 ($generated@@297 $generated@@386) ($generated@@157 ($generated@@336 $generated@@150 $generated@@387)))) (= ($generated@@87 ($generated@@381 $generated@@386) ($generated@@157 ($generated@@336 $generated@@150 $generated@@387))) ($generated@@158 ($generated@@336 $generated@@150 $generated@@387))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@319 (type $generated@@391))))
(let (($generated@@393 ($generated@@318 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@395) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@394) ($generated@@157 ($generated@@336 $generated@@150 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@157 ($generated@@336 $generated@@150 $generated@@395))) ($generated@@158 ($generated@@336 $generated@@150 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@300 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@299 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@87 ($generated@@349 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@87 ($generated@@297 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@87 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@87 ($generated@@297 $generated@@396) $generated@@400))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@87 ($generated@@349 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@318 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@317 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@70)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@297 $generated@@409) $generated@@413))) (and ($generated@@265 ($generated@@87 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@265 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@297 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@417) $generated@@421))) (and ($generated@@265 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@265 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@315 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@315 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@360 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@360 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@319 (type $generated@@430))))
(let (($generated@@432 ($generated@@318 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@317 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@316 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@159))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@301 (type $generated@@433))))
(let (($generated@@435 ($generated@@300 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@299 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@298 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@159) (= (type $generated@@437) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@433) ($generated@@286 ($generated@@242 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@319 (type $generated@@438))))
(let (($generated@@440 ($generated@@318 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@317 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@316 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@438) ($generated@@286 ($generated@@242 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@159) ($generated@@243 $generated@@443 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@336 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@243 $generated@@444 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@336 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@243 $generated@@445 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@336 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@243 $generated@@447 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@446 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@336 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@70) (= ($generated@@243 ($generated@@286 $generated@@448) $generated@@449) ($generated@@145 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@243 ($generated@@286 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@85 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@82 $generated@@451 $generated@@2)) (<= 0 ($generated@@291 $generated@@450))))
 :pattern ( ($generated@@291 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@280 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@279 $generated@@453)) (<= 0 ($generated@@278 $generated@@452))))
 :pattern ( ($generated@@278 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@70) (= (type $generated@@461) $generated@@70)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@78 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@271 ($generated@@242 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@149 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@159) (= (type $generated@@485) $generated@@159)) (= ($generated@@157 ($generated@@242 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@242 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@159) (= (type $generated@@487) $generated@@159)) (= ($generated@@158 ($generated@@242 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@242 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@280 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@279 $generated@@159)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@278 $generated@@494))) ($generated@@265 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@81 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@81 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@253 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@253 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@253 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@258 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@258 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@258 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@173 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@173 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@336 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) $generated@@70)) (= ($generated@@145 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@243 ($generated@@87 ($generated@@381 $generated@@518) $generated@@521) $generated@@520) ($generated@@243 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@518) $generated@@521))
 :pattern ( ($generated@@87 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@145 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@523) $generated@@70)) (= (type $generated@@524) $generated@@70)) (= ($generated@@145 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@243 ($generated@@87 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@243 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@145 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@159)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@242 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@242 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) (= (type $generated@@531) $generated@@159)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@242 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@242 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@159) (= (type $generated@@533) $generated@@70)) (= (type $generated@@534) $generated@@70)) ($generated@@243 $generated@@532 ($generated@@406 $generated@@533 $generated@@534))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@159 $generated@@159) $generated@@532)) $generated@@532) ($generated@@145 ($generated@@336 ($generated@@299 $generated@@159 $generated@@159) $generated@@532) ($generated@@406 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@243 $generated@@532 ($generated@@406 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@243 $generated@@535 ($generated@@414 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@159 $generated@@159) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@336 ($generated@@317 $generated@@159 $generated@@159) $generated@@535) ($generated@@414 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@243 $generated@@535 ($generated@@414 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@70) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@159)) ($generated@@243 $generated@@540 ($generated@@149 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@336 $generated@@150 $generated@@540)) $generated@@540) ($generated@@145 ($generated@@336 $generated@@150 $generated@@540) ($generated@@149 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@243 $generated@@540 ($generated@@149 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@87 ($generated@@422 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@87 ($generated@@422 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@75)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@149 $generated@@545 $generated@@546)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@150) (= ($generated@@526 ($generated@@286 $generated@@547)) ($generated@@527 $generated@@547)))
 :pattern ( ($generated@@526 ($generated@@286 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@159) ($generated@@243 $generated@@548 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@548) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@548 ($generated@@81 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@70)) ($generated@@243 $generated@@549 ($generated@@253 $generated@@550))) (and (= ($generated@@286 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@549) ($generated@@253 $generated@@550))))
 :pattern ( ($generated@@243 $generated@@549 ($generated@@253 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) ($generated@@243 $generated@@551 ($generated@@258 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@551) ($generated@@258 $generated@@552))))
 :pattern ( ($generated@@243 $generated@@551 ($generated@@258 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@159) (= (type $generated@@554) $generated@@70)) ($generated@@243 $generated@@553 ($generated@@173 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@82 $generated@@159 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@2) $generated@@553) ($generated@@173 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 ($generated@@173 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@159) (= (type $generated@@556) $generated@@70)) ($generated@@243 $generated@@555 ($generated@@488 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@279 $generated@@159) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@336 ($generated@@279 $generated@@159) $generated@@555) ($generated@@488 $generated@@556))))
 :pattern ( ($generated@@243 $generated@@555 ($generated@@488 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@83) (= (type $generated@@558) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@557 $generated@@139)) ($generated@@80 $generated@@557 $generated@@142 $generated@@558))) ($generated@@80 $generated@@557 $generated@@164 $generated@@558))
 :pattern ( ($generated@@80 $generated@@557 $generated@@142 $generated@@558))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@543 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@543 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@543 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@239) $generated@@66))
(assert (= ($generated@@543 $generated@@239) $generated@@69))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@559 ($generated@@173 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@559 $generated@@562)))) ($generated@@265 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@87 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@80 $generated@@559 ($generated@@173 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@83) (= ($generated@@145 $generated@@563 $generated@@138)  (or (= $generated@@563 $generated@@139) ($generated@@147 ($generated@@178 $generated@@563)))))
 :pattern ( ($generated@@145 $generated@@563 $generated@@138))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@566) (and ($generated@@148 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@70) ($generated@@80 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@265 ($generated@@157 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@265 ($generated@@157 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@150) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@570) (and ($generated@@148 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@70) ($generated@@80 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@265 ($generated@@158 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@265 ($generated@@158 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@159) (= (type $generated@@573) $generated@@159)) (= ($generated@@242 ($generated@@169 $generated@@572) ($generated@@169 $generated@@573)) ($generated@@169 ($generated@@242 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@242 ($generated@@169 $generated@@572) ($generated@@169 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@286 ($generated@@169 $generated@@574)) ($generated@@169 ($generated@@286 $generated@@574)))
 :pattern ( ($generated@@286 ($generated@@169 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@280 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@279 $generated@@576)) (= ($generated@@278 $generated@@575) 0)) (= $generated@@575 ($generated@@277 $generated@@576))))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@82 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@291 ($generated@@88 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@291 $generated@@577) ($generated ($generated@@87 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@291 ($generated@@88 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@582) $generated@@2)) ($generated@@80 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@80 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@584) $generated@@3)) ($generated@@80 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@80 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@586) $generated@@4)) ($generated@@80 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@80 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@446)) ($generated@@80 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@159)) ($generated@@80 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@279 $generated@@159)) (= (type $generated@@592) $generated@@70)) (= ($generated@@145 $generated@@591 ($generated@@488 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@278 $generated@@591))) ($generated@@243 ($generated@@489 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@489 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@488 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@279 $generated@@159)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@278 $generated@@595))) (< ($generated@@527 ($generated@@336 $generated@@150 ($generated@@489 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@527 ($generated@@336 $generated@@150 ($generated@@489 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@145 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@145 ($generated@@297 $generated@@597) ($generated@@253 $generated@@598)) ($generated@@145 ($generated@@349 $generated@@597) ($generated@@253 $generated@@599))) ($generated@@145 ($generated@@380 $generated@@597) ($generated@@253 ($generated@@149 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@145 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@145 ($generated@@315 $generated@@600) ($generated@@258 $generated@@601)) ($generated@@145 ($generated@@360 $generated@@600) ($generated@@258 $generated@@602))) ($generated@@145 ($generated@@388 $generated@@600) ($generated@@258 ($generated@@149 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@145 $generated@@603 $generated@@46))
 :pattern ( ($generated@@145 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@145 $generated@@604 $generated@@47))
 :pattern ( ($generated@@145 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@145 $generated@@605 $generated@@44))
 :pattern ( ($generated@@145 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@446) ($generated@@145 $generated@@606 $generated@@45))
 :pattern ( ($generated@@145 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@159) ($generated@@145 $generated@@607 $generated@@48))
 :pattern ( ($generated@@145 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(assert  (and (and (= (type $generated@@608) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@610) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@612  (=> (and (and (= $generated@@608 ($generated@@182 $generated@@139 $generated@@609 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@168 $generated@@610)) (or ($generated@@167 $generated@@610) ($generated@@0 ($generated@@169 ($generated@@11 true)))))))
(let (($generated@@613  (=> (and ($generated@@264 $generated@@609) ($generated@@611 $generated@@609)) (=> (and (and (not (= $generated@@610 $generated@@139)) (and ($generated@@145 $generated@@610 $generated@@239) ($generated@@80 $generated@@610 $generated@@239 $generated@@609))) (and (= 1 $generated@@166) (= (ControlFlow 0 3) 2))) $generated@@612))))
$generated@@613)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(= (type ($generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@83) (or ($generated@@172 $generated@@176) (and (not (= 0 $generated@@170)) (and (not (= $generated@@176 $generated@@143)) ($generated@@149 $generated@@176 $generated@@168))))) (= ($generated@@171 $generated@@176) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :pattern ( ($generated@@171 $generated@@176))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@83) (or ($generated@@178 $generated@@179) (and (not (= 0 $generated@@170)) (and (not (= $generated@@179 $generated@@143)) ($generated@@149 $generated@@179 $generated@@168))))) (= ($generated@@177 $generated@@179) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :pattern ( ($generated@@177 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@70)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@184) $generated@@70)) ($generated@@149 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@149 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@185 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@83) (= ($generated@@149 $generated@@187 $generated@@146)  (or (= $generated@@187 $generated@@143) (= ($generated@@185 $generated@@187) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@187 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 16)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@83 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@73 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@239) ($generated@@72 $generated@@4))) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) ($generated@@72 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@244 $generated@@168 $generated@@245) ($generated@@80 $generated@@244 $generated@@142 $generated@@245)))
 :pattern ( ($generated@@80 $generated@@244 $generated@@168 $generated@@245))
)))
(assert (= (type $generated@@246) $generated@@70))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@83) (= (type $generated@@248) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@247 $generated@@246 $generated@@248) ($generated@@80 $generated@@247 $generated@@146 $generated@@248)))
 :pattern ( ($generated@@80 $generated@@247 $generated@@246 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@154)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@163)) (= (type $generated@@256) $generated@@163)) (= ($generated@@149 ($generated@@249 $generated@@255 $generated@@256) ($generated@@153 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@149 ($generated@@249 $generated@@255 $generated@@256) ($generated@@153 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= ($generated@@160 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@160 $generated@@257 $generated@@258))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@83) (or ($generated@@172 ($generated@@173 $generated@@259)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@259 $generated@@143)) ($generated@@149 $generated@@259 $generated@@168))))) (= ($generated@@171 ($generated@@173 $generated@@259)) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@171 ($generated@@173 $generated@@259)))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@83) (or ($generated@@178 ($generated@@173 $generated@@260)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@260 $generated@@143)) ($generated@@149 $generated@@260 $generated@@168))))) (= ($generated@@177 ($generated@@173 $generated@@260)) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@177 ($generated@@173 $generated@@260)))
))))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@149 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@163) ($generated@@0 ($generated@@87 $generated@@263 $generated@@265))) ($generated@@250 $generated@@265 $generated@@264))
 :pattern ( ($generated@@87 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@149 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@149 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@163) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@250 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@149 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@173 $generated@@271) $generated@@271)
 :pattern ( ($generated@@173 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@163)) (= (type $generated@@277) $generated@@163)) (= (type $generated@@278) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@272 $generated@@278)) (= ($generated@@80 ($generated@@249 $generated@@276 $generated@@277) ($generated@@153 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@80 ($generated@@249 $generated@@276 $generated@@277) ($generated@@153 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@74)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@154) (= ($generated@@152 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@154) ($generated@@152 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@163) (= (type $generated@@284) $generated@@163)) (= $generated@@282 ($generated@@249 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@152 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 17)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (or ($generated@@172 $generated@@293) (and (not (= 0 $generated@@170)) (and (not (= $generated@@293 $generated@@143)) ($generated@@149 $generated@@293 $generated@@168))))) true)
 :pattern ( ($generated@@171 $generated@@293))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@83) (or ($generated@@178 $generated@@294) (and (not (= 0 $generated@@170)) (and (not (= $generated@@294 $generated@@143)) ($generated@@149 $generated@@294 $generated@@168))))) true)
 :pattern ( ($generated@@177 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@163)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@273 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@80 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@273 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@302) $generated@@163)) (= (type $generated@@303) $generated@@70)) ($generated@@138 $generated@@300 $generated@@301)) ($generated@@273 $generated@@302 $generated@@303 $generated@@300)) ($generated@@273 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@138 $generated@@300 $generated@@301) ($generated@@273 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@307) $generated@@70)) ($generated@@138 $generated@@304 $generated@@305)) ($generated@@80 $generated@@306 $generated@@307 $generated@@304)) ($generated@@80 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@138 $generated@@304 $generated@@305) ($generated@@80 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@82 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@85 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@82 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@87 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@82 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@82 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@85 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@82 $generated@@351 $generated@@2)) (= ($generated@@181 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@87 $generated@@350 $generated@@352))) (<= ($generated ($generated@@87 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@87 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@181 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@163) ($generated@@250 $generated@@356 $generated@@142)) (and (= ($generated@@295 ($generated@@353 $generated@@83 $generated@@356)) $generated@@356) ($generated@@149 ($generated@@353 $generated@@83 $generated@@356) $generated@@142)))
 :pattern ( ($generated@@250 $generated@@356 $generated@@142))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@163) ($generated@@250 $generated@@357 $generated@@168)) (and (= ($generated@@295 ($generated@@353 $generated@@83 $generated@@357)) $generated@@357) ($generated@@149 ($generated@@353 $generated@@83 $generated@@357) $generated@@168)))
 :pattern ( ($generated@@250 $generated@@357 $generated@@168))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) ($generated@@250 $generated@@358 $generated@@146)) (and (= ($generated@@295 ($generated@@353 $generated@@83 $generated@@358)) $generated@@358) ($generated@@149 ($generated@@353 $generated@@83 $generated@@358) $generated@@146)))
 :pattern ( ($generated@@250 $generated@@358 $generated@@146))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@163) ($generated@@250 $generated@@359 $generated@@246)) (and (= ($generated@@295 ($generated@@353 $generated@@83 $generated@@359)) $generated@@359) ($generated@@149 ($generated@@353 $generated@@83 $generated@@359) $generated@@246)))
 :pattern ( ($generated@@250 $generated@@359 $generated@@246))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@83) (= ($generated@@149 $generated@@360 $generated@@168)  (and ($generated@@149 $generated@@360 $generated@@142) (not (= $generated@@360 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@360 $generated@@168))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@149 $generated@@361 $generated@@246)  (and ($generated@@149 $generated@@361 $generated@@146) (not (= $generated@@361 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@361 $generated@@246))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(let (($generated@@364 ($generated@@317 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@316 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@315 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@314 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@318 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@318 (type $generated@@369))))
(let (($generated@@371 ($generated@@317 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@316 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@315 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(let (($generated@@375 ($generated@@335 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@334 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@333 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@332 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@336 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@336 (type $generated@@380))))
(let (($generated@@382 ($generated@@335 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@334 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@333 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@149 $generated@@384 ($generated@@180 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@384 $generated@@386)))) ($generated@@250 $generated@@386 $generated@@385))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@149 $generated@@384 ($generated@@180 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@261 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@163) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@273 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@261 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@266 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@163) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@273 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@266 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@309 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@309 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@404) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@403) ($generated@@161 ($generated@@353 $generated@@154 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@161 ($generated@@353 $generated@@154 $generated@@404))) ($generated@@162 ($generated@@353 $generated@@154 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@412) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@411) ($generated@@161 ($generated@@353 $generated@@154 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@161 ($generated@@353 $generated@@154 $generated@@412))) ($generated@@162 ($generated@@353 $generated@@154 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@273 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@273 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@273 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@273 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@439 $generated@@441))) (and ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))) ($generated@@138 $generated@@439 $generated@@441))
 :pattern ( ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@82 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@336 (type $generated@@444))))
(let (($generated@@446 ($generated@@335 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@334 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@333 $generated@@446 $generated@@445)) (= ($generated@@332 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@332 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@336 (type $generated@@450))))
(let (($generated@@452 ($generated@@335 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@334 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@163))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@318 (type $generated@@453))))
(let (($generated@@455 ($generated@@317 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@316 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@315 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@163) (= (type $generated@@457) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@453) ($generated@@295 ($generated@@249 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@336 (type $generated@@458))))
(let (($generated@@460 ($generated@@335 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@334 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@333 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@163) (= (type $generated@@462) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@458) ($generated@@295 ($generated@@249 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@250 $generated@@463 $generated@@46)) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@463)) $generated@@463) ($generated@@149 ($generated@@353 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@250 $generated@@464 $generated@@47)) (and (= ($generated@@295 ($generated@@353 $generated@@3 $generated@@464)) $generated@@464) ($generated@@149 ($generated@@353 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@250 $generated@@465 $generated@@44)) (and (= ($generated@@295 ($generated@@353 $generated@@4 $generated@@465)) $generated@@465) ($generated@@149 ($generated@@353 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@250 $generated@@467 $generated@@45)) (and (= ($generated@@295 ($generated@@353 $generated@@466 $generated@@467)) $generated@@467) ($generated@@149 ($generated@@353 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@70) (= ($generated@@250 ($generated@@295 $generated@@468) $generated@@469) ($generated@@149 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@250 ($generated@@295 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@85 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@82 $generated@@471 $generated@@2)) (<= 0 ($generated@@308 $generated@@470))))
 :pattern ( ($generated@@308 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@288 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@287 $generated@@473)) (<= 0 ($generated@@286 $generated@@472))))
 :pattern ( ($generated@@286 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@423 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@423 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@431 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@431 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@431 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) (= (type $generated@@495) $generated@@163)) (= ($generated@@279 ($generated@@249 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@153 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@153 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@153 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@153 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@163) (= (type $generated@@505) $generated@@163)) (= ($generated@@161 ($generated@@249 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@249 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@163) (= (type $generated@@507) $generated@@163)) (= ($generated@@162 ($generated@@249 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@288 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@287 $generated@@163)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@286 $generated@@514))) ($generated@@273 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@81 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@81 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@261 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@261 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@261 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@266 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@266 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@266 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@180 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@180 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@180 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@353 $generated@@537 ($generated@@295 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@295 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@149 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@538) $generated@@541))) (and ($generated@@250 ($generated@@87 ($generated@@398 $generated@@538) $generated@@541) $generated@@540) ($generated@@250 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@149 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@542) $generated@@545))) (and ($generated@@250 ($generated@@87 ($generated@@406 $generated@@542) $generated@@545) $generated@@544) ($generated@@250 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@149 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@163)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@249 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@249 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@163)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@249 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@249 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@163) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) ($generated@@250 $generated@@552 ($generated@@423 $generated@@553 $generated@@554))) (and (= ($generated@@295 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@552)) $generated@@552) ($generated@@149 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@552) ($generated@@423 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@250 $generated@@552 ($generated@@423 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) ($generated@@250 $generated@@555 ($generated@@431 $generated@@556 $generated@@557))) (and (= ($generated@@295 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@555)) $generated@@555) ($generated@@149 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@555) ($generated@@431 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@250 $generated@@555 ($generated@@431 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@163)) ($generated@@250 $generated@@560 ($generated@@153 $generated@@558 $generated@@559))) (and (= ($generated@@295 ($generated@@353 $generated@@154 $generated@@560)) $generated@@560) ($generated@@149 ($generated@@353 $generated@@154 $generated@@560) ($generated@@153 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@250 $generated@@560 ($generated@@153 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@87 ($generated@@442 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@87 ($generated@@442 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@75)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@70) (= (type $generated@@566) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@563 ($generated@@153 $generated@@565 $generated@@566)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@154) (= ($generated@@546 ($generated@@295 $generated@@567)) ($generated@@547 $generated@@567)))
 :pattern ( ($generated@@546 ($generated@@295 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@163) ($generated@@250 $generated@@568 ($generated@@81 0))) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@568)) $generated@@568) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@568) ($generated@@81 0))))
 :pattern ( ($generated@@250 $generated@@568 ($generated@@81 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@250 $generated@@569 ($generated@@261 $generated@@570))) (and (= ($generated@@295 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@569) ($generated@@261 $generated@@570))))
 :pattern ( ($generated@@250 $generated@@569 ($generated@@261 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@70)) ($generated@@250 $generated@@571 ($generated@@266 $generated@@572))) (and (= ($generated@@295 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@571) ($generated@@266 $generated@@572))))
 :pattern ( ($generated@@250 $generated@@571 ($generated@@266 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@163) (= (type $generated@@574) $generated@@70)) ($generated@@250 $generated@@573 ($generated@@180 $generated@@574))) (and (= ($generated@@295 ($generated@@353 ($generated@@82 $generated@@163 $generated@@2) $generated@@573)) $generated@@573) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@2) $generated@@573) ($generated@@180 $generated@@574))))
 :pattern ( ($generated@@250 $generated@@573 ($generated@@180 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@163) (= (type $generated@@576) $generated@@70)) ($generated@@250 $generated@@575 ($generated@@508 $generated@@576))) (and (= ($generated@@295 ($generated@@353 ($generated@@287 $generated@@163) $generated@@575)) $generated@@575) ($generated@@149 ($generated@@353 ($generated@@287 $generated@@163) $generated@@575) ($generated@@508 $generated@@576))))
 :pattern ( ($generated@@250 $generated@@575 ($generated@@508 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@83) (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@577 $generated@@143)) ($generated@@80 $generated@@577 $generated@@146 $generated@@578))) ($generated@@80 $generated@@577 $generated@@168 $generated@@578))
 :pattern ( ($generated@@80 $generated@@577 $generated@@146 $generated@@578))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@563 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@563 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@563 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@246) $generated@@66))
(assert (= ($generated@@563 $generated@@246) $generated@@69))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@579 ($generated@@180 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@579 $generated@@582)))) ($generated@@273 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@87 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@180 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@83) (= ($generated@@149 $generated@@583 $generated@@142)  (or (= $generated@@583 $generated@@143) ($generated@@151 ($generated@@185 $generated@@583)))))
 :pattern ( ($generated@@149 $generated@@583 $generated@@142))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@586) (and ($generated@@152 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@80 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@273 ($generated@@161 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@273 ($generated@@161 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@590) (and ($generated@@152 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@70) ($generated@@80 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@273 ($generated@@162 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@273 ($generated@@162 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@163)) (= ($generated@@249 ($generated@@173 $generated@@592) ($generated@@173 $generated@@593)) ($generated@@173 ($generated@@249 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@249 ($generated@@173 $generated@@592) ($generated@@173 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@295 ($generated@@173 $generated@@594)) ($generated@@173 ($generated@@295 $generated@@594)))
 :pattern ( ($generated@@295 ($generated@@173 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@288 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@287 $generated@@596)) (= ($generated@@286 $generated@@595) 0)) (= $generated@@595 ($generated@@285 $generated@@596))))
 :pattern ( ($generated@@286 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@82 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@308 ($generated@@88 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@308 $generated@@597) ($generated ($generated@@87 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@308 ($generated@@88 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@2)) ($generated@@80 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@3)) ($generated@@80 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@606) $generated@@4)) ($generated@@80 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@80 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@466)) ($generated@@80 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@163)) ($generated@@80 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@287 $generated@@163)) (= (type $generated@@612) $generated@@70)) (= ($generated@@149 $generated@@611 ($generated@@508 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@286 $generated@@611))) ($generated@@250 ($generated@@509 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@509 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@508 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@287 $generated@@163)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@286 $generated@@615))) (< ($generated@@547 ($generated@@353 $generated@@154 ($generated@@509 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@547 ($generated@@353 $generated@@154 ($generated@@509 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) ($generated@@149 $generated@@617 ($generated@@423 $generated@@618 $generated@@619))) (and (and ($generated@@149 ($generated@@314 $generated@@617) ($generated@@261 $generated@@618)) ($generated@@149 ($generated@@366 $generated@@617) ($generated@@261 $generated@@619))) ($generated@@149 ($generated@@397 $generated@@617) ($generated@@261 ($generated@@153 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@149 $generated@@617 ($generated@@423 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) $generated@@70)) ($generated@@149 $generated@@620 ($generated@@431 $generated@@621 $generated@@622))) (and (and ($generated@@149 ($generated@@332 $generated@@620) ($generated@@266 $generated@@621)) ($generated@@149 ($generated@@377 $generated@@620) ($generated@@266 $generated@@622))) ($generated@@149 ($generated@@405 $generated@@620) ($generated@@266 ($generated@@153 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@149 $generated@@620 ($generated@@431 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@149 $generated@@623 $generated@@46))
 :pattern ( ($generated@@149 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@149 $generated@@624 $generated@@47))
 :pattern ( ($generated@@149 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@149 $generated@@625 $generated@@44))
 :pattern ( ($generated@@149 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@466) ($generated@@149 $generated@@626 $generated@@45))
 :pattern ( ($generated@@149 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@163) ($generated@@149 $generated@@627 $generated@@48))
 :pattern ( ($generated@@149 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () T@U)
(assert  (and (and (and (= (type $generated@@628) ($generated@@190 $generated@@83 $generated@@4)) (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@632) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@633  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (= $generated@@628 ($generated@@189 $generated@@143 $generated@@629 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@634 T@T) )  (=> false false))) (=> (forall (($generated@@635 T@T) )  (=> false false)) (=> (and (and (and ($generated@@272 $generated@@630) ($generated@@631 $generated@@630)) (and (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@83) (=> (and (not (= $generated@@636 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@629 $generated@@636) $generated@@60))) (= ($generated@@87 $generated@@630 $generated@@636) ($generated@@87 $generated@@629 $generated@@636))))
 :pattern ( ($generated@@87 $generated@@630 $generated@@636))
)) ($generated@@138 $generated@@629 $generated@@630))) (and (and ($generated@@177 $generated@@632) (= (ControlFlow 0 2) (- 0 1))) ($generated@@172 $generated@@632))) (or ($generated@@171 $generated@@632) ($generated@@0 ($generated@@173 ($generated@@11 true)))))))))))
(let (($generated@@637  (=> (and ($generated@@272 $generated@@629) ($generated@@631 $generated@@629)) (=> (and (and (not (= $generated@@632 $generated@@143)) (and ($generated@@149 $generated@@632 $generated@@246) ($generated@@80 $generated@@632 $generated@@246 $generated@@629))) (and (= 2 $generated@@170) (= (ControlFlow 0 5) 2))) $generated@@633))))
$generated@@637)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
(= (type ($generated@@169 $generated@@170)) $generated@@171))
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@83) (or ($generated@@168 $generated@@172) (and (not (= 0 $generated@@166)) (and (not (= $generated@@172 $generated@@139)) ($generated@@145 $generated@@172 $generated@@164))))) (= ($generated@@167 $generated@@172) ($generated@@0 ($generated@@169 ($generated@@11 true)))))
 :pattern ( ($generated@@167 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@145 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@145 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@145 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@164 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@164 $generated@@238))
)))
(assert (= (type $generated@@239) $generated@@70))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@240 $generated@@239 $generated@@241) ($generated@@80 $generated@@240 $generated@@142 $generated@@241)))
 :pattern ( ($generated@@80 $generated@@240 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@150)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@159)) (= (type $generated@@249) $generated@@159)) (= ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@149 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@149 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@150) (= (type $generated@@251) $generated@@150)) (= ($generated@@156 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@156 $generated@@250 $generated@@251))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@83) (or ($generated@@168 ($generated@@169 $generated@@252)) (and (not (= 0 $generated@@166)) (and (not (= $generated@@252 $generated@@139)) ($generated@@145 $generated@@252 $generated@@164))))) (= ($generated@@167 ($generated@@169 $generated@@252)) ($generated@@0 ($generated@@169 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@169 $generated@@252)))
))))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@256) $generated@@70)) (= ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@159) ($generated@@0 ($generated@@87 $generated@@255 $generated@@257))) ($generated@@243 $generated@@257 $generated@@256))
 :pattern ( ($generated@@87 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@261) $generated@@70)) (= ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@159) ($generated@@0 ($generated@@87 $generated@@260 $generated@@262))) ($generated@@243 $generated@@262 $generated@@261))
 :pattern ( ($generated@@87 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@169 $generated@@263) $generated@@263)
 :pattern ( ($generated@@169 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@70) (= (type $generated@@267) $generated@@70)) (= (type $generated@@268) $generated@@159)) (= (type $generated@@269) $generated@@159)) (= (type $generated@@270) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@264 $generated@@270)) (= ($generated@@80 ($generated@@242 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@74)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@150) (= ($generated@@148 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@150) ($generated@@148 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@159) (= (type $generated@@276) $generated@@159)) (= $generated@@274 ($generated@@242 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@148 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@83) (or ($generated@@168 $generated@@285) (and (not (= 0 $generated@@166)) (and (not (= $generated@@285 $generated@@139)) ($generated@@145 $generated@@285 $generated@@164))))) true)
 :pattern ( ($generated@@167 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@159)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@82 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@85 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@82 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@87 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@82 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@87 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@87 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@85 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@82 $generated@@334 $generated@@2)) (= ($generated@@174 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@87 $generated@@333 $generated@@335))) (<= ($generated ($generated@@87 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@87 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@174 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@159) ($generated@@243 $generated@@339 $generated@@138)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@339)) $generated@@339) ($generated@@145 ($generated@@336 $generated@@83 $generated@@339) $generated@@138)))
 :pattern ( ($generated@@243 $generated@@339 $generated@@138))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@243 $generated@@340 $generated@@164)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@336 $generated@@83 $generated@@340) $generated@@164)))
 :pattern ( ($generated@@243 $generated@@340 $generated@@164))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@243 $generated@@341 $generated@@142)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@336 $generated@@83 $generated@@341) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@341 $generated@@142))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@243 $generated@@342 $generated@@239)) (and (= ($generated@@286 ($generated@@336 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@336 $generated@@83 $generated@@342) $generated@@239)))
 :pattern ( ($generated@@243 $generated@@342 $generated@@239))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@83) (= ($generated@@145 $generated@@343 $generated@@164)  (and ($generated@@145 $generated@@343 $generated@@138) (not (= $generated@@343 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@343 $generated@@164))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@239)  (and ($generated@@145 $generated@@344 $generated@@142) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@239))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(let (($generated@@347 ($generated@@300 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@299 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@298 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@87 ($generated@@297 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@297 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@301 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@301 (type $generated@@352))))
(let (($generated@@354 ($generated@@300 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@299 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@298 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(let (($generated@@358 ($generated@@318 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@317 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@316 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@315 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@319 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(let (($generated@@365 ($generated@@318 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@317 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@316 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@368) $generated@@70)) (= ($generated@@145 $generated@@367 ($generated@@173 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@367 $generated@@369)))) ($generated@@243 $generated@@369 $generated@@368))
 :pattern ( ($generated@@87 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@145 $generated@@367 ($generated@@173 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@253 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@253 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@375) $generated@@70)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@374 ($generated@@258 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@159) ($generated@@0 ($generated@@87 $generated@@374 $generated@@377))) ($generated@@265 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@87 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@80 $generated@@374 ($generated@@258 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@87 ($generated@@292 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@87 ($generated@@292 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@301 (type $generated@@383))))
(let (($generated@@385 ($generated@@300 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@387) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@87 ($generated@@297 $generated@@386) ($generated@@157 ($generated@@336 $generated@@150 $generated@@387)))) (= ($generated@@87 ($generated@@381 $generated@@386) ($generated@@157 ($generated@@336 $generated@@150 $generated@@387))) ($generated@@158 ($generated@@336 $generated@@150 $generated@@387))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@319 (type $generated@@391))))
(let (($generated@@393 ($generated@@318 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@395) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@394) ($generated@@157 ($generated@@336 $generated@@150 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@157 ($generated@@336 $generated@@150 $generated@@395))) ($generated@@158 ($generated@@336 $generated@@150 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@300 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@299 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@87 ($generated@@349 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@87 ($generated@@297 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@87 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@87 ($generated@@297 $generated@@396) $generated@@400))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@87 ($generated@@349 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@318 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@317 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@70)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@297 $generated@@409) $generated@@413))) (and ($generated@@265 ($generated@@87 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@265 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@297 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@417) $generated@@421))) (and ($generated@@265 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@265 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@315 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@315 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@360 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@360 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@319 (type $generated@@430))))
(let (($generated@@432 ($generated@@318 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@317 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@316 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@159))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@301 (type $generated@@433))))
(let (($generated@@435 ($generated@@300 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@299 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@298 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@159) (= (type $generated@@437) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@433) ($generated@@286 ($generated@@242 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@319 (type $generated@@438))))
(let (($generated@@440 ($generated@@318 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@317 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@316 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@438) ($generated@@286 ($generated@@242 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@159) ($generated@@243 $generated@@443 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@336 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@243 $generated@@444 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@336 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@243 $generated@@445 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@336 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@243 $generated@@447 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@446 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@336 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@70) (= ($generated@@243 ($generated@@286 $generated@@448) $generated@@449) ($generated@@145 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@243 ($generated@@286 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@85 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@82 $generated@@451 $generated@@2)) (<= 0 ($generated@@291 $generated@@450))))
 :pattern ( ($generated@@291 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@280 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@279 $generated@@453)) (<= 0 ($generated@@278 $generated@@452))))
 :pattern ( ($generated@@278 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@70) (= (type $generated@@461) $generated@@70)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@78 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@271 ($generated@@242 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@149 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@159) (= (type $generated@@485) $generated@@159)) (= ($generated@@157 ($generated@@242 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@242 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@159) (= (type $generated@@487) $generated@@159)) (= ($generated@@158 ($generated@@242 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@242 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@280 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@279 $generated@@159)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@278 $generated@@494))) ($generated@@265 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@81 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@81 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@253 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@253 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@253 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@258 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@258 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@258 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@173 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@173 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@336 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) $generated@@70)) (= ($generated@@145 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@243 ($generated@@87 ($generated@@381 $generated@@518) $generated@@521) $generated@@520) ($generated@@243 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@518) $generated@@521))
 :pattern ( ($generated@@87 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@145 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@523) $generated@@70)) (= (type $generated@@524) $generated@@70)) (= ($generated@@145 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@243 ($generated@@87 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@243 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@145 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@159)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@242 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@242 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) (= (type $generated@@531) $generated@@159)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@242 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@242 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@159) (= (type $generated@@533) $generated@@70)) (= (type $generated@@534) $generated@@70)) ($generated@@243 $generated@@532 ($generated@@406 $generated@@533 $generated@@534))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@159 $generated@@159) $generated@@532)) $generated@@532) ($generated@@145 ($generated@@336 ($generated@@299 $generated@@159 $generated@@159) $generated@@532) ($generated@@406 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@243 $generated@@532 ($generated@@406 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@243 $generated@@535 ($generated@@414 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@159 $generated@@159) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@336 ($generated@@317 $generated@@159 $generated@@159) $generated@@535) ($generated@@414 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@243 $generated@@535 ($generated@@414 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@70) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@159)) ($generated@@243 $generated@@540 ($generated@@149 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@336 $generated@@150 $generated@@540)) $generated@@540) ($generated@@145 ($generated@@336 $generated@@150 $generated@@540) ($generated@@149 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@243 $generated@@540 ($generated@@149 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@87 ($generated@@422 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@87 ($generated@@422 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@75)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@149 $generated@@545 $generated@@546)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@150) (= ($generated@@526 ($generated@@286 $generated@@547)) ($generated@@527 $generated@@547)))
 :pattern ( ($generated@@526 ($generated@@286 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@159) ($generated@@243 $generated@@548 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@548) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@548 ($generated@@81 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@70)) ($generated@@243 $generated@@549 ($generated@@253 $generated@@550))) (and (= ($generated@@286 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@549) ($generated@@253 $generated@@550))))
 :pattern ( ($generated@@243 $generated@@549 ($generated@@253 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) ($generated@@243 $generated@@551 ($generated@@258 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@4) $generated@@551) ($generated@@258 $generated@@552))))
 :pattern ( ($generated@@243 $generated@@551 ($generated@@258 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@159) (= (type $generated@@554) $generated@@70)) ($generated@@243 $generated@@553 ($generated@@173 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@82 $generated@@159 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@336 ($generated@@82 $generated@@159 $generated@@2) $generated@@553) ($generated@@173 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 ($generated@@173 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@159) (= (type $generated@@556) $generated@@70)) ($generated@@243 $generated@@555 ($generated@@488 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@279 $generated@@159) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@336 ($generated@@279 $generated@@159) $generated@@555) ($generated@@488 $generated@@556))))
 :pattern ( ($generated@@243 $generated@@555 ($generated@@488 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@83) (= (type $generated@@558) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@557 $generated@@139)) ($generated@@80 $generated@@557 $generated@@142 $generated@@558))) ($generated@@80 $generated@@557 $generated@@164 $generated@@558))
 :pattern ( ($generated@@80 $generated@@557 $generated@@142 $generated@@558))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@543 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@543 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@543 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@239) $generated@@66))
(assert (= ($generated@@543 $generated@@239) $generated@@69))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@559 ($generated@@173 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@559 $generated@@562)))) ($generated@@265 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@87 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@80 $generated@@559 ($generated@@173 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@83) (= ($generated@@145 $generated@@563 $generated@@138)  (or (= $generated@@563 $generated@@139) ($generated@@147 ($generated@@178 $generated@@563)))))
 :pattern ( ($generated@@145 $generated@@563 $generated@@138))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@566) (and ($generated@@148 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@70) ($generated@@80 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@265 ($generated@@157 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@265 ($generated@@157 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@150) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@570) (and ($generated@@148 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@70) ($generated@@80 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@265 ($generated@@158 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@265 ($generated@@158 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@159) (= (type $generated@@573) $generated@@159)) (= ($generated@@242 ($generated@@169 $generated@@572) ($generated@@169 $generated@@573)) ($generated@@169 ($generated@@242 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@242 ($generated@@169 $generated@@572) ($generated@@169 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@286 ($generated@@169 $generated@@574)) ($generated@@169 ($generated@@286 $generated@@574)))
 :pattern ( ($generated@@286 ($generated@@169 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@280 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@279 $generated@@576)) (= ($generated@@278 $generated@@575) 0)) (= $generated@@575 ($generated@@277 $generated@@576))))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@82 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@291 ($generated@@88 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@291 $generated@@577) ($generated ($generated@@87 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@291 ($generated@@88 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@582) $generated@@2)) ($generated@@80 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@80 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@584) $generated@@3)) ($generated@@80 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@80 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@586) $generated@@4)) ($generated@@80 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@80 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@446)) ($generated@@80 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@159)) ($generated@@80 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@279 $generated@@159)) (= (type $generated@@592) $generated@@70)) (= ($generated@@145 $generated@@591 ($generated@@488 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@278 $generated@@591))) ($generated@@243 ($generated@@489 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@489 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@488 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@279 $generated@@159)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@278 $generated@@595))) (< ($generated@@527 ($generated@@336 $generated@@150 ($generated@@489 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@527 ($generated@@336 $generated@@150 ($generated@@489 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@145 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@145 ($generated@@297 $generated@@597) ($generated@@253 $generated@@598)) ($generated@@145 ($generated@@349 $generated@@597) ($generated@@253 $generated@@599))) ($generated@@145 ($generated@@380 $generated@@597) ($generated@@253 ($generated@@149 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@145 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@145 ($generated@@315 $generated@@600) ($generated@@258 $generated@@601)) ($generated@@145 ($generated@@360 $generated@@600) ($generated@@258 $generated@@602))) ($generated@@145 ($generated@@388 $generated@@600) ($generated@@258 ($generated@@149 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@145 $generated@@603 $generated@@46))
 :pattern ( ($generated@@145 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@145 $generated@@604 $generated@@47))
 :pattern ( ($generated@@145 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@145 $generated@@605 $generated@@44))
 :pattern ( ($generated@@145 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@446) ($generated@@145 $generated@@606 $generated@@45))
 :pattern ( ($generated@@145 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@159) ($generated@@145 $generated@@607 $generated@@48))
 :pattern ( ($generated@@145 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(assert  (and (and (= (type $generated@@608) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@610) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@612  (=> (and (and (= $generated@@608 ($generated@@182 $generated@@139 $generated@@609 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@168 $generated@@610)) (or ($generated@@167 $generated@@610) ($generated@@0 ($generated@@169 ($generated@@11 true)))))))
(let (($generated@@613  (=> (and ($generated@@264 $generated@@609) ($generated@@611 $generated@@609)) (=> (and (and (not (= $generated@@610 $generated@@139)) (and ($generated@@145 $generated@@610 $generated@@239) ($generated@@80 $generated@@610 $generated@@239 $generated@@609))) (and (= 1 $generated@@166) (= (ControlFlow 0 3) 2))) $generated@@612))))
$generated@@613)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U Int) Bool)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@256 (T@U Int) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(= (type ($generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@83) (or ($generated@@172 $generated@@176) (and (not (= 0 $generated@@170)) (and (not (= $generated@@176 $generated@@143)) ($generated@@149 $generated@@176 $generated@@168))))) (= ($generated@@171 $generated@@176) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :pattern ( ($generated@@171 $generated@@176))
))))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@181) $generated@@70)) ($generated@@149 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@149 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@83) (= ($generated@@149 $generated@@184 $generated@@146)  (or (= $generated@@184 $generated@@143) (= ($generated@@182 $generated@@184) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@184 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 16)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@83 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@73 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@236) ($generated@@72 $generated@@4))) (= (type $generated@@238) $generated@@83)) (= (type $generated@@239) ($generated@@72 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@83) (= (type $generated@@242) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@241 $generated@@168 $generated@@242) ($generated@@80 $generated@@241 $generated@@142 $generated@@242)))
 :pattern ( ($generated@@80 $generated@@241 $generated@@168 $generated@@242))
)))
(assert (= (type $generated@@243) $generated@@70))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@244 $generated@@243 $generated@@245) ($generated@@80 $generated@@244 $generated@@146 $generated@@245)))
 :pattern ( ($generated@@80 $generated@@244 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@154)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@163)) (= (type $generated@@253) $generated@@163)) (= ($generated@@149 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@149 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251)))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@83) (or ($generated@@256 $generated@@257 ($generated@@255 $generated@@258)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@257 $generated@@143)) ($generated@@149 $generated@@257 $generated@@168))))) (= ($generated@@254 $generated@@257 ($generated@@255 $generated@@258)) ($generated@@0 ($generated@@173 ($generated@@11 (< $generated@@258 80))))))
 :weight 3
 :pattern ( ($generated@@254 $generated@@257 ($generated@@255 $generated@@258)))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@154) (= (type $generated@@260) $generated@@154)) (= ($generated@@160 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@160 $generated@@259 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@83) (or ($generated@@172 ($generated@@173 $generated@@261)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@261 $generated@@143)) ($generated@@149 $generated@@261 $generated@@168))))) (= ($generated@@171 ($generated@@173 $generated@@261)) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@171 ($generated@@173 $generated@@261)))
))))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@265) $generated@@70)) (= ($generated@@149 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@163) ($generated@@0 ($generated@@87 $generated@@264 $generated@@266))) ($generated@@247 $generated@@266 $generated@@265))
 :pattern ( ($generated@@87 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@149 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@270) $generated@@70)) (= ($generated@@149 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@163) ($generated@@0 ($generated@@87 $generated@@269 $generated@@271))) ($generated@@247 $generated@@271 $generated@@270))
 :pattern ( ($generated@@87 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@149 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@255 $generated@@272) $generated@@272)
 :pattern ( ($generated@@255 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@173 $generated@@273) $generated@@273)
 :pattern ( ($generated@@173 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@163)) (= (type $generated@@279) $generated@@163)) (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@274 $generated@@280)) (= ($generated@@80 ($generated@@246 $generated@@278 $generated@@279) ($generated@@153 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@80 ($generated@@246 $generated@@278 $generated@@279) ($generated@@153 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@74)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@154) (= ($generated@@152 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@154) ($generated@@152 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@163) (= (type $generated@@286) $generated@@163)) (= $generated@@284 ($generated@@246 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@152 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@83) (or ($generated@@172 $generated@@295) (and (not (= 0 $generated@@170)) (and (not (= $generated@@295 $generated@@143)) ($generated@@149 $generated@@295 $generated@@168))))) true)
 :pattern ( ($generated@@171 $generated@@295))
))))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@163)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@80 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@303) $generated@@163)) (= (type $generated@@304) $generated@@70)) ($generated@@138 $generated@@301 $generated@@302)) ($generated@@275 $generated@@303 $generated@@304 $generated@@301)) ($generated@@275 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@138 $generated@@301 $generated@@302) ($generated@@275 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@306) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@308) $generated@@70)) ($generated@@138 $generated@@305 $generated@@306)) ($generated@@80 $generated@@307 $generated@@308 $generated@@305)) ($generated@@80 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@138 $generated@@305 $generated@@306) ($generated@@80 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@82 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@85 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@82 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@87 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@85 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@178 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@87 $generated@@351 $generated@@353))) (<= ($generated ($generated@@87 $generated@@351 $generated@@353)) ($generated@@309 $generated@@351))))
 :pattern ( ($generated@@87 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@178 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@163) ($generated@@247 $generated@@357 $generated@@142)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@357)) $generated@@357) ($generated@@149 ($generated@@354 $generated@@83 $generated@@357) $generated@@142)))
 :pattern ( ($generated@@247 $generated@@357 $generated@@142))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) ($generated@@247 $generated@@358 $generated@@168)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@358)) $generated@@358) ($generated@@149 ($generated@@354 $generated@@83 $generated@@358) $generated@@168)))
 :pattern ( ($generated@@247 $generated@@358 $generated@@168))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@163) ($generated@@247 $generated@@359 $generated@@146)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@359)) $generated@@359) ($generated@@149 ($generated@@354 $generated@@83 $generated@@359) $generated@@146)))
 :pattern ( ($generated@@247 $generated@@359 $generated@@146))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@163) ($generated@@247 $generated@@360 $generated@@243)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@360)) $generated@@360) ($generated@@149 ($generated@@354 $generated@@83 $generated@@360) $generated@@243)))
 :pattern ( ($generated@@247 $generated@@360 $generated@@243))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@149 $generated@@361 $generated@@168)  (and ($generated@@149 $generated@@361 $generated@@142) (not (= $generated@@361 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@361 $generated@@168))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@83) (= ($generated@@149 $generated@@362 $generated@@243)  (and ($generated@@149 $generated@@362 $generated@@146) (not (= $generated@@362 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@362 $generated@@243))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(let (($generated@@365 ($generated@@318 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@317 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@316 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@315 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@319 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@82 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@319 (type $generated@@370))))
(let (($generated@@372 ($generated@@318 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@317 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@316 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@87 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@337 (type $generated@@374))))
(let (($generated@@376 ($generated@@336 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@335 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@334 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@333 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@337 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@82 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@337 (type $generated@@381))))
(let (($generated@@383 ($generated@@336 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@335 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@334 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@87 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@386) $generated@@70)) (= ($generated@@149 $generated@@385 ($generated@@177 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@385 $generated@@387)))) ($generated@@247 $generated@@387 $generated@@386))
 :pattern ( ($generated@@87 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@149 $generated@@385 ($generated@@177 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@389) $generated@@70)) (= (type $generated@@390) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@388 ($generated@@262 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@163) ($generated@@0 ($generated@@87 $generated@@388 $generated@@391))) ($generated@@275 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@87 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@80 $generated@@388 ($generated@@262 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@392 ($generated@@267 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@163) ($generated@@0 ($generated@@87 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@87 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@80 $generated@@392 ($generated@@267 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@87 ($generated@@310 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@87 ($generated@@310 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@319 (type $generated@@401))))
(let (($generated@@403 ($generated@@318 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@82 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@405) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@404) ($generated@@161 ($generated@@354 $generated@@154 $generated@@405)))) (= ($generated@@87 ($generated@@399 $generated@@404) ($generated@@161 ($generated@@354 $generated@@154 $generated@@405))) ($generated@@162 ($generated@@354 $generated@@154 $generated@@405))))))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@337 (type $generated@@409))))
(let (($generated@@411 ($generated@@336 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@82 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@413) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@412) ($generated@@161 ($generated@@354 $generated@@154 $generated@@413)))) (= ($generated@@87 ($generated@@407 $generated@@412) ($generated@@161 ($generated@@354 $generated@@154 $generated@@413))) ($generated@@162 ($generated@@354 $generated@@154 $generated@@413))))))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@318 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@317 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@367 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@367 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@336 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@335 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@87 ($generated@@378 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@87 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@419) $generated@@423))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) $generated@@70)) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@427) $generated@@431))) (and ($generated@@275 ($generated@@87 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@275 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@80 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@435) $generated@@439))) (and ($generated@@275 ($generated@@87 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@275 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@80 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@440 $generated@@442))) (and ($generated@@138 $generated@@440 $generated@@441) ($generated@@138 $generated@@441 $generated@@442))) ($generated@@138 $generated@@440 $generated@@442))
 :pattern ( ($generated@@138 $generated@@440 $generated@@441) ($generated@@138 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@82 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@337 (type $generated@@445))))
(let (($generated@@447 ($generated@@336 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@335 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@334 $generated@@447 $generated@@446)) (= ($generated@@333 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@333 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@337 (type $generated@@448))))
(let (($generated@@450 ($generated@@336 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@335 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@334 $generated@@450 $generated@@449)) (= ($generated@@378 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@378 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@337 (type $generated@@451))))
(let (($generated@@453 ($generated@@336 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@335 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@334 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@163))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@319 (type $generated@@454))))
(let (($generated@@456 ($generated@@318 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@317 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@316 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@398 $generated@@454) ($generated@@296 ($generated@@246 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@337 (type $generated@@459))))
(let (($generated@@461 ($generated@@336 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@335 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@334 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@163) (= (type $generated@@463) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@406 $generated@@459) ($generated@@296 ($generated@@246 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@247 $generated@@464 $generated@@46)) (and (= ($generated@@296 ($generated@@354 $generated@@2 $generated@@464)) $generated@@464) ($generated@@149 ($generated@@354 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@247 $generated@@465 $generated@@47)) (and (= ($generated@@296 ($generated@@354 $generated@@3 $generated@@465)) $generated@@465) ($generated@@149 ($generated@@354 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@163) ($generated@@247 $generated@@466 $generated@@44)) (and (= ($generated@@296 ($generated@@354 $generated@@4 $generated@@466)) $generated@@466) ($generated@@149 ($generated@@354 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@163) ($generated@@247 $generated@@468 $generated@@45)) (and (= ($generated@@296 ($generated@@354 $generated@@467 $generated@@468)) $generated@@468) ($generated@@149 ($generated@@354 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@468 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@469 T@U) ($generated@@470 Int) ) (!  (=> (and (= (type $generated@@469) $generated@@83) (or ($generated@@256 ($generated@@173 $generated@@469) ($generated@@255 $generated@@470)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@469 $generated@@143)) ($generated@@149 $generated@@469 $generated@@168))))) (= ($generated@@254 ($generated@@173 $generated@@469) ($generated@@255 $generated@@470)) ($generated@@0 ($generated@@173 ($generated@@11 (< $generated@@470 80))))))
 :weight 3
 :pattern ( ($generated@@254 ($generated@@173 $generated@@469) ($generated@@255 $generated@@470)))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@247 ($generated@@296 $generated@@471) $generated@@472) ($generated@@149 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@247 ($generated@@296 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@85 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@82 $generated@@474 $generated@@2)) (<= 0 ($generated@@309 $generated@@473))))
 :pattern ( ($generated@@309 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@290 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@289 $generated@@476)) (<= 0 ($generated@@288 $generated@@475))))
 :pattern ( ($generated@@288 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@424 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@424 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@78 ($generated@@424 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@78 ($generated@@432 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@281 ($generated@@246 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@153 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@153 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@153 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@153 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@163) (= (type $generated@@508) $generated@@163)) (= ($generated@@161 ($generated@@246 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@246 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@163) (= (type $generated@@510) $generated@@163)) (= ($generated@@162 ($generated@@246 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@246 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@290 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@289 $generated@@163)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@288 $generated@@517))) ($generated@@275 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@81 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@81 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@262 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@262 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@262 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@267 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@267 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@267 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@177 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@177 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@177 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@78 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@354 $generated@@540 ($generated@@296 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@296 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) (= ($generated@@149 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@541) $generated@@544))) (and ($generated@@247 ($generated@@87 ($generated@@399 $generated@@541) $generated@@544) $generated@@543) ($generated@@247 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@541) $generated@@544))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@149 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) (= ($generated@@149 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@545) $generated@@548))) (and ($generated@@247 ($generated@@87 ($generated@@407 $generated@@545) $generated@@548) $generated@@547) ($generated@@247 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@545) $generated@@548))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@149 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@163)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@246 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@246 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@163)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@246 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@246 $generated@@553 $generated@@554))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (and (= (type $generated@@555) $generated@@83) (or ($generated@@256 $generated@@555 $generated@@556) (and (not (= 0 $generated@@170)) (and (not (= $generated@@555 $generated@@143)) ($generated@@149 $generated@@555 $generated@@168))))) true)
 :pattern ( ($generated@@254 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@163) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) ($generated@@247 $generated@@557 ($generated@@424 $generated@@558 $generated@@559))) (and (= ($generated@@296 ($generated@@354 ($generated@@317 $generated@@163 $generated@@163) $generated@@557)) $generated@@557) ($generated@@149 ($generated@@354 ($generated@@317 $generated@@163 $generated@@163) $generated@@557) ($generated@@424 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@247 $generated@@557 ($generated@@424 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@247 $generated@@560 ($generated@@432 $generated@@561 $generated@@562))) (and (= ($generated@@296 ($generated@@354 ($generated@@335 $generated@@163 $generated@@163) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@354 ($generated@@335 $generated@@163 $generated@@163) $generated@@560) ($generated@@432 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@247 $generated@@560 ($generated@@432 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@163)) ($generated@@247 $generated@@565 ($generated@@153 $generated@@563 $generated@@564))) (and (= ($generated@@296 ($generated@@354 $generated@@154 $generated@@565)) $generated@@565) ($generated@@149 ($generated@@354 $generated@@154 $generated@@565) ($generated@@153 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@247 $generated@@565 ($generated@@153 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@87 ($generated@@443 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@87 ($generated@@443 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@75)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@70) (= (type $generated@@571) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@153 $generated@@570 $generated@@571)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@154) (= ($generated@@549 ($generated@@296 $generated@@572)) ($generated@@550 $generated@@572)))
 :pattern ( ($generated@@549 ($generated@@296 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) ($generated@@247 $generated@@573 ($generated@@81 0))) (and (= ($generated@@296 ($generated@@354 $generated@@2 $generated@@573)) $generated@@573) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@573) ($generated@@81 0))))
 :pattern ( ($generated@@247 $generated@@573 ($generated@@81 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@70)) ($generated@@247 $generated@@574 ($generated@@262 $generated@@575))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@574)) $generated@@574) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@574) ($generated@@262 $generated@@575))))
 :pattern ( ($generated@@247 $generated@@574 ($generated@@262 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@70)) ($generated@@247 $generated@@576 ($generated@@267 $generated@@577))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@576)) $generated@@576) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@576) ($generated@@267 $generated@@577))))
 :pattern ( ($generated@@247 $generated@@576 ($generated@@267 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@163) (= (type $generated@@579) $generated@@70)) ($generated@@247 $generated@@578 ($generated@@177 $generated@@579))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@2) $generated@@578)) $generated@@578) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@2) $generated@@578) ($generated@@177 $generated@@579))))
 :pattern ( ($generated@@247 $generated@@578 ($generated@@177 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@70)) ($generated@@247 $generated@@580 ($generated@@511 $generated@@581))) (and (= ($generated@@296 ($generated@@354 ($generated@@289 $generated@@163) $generated@@580)) $generated@@580) ($generated@@149 ($generated@@354 ($generated@@289 $generated@@163) $generated@@580) ($generated@@511 $generated@@581))))
 :pattern ( ($generated@@247 $generated@@580 ($generated@@511 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@83) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@582 $generated@@143)) ($generated@@80 $generated@@582 $generated@@146 $generated@@583))) ($generated@@80 $generated@@582 $generated@@168 $generated@@583))
 :pattern ( ($generated@@80 $generated@@582 $generated@@146 $generated@@583))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@568 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@568 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@568 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@243) $generated@@66))
(assert (= ($generated@@568 $generated@@243) $generated@@69))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@584 ($generated@@177 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@584 $generated@@587)))) ($generated@@275 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@87 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@177 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@83) (= ($generated@@149 $generated@@588 $generated@@142)  (or (= $generated@@588 $generated@@143) ($generated@@151 ($generated@@182 $generated@@588)))))
 :pattern ( ($generated@@149 $generated@@588 $generated@@142))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@591) (and ($generated@@152 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@80 $generated@@589 ($generated@@153 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@80 $generated@@589 ($generated@@153 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@275 ($generated@@161 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@275 ($generated@@161 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@154) (= (type $generated@@594) $generated@@70)) (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@595) (and ($generated@@152 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@70) ($generated@@80 $generated@@593 ($generated@@153 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@80 $generated@@593 ($generated@@153 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@275 ($generated@@162 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@275 ($generated@@162 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@163) (= (type $generated@@598) $generated@@163)) (= ($generated@@246 ($generated@@173 $generated@@597) ($generated@@173 $generated@@598)) ($generated@@173 ($generated@@246 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@246 ($generated@@173 $generated@@597) ($generated@@173 $generated@@598)))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@255 $generated@@599))) ($generated@@173 ($generated@@296 ($generated@@8 $generated@@599))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@255 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@296 ($generated@@173 $generated@@600)) ($generated@@173 ($generated@@296 $generated@@600)))
 :pattern ( ($generated@@296 ($generated@@173 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@290 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@289 $generated@@602)) (= ($generated@@288 $generated@@601) 0)) (= $generated@@601 ($generated@@287 $generated@@602))))
 :pattern ( ($generated@@288 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@82 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@309 ($generated@@88 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@309 $generated@@603) ($generated ($generated@@87 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@309 ($generated@@88 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@2)) ($generated@@80 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@3)) ($generated@@80 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@4)) ($generated@@80 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@80 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@467)) ($generated@@80 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@163)) ($generated@@80 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@48 $generated@@615))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (and (= (type $generated@@617) $generated@@83) (or ($generated@@256 $generated@@617 $generated@@618) (and (not (= 0 $generated@@170)) (and (not (= $generated@@617 $generated@@143)) ($generated@@149 $generated@@617 $generated@@168))))) (= ($generated@@254 $generated@@617 $generated@@618) (< $generated@@618 80)))
 :pattern ( ($generated@@254 $generated@@617 $generated@@618))
))))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@289 $generated@@163)) (= (type $generated@@620) $generated@@70)) (= ($generated@@149 $generated@@619 ($generated@@511 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@288 $generated@@619))) ($generated@@247 ($generated@@512 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@512 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@511 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@289 $generated@@163)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@288 $generated@@623))) (< ($generated@@550 ($generated@@354 $generated@@154 ($generated@@512 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@550 ($generated@@354 $generated@@154 ($generated@@512 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) $generated@@70)) ($generated@@149 $generated@@625 ($generated@@424 $generated@@626 $generated@@627))) (and (and ($generated@@149 ($generated@@315 $generated@@625) ($generated@@262 $generated@@626)) ($generated@@149 ($generated@@367 $generated@@625) ($generated@@262 $generated@@627))) ($generated@@149 ($generated@@398 $generated@@625) ($generated@@262 ($generated@@153 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@149 $generated@@625 ($generated@@424 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@629) $generated@@70)) (= (type $generated@@630) $generated@@70)) ($generated@@149 $generated@@628 ($generated@@432 $generated@@629 $generated@@630))) (and (and ($generated@@149 ($generated@@333 $generated@@628) ($generated@@267 $generated@@629)) ($generated@@149 ($generated@@378 $generated@@628) ($generated@@267 $generated@@630))) ($generated@@149 ($generated@@406 $generated@@628) ($generated@@267 ($generated@@153 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@149 $generated@@628 ($generated@@432 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@149 $generated@@631 $generated@@46))
 :pattern ( ($generated@@149 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@149 $generated@@632 $generated@@47))
 :pattern ( ($generated@@149 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@149 $generated@@633 $generated@@44))
 :pattern ( ($generated@@149 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@467) ($generated@@149 $generated@@634 $generated@@45))
 :pattern ( ($generated@@149 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@163) ($generated@@149 $generated@@635 $generated@@48))
 :pattern ( ($generated@@149 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(assert  (and (and (and (= (type $generated@@636) ($generated@@187 $generated@@83 $generated@@4)) (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@638) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@640) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@642  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (= $generated@@636 ($generated@@186 $generated@@143 $generated@@637 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@643 T@T) )  (=> false false))) (=> (forall (($generated@@644 T@T) )  (=> false false)) (=> (and (and (and ($generated@@274 $generated@@638) ($generated@@639 $generated@@638)) (and (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@83) (=> (and (not (= $generated@@645 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@637 $generated@@645) $generated@@60))) (= ($generated@@87 $generated@@638 $generated@@645) ($generated@@87 $generated@@637 $generated@@645))))
 :pattern ( ($generated@@87 $generated@@638 $generated@@645))
)) ($generated@@138 $generated@@637 $generated@@638))) (and (and ($generated@@171 $generated@@640) (= (ControlFlow 0 2) (- 0 1))) ($generated@@256 $generated@@640 $generated@@641))) (or ($generated@@254 $generated@@640 $generated@@641) (< $generated@@641 80)))))))))
(let (($generated@@646  (=> (and ($generated@@274 $generated@@637) ($generated@@639 $generated@@637)) (=> (and (and (not (= $generated@@640 $generated@@143)) (and ($generated@@149 $generated@@640 $generated@@243) ($generated@@80 $generated@@640 $generated@@243 $generated@@637))) (and (= 2 $generated@@170) (= (ControlFlow 0 5) 2))) $generated@@642))))
$generated@@646)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@338 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
(= (type ($generated@@169 $generated@@170)) $generated@@171))
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@83) (or ($generated@@168 $generated@@172) (and (not (= 0 $generated@@166)) (and (not (= $generated@@172 $generated@@139)) ($generated@@145 $generated@@172 $generated@@164))))) (= ($generated@@167 $generated@@172) ($generated@@0 ($generated@@169 ($generated@@11 true)))))
 :pattern ( ($generated@@167 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@145 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@145 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@145 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@164 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@164 $generated@@238))
)))
(assert (= (type $generated@@239) $generated@@70))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@240 $generated@@239 $generated@@241) ($generated@@80 $generated@@240 $generated@@142 $generated@@241)))
 :pattern ( ($generated@@80 $generated@@240 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@150)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@159)) (= (type $generated@@249) $generated@@159)) (= ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@149 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@149 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@150) (= (type $generated@@251) $generated@@150)) (= ($generated@@156 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@156 $generated@@250 $generated@@251))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@83) (or ($generated@@168 ($generated@@169 $generated@@252)) (and (not (= 0 $generated@@166)) (and (not (= $generated@@252 $generated@@139)) ($generated@@145 $generated@@252 $generated@@164))))) (= ($generated@@167 ($generated@@169 $generated@@252)) ($generated@@0 ($generated@@169 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@169 $generated@@252)))
))))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@256) $generated@@70)) (= ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@159) ($generated@@0 ($generated@@87 $generated@@255 $generated@@257))) ($generated@@243 $generated@@257 $generated@@256))
 :pattern ( ($generated@@87 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@261) $generated@@70)) (= ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@159) ($generated@@0 ($generated@@87 $generated@@260 $generated@@262))) ($generated@@243 $generated@@262 $generated@@261))
 :pattern ( ($generated@@87 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@169 $generated@@265) $generated@@265)
 :pattern ( ($generated@@169 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@242 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@242 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@83) (or ($generated@@168 $generated@@287) (and (not (= 0 $generated@@166)) (and (not (= $generated@@287 $generated@@139)) ($generated@@145 $generated@@287 $generated@@164))))) true)
 :pattern ( ($generated@@167 $generated@@287))
))))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@159)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@70) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@80 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@267 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@82 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@85 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@82 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@87 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 18)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@82 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@87 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@87 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@82 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@87 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@87 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@85 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@82 $generated@@336 $generated@@2)) (= ($generated@@174 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@87 $generated@@335 $generated@@337))) (<= ($generated ($generated@@87 $generated@@335 $generated@@337)) ($generated@@293 $generated@@335))))
 :pattern ( ($generated@@87 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@174 $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@243 $generated@@341 $generated@@138)) (and (= ($generated@@288 ($generated@@338 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@338 $generated@@83 $generated@@341) $generated@@138)))
 :pattern ( ($generated@@243 $generated@@341 $generated@@138))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@243 $generated@@342 $generated@@164)) (and (= ($generated@@288 ($generated@@338 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@338 $generated@@83 $generated@@342) $generated@@164)))
 :pattern ( ($generated@@243 $generated@@342 $generated@@164))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@159) ($generated@@243 $generated@@343 $generated@@142)) (and (= ($generated@@288 ($generated@@338 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@338 $generated@@83 $generated@@343) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@343 $generated@@142))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@159) ($generated@@243 $generated@@344 $generated@@239)) (and (= ($generated@@288 ($generated@@338 $generated@@83 $generated@@344)) $generated@@344) ($generated@@145 ($generated@@338 $generated@@83 $generated@@344) $generated@@239)))
 :pattern ( ($generated@@243 $generated@@344 $generated@@239))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@164)  (and ($generated@@145 $generated@@345 $generated@@138) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@164))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@145 $generated@@346 $generated@@239)  (and ($generated@@145 $generated@@346 $generated@@142) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@346 $generated@@239))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@303 (type $generated@@347))))
(let (($generated@@349 ($generated@@302 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@301 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@300 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@87 ($generated@@299 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@299 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@303 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@82 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@303 (type $generated@@354))))
(let (($generated@@356 ($generated@@302 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@301 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@300 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@321 (type $generated@@358))))
(let (($generated@@360 ($generated@@320 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@319 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@318 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@317 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@317 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@321 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@82 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(let (($generated@@367 ($generated@@320 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@319 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@318 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@370) $generated@@70)) (= ($generated@@145 $generated@@369 ($generated@@173 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@369 $generated@@371)))) ($generated@@243 $generated@@371 $generated@@370))
 :pattern ( ($generated@@87 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@145 $generated@@369 ($generated@@173 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@372 ($generated@@253 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@159) ($generated@@0 ($generated@@87 $generated@@372 $generated@@375))) ($generated@@267 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@87 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@80 $generated@@372 ($generated@@253 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@258 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@159) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@267 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@258 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@87 ($generated@@294 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@87 ($generated@@294 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@303 (type $generated@@385))))
(let (($generated@@387 ($generated@@302 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@389) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@87 ($generated@@299 $generated@@388) ($generated@@157 ($generated@@338 $generated@@150 $generated@@389)))) (= ($generated@@87 ($generated@@383 $generated@@388) ($generated@@157 ($generated@@338 $generated@@150 $generated@@389))) ($generated@@158 ($generated@@338 $generated@@150 $generated@@389))))))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@321 (type $generated@@393))))
(let (($generated@@395 ($generated@@320 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@397) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@87 ($generated@@317 $generated@@396) ($generated@@157 ($generated@@338 $generated@@150 $generated@@397)))) (= ($generated@@87 ($generated@@391 $generated@@396) ($generated@@157 ($generated@@338 $generated@@150 $generated@@397))) ($generated@@158 ($generated@@338 $generated@@150 $generated@@397))))))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@302 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@301 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@87 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@87 ($generated@@299 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@87 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@87 ($generated@@299 $generated@@398) $generated@@402))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@87 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@320 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@319 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@87 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@87 ($generated@@317 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@87 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@87 ($generated@@317 $generated@@403) $generated@@407))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@70)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@412) $generated@@70)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@299 $generated@@411) $generated@@415))) (and ($generated@@267 ($generated@@87 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@267 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@87 ($generated@@299 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@80 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@70)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@317 $generated@@419) $generated@@423))) (and ($generated@@267 ($generated@@87 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@267 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@87 ($generated@@317 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@80 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@82 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@321 (type $generated@@426))))
(let (($generated@@428 ($generated@@320 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@319 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@318 $generated@@428 $generated@@427)) (= ($generated@@317 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@317 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@321 (type $generated@@429))))
(let (($generated@@431 ($generated@@320 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@319 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@318 $generated@@431 $generated@@430)) (= ($generated@@362 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@362 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@321 (type $generated@@432))))
(let (($generated@@434 ($generated@@320 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@319 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@318 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@159))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@303 (type $generated@@435))))
(let (($generated@@437 ($generated@@302 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@301 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@300 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@159) (= (type $generated@@439) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@382 $generated@@435) ($generated@@288 ($generated@@242 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@321 (type $generated@@440))))
(let (($generated@@442 ($generated@@320 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@319 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@318 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@159) (= (type $generated@@444) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@390 $generated@@440) ($generated@@288 ($generated@@242 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@243 $generated@@445 $generated@@46)) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@338 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@243 $generated@@446 $generated@@47)) (and (= ($generated@@288 ($generated@@338 $generated@@3 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@338 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@243 $generated@@447 $generated@@44)) (and (= ($generated@@288 ($generated@@338 $generated@@4 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@338 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@159) ($generated@@243 $generated@@449 $generated@@45)) (and (= ($generated@@288 ($generated@@338 $generated@@448 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@338 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@70) (= ($generated@@243 ($generated@@288 $generated@@450) $generated@@451) ($generated@@145 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@243 ($generated@@288 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@85 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@82 $generated@@453 $generated@@2)) (<= 0 ($generated@@293 $generated@@452))))
 :pattern ( ($generated@@293 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@282 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@281 $generated@@455)) (<= 0 ($generated@@280 $generated@@454))))
 :pattern ( ($generated@@280 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@78 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@78 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@159) (= (type $generated@@477) $generated@@159)) (= ($generated@@273 ($generated@@242 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@149 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@149 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@149 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@159) (= (type $generated@@487) $generated@@159)) (= ($generated@@157 ($generated@@242 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@242 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@159) (= (type $generated@@489) $generated@@159)) (= ($generated@@158 ($generated@@242 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@242 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@282 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@281 $generated@@159)) (= (type $generated@@497) $generated@@70)) (= (type $generated@@498) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@280 $generated@@496))) ($generated@@267 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@80 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@81 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@81 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@502 ($generated@@253 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@253 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@78 ($generated@@253 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@506 ($generated@@258 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@78 ($generated@@258 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@510 ($generated@@173 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@173 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@78 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@338 $generated@@519 ($generated@@288 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@288 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@521) $generated@@70)) (= (type $generated@@522) $generated@@70)) (= ($generated@@145 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@299 $generated@@520) $generated@@523))) (and ($generated@@243 ($generated@@87 ($generated@@383 $generated@@520) $generated@@523) $generated@@522) ($generated@@243 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@520) $generated@@523))
 :pattern ( ($generated@@87 ($generated@@299 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@145 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@525) $generated@@70)) (= (type $generated@@526) $generated@@70)) (= ($generated@@145 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@317 $generated@@524) $generated@@527))) (and ($generated@@243 ($generated@@87 ($generated@@391 $generated@@524) $generated@@527) $generated@@526) ($generated@@243 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@524) $generated@@527))
 :pattern ( ($generated@@87 ($generated@@317 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@145 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) (= (type $generated@@531) $generated@@159)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@242 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@242 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@159) (= (type $generated@@533) $generated@@159)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@242 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@242 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@159) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@70)) ($generated@@243 $generated@@534 ($generated@@408 $generated@@535 $generated@@536))) (and (= ($generated@@288 ($generated@@338 ($generated@@301 $generated@@159 $generated@@159) $generated@@534)) $generated@@534) ($generated@@145 ($generated@@338 ($generated@@301 $generated@@159 $generated@@159) $generated@@534) ($generated@@408 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@243 $generated@@534 ($generated@@408 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) ($generated@@243 $generated@@537 ($generated@@416 $generated@@538 $generated@@539))) (and (= ($generated@@288 ($generated@@338 ($generated@@319 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@338 ($generated@@319 $generated@@159 $generated@@159) $generated@@537) ($generated@@416 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@243 $generated@@537 ($generated@@416 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@70) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@159)) ($generated@@243 $generated@@542 ($generated@@149 $generated@@540 $generated@@541))) (and (= ($generated@@288 ($generated@@338 $generated@@150 $generated@@542)) $generated@@542) ($generated@@145 ($generated@@338 $generated@@150 $generated@@542) ($generated@@149 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@243 $generated@@542 ($generated@@149 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@87 ($generated@@424 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@87 ($generated@@424 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@75)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@149 $generated@@547 $generated@@548)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@150) (= ($generated@@528 ($generated@@288 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@288 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@159) ($generated@@243 $generated@@550 ($generated@@81 0))) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@550)) $generated@@550) ($generated@@145 ($generated@@338 ($generated@@82 $generated@@159 $generated@@4) $generated@@550) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@550 ($generated@@81 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@70)) ($generated@@243 $generated@@551 ($generated@@253 $generated@@552))) (and (= ($generated@@288 ($generated@@338 ($generated@@82 $generated@@159 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@338 ($generated@@82 $generated@@159 $generated@@4) $generated@@551) ($generated@@253 $generated@@552))))
 :pattern ( ($generated@@243 $generated@@551 ($generated@@253 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@159) (= (type $generated@@554) $generated@@70)) ($generated@@243 $generated@@553 ($generated@@258 $generated@@554))) (and (= ($generated@@288 ($generated@@338 ($generated@@82 $generated@@159 $generated@@4) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@338 ($generated@@82 $generated@@159 $generated@@4) $generated@@553) ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 ($generated@@258 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@159) (= (type $generated@@556) $generated@@70)) ($generated@@243 $generated@@555 ($generated@@173 $generated@@556))) (and (= ($generated@@288 ($generated@@338 ($generated@@82 $generated@@159 $generated@@2) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@338 ($generated@@82 $generated@@159 $generated@@2) $generated@@555) ($generated@@173 $generated@@556))))
 :pattern ( ($generated@@243 $generated@@555 ($generated@@173 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@159) (= (type $generated@@558) $generated@@70)) ($generated@@243 $generated@@557 ($generated@@490 $generated@@558))) (and (= ($generated@@288 ($generated@@338 ($generated@@281 $generated@@159) $generated@@557)) $generated@@557) ($generated@@145 ($generated@@338 ($generated@@281 $generated@@159) $generated@@557) ($generated@@490 $generated@@558))))
 :pattern ( ($generated@@243 $generated@@557 ($generated@@490 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@83) (= (type $generated@@560) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@559 $generated@@139)) ($generated@@80 $generated@@559 $generated@@142 $generated@@560))) ($generated@@80 $generated@@559 $generated@@164 $generated@@560))
 :pattern ( ($generated@@80 $generated@@559 $generated@@142 $generated@@560))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@545 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@545 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@545 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@239) $generated@@66))
(assert (= ($generated@@545 $generated@@239) $generated@@69))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@561 ($generated@@173 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@561 $generated@@564)))) ($generated@@267 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@87 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@80 $generated@@561 ($generated@@173 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@83) (= ($generated@@145 $generated@@565 $generated@@138)  (or (= $generated@@565 $generated@@139) ($generated@@147 ($generated@@178 $generated@@565)))))
 :pattern ( ($generated@@145 $generated@@565 $generated@@138))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@149 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@149 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@267 ($generated@@157 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@150) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@572) (and ($generated@@148 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@149 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@149 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@267 ($generated@@158 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@159) (= (type $generated@@575) $generated@@159)) (= ($generated@@242 ($generated@@169 $generated@@574) ($generated@@169 $generated@@575)) ($generated@@169 ($generated@@242 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@242 ($generated@@169 $generated@@574) ($generated@@169 $generated@@575)))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@263 $generated@@576))) ($generated@@169 ($generated@@288 ($generated@@8 $generated@@576))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@263 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ) (! (= ($generated@@288 ($generated@@169 $generated@@577)) ($generated@@169 ($generated@@288 $generated@@577)))
 :pattern ( ($generated@@288 ($generated@@169 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@282 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@281 $generated@@579)) (= ($generated@@280 $generated@@578) 0)) (= $generated@@578 ($generated@@279 $generated@@579))))
 :pattern ( ($generated@@280 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@581)))
 (=> (and (and (= (type $generated@@580) ($generated@@82 $generated@@583 $generated@@2)) (= (type $generated@@582) $generated@@2)) (<= 0 ($generated $generated@@582))) (= ($generated@@293 ($generated@@88 $generated@@580 $generated@@581 $generated@@582)) (+ (- ($generated@@293 $generated@@580) ($generated ($generated@@87 $generated@@580 $generated@@581))) ($generated $generated@@582)))))
 :pattern ( ($generated@@293 ($generated@@88 $generated@@580 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@448)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@159)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@281 $generated@@159)) (= (type $generated@@595) $generated@@70)) (= ($generated@@145 $generated@@594 ($generated@@490 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@280 $generated@@594))) ($generated@@243 ($generated@@491 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@491 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@145 $generated@@594 ($generated@@490 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@280 $generated@@598))) (< ($generated@@529 ($generated@@338 $generated@@150 ($generated@@491 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@529 ($generated@@338 $generated@@150 ($generated@@491 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@145 $generated@@600 ($generated@@408 $generated@@601 $generated@@602))) (and (and ($generated@@145 ($generated@@299 $generated@@600) ($generated@@253 $generated@@601)) ($generated@@145 ($generated@@351 $generated@@600) ($generated@@253 $generated@@602))) ($generated@@145 ($generated@@382 $generated@@600) ($generated@@253 ($generated@@149 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@408 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@145 $generated@@603 ($generated@@416 $generated@@604 $generated@@605))) (and (and ($generated@@145 ($generated@@317 $generated@@603) ($generated@@258 $generated@@604)) ($generated@@145 ($generated@@362 $generated@@603) ($generated@@258 $generated@@605))) ($generated@@145 ($generated@@390 $generated@@603) ($generated@@258 ($generated@@149 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@416 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@145 $generated@@606 $generated@@46))
 :pattern ( ($generated@@145 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@145 $generated@@607 $generated@@47))
 :pattern ( ($generated@@145 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@145 $generated@@608 $generated@@44))
 :pattern ( ($generated@@145 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@448) ($generated@@145 $generated@@609 $generated@@45))
 :pattern ( ($generated@@145 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@159) ($generated@@145 $generated@@610 $generated@@48))
 :pattern ( ($generated@@145 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (= (type $generated@@611) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@614) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@616  (=> (= $generated@@611 ($generated@@182 $generated@@139 $generated@@612 $generated@@60 false)) (=> (and (and (= $generated@@613 ($generated@@263 50)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@168 $generated@@614)) (or ($generated@@167 $generated@@614) ($generated@@0 ($generated@@169 ($generated@@11 true))))))))
(let (($generated@@617  (=> (and ($generated@@266 $generated@@612) ($generated@@615 $generated@@612)) (=> (and (and (not (= $generated@@614 $generated@@139)) (and ($generated@@145 $generated@@614 $generated@@239) ($generated@@80 $generated@@614 $generated@@239 $generated@@612))) (and (= 1 $generated@@166) (= (ControlFlow 0 3) 2))) $generated@@616))))
$generated@@617)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U Int) Bool)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@256 (T@U Int) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(= (type ($generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@83) (or ($generated@@172 $generated@@176) (and (not (= 0 $generated@@170)) (and (not (= $generated@@176 $generated@@143)) ($generated@@149 $generated@@176 $generated@@168))))) (= ($generated@@171 $generated@@176) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :pattern ( ($generated@@171 $generated@@176))
))))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@181) $generated@@70)) ($generated@@149 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@149 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@83) (= ($generated@@149 $generated@@184 $generated@@146)  (or (= $generated@@184 $generated@@143) (= ($generated@@182 $generated@@184) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@184 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 16)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@83 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@73 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@236) ($generated@@72 $generated@@4))) (= (type $generated@@238) $generated@@83)) (= (type $generated@@239) ($generated@@72 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@83) (= (type $generated@@242) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@241 $generated@@168 $generated@@242) ($generated@@80 $generated@@241 $generated@@142 $generated@@242)))
 :pattern ( ($generated@@80 $generated@@241 $generated@@168 $generated@@242))
)))
(assert (= (type $generated@@243) $generated@@70))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@244 $generated@@243 $generated@@245) ($generated@@80 $generated@@244 $generated@@146 $generated@@245)))
 :pattern ( ($generated@@80 $generated@@244 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@154)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@163)) (= (type $generated@@253) $generated@@163)) (= ($generated@@149 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@149 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251)))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@83) (or ($generated@@256 $generated@@257 ($generated@@255 $generated@@258)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@257 $generated@@143)) ($generated@@149 $generated@@257 $generated@@168))))) (= ($generated@@254 $generated@@257 ($generated@@255 $generated@@258)) ($generated@@0 ($generated@@173 ($generated@@11 (< $generated@@258 80))))))
 :weight 3
 :pattern ( ($generated@@254 $generated@@257 ($generated@@255 $generated@@258)))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@154) (= (type $generated@@260) $generated@@154)) (= ($generated@@160 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@160 $generated@@259 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@83) (or ($generated@@172 ($generated@@173 $generated@@261)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@261 $generated@@143)) ($generated@@149 $generated@@261 $generated@@168))))) (= ($generated@@171 ($generated@@173 $generated@@261)) ($generated@@0 ($generated@@173 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@171 ($generated@@173 $generated@@261)))
))))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@265) $generated@@70)) (= ($generated@@149 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@163) ($generated@@0 ($generated@@87 $generated@@264 $generated@@266))) ($generated@@247 $generated@@266 $generated@@265))
 :pattern ( ($generated@@87 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@149 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@270) $generated@@70)) (= ($generated@@149 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@163) ($generated@@0 ($generated@@87 $generated@@269 $generated@@271))) ($generated@@247 $generated@@271 $generated@@270))
 :pattern ( ($generated@@87 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@149 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@255 $generated@@272) $generated@@272)
 :pattern ( ($generated@@255 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@173 $generated@@273) $generated@@273)
 :pattern ( ($generated@@173 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@163)) (= (type $generated@@279) $generated@@163)) (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@274 $generated@@280)) (= ($generated@@80 ($generated@@246 $generated@@278 $generated@@279) ($generated@@153 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@80 ($generated@@246 $generated@@278 $generated@@279) ($generated@@153 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@74)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@154) (= ($generated@@152 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@154) ($generated@@152 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@163) (= (type $generated@@286) $generated@@163)) (= $generated@@284 ($generated@@246 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@152 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@83) (or ($generated@@172 $generated@@295) (and (not (= 0 $generated@@170)) (and (not (= $generated@@295 $generated@@143)) ($generated@@149 $generated@@295 $generated@@168))))) true)
 :pattern ( ($generated@@171 $generated@@295))
))))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@163)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@80 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@303) $generated@@163)) (= (type $generated@@304) $generated@@70)) ($generated@@138 $generated@@301 $generated@@302)) ($generated@@275 $generated@@303 $generated@@304 $generated@@301)) ($generated@@275 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@138 $generated@@301 $generated@@302) ($generated@@275 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@306) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@308) $generated@@70)) ($generated@@138 $generated@@305 $generated@@306)) ($generated@@80 $generated@@307 $generated@@308 $generated@@305)) ($generated@@80 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@138 $generated@@305 $generated@@306) ($generated@@80 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@82 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@85 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@82 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@87 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@85 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@178 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@87 $generated@@351 $generated@@353))) (<= ($generated ($generated@@87 $generated@@351 $generated@@353)) ($generated@@309 $generated@@351))))
 :pattern ( ($generated@@87 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@178 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@163) ($generated@@247 $generated@@357 $generated@@142)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@357)) $generated@@357) ($generated@@149 ($generated@@354 $generated@@83 $generated@@357) $generated@@142)))
 :pattern ( ($generated@@247 $generated@@357 $generated@@142))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) ($generated@@247 $generated@@358 $generated@@168)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@358)) $generated@@358) ($generated@@149 ($generated@@354 $generated@@83 $generated@@358) $generated@@168)))
 :pattern ( ($generated@@247 $generated@@358 $generated@@168))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@163) ($generated@@247 $generated@@359 $generated@@146)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@359)) $generated@@359) ($generated@@149 ($generated@@354 $generated@@83 $generated@@359) $generated@@146)))
 :pattern ( ($generated@@247 $generated@@359 $generated@@146))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@163) ($generated@@247 $generated@@360 $generated@@243)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@360)) $generated@@360) ($generated@@149 ($generated@@354 $generated@@83 $generated@@360) $generated@@243)))
 :pattern ( ($generated@@247 $generated@@360 $generated@@243))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@149 $generated@@361 $generated@@168)  (and ($generated@@149 $generated@@361 $generated@@142) (not (= $generated@@361 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@361 $generated@@168))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@83) (= ($generated@@149 $generated@@362 $generated@@243)  (and ($generated@@149 $generated@@362 $generated@@146) (not (= $generated@@362 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@362 $generated@@243))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(let (($generated@@365 ($generated@@318 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@317 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@316 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@315 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@319 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@82 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@319 (type $generated@@370))))
(let (($generated@@372 ($generated@@318 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@317 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@316 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@87 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@337 (type $generated@@374))))
(let (($generated@@376 ($generated@@336 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@335 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@334 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@333 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@337 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@82 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@337 (type $generated@@381))))
(let (($generated@@383 ($generated@@336 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@335 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@334 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@87 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@386) $generated@@70)) (= ($generated@@149 $generated@@385 ($generated@@177 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@385 $generated@@387)))) ($generated@@247 $generated@@387 $generated@@386))
 :pattern ( ($generated@@87 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@149 $generated@@385 ($generated@@177 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@389) $generated@@70)) (= (type $generated@@390) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@388 ($generated@@262 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@163) ($generated@@0 ($generated@@87 $generated@@388 $generated@@391))) ($generated@@275 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@87 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@80 $generated@@388 ($generated@@262 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@392 ($generated@@267 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@163) ($generated@@0 ($generated@@87 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@87 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@80 $generated@@392 ($generated@@267 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@87 ($generated@@310 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@87 ($generated@@310 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@319 (type $generated@@401))))
(let (($generated@@403 ($generated@@318 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@82 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@405) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@404) ($generated@@161 ($generated@@354 $generated@@154 $generated@@405)))) (= ($generated@@87 ($generated@@399 $generated@@404) ($generated@@161 ($generated@@354 $generated@@154 $generated@@405))) ($generated@@162 ($generated@@354 $generated@@154 $generated@@405))))))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@337 (type $generated@@409))))
(let (($generated@@411 ($generated@@336 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@82 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@413) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@412) ($generated@@161 ($generated@@354 $generated@@154 $generated@@413)))) (= ($generated@@87 ($generated@@407 $generated@@412) ($generated@@161 ($generated@@354 $generated@@154 $generated@@413))) ($generated@@162 ($generated@@354 $generated@@154 $generated@@413))))))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@318 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@317 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@367 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@367 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@336 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@335 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@87 ($generated@@378 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@87 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@419) $generated@@423))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) $generated@@70)) (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@427) $generated@@431))) (and ($generated@@275 ($generated@@87 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@275 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@80 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@435) $generated@@439))) (and ($generated@@275 ($generated@@87 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@275 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@80 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@440 $generated@@442))) (and ($generated@@138 $generated@@440 $generated@@441) ($generated@@138 $generated@@441 $generated@@442))) ($generated@@138 $generated@@440 $generated@@442))
 :pattern ( ($generated@@138 $generated@@440 $generated@@441) ($generated@@138 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@82 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@337 (type $generated@@445))))
(let (($generated@@447 ($generated@@336 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@335 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@334 $generated@@447 $generated@@446)) (= ($generated@@333 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@333 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@337 (type $generated@@448))))
(let (($generated@@450 ($generated@@336 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@335 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@334 $generated@@450 $generated@@449)) (= ($generated@@378 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@378 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@337 (type $generated@@451))))
(let (($generated@@453 ($generated@@336 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@335 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@334 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@163))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@319 (type $generated@@454))))
(let (($generated@@456 ($generated@@318 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@317 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@316 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@398 $generated@@454) ($generated@@296 ($generated@@246 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@337 (type $generated@@459))))
(let (($generated@@461 ($generated@@336 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@335 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@334 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@163) (= (type $generated@@463) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@406 $generated@@459) ($generated@@296 ($generated@@246 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@247 $generated@@464 $generated@@46)) (and (= ($generated@@296 ($generated@@354 $generated@@2 $generated@@464)) $generated@@464) ($generated@@149 ($generated@@354 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@247 $generated@@465 $generated@@47)) (and (= ($generated@@296 ($generated@@354 $generated@@3 $generated@@465)) $generated@@465) ($generated@@149 ($generated@@354 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@163) ($generated@@247 $generated@@466 $generated@@44)) (and (= ($generated@@296 ($generated@@354 $generated@@4 $generated@@466)) $generated@@466) ($generated@@149 ($generated@@354 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@163) ($generated@@247 $generated@@468 $generated@@45)) (and (= ($generated@@296 ($generated@@354 $generated@@467 $generated@@468)) $generated@@468) ($generated@@149 ($generated@@354 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@468 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@469 T@U) ($generated@@470 Int) ) (!  (=> (and (= (type $generated@@469) $generated@@83) (or ($generated@@256 ($generated@@173 $generated@@469) ($generated@@255 $generated@@470)) (and (not (= 0 $generated@@170)) (and (not (= $generated@@469 $generated@@143)) ($generated@@149 $generated@@469 $generated@@168))))) (= ($generated@@254 ($generated@@173 $generated@@469) ($generated@@255 $generated@@470)) ($generated@@0 ($generated@@173 ($generated@@11 (< $generated@@470 80))))))
 :weight 3
 :pattern ( ($generated@@254 ($generated@@173 $generated@@469) ($generated@@255 $generated@@470)))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@247 ($generated@@296 $generated@@471) $generated@@472) ($generated@@149 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@247 ($generated@@296 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@85 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@82 $generated@@474 $generated@@2)) (<= 0 ($generated@@309 $generated@@473))))
 :pattern ( ($generated@@309 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@290 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@289 $generated@@476)) (<= 0 ($generated@@288 $generated@@475))))
 :pattern ( ($generated@@288 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@424 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@424 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@78 ($generated@@424 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@78 ($generated@@432 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@281 ($generated@@246 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@153 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@153 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@153 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@153 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@163) (= (type $generated@@508) $generated@@163)) (= ($generated@@161 ($generated@@246 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@246 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@163) (= (type $generated@@510) $generated@@163)) (= ($generated@@162 ($generated@@246 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@246 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@290 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@289 $generated@@163)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@288 $generated@@517))) ($generated@@275 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@81 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@81 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@262 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@262 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@262 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@267 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@267 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@267 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@177 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@177 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@177 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@78 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@354 $generated@@540 ($generated@@296 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@296 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) (= ($generated@@149 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@541) $generated@@544))) (and ($generated@@247 ($generated@@87 ($generated@@399 $generated@@541) $generated@@544) $generated@@543) ($generated@@247 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@541) $generated@@544))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@149 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) (= ($generated@@149 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@545) $generated@@548))) (and ($generated@@247 ($generated@@87 ($generated@@407 $generated@@545) $generated@@548) $generated@@547) ($generated@@247 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@545) $generated@@548))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@149 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@163)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@246 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@246 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@163)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@246 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@246 $generated@@553 $generated@@554))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (and (= (type $generated@@555) $generated@@83) (or ($generated@@256 $generated@@555 $generated@@556) (and (not (= 0 $generated@@170)) (and (not (= $generated@@555 $generated@@143)) ($generated@@149 $generated@@555 $generated@@168))))) true)
 :pattern ( ($generated@@254 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@163) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) ($generated@@247 $generated@@557 ($generated@@424 $generated@@558 $generated@@559))) (and (= ($generated@@296 ($generated@@354 ($generated@@317 $generated@@163 $generated@@163) $generated@@557)) $generated@@557) ($generated@@149 ($generated@@354 ($generated@@317 $generated@@163 $generated@@163) $generated@@557) ($generated@@424 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@247 $generated@@557 ($generated@@424 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@247 $generated@@560 ($generated@@432 $generated@@561 $generated@@562))) (and (= ($generated@@296 ($generated@@354 ($generated@@335 $generated@@163 $generated@@163) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@354 ($generated@@335 $generated@@163 $generated@@163) $generated@@560) ($generated@@432 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@247 $generated@@560 ($generated@@432 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@163)) ($generated@@247 $generated@@565 ($generated@@153 $generated@@563 $generated@@564))) (and (= ($generated@@296 ($generated@@354 $generated@@154 $generated@@565)) $generated@@565) ($generated@@149 ($generated@@354 $generated@@154 $generated@@565) ($generated@@153 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@247 $generated@@565 ($generated@@153 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@87 ($generated@@443 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@87 ($generated@@443 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@75)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@70) (= (type $generated@@571) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@153 $generated@@570 $generated@@571)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@154) (= ($generated@@549 ($generated@@296 $generated@@572)) ($generated@@550 $generated@@572)))
 :pattern ( ($generated@@549 ($generated@@296 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) ($generated@@247 $generated@@573 ($generated@@81 0))) (and (= ($generated@@296 ($generated@@354 $generated@@2 $generated@@573)) $generated@@573) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@573) ($generated@@81 0))))
 :pattern ( ($generated@@247 $generated@@573 ($generated@@81 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@70)) ($generated@@247 $generated@@574 ($generated@@262 $generated@@575))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@574)) $generated@@574) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@574) ($generated@@262 $generated@@575))))
 :pattern ( ($generated@@247 $generated@@574 ($generated@@262 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@70)) ($generated@@247 $generated@@576 ($generated@@267 $generated@@577))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@576)) $generated@@576) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@576) ($generated@@267 $generated@@577))))
 :pattern ( ($generated@@247 $generated@@576 ($generated@@267 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@163) (= (type $generated@@579) $generated@@70)) ($generated@@247 $generated@@578 ($generated@@177 $generated@@579))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@2) $generated@@578)) $generated@@578) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@2) $generated@@578) ($generated@@177 $generated@@579))))
 :pattern ( ($generated@@247 $generated@@578 ($generated@@177 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@70)) ($generated@@247 $generated@@580 ($generated@@511 $generated@@581))) (and (= ($generated@@296 ($generated@@354 ($generated@@289 $generated@@163) $generated@@580)) $generated@@580) ($generated@@149 ($generated@@354 ($generated@@289 $generated@@163) $generated@@580) ($generated@@511 $generated@@581))))
 :pattern ( ($generated@@247 $generated@@580 ($generated@@511 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@83) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@582 $generated@@143)) ($generated@@80 $generated@@582 $generated@@146 $generated@@583))) ($generated@@80 $generated@@582 $generated@@168 $generated@@583))
 :pattern ( ($generated@@80 $generated@@582 $generated@@146 $generated@@583))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@568 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@568 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@568 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@243) $generated@@66))
(assert (= ($generated@@568 $generated@@243) $generated@@69))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@584 ($generated@@177 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@584 $generated@@587)))) ($generated@@275 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@87 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@177 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@83) (= ($generated@@149 $generated@@588 $generated@@142)  (or (= $generated@@588 $generated@@143) ($generated@@151 ($generated@@182 $generated@@588)))))
 :pattern ( ($generated@@149 $generated@@588 $generated@@142))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@591) (and ($generated@@152 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@80 $generated@@589 ($generated@@153 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@80 $generated@@589 ($generated@@153 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@275 ($generated@@161 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@275 ($generated@@161 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@154) (= (type $generated@@594) $generated@@70)) (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@595) (and ($generated@@152 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@70) ($generated@@80 $generated@@593 ($generated@@153 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@80 $generated@@593 ($generated@@153 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@275 ($generated@@162 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@275 ($generated@@162 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@163) (= (type $generated@@598) $generated@@163)) (= ($generated@@246 ($generated@@173 $generated@@597) ($generated@@173 $generated@@598)) ($generated@@173 ($generated@@246 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@246 ($generated@@173 $generated@@597) ($generated@@173 $generated@@598)))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@255 $generated@@599))) ($generated@@173 ($generated@@296 ($generated@@8 $generated@@599))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@255 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@296 ($generated@@173 $generated@@600)) ($generated@@173 ($generated@@296 $generated@@600)))
 :pattern ( ($generated@@296 ($generated@@173 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@290 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@289 $generated@@602)) (= ($generated@@288 $generated@@601) 0)) (= $generated@@601 ($generated@@287 $generated@@602))))
 :pattern ( ($generated@@288 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@82 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@309 ($generated@@88 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@309 $generated@@603) ($generated ($generated@@87 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@309 ($generated@@88 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@2)) ($generated@@80 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@3)) ($generated@@80 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@4)) ($generated@@80 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@80 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@467)) ($generated@@80 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@163)) ($generated@@80 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@48 $generated@@615))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (and (= (type $generated@@617) $generated@@83) (or ($generated@@256 $generated@@617 $generated@@618) (and (not (= 0 $generated@@170)) (and (not (= $generated@@617 $generated@@143)) ($generated@@149 $generated@@617 $generated@@168))))) (= ($generated@@254 $generated@@617 $generated@@618) (< $generated@@618 80)))
 :pattern ( ($generated@@254 $generated@@617 $generated@@618))
))))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@289 $generated@@163)) (= (type $generated@@620) $generated@@70)) (= ($generated@@149 $generated@@619 ($generated@@511 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@288 $generated@@619))) ($generated@@247 ($generated@@512 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@512 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@511 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@289 $generated@@163)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@288 $generated@@623))) (< ($generated@@550 ($generated@@354 $generated@@154 ($generated@@512 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@550 ($generated@@354 $generated@@154 ($generated@@512 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) $generated@@70)) ($generated@@149 $generated@@625 ($generated@@424 $generated@@626 $generated@@627))) (and (and ($generated@@149 ($generated@@315 $generated@@625) ($generated@@262 $generated@@626)) ($generated@@149 ($generated@@367 $generated@@625) ($generated@@262 $generated@@627))) ($generated@@149 ($generated@@398 $generated@@625) ($generated@@262 ($generated@@153 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@149 $generated@@625 ($generated@@424 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@629) $generated@@70)) (= (type $generated@@630) $generated@@70)) ($generated@@149 $generated@@628 ($generated@@432 $generated@@629 $generated@@630))) (and (and ($generated@@149 ($generated@@333 $generated@@628) ($generated@@267 $generated@@629)) ($generated@@149 ($generated@@378 $generated@@628) ($generated@@267 $generated@@630))) ($generated@@149 ($generated@@406 $generated@@628) ($generated@@267 ($generated@@153 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@149 $generated@@628 ($generated@@432 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@149 $generated@@631 $generated@@46))
 :pattern ( ($generated@@149 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@149 $generated@@632 $generated@@47))
 :pattern ( ($generated@@149 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@149 $generated@@633 $generated@@44))
 :pattern ( ($generated@@149 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@467) ($generated@@149 $generated@@634 $generated@@45))
 :pattern ( ($generated@@149 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@163) ($generated@@149 $generated@@635 $generated@@48))
 :pattern ( ($generated@@149 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(assert  (and (and (and (= (type $generated@@636) ($generated@@187 $generated@@83 $generated@@4)) (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@638) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@640) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@642  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (= $generated@@636 ($generated@@186 $generated@@143 $generated@@637 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@643 T@T) )  (=> false false))) (=> (forall (($generated@@644 T@T) )  (=> false false)) (=> (and (and (and ($generated@@274 $generated@@638) ($generated@@639 $generated@@638)) (and (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@83) (=> (and (not (= $generated@@645 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@637 $generated@@645) $generated@@60))) (= ($generated@@87 $generated@@638 $generated@@645) ($generated@@87 $generated@@637 $generated@@645))))
 :pattern ( ($generated@@87 $generated@@638 $generated@@645))
)) ($generated@@138 $generated@@637 $generated@@638))) (and (and ($generated@@254 $generated@@640 $generated@@641) (= (ControlFlow 0 2) (- 0 1))) ($generated@@172 $generated@@640))) (or ($generated@@171 $generated@@640) ($generated@@0 ($generated@@173 ($generated@@11 true)))))))))))
(let (($generated@@646  (=> (and ($generated@@274 $generated@@637) ($generated@@639 $generated@@637)) (=> (and (and (not (= $generated@@640 $generated@@143)) (and ($generated@@149 $generated@@640 $generated@@243) ($generated@@80 $generated@@640 $generated@@243 $generated@@637))) (and (= 2 $generated@@170) (= (ControlFlow 0 5) 2))) $generated@@642))))
$generated@@646)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 (T@U Int) Bool)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@246 (T@U Int) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@243) (forall (($generated@@250 T@U) ($generated@@251 Int) ) (!  (=> (and (= (type $generated@@250) $generated@@83) (or ($generated@@246 $generated@@250 ($generated@@245 $generated@@251)) (and (not (= 0 $generated@@243)) (and (not (= $generated@@250 $generated@@139)) ($generated@@145 $generated@@250 $generated@@164))))) (= ($generated@@244 $generated@@250 ($generated@@245 $generated@@251)) ($generated@@0 ($generated@@247 ($generated@@11 (< $generated@@251 80))))))
 :weight 3
 :pattern ( ($generated@@244 $generated@@250 ($generated@@245 $generated@@251)))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) (= (type $generated@@253) $generated@@150)) (= ($generated@@156 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@156 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@236 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@236 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@245 $generated@@264) $generated@@264)
 :pattern ( ($generated@@245 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@247 $generated@@265) $generated@@265)
 :pattern ( ($generated@@247 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@159)) (= (type $generated@@271) $generated@@159)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@235 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@148 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@159) (= (type $generated@@278) $generated@@159)) (= $generated@@276 ($generated@@235 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@148 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@159)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@167 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@167 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@236 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@236 $generated@@341 $generated@@164)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@341 $generated@@164))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@236 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@159) ($generated@@236 $generated@@343 $generated@@232)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@343 $generated@@232))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@164)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@164))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@232)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@232))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@236 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@166 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@371 ($generated@@254 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) ($generated@@0 ($generated@@87 $generated@@371 $generated@@374))) ($generated@@267 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@87 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@80 $generated@@371 ($generated@@254 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@259 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@259 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@87 ($generated@@293 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@302 (type $generated@@384))))
(let (($generated@@386 ($generated@@301 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@82 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@388) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@387) ($generated@@157 ($generated@@337 $generated@@150 $generated@@388)))) (= ($generated@@87 ($generated@@382 $generated@@387) ($generated@@157 ($generated@@337 $generated@@150 $generated@@388))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@388))))))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@320 (type $generated@@392))))
(let (($generated@@394 ($generated@@319 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@396) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@395) ($generated@@157 ($generated@@337 $generated@@150 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@157 ($generated@@337 $generated@@150 $generated@@396))) ($generated@@158 ($generated@@337 $generated@@150 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@301 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@300 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@319 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@318 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@70)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) $generated@@70)) (= (type $generated@@413) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))) (and ($generated@@267 ($generated@@87 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@267 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@320 (type $generated@@425))))
(let (($generated@@427 ($generated@@319 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@318 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@316 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@316 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@320 (type $generated@@428))))
(let (($generated@@430 ($generated@@319 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@318 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@317 $generated@@430 $generated@@429)) (= ($generated@@361 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@361 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@320 (type $generated@@431))))
(let (($generated@@433 ($generated@@319 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@318 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@317 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@159))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@302 (type $generated@@434))))
(let (($generated@@436 ($generated@@301 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@300 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@299 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@159) (= (type $generated@@438) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@381 $generated@@434) ($generated@@287 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@320 (type $generated@@439))))
(let (($generated@@441 ($generated@@319 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@318 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@317 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@159) (= (type $generated@@443) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@439) ($generated@@287 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@159) ($generated@@236 $generated@@444 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@337 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@159) ($generated@@236 $generated@@445 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@337 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@236 $generated@@446 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@243) (forall (($generated@@449 T@U) ($generated@@450 Int) ) (!  (=> (and (= (type $generated@@449) $generated@@83) (or ($generated@@246 ($generated@@247 $generated@@449) ($generated@@245 $generated@@450)) (and (not (= 0 $generated@@243)) (and (not (= $generated@@449 $generated@@139)) ($generated@@145 $generated@@449 $generated@@164))))) (= ($generated@@244 ($generated@@247 $generated@@449) ($generated@@245 $generated@@450)) ($generated@@0 ($generated@@247 ($generated@@11 (< $generated@@450 80))))))
 :weight 3
 :pattern ( ($generated@@244 ($generated@@247 $generated@@449) ($generated@@245 $generated@@450)))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@236 ($generated@@287 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@236 ($generated@@287 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@85 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@82 $generated@@454 $generated@@2)) (<= 0 ($generated@@292 $generated@@453))))
 :pattern ( ($generated@@292 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@282 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@281 $generated@@456)) (<= 0 ($generated@@280 $generated@@455))))
 :pattern ( ($generated@@280 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@78 ($generated@@407 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@415 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@415 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@415 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@159) (= (type $generated@@478) $generated@@159)) (= ($generated@@273 ($generated@@235 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@149 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@149 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@149 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@149 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@159) (= (type $generated@@490) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@235 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@282 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@281 $generated@@159)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@280 $generated@@497))) ($generated@@267 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@81 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@507 ($generated@@259 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@259 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@78 ($generated@@259 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@166 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@166 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@337 $generated@@520 ($generated@@287 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@287 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@145 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@521) $generated@@524))) (and ($generated@@236 ($generated@@87 ($generated@@382 $generated@@521) $generated@@524) $generated@@523) ($generated@@236 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@145 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@145 $generated@@525 ($generated@@415 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@525) $generated@@528))) (and ($generated@@236 ($generated@@87 ($generated@@390 $generated@@525) $generated@@528) $generated@@527) ($generated@@236 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@145 $generated@@525 ($generated@@415 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@159)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@235 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@159)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@235 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@235 $generated@@533 $generated@@534))
)))
(assert  (=> (<= 0 $generated@@243) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (!  (=> (and (= (type $generated@@535) $generated@@83) (or ($generated@@246 $generated@@535 $generated@@536) (and (not (= 0 $generated@@243)) (and (not (= $generated@@535 $generated@@139)) ($generated@@145 $generated@@535 $generated@@164))))) true)
 :pattern ( ($generated@@244 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) ($generated@@236 $generated@@537 ($generated@@407 $generated@@538 $generated@@539))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@159 $generated@@159) $generated@@537) ($generated@@407 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@407 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@159) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@236 $generated@@540 ($generated@@415 $generated@@541 $generated@@542))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@540)) $generated@@540) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@159 $generated@@159) $generated@@540) ($generated@@415 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@236 $generated@@540 ($generated@@415 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@159)) ($generated@@236 $generated@@545 ($generated@@149 $generated@@543 $generated@@544))) (and (= ($generated@@287 ($generated@@337 $generated@@150 $generated@@545)) $generated@@545) ($generated@@145 ($generated@@337 $generated@@150 $generated@@545) ($generated@@149 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@149 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@87 ($generated@@423 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@75)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@70) (= (type $generated@@551) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@149 $generated@@550 $generated@@551)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@150) (= ($generated@@529 ($generated@@287 $generated@@552)) ($generated@@530 $generated@@552)))
 :pattern ( ($generated@@529 ($generated@@287 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@159) ($generated@@236 $generated@@553 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@553) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@553 ($generated@@81 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@236 $generated@@554 ($generated@@254 $generated@@555))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@554) ($generated@@254 $generated@@555))))
 :pattern ( ($generated@@236 $generated@@554 ($generated@@254 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@236 $generated@@556 ($generated@@259 $generated@@557))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@4) $generated@@556) ($generated@@259 $generated@@557))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@259 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@159) (= (type $generated@@559) $generated@@70)) ($generated@@236 $generated@@558 ($generated@@166 $generated@@559))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@159 $generated@@2) $generated@@558) ($generated@@166 $generated@@559))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@166 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@236 $generated@@560 ($generated@@491 $generated@@561))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@159) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@337 ($generated@@281 $generated@@159) $generated@@560) ($generated@@491 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@560 ($generated@@491 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@83) (= (type $generated@@563) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@562 $generated@@139)) ($generated@@80 $generated@@562 $generated@@142 $generated@@563))) ($generated@@80 $generated@@562 $generated@@164 $generated@@563))
 :pattern ( ($generated@@80 $generated@@562 $generated@@142 $generated@@563))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@548 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@548 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@548 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@548 $generated@@232) $generated@@69))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@564 ($generated@@166 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@564 $generated@@567)))) ($generated@@267 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@87 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@166 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@83) (= ($generated@@145 $generated@@568 $generated@@138)  (or (= $generated@@568 $generated@@139) ($generated@@147 ($generated@@171 $generated@@568)))))
 :pattern ( ($generated@@145 $generated@@568 $generated@@138))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@70) ($generated@@80 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@80 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@267 ($generated@@157 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@267 ($generated@@157 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@575) (and ($generated@@148 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@267 ($generated@@158 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@267 ($generated@@158 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@159) (= (type $generated@@578) $generated@@159)) (= ($generated@@235 ($generated@@247 $generated@@577) ($generated@@247 $generated@@578)) ($generated@@247 ($generated@@235 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@235 ($generated@@247 $generated@@577) ($generated@@247 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@245 $generated@@579))) ($generated@@247 ($generated@@287 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@245 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@287 ($generated@@247 $generated@@580)) ($generated@@247 ($generated@@287 $generated@@580)))
 :pattern ( ($generated@@287 ($generated@@247 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@282 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@281 $generated@@582)) (= ($generated@@280 $generated@@581) 0)) (= $generated@@581 ($generated@@279 $generated@@582))))
 :pattern ( ($generated@@280 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@82 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@292 ($generated@@88 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@292 $generated@@583) ($generated ($generated@@87 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@2)) ($generated@@80 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@3)) ($generated@@80 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@4)) ($generated@@80 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@447)) ($generated@@80 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@159)) ($generated@@80 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@48 $generated@@595))
)))
(assert  (=> (<= 0 $generated@@243) (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (and (= (type $generated@@597) $generated@@83) (or ($generated@@246 $generated@@597 $generated@@598) (and (not (= 0 $generated@@243)) (and (not (= $generated@@597 $generated@@139)) ($generated@@145 $generated@@597 $generated@@164))))) (= ($generated@@244 $generated@@597 $generated@@598) (< $generated@@598 80)))
 :pattern ( ($generated@@244 $generated@@597 $generated@@598))
))))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@281 $generated@@159)) (= (type $generated@@600) $generated@@70)) (= ($generated@@145 $generated@@599 ($generated@@491 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@280 $generated@@599))) ($generated@@236 ($generated@@492 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@492 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@145 $generated@@599 ($generated@@491 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@281 $generated@@159)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@280 $generated@@603))) (< ($generated@@530 ($generated@@337 $generated@@150 ($generated@@492 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@530 ($generated@@337 $generated@@150 ($generated@@492 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@300 $generated@@159 $generated@@159)) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) $generated@@70)) ($generated@@145 $generated@@605 ($generated@@407 $generated@@606 $generated@@607))) (and (and ($generated@@145 ($generated@@298 $generated@@605) ($generated@@254 $generated@@606)) ($generated@@145 ($generated@@350 $generated@@605) ($generated@@254 $generated@@607))) ($generated@@145 ($generated@@381 $generated@@605) ($generated@@254 ($generated@@149 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@145 $generated@@605 ($generated@@407 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@318 $generated@@159 $generated@@159)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) ($generated@@145 $generated@@608 ($generated@@415 $generated@@609 $generated@@610))) (and (and ($generated@@145 ($generated@@316 $generated@@608) ($generated@@259 $generated@@609)) ($generated@@145 ($generated@@361 $generated@@608) ($generated@@259 $generated@@610))) ($generated@@145 ($generated@@389 $generated@@608) ($generated@@259 ($generated@@149 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@145 $generated@@608 ($generated@@415 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@145 $generated@@611 $generated@@46))
 :pattern ( ($generated@@145 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@145 $generated@@612 $generated@@47))
 :pattern ( ($generated@@145 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@145 $generated@@613 $generated@@44))
 :pattern ( ($generated@@145 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@447) ($generated@@145 $generated@@614 $generated@@45))
 :pattern ( ($generated@@145 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@159) ($generated@@145 $generated@@615 $generated@@48))
 :pattern ( ($generated@@145 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (= (type $generated@@616) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@618) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@621  (=> (and (and (= $generated@@616 ($generated@@175 $generated@@139 $generated@@617 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@246 $generated@@618 $generated@@619)) (or ($generated@@244 $generated@@618 $generated@@619) (< $generated@@619 80)))))
(let (($generated@@622  (=> (and ($generated@@266 $generated@@617) ($generated@@620 $generated@@617)) (=> (and (and (not (= $generated@@618 $generated@@139)) (and ($generated@@145 $generated@@618 $generated@@232) ($generated@@80 $generated@@618 $generated@@232 $generated@@617))) (and (= 1 $generated@@243) (= (ControlFlow 0 3) 2))) $generated@@621))))
$generated@@622)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
