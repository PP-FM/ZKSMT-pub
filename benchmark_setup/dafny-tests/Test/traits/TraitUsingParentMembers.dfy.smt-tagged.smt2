(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (Int) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@645 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@78 $generated@@60) 0))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@73 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@73 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@70)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (and (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@140 $generated@@144))
)) (= (type $generated@@141) $generated@@84)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@142 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@70) (= (type $generated@@147) $generated@@84)) (and (not (= $generated@@147 $generated@@141)) (= ($generated@@142 $generated@@147) ($generated@@140 $generated@@146)))) ($generated@@143 ($generated@@8 ($generated@@139 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@139 $generated@@147) ($generated@@140 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@84)) (= (type $generated@@154) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@84) (= (type $generated@@157) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@161) $generated@@84)) (and (and ($generated@@158 $generated@@160) (and (not (= $generated@@161 $generated@@141)) (= ($generated@@142 $generated@@161) ($generated@@140 $generated@@159)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@81 ($generated@@8 ($generated@@139 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@139 $generated@@161) ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60) ($generated@@140 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@143 $generated@@162 ($generated@@82 0)))
 :pattern ( ($generated@@143 $generated@@162 ($generated@@82 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@84)) (= (type $generated@@167) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@81 $generated@@166 ($generated@@140 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@170)) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@70)) ($generated@@143 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@143 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@84 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@73 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@84) (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@240) ($generated@@72 $generated@@4))) (= (type $generated@@242) $generated@@84)) (= (type $generated@@243) ($generated@@72 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (= (type $generated@@245) $generated@@70))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@84) (= (type $generated@@247) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@246 $generated@@245 $generated@@247) ($generated@@81 $generated@@246 $generated@@155 $generated@@247)))
 :pattern ( ($generated@@81 $generated@@246 $generated@@245 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@170)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@70) (= (type $generated@@253) $generated@@70)) (= (type $generated@@254) $generated@@179)) (= (type $generated@@255) $generated@@179)) (= ($generated@@143 ($generated@@248 $generated@@254 $generated@@255) ($generated@@169 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@143 ($generated@@248 $generated@@254 $generated@@255) ($generated@@169 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@170) (= (type $generated@@257) $generated@@170)) (= ($generated@@176 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@176 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@261) $generated@@70)) (= ($generated@@143 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@179) ($generated@@0 ($generated@@88 $generated@@260 $generated@@262))) ($generated@@249 $generated@@262 $generated@@261))
 :pattern ( ($generated@@88 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@143 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@266) $generated@@70)) (= ($generated@@143 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@179) ($generated@@0 ($generated@@88 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@88 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@143 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@179)) (= (type $generated@@278) $generated@@179)) (= (type $generated@@279) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@158 $generated@@279)) (= ($generated@@81 ($generated@@248 $generated@@277 $generated@@278) ($generated@@169 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@81 ($generated@@248 $generated@@277 $generated@@278) ($generated@@169 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@74)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@170) (= ($generated@@168 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@170) ($generated@@168 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@179) (= (type $generated@@285) $generated@@179)) (= $generated@@283 ($generated@@248 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@168 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@70) (= (type $generated@@295) $generated@@84)) (= ($generated@@143 $generated@@295 ($generated@@163 $generated@@294))  (and ($generated@@143 $generated@@295 ($generated@@140 $generated@@294)) (not (= $generated@@295 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@295 ($generated@@163 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@179)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@274 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@81 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@274 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@303) $generated@@179)) (= (type $generated@@304) $generated@@70)) ($generated@@148 $generated@@301 $generated@@302)) ($generated@@274 $generated@@303 $generated@@304 $generated@@301)) ($generated@@274 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@148 $generated@@301 $generated@@302) ($generated@@274 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@306) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@308) $generated@@70)) ($generated@@148 $generated@@305 $generated@@306)) ($generated@@81 $generated@@307 $generated@@308 $generated@@305)) ($generated@@81 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@148 $generated@@305 $generated@@306) ($generated@@81 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@83 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@86 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@83 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@88 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@75)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@70) (and (= ($generated@@79 ($generated@@140 $generated@@317)) $generated@@61) (= ($generated@@315 ($generated@@140 $generated@@317)) $generated@@67)))
 :pattern ( ($generated@@140 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@70) (and (= ($generated@@79 ($generated@@163 $generated@@318)) $generated@@62) (= ($generated@@315 ($generated@@163 $generated@@318)) $generated@@67)))
 :pattern ( ($generated@@163 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 18)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@83 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@88 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@88 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@83 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@88 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@88 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@86 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@83 $generated@@356 $generated@@2)) (= ($generated@@185 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@88 $generated@@355 $generated@@357))) (<= ($generated ($generated@@88 $generated@@355 $generated@@357)) ($generated@@309 $generated@@355))))
 :pattern ( ($generated@@88 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@185 $generated@@355))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@179) ($generated@@249 $generated@@361 $generated@@155)) (and (= ($generated@@296 ($generated@@358 $generated@@84 $generated@@361)) $generated@@361) ($generated@@143 ($generated@@358 $generated@@84 $generated@@361) $generated@@155)))
 :pattern ( ($generated@@249 $generated@@361 $generated@@155))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@179) ($generated@@249 $generated@@362 $generated@@245)) (and (= ($generated@@296 ($generated@@358 $generated@@84 $generated@@362)) $generated@@362) ($generated@@143 ($generated@@358 $generated@@84 $generated@@362) $generated@@245)))
 :pattern ( ($generated@@249 $generated@@362 $generated@@245))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@70) (= (type $generated@@364) $generated@@84)) (= ($generated@@143 $generated@@364 ($generated@@140 $generated@@363))  (or (= $generated@@364 $generated@@141) (= ($generated@@142 $generated@@364) ($generated@@140 $generated@@363)))))
 :pattern ( ($generated@@143 $generated@@364 ($generated@@140 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@84) (= ($generated@@143 $generated@@365 $generated@@245)  (and ($generated@@143 $generated@@365 $generated@@155) (not (= $generated@@365 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@365 $generated@@245))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@323 (type $generated@@366))))
(let (($generated@@368 ($generated@@322 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@321 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@320 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@319 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@319 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@323 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@83 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@323 (type $generated@@373))))
(let (($generated@@375 ($generated@@322 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@321 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@320 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@88 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@341 (type $generated@@377))))
(let (($generated@@379 ($generated@@340 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@339 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@338 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@337 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@337 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@341 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@83 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@341 (type $generated@@384))))
(let (($generated@@386 ($generated@@340 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@339 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@338 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@88 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@389) $generated@@70)) (= ($generated@@143 $generated@@388 ($generated@@184 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@388 $generated@@390)))) ($generated@@249 $generated@@390 $generated@@389))
 :pattern ( ($generated@@88 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@143 $generated@@388 ($generated@@184 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@391 ($generated@@258 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@179) ($generated@@0 ($generated@@88 $generated@@391 $generated@@394))) ($generated@@274 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@88 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@81 $generated@@391 ($generated@@258 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@396) $generated@@70)) (= (type $generated@@397) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@395 ($generated@@263 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@179) ($generated@@0 ($generated@@88 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@88 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@81 $generated@@395 ($generated@@263 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@88 ($generated@@310 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@88 ($generated@@310 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@323 (type $generated@@404))))
(let (($generated@@406 ($generated@@322 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@83 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@321 $generated@@179 $generated@@179)) (= (type $generated@@408) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@88 ($generated@@319 $generated@@407) ($generated@@177 ($generated@@358 $generated@@170 $generated@@408)))) (= ($generated@@88 ($generated@@402 $generated@@407) ($generated@@177 ($generated@@358 $generated@@170 $generated@@408))) ($generated@@178 ($generated@@358 $generated@@170 $generated@@408))))))
 :pattern ( ($generated@@88 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@341 (type $generated@@412))))
(let (($generated@@414 ($generated@@340 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@339 $generated@@179 $generated@@179)) (= (type $generated@@416) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@88 ($generated@@337 $generated@@415) ($generated@@177 ($generated@@358 $generated@@170 $generated@@416)))) (= ($generated@@88 ($generated@@410 $generated@@415) ($generated@@177 ($generated@@358 $generated@@170 $generated@@416))) ($generated@@178 ($generated@@358 $generated@@170 $generated@@416))))))
 :pattern ( ($generated@@88 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@322 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@321 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@88 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@88 ($generated@@319 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@88 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@88 ($generated@@319 $generated@@417) $generated@@421))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@88 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@340 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@339 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@88 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@88 ($generated@@337 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@88 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@88 ($generated@@337 $generated@@422) $generated@@426))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@88 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@321 $generated@@179 $generated@@179)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@319 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@88 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@88 ($generated@@319 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@81 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@339 $generated@@179 $generated@@179)) (= (type $generated@@439) $generated@@70)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@337 $generated@@438) $generated@@442))) (and ($generated@@274 ($generated@@88 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@274 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@88 ($generated@@337 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@81 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@445) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@443 $generated@@445))) (and ($generated@@148 $generated@@443 $generated@@444) ($generated@@148 $generated@@444 $generated@@445))) ($generated@@148 $generated@@443 $generated@@445))
 :pattern ( ($generated@@148 $generated@@443 $generated@@444) ($generated@@148 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 Int) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@72 $generated@@179))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 Int) ) (!  (=> (and (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@450) $generated@@84)) (=> (and (and (and ($generated@@158 $generated@@449) (and (not (= $generated@@450 $generated@@141)) (= ($generated@@142 $generated@@450) ($generated@@140 $generated@@448)))) (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@139 $generated@@450)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@449 $generated@@450) $generated@@60))) ($generated@@274 ($generated@@90 ($generated@@88 $generated@@449 $generated@@450) ($generated@@446 $generated@@451)) $generated@@448 $generated@@449)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@449 $generated@@450) ($generated@@446 $generated@@451)) ($generated@@140 $generated@@448))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@83 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@341 (type $generated@@454))))
(let (($generated@@456 ($generated@@340 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@339 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@338 $generated@@456 $generated@@455)) (= ($generated@@337 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@337 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@341 (type $generated@@457))))
(let (($generated@@459 ($generated@@340 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@339 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@338 $generated@@459 $generated@@458)) (= ($generated@@381 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@381 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@341 (type $generated@@460))))
(let (($generated@@462 ($generated@@340 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@339 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@338 $generated@@462 $generated@@461)) (= ($generated@@409 $generated@@460) ($generated@@452 $generated@@179))))))
 :pattern ( ($generated@@409 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@323 (type $generated@@463))))
(let (($generated@@465 ($generated@@322 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@321 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@320 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@179) (= (type $generated@@467) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@401 $generated@@463) ($generated@@296 ($generated@@248 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@401 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@341 (type $generated@@468))))
(let (($generated@@470 ($generated@@340 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@339 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@338 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@179) (= (type $generated@@472) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@409 $generated@@468) ($generated@@296 ($generated@@248 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@409 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@179) ($generated@@249 $generated@@473 $generated@@46)) (and (= ($generated@@296 ($generated@@358 $generated@@2 $generated@@473)) $generated@@473) ($generated@@143 ($generated@@358 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@179) ($generated@@249 $generated@@474 $generated@@47)) (and (= ($generated@@296 ($generated@@358 $generated@@3 $generated@@474)) $generated@@474) ($generated@@143 ($generated@@358 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@179) ($generated@@249 $generated@@475 $generated@@44)) (and (= ($generated@@296 ($generated@@358 $generated@@4 $generated@@475)) $generated@@475) ($generated@@143 ($generated@@358 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 20))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@179) ($generated@@249 $generated@@477 $generated@@45)) (and (= ($generated@@296 ($generated@@358 $generated@@476 $generated@@477)) $generated@@477) ($generated@@143 ($generated@@358 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@249 ($generated@@296 $generated@@478) $generated@@479) ($generated@@143 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@249 ($generated@@296 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@84) (<= 0 ($generated@@139 $generated@@480)))
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@86 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@83 $generated@@482 $generated@@2)) (<= 0 ($generated@@309 $generated@@481))))
 :pattern ( ($generated@@309 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@289 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@288 $generated@@484)) (<= 0 ($generated@@287 $generated@@483))))
 :pattern ( ($generated@@287 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@427 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@427 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@427 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@79 ($generated@@427 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@435 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@435 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@435 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@435 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@79 ($generated@@435 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@179) (= (type $generated@@506) $generated@@179)) (= ($generated@@280 ($generated@@248 $generated@@505 $generated@@506)) $generated@@63))
 :pattern ( ($generated@@248 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@70) (= (type $generated@@510) $generated@@70)) (= ($generated@@507 ($generated@@169 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@169 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@70) (= (type $generated@@514) $generated@@70)) (= ($generated@@511 ($generated@@169 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@169 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@179) (= (type $generated@@516) $generated@@179)) (= ($generated@@177 ($generated@@248 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@248 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@179) (= (type $generated@@518) $generated@@179)) (= ($generated@@178 ($generated@@248 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@289 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@288 $generated@@179)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@287 $generated@@525))) ($generated@@274 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@81 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@82 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@82 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@258 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@258 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@79 ($generated@@258 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@263 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@263 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@79 ($generated@@263 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@184 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@184 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@79 ($generated@@184 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@79 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@78 ($generated@@446 $generated@@547)) 1)
 :pattern ( ($generated@@446 $generated@@547))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@446 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@446 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@70)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@550 ($generated@@140 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@140 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@70) (= ($generated@@553 ($generated@@163 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@163 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@358 $generated@@557 ($generated@@296 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@296 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@321 $generated@@179 $generated@@179)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) (= ($generated@@143 $generated@@558 ($generated@@427 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@319 $generated@@558) $generated@@561))) (and ($generated@@249 ($generated@@88 ($generated@@402 $generated@@558) $generated@@561) $generated@@560) ($generated@@249 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@558) $generated@@561))
 :pattern ( ($generated@@88 ($generated@@319 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@143 $generated@@558 ($generated@@427 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@339 $generated@@179 $generated@@179)) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) (= ($generated@@143 $generated@@562 ($generated@@435 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@337 $generated@@562) $generated@@565))) (and ($generated@@249 ($generated@@88 ($generated@@410 $generated@@562) $generated@@565) $generated@@564) ($generated@@249 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@562) $generated@@565))
 :pattern ( ($generated@@88 ($generated@@337 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@143 $generated@@562 ($generated@@435 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@568) $generated@@84)) (and (and ($generated@@158 $generated@@567) (and (not (= $generated@@568 $generated@@141)) (= ($generated@@142 $generated@@568) ($generated@@140 $generated@@566)))) (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@139 $generated@@568))))) ($generated@@249 ($generated@@90 ($generated@@88 $generated@@567 $generated@@568) ($generated@@446 $generated@@569)) $generated@@566))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@567 $generated@@568) ($generated@@446 $generated@@569)) ($generated@@140 $generated@@566))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@179) (= (type $generated@@573) $generated@@179)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@248 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@248 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@179) (= (type $generated@@575) $generated@@179)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@248 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@248 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@179) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) $generated@@70)) ($generated@@249 $generated@@576 ($generated@@427 $generated@@577 $generated@@578))) (and (= ($generated@@296 ($generated@@358 ($generated@@321 $generated@@179 $generated@@179) $generated@@576)) $generated@@576) ($generated@@143 ($generated@@358 ($generated@@321 $generated@@179 $generated@@179) $generated@@576) ($generated@@427 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@249 $generated@@576 ($generated@@427 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@179) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) $generated@@70)) ($generated@@249 $generated@@579 ($generated@@435 $generated@@580 $generated@@581))) (and (= ($generated@@296 ($generated@@358 ($generated@@339 $generated@@179 $generated@@179) $generated@@579)) $generated@@579) ($generated@@143 ($generated@@358 ($generated@@339 $generated@@179 $generated@@179) $generated@@579) ($generated@@435 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@249 $generated@@579 ($generated@@435 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@70) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) $generated@@179)) ($generated@@249 $generated@@584 ($generated@@169 $generated@@582 $generated@@583))) (and (= ($generated@@296 ($generated@@358 $generated@@170 $generated@@584)) $generated@@584) ($generated@@143 ($generated@@358 $generated@@170 $generated@@584) ($generated@@169 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@249 $generated@@584 ($generated@@169 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@88 ($generated@@452 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@88 ($generated@@452 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@70) (= (type $generated@@588) $generated@@70)) (and (= ($generated@@79 ($generated@@169 $generated@@587 $generated@@588)) $generated@@64) (= ($generated@@315 ($generated@@169 $generated@@587 $generated@@588)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@170) (= ($generated@@570 ($generated@@296 $generated@@589)) ($generated@@571 $generated@@589)))
 :pattern ( ($generated@@570 ($generated@@296 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@179) ($generated@@249 $generated@@590 ($generated@@82 0))) (and (= ($generated@@296 ($generated@@358 $generated@@2 $generated@@590)) $generated@@590) ($generated@@143 ($generated@@358 ($generated@@83 $generated@@179 $generated@@4) $generated@@590) ($generated@@82 0))))
 :pattern ( ($generated@@249 $generated@@590 ($generated@@82 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@179) (= (type $generated@@592) $generated@@70)) ($generated@@249 $generated@@591 ($generated@@258 $generated@@592))) (and (= ($generated@@296 ($generated@@358 ($generated@@83 $generated@@179 $generated@@4) $generated@@591)) $generated@@591) ($generated@@143 ($generated@@358 ($generated@@83 $generated@@179 $generated@@4) $generated@@591) ($generated@@258 $generated@@592))))
 :pattern ( ($generated@@249 $generated@@591 ($generated@@258 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@179) (= (type $generated@@594) $generated@@70)) ($generated@@249 $generated@@593 ($generated@@263 $generated@@594))) (and (= ($generated@@296 ($generated@@358 ($generated@@83 $generated@@179 $generated@@4) $generated@@593)) $generated@@593) ($generated@@143 ($generated@@358 ($generated@@83 $generated@@179 $generated@@4) $generated@@593) ($generated@@263 $generated@@594))))
 :pattern ( ($generated@@249 $generated@@593 ($generated@@263 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@179) (= (type $generated@@596) $generated@@70)) ($generated@@249 $generated@@595 ($generated@@184 $generated@@596))) (and (= ($generated@@296 ($generated@@358 ($generated@@83 $generated@@179 $generated@@2) $generated@@595)) $generated@@595) ($generated@@143 ($generated@@358 ($generated@@83 $generated@@179 $generated@@2) $generated@@595) ($generated@@184 $generated@@596))))
 :pattern ( ($generated@@249 $generated@@595 ($generated@@184 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@179) (= (type $generated@@598) $generated@@70)) ($generated@@249 $generated@@597 ($generated@@519 $generated@@598))) (and (= ($generated@@296 ($generated@@358 ($generated@@288 $generated@@179) $generated@@597)) $generated@@597) ($generated@@143 ($generated@@358 ($generated@@288 $generated@@179) $generated@@597) ($generated@@519 $generated@@598))))
 :pattern ( ($generated@@249 $generated@@597 ($generated@@519 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@70) (= (type $generated@@600) $generated@@179)) ($generated@@249 $generated@@600 ($generated@@140 $generated@@599))) (and (= ($generated@@296 ($generated@@358 $generated@@84 $generated@@600)) $generated@@600) ($generated@@143 ($generated@@358 $generated@@84 $generated@@600) ($generated@@140 $generated@@599))))
 :pattern ( ($generated@@249 $generated@@600 ($generated@@140 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@70) (= (type $generated@@602) $generated@@179)) ($generated@@249 $generated@@602 ($generated@@163 $generated@@601))) (and (= ($generated@@296 ($generated@@358 $generated@@84 $generated@@602)) $generated@@602) ($generated@@143 ($generated@@358 $generated@@84 $generated@@602) ($generated@@163 $generated@@601))))
 :pattern ( ($generated@@249 $generated@@602 ($generated@@163 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (=> (and (and (and (= (type $generated@@603) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@604) $generated@@84)) (= (type $generated@@605) ($generated@@72 $generated@@607))) ($generated@@158 ($generated@@89 $generated@@603 $generated@@604 ($generated@@91 ($generated@@88 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))) ($generated@@148 $generated@@603 ($generated@@89 $generated@@603 $generated@@604 ($generated@@91 ($generated@@88 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@89 $generated@@603 $generated@@604 ($generated@@91 ($generated@@88 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))
)))
(assert (= ($generated@@79 $generated@@155) $generated@@65))
(assert (= ($generated@@315 $generated@@155) $generated@@69))
(assert (= ($generated@@79 $generated@@245) $generated@@66))
(assert (= ($generated@@315 $generated@@245) $generated@@69))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@608 ($generated@@184 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@608 $generated@@611)))) ($generated@@274 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@88 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@184 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@84) (= ($generated@@143 $generated@@613 $generated@@155)  (or (= $generated@@613 $generated@@141) ($generated@@612 ($generated@@142 $generated@@613)))))
 :pattern ( ($generated@@143 $generated@@613 $generated@@155))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@170) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@616) (and ($generated@@168 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@70) ($generated@@81 $generated@@614 ($generated@@169 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@81 $generated@@614 ($generated@@169 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@274 ($generated@@177 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@274 ($generated@@177 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@170) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@620) (and ($generated@@168 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@70) ($generated@@81 $generated@@618 ($generated@@169 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@81 $generated@@618 ($generated@@169 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@274 ($generated@@178 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@274 ($generated@@178 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@179) (= (type $generated@@623) $generated@@179)) (= ($generated@@248 ($generated@@270 $generated@@622) ($generated@@270 $generated@@623)) ($generated@@270 ($generated@@248 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@248 ($generated@@270 $generated@@622) ($generated@@270 $generated@@623)))
)))
(assert (forall (($generated@@624 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@268 $generated@@624))) ($generated@@270 ($generated@@296 ($generated@@8 $generated@@624))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@268 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@296 ($generated@@270 $generated@@625)) ($generated@@270 ($generated@@296 $generated@@625)))
 :pattern ( ($generated@@296 ($generated@@270 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@289 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@288 $generated@@627)) (= ($generated@@287 $generated@@626) 0)) (= $generated@@626 ($generated@@286 $generated@@627))))
 :pattern ( ($generated@@287 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@83 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@309 ($generated@@89 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@309 $generated@@628) ($generated ($generated@@88 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@309 ($generated@@89 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@2)) ($generated@@81 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@3)) ($generated@@81 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@637) $generated@@4)) ($generated@@81 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@81 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@639) $generated@@476)) ($generated@@81 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@81 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@641) $generated@@179)) ($generated@@81 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@81 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@288 $generated@@179)) (= (type $generated@@643) $generated@@70)) (= ($generated@@143 $generated@@642 ($generated@@519 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@287 $generated@@642))) ($generated@@249 ($generated@@520 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@520 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@143 $generated@@642 ($generated@@519 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (= (type $generated@@646) ($generated@@288 $generated@@179)) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@287 $generated@@646))) (< ($generated@@571 ($generated@@358 $generated@@170 ($generated@@520 $generated@@646 $generated@@647))) ($generated@@645 $generated@@646))))
 :pattern ( ($generated@@571 ($generated@@358 $generated@@170 ($generated@@520 $generated@@646 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@321 $generated@@179 $generated@@179)) (= (type $generated@@649) $generated@@70)) (= (type $generated@@650) $generated@@70)) ($generated@@143 $generated@@648 ($generated@@427 $generated@@649 $generated@@650))) (and (and ($generated@@143 ($generated@@319 $generated@@648) ($generated@@258 $generated@@649)) ($generated@@143 ($generated@@370 $generated@@648) ($generated@@258 $generated@@650))) ($generated@@143 ($generated@@401 $generated@@648) ($generated@@258 ($generated@@169 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@143 $generated@@648 ($generated@@427 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@339 $generated@@179 $generated@@179)) (= (type $generated@@652) $generated@@70)) (= (type $generated@@653) $generated@@70)) ($generated@@143 $generated@@651 ($generated@@435 $generated@@652 $generated@@653))) (and (and ($generated@@143 ($generated@@337 $generated@@651) ($generated@@263 $generated@@652)) ($generated@@143 ($generated@@381 $generated@@651) ($generated@@263 $generated@@653))) ($generated@@143 ($generated@@409 $generated@@651) ($generated@@263 ($generated@@169 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@143 $generated@@651 ($generated@@435 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) ($generated@@143 $generated@@654 $generated@@46))
 :pattern ( ($generated@@143 $generated@@654 $generated@@46))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@3) ($generated@@143 $generated@@655 $generated@@47))
 :pattern ( ($generated@@143 $generated@@655 $generated@@47))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@4) ($generated@@143 $generated@@656 $generated@@44))
 :pattern ( ($generated@@143 $generated@@656 $generated@@44))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@476) ($generated@@143 $generated@@657 $generated@@45))
 :pattern ( ($generated@@143 $generated@@657 $generated@@45))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@179) ($generated@@143 $generated@@658 $generated@@48))
 :pattern ( ($generated@@143 $generated@@658 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(assert  (and (and (and (and (= (type $generated@@659) $generated@@84) (= (type $generated@@660) ($generated@@191 $generated@@84 $generated@@4))) (= (type $generated@@661) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@663) $generated@@84)) (= (type $generated@@664) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@666 true))
(let (($generated@@667  (=> (< 5 ($generated@@139 $generated@@659)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@659 $generated@@141))) (=> (not (= $generated@@659 $generated@@141)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@268 5)) (< ($generated@@268 5) ($generated@@139 $generated@@659)))) (=> (and (<= 0 ($generated@@268 5)) (< ($generated@@268 5) ($generated@@139 $generated@@659))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@189 $generated@@660 $generated@@659 ($generated@@446 ($generated@@268 5))))))))))))
(let (($generated@@668  (=> (= $generated@@660 ($generated@@190 $generated@@141 $generated@@661 $generated@@60 false)) (=> (and ($generated@@143 $generated@@659 ($generated@@163 $generated@@46)) ($generated@@81 $generated@@659 ($generated@@163 $generated@@46) $generated@@661)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@659 $generated@@141))) (=> (not (= $generated@@659 $generated@@141)) (and (=> (= (ControlFlow 0 6) 2) $generated@@667) (=> (= (ControlFlow 0 6) 5) $generated@@666))))))))
(let (($generated@@669  (=> (and (and ($generated@@158 $generated@@661) ($generated@@662 $generated@@661)) (and (not (= $generated@@663 $generated@@141)) (and ($generated@@143 $generated@@663 $generated@@245) ($generated@@81 $generated@@663 $generated@@245 $generated@@661)))) (=> (and (and (and ($generated@@143 $generated@@664 ($generated@@163 $generated@@46)) ($generated@@81 $generated@@664 ($generated@@163 $generated@@46) $generated@@661)) true) (and (= 1 $generated@@665) (= (ControlFlow 0 8) 6))) $generated@@668))))
$generated@@669)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (Int Int) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 Int) ($generated@@560 Int) ) (! (= ($generated@@558 $generated@@559 $generated@@560) (* $generated@@559 $generated@@560))
 :pattern ( ($generated@@558 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@561)) ($generated@@538 $generated@@561)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@163) ($generated@@240 $generated@@562 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@81 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@163) (= (type $generated@@564) $generated@@70)) ($generated@@240 $generated@@563 ($generated@@249 $generated@@564))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@563) ($generated@@249 $generated@@564))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@249 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@70)) ($generated@@240 $generated@@565 ($generated@@254 $generated@@566))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@565)) $generated@@565) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@565) ($generated@@254 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@254 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@70)) ($generated@@240 $generated@@567 ($generated@@170 $generated@@568))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@567)) $generated@@567) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@567) ($generated@@170 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@170 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@240 $generated@@569 ($generated@@499 $generated@@570))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@569) ($generated@@499 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 ($generated@@499 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@83) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@571 $generated@@143)) ($generated@@80 $generated@@571 $generated@@146 $generated@@572))) ($generated@@80 $generated@@571 $generated@@168 $generated@@572))
 :pattern ( ($generated@@80 $generated@@571 $generated@@146 $generated@@572))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@573 ($generated@@170 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@573 $generated@@576)))) ($generated@@266 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@87 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@170 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@83) (= ($generated@@149 $generated@@577 $generated@@142)  (or (= $generated@@577 $generated@@143) ($generated@@151 ($generated@@175 $generated@@577)))))
 :pattern ( ($generated@@149 $generated@@577 $generated@@142))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@580) (and ($generated@@152 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@70) ($generated@@80 $generated@@578 ($generated@@153 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@153 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@266 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@584) (and ($generated@@152 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@70) ($generated@@80 $generated@@582 ($generated@@153 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@80 $generated@@582 ($generated@@153 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@266 ($generated@@162 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@586) ($generated@@261 $generated@@587)) ($generated@@261 ($generated@@239 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@586) ($generated@@261 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@588))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@286 $generated@@589)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@281 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@280 $generated@@591)) (= ($generated@@279 $generated@@590) 0)) (= $generated@@590 ($generated@@278 $generated@@591))))
 :pattern ( ($generated@@279 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@82 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@299 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@299 $generated@@592) ($generated ($generated@@87 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@2)) ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@3)) ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@4)) ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@457)) ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@163)) ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@280 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= ($generated@@149 $generated@@606 ($generated@@499 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@606))) ($generated@@240 ($generated@@500 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@500 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@499 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@279 $generated@@610))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@414 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@305 $generated@@612) ($generated@@249 $generated@@613)) ($generated@@149 ($generated@@357 $generated@@612) ($generated@@249 $generated@@614))) ($generated@@149 ($generated@@388 $generated@@612) ($generated@@249 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@414 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) $generated@@70)) ($generated@@149 $generated@@615 ($generated@@422 $generated@@616 $generated@@617))) (and (and ($generated@@149 ($generated@@323 $generated@@615) ($generated@@254 $generated@@616)) ($generated@@149 ($generated@@368 $generated@@615) ($generated@@254 $generated@@617))) ($generated@@149 ($generated@@396 $generated@@615) ($generated@@254 ($generated@@153 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@422 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@149 $generated@@618 $generated@@46))
 :pattern ( ($generated@@149 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@149 $generated@@619 $generated@@47))
 :pattern ( ($generated@@149 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@149 $generated@@620 $generated@@44))
 :pattern ( ($generated@@149 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@457) ($generated@@149 $generated@@621 $generated@@45))
 :pattern ( ($generated@@149 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@163) ($generated@@149 $generated@@622 $generated@@48))
 :pattern ( ($generated@@149 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(assert  (and (and (and (= (type $generated@@625) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@632  (=> (and (<= ($generated@@259 0) $generated@@623) (<= ($generated@@259 0) $generated@@624)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= ($generated@@259 0) $generated@@623)) (=> (<= ($generated@@259 0) $generated@@623) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@259 0) $generated@@624)) (=> (<= ($generated@@259 0) $generated@@624) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@623 $generated@@623) (=> (= $generated@@623 $generated@@623) true))) (=> (and (<= $generated@@623 $generated@@623) (=> (= $generated@@623 $generated@@623) true)) (=> (= $generated@@625 ($generated@@179 $generated@@143 $generated@@626 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@633 T@T) )  (=> false false))) (=> (forall (($generated@@634 T@T) )  (=> false false)) (=> (and ($generated@@265 $generated@@627) ($generated@@628 $generated@@627)) (=> (and (and (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@83) (=> (and (not (= $generated@@635 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@626 $generated@@635) $generated@@60))) (= ($generated@@87 $generated@@627 $generated@@635) ($generated@@87 $generated@@626 $generated@@635))))
 :pattern ( ($generated@@87 $generated@@627 $generated@@635))
)) ($generated@@138 $generated@@626 $generated@@627)) (and (= $generated@@629 ($generated@@558 $generated@@623 $generated@@624)) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@629 ($generated@@558 $generated@@623 $generated@@624))))))))))))))))
(let (($generated@@636  (=> (and ($generated@@265 $generated@@626) ($generated@@628 $generated@@626)) (=> (and (and (not (= $generated@@630 $generated@@143)) (and ($generated@@149 $generated@@630 $generated@@236) ($generated@@80 $generated@@630 $generated@@236 $generated@@626))) (and (= 1 $generated@@631) (= (ControlFlow 0 7) 2))) $generated@@632))))
$generated@@636)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (Int Int) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@154) ($generated@@152 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@152 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@80 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@293) $generated@@163)) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@266 $generated@@293 $generated@@294 $generated@@291)) ($generated@@266 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@266 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@80 $generated@@297 $generated@@298 $generated@@295)) ($generated@@80 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@80 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@171 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@171 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@163) ($generated@@240 $generated@@347 $generated@@142)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@347)) $generated@@347) ($generated@@149 ($generated@@344 $generated@@83 $generated@@347) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@347 $generated@@142))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@163) ($generated@@240 $generated@@348 $generated@@168)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@344 $generated@@83 $generated@@348) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@168))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@163) ($generated@@240 $generated@@349 $generated@@146)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@349)) $generated@@349) ($generated@@149 ($generated@@344 $generated@@83 $generated@@349) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@146))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@163) ($generated@@240 $generated@@350 $generated@@236)) (and (= ($generated@@286 ($generated@@344 $generated@@83 $generated@@350)) $generated@@350) ($generated@@149 ($generated@@344 $generated@@83 $generated@@350) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@236))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@83) (= ($generated@@149 $generated@@351 $generated@@168)  (and ($generated@@149 $generated@@351 $generated@@142) (not (= $generated@@351 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@351 $generated@@168))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@83) (= ($generated@@149 $generated@@352 $generated@@236)  (and ($generated@@149 $generated@@352 $generated@@146) (not (= $generated@@352 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(let (($generated@@355 ($generated@@308 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@307 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@306 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@305 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@309 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@309 (type $generated@@360))))
(let (($generated@@362 ($generated@@308 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@307 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@306 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(let (($generated@@366 ($generated@@326 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@325 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@324 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@323 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@327 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@240 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@149 $generated@@375 ($generated@@170 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@266 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@249 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@87 ($generated@@300 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@309 (type $generated@@391))))
(let (($generated@@393 ($generated@@308 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@395) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@161 ($generated@@344 $generated@@154 $generated@@395))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@327 (type $generated@@399))))
(let (($generated@@401 ($generated@@326 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403)))) (= ($generated@@87 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@344 $generated@@154 $generated@@403))) ($generated@@162 ($generated@@344 $generated@@154 $generated@@403))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@308 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@307 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@326 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@325 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@87 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@430 $generated@@432))) (and ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))) ($generated@@138 $generated@@430 $generated@@432))
 :pattern ( ($generated@@138 $generated@@430 $generated@@431) ($generated@@138 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@368 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@368 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@163))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@444) ($generated@@286 ($generated@@239 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@240 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@344 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@240 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@455)) $generated@@455) ($generated@@149 ($generated@@344 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@240 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@344 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@163) ($generated@@240 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@457 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@344 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@70) (= ($generated@@240 ($generated@@286 $generated@@459) $generated@@460) ($generated@@149 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@85 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@82 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@422 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@153 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@153 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@153 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@281 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@280 $generated@@163)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@279 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@249 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@254 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@170 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@170 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@344 $generated@@528 ($generated@@286 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@286 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))) (and ($generated@@240 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@240 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@149 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))) (and ($generated@@240 ($generated@@87 ($generated@@397 $generated@@533) $generated@@536) $generated@@535) ($generated@@240 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@149 $generated@@533 ($generated@@422 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@239 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@239 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@163)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@239 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@344 ($generated@@307 $generated@@163 $generated@@163) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@344 ($generated@@325 $generated@@163 $generated@@163) $generated@@546) ($generated@@422 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@422 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@163)) ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550))) (and (= ($generated@@286 ($generated@@344 $generated@@154 $generated@@551)) $generated@@551) ($generated@@149 ($generated@@344 $generated@@154 $generated@@551) ($generated@@153 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@153 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@87 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@87 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@75)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 Int) ($generated@@560 Int) ) (! (= ($generated@@558 $generated@@559 $generated@@560) (* $generated@@559 $generated@@560))
 :pattern ( ($generated@@558 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@154) (= ($generated@@537 ($generated@@286 $generated@@561)) ($generated@@538 $generated@@561)))
 :pattern ( ($generated@@537 ($generated@@286 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@163) ($generated@@240 $generated@@562 ($generated@@81 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@562)) $generated@@562) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@562) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@81 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@163) (= (type $generated@@564) $generated@@70)) ($generated@@240 $generated@@563 ($generated@@249 $generated@@564))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@563) ($generated@@249 $generated@@564))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@249 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@70)) ($generated@@240 $generated@@565 ($generated@@254 $generated@@566))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@565)) $generated@@565) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@4) $generated@@565) ($generated@@254 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@254 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@70)) ($generated@@240 $generated@@567 ($generated@@170 $generated@@568))) (and (= ($generated@@286 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@567)) $generated@@567) ($generated@@149 ($generated@@344 ($generated@@82 $generated@@163 $generated@@2) $generated@@567) ($generated@@170 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@170 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@240 $generated@@569 ($generated@@499 $generated@@570))) (and (= ($generated@@286 ($generated@@344 ($generated@@280 $generated@@163) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@344 ($generated@@280 $generated@@163) $generated@@569) ($generated@@499 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 ($generated@@499 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@83) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@571 $generated@@143)) ($generated@@80 $generated@@571 $generated@@146 $generated@@572))) ($generated@@80 $generated@@571 $generated@@168 $generated@@572))
 :pattern ( ($generated@@80 $generated@@571 $generated@@146 $generated@@572))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@554 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@554 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@554 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@554 $generated@@236) $generated@@69))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@573 ($generated@@170 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@573 $generated@@576)))) ($generated@@266 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@87 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@170 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@83) (= ($generated@@149 $generated@@577 $generated@@142)  (or (= $generated@@577 $generated@@143) ($generated@@151 ($generated@@175 $generated@@577)))))
 :pattern ( ($generated@@149 $generated@@577 $generated@@142))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@580) (and ($generated@@152 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@70) ($generated@@80 $generated@@578 ($generated@@153 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@153 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@266 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@584) (and ($generated@@152 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@70) ($generated@@80 $generated@@582 ($generated@@153 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@80 $generated@@582 ($generated@@153 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@266 ($generated@@162 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@586) ($generated@@261 $generated@@587)) ($generated@@261 ($generated@@239 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@586) ($generated@@261 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@259 $generated@@588))) ($generated@@261 ($generated@@286 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@259 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@286 ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@286 $generated@@589)))
 :pattern ( ($generated@@286 ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@281 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@280 $generated@@591)) (= ($generated@@279 $generated@@590) 0)) (= $generated@@590 ($generated@@278 $generated@@591))))
 :pattern ( ($generated@@279 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@82 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@299 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@299 $generated@@592) ($generated ($generated@@87 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@2)) ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@3)) ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@4)) ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@457)) ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@163)) ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@280 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= ($generated@@149 $generated@@606 ($generated@@499 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@279 $generated@@606))) ($generated@@240 ($generated@@500 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@500 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@149 $generated@@606 ($generated@@499 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@279 $generated@@610))) (< ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@538 ($generated@@344 $generated@@154 ($generated@@500 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@307 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@149 $generated@@612 ($generated@@414 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@305 $generated@@612) ($generated@@249 $generated@@613)) ($generated@@149 ($generated@@357 $generated@@612) ($generated@@249 $generated@@614))) ($generated@@149 ($generated@@388 $generated@@612) ($generated@@249 ($generated@@153 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@414 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) $generated@@70)) ($generated@@149 $generated@@615 ($generated@@422 $generated@@616 $generated@@617))) (and (and ($generated@@149 ($generated@@323 $generated@@615) ($generated@@254 $generated@@616)) ($generated@@149 ($generated@@368 $generated@@615) ($generated@@254 $generated@@617))) ($generated@@149 ($generated@@396 $generated@@615) ($generated@@254 ($generated@@153 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@422 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@149 $generated@@618 $generated@@46))
 :pattern ( ($generated@@149 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@149 $generated@@619 $generated@@47))
 :pattern ( ($generated@@149 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@149 $generated@@620 $generated@@44))
 :pattern ( ($generated@@149 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@457) ($generated@@149 $generated@@621 $generated@@45))
 :pattern ( ($generated@@149 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@163) ($generated@@149 $generated@@622 $generated@@48))
 :pattern ( ($generated@@149 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@633) ($generated@@180 $generated@@83 $generated@@4))) (= (type $generated@@634) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@636  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@623 ($generated@@558 $generated@@624 $generated@@625)))))
(let (($generated@@637  (=> (and (not (= $generated@@624 ($generated@@259 0))) (= $generated@@626 (- $generated@@624 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (<= 0 $generated@@624) (= $generated@@626 $generated@@624))) (=> (or (<= 0 $generated@@624) (= $generated@@626 $generated@@624)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (< $generated@@626 $generated@@624)) (=> (< $generated@@626 $generated@@624) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@259 0) $generated@@626)) (=> (<= ($generated@@259 0) $generated@@626) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@259 0) $generated@@625)) (=> (<= ($generated@@259 0) $generated@@625) (=> (and (and (and ($generated@@265 $generated@@627) ($generated@@628 $generated@@627)) (and (= $generated@@629 ($generated@@558 $generated@@626 $generated@@625)) (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@83) (=> (and (not (= $generated@@638 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@630 $generated@@638) $generated@@60))) (= ($generated@@87 $generated@@627 $generated@@638) ($generated@@87 $generated@@630 $generated@@638))))
 :pattern ( ($generated@@87 $generated@@627 $generated@@638))
)))) (and (and ($generated@@138 $generated@@630 $generated@@627) (= $generated@@631 (+ $generated@@629 $generated@@625))) (and (= $generated@@623 $generated@@631) (= (ControlFlow 0 4) 2)))) $generated@@636))))))))))))
(let (($generated@@639  (=> (and (and (= $generated@@624 ($generated@@259 0)) (= $generated@@632 ($generated@@259 0))) (and (= $generated@@623 $generated@@632) (= (ControlFlow 0 3) 2))) $generated@@636)))
(let (($generated@@640  (=> (= $generated@@633 ($generated@@179 $generated@@143 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 3) $generated@@639) (=> (= (ControlFlow 0 9) 4) $generated@@637)))))
(let (($generated@@641  (=> (and (and (and ($generated@@265 $generated@@630) ($generated@@628 $generated@@630)) (and (not (= $generated@@634 $generated@@143)) (and ($generated@@149 $generated@@634 $generated@@236) ($generated@@80 $generated@@634 $generated@@236 $generated@@630)))) (and (and (= 0 $generated@@635) (<= ($generated@@259 0) $generated@@624)) (and (<= ($generated@@259 0) $generated@@625) (= (ControlFlow 0 10) 9)))) $generated@@640)))
$generated@@641))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@461 (Int) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@535 (T@U Int) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@656 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@74)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 11)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 12)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@76 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@76 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@73)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert  (and (and (forall (($generated@@147 T@U) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@73)
 :pattern ( ($generated@@143 $generated@@147))
)) (= (type $generated@@144) $generated@@87)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@73)
 :pattern ( ($generated@@145 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@73) (= (type $generated@@150) $generated@@87)) (and (not (= $generated@@150 $generated@@144)) (= ($generated@@145 $generated@@150) ($generated@@143 $generated@@149)))) ($generated@@146 ($generated@@8 ($generated@@142 $generated@@150)) $generated@@46))
 :pattern ( ($generated@@142 $generated@@150) ($generated@@143 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@153) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@151 $generated@@152 $generated@@153)) (forall (($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@87) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@152 $generated@@154) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@153 $generated@@154) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@153 $generated@@154) $generated@@60))
)))
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@73) (= (type $generated@@156) $generated@@87)) (= (type $generated@@157) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@156 ($generated@@143 $generated@@155) $generated@@157)  (or (= $generated@@156 $generated@@144) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@156 ($generated@@143 $generated@@155) $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@73))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@87) (= (type $generated@@160) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@144) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (= (type $generated@@161) $generated@@73))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@87) (= (type $generated@@163) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@162 $generated@@161 $generated@@163)  (or (= $generated@@162 $generated@@144) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@162 $generated@@161 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@73) (= (type $generated@@166) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@167) $generated@@87)) (and (and ($generated@@164 $generated@@166) (and (not (= $generated@@167 $generated@@144)) (= ($generated@@145 $generated@@167) ($generated@@143 $generated@@165)))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@166 $generated@@167) $generated@@60)))) ($generated@@84 ($generated@@8 ($generated@@142 $generated@@167)) $generated@@46 $generated@@166))
 :pattern ( ($generated@@142 $generated@@167) ($generated@@93 ($generated@@91 $generated@@166 $generated@@167) $generated@@60) ($generated@@143 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@146 $generated@@168 ($generated@@85 0)))
 :pattern ( ($generated@@146 $generated@@168 ($generated@@85 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@73)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@73) (= (type $generated@@172) $generated@@87)) (= (type $generated@@173) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@84 $generated@@172 ($generated@@143 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@84 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert ($generated@@174 $generated@@161))
(assert  (and (= ($generated@@1 $generated@@177) 14) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@73) (= (type $generated@@181) $generated@@73)) (= (type $generated@@182) $generated@@177)) ($generated@@146 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@146 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 15) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (= (type $generated@@191) $generated@@73))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@87) (=> (and (not (= $generated@@192 $generated@@144)) ($generated@@146 $generated@@192 $generated@@161)) ($generated@@146 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@146 $generated@@192 $generated@@161))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@73)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@86 $generated@@186 $generated@@2)) (= (type $generated@@197) $generated@@73)) ($generated@@146 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@146 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= (type $generated@@198) $generated@@87) (= ($generated@@146 $generated@@198 $generated@@161)  (or (= $generated@@198 $generated@@144) (= ($generated@@145 $generated@@198) $generated@@161))))
 :pattern ( ($generated@@146 $generated@@198 $generated@@161))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 16)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@201 $generated@@87 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@76 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@87) (= (type $generated@@249) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@250) ($generated@@75 $generated@@4))) (= (type $generated@@252) $generated@@87)) (= (type $generated@@253) ($generated@@75 $generated@@254))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@87) (= (type $generated@@256) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@255 $generated@@191 $generated@@256) ($generated@@84 $generated@@255 $generated@@158 $generated@@256)))
 :pattern ( ($generated@@84 $generated@@255 $generated@@191 $generated@@256))
)))
(assert (= (type $generated@@257) $generated@@73))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@87) (= (type $generated@@259) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@258 $generated@@257 $generated@@259) ($generated@@84 $generated@@258 $generated@@161 $generated@@259)))
 :pattern ( ($generated@@84 $generated@@258 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@177)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@73) (= (type $generated@@265) $generated@@73)) (= (type $generated@@266) $generated@@186)) (= (type $generated@@267) $generated@@186)) (= ($generated@@146 ($generated@@260 $generated@@266 $generated@@267) ($generated@@176 $generated@@264 $generated@@265))  (and ($generated@@261 $generated@@266 $generated@@264) ($generated@@261 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@146 ($generated@@260 $generated@@266 $generated@@267) ($generated@@176 $generated@@264 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@177) (= (type $generated@@269) $generated@@177)) (= ($generated@@183 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@183 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@73)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@273) $generated@@73)) (= ($generated@@146 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@186) ($generated@@0 ($generated@@91 $generated@@272 $generated@@274))) ($generated@@261 $generated@@274 $generated@@273))
 :pattern ( ($generated@@91 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@146 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@73)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@278) $generated@@73)) (= ($generated@@146 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@186) ($generated@@0 ($generated@@91 $generated@@277 $generated@@279))) ($generated@@261 $generated@@279 $generated@@278))
 :pattern ( ($generated@@91 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@146 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@73) (= (type $generated@@288) $generated@@73)) (= (type $generated@@289) $generated@@186)) (= (type $generated@@290) $generated@@186)) (= (type $generated@@291) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@164 $generated@@291)) (= ($generated@@84 ($generated@@260 $generated@@289 $generated@@290) ($generated@@176 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@84 ($generated@@260 $generated@@289 $generated@@290) ($generated@@176 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@77)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@177) (= ($generated@@175 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@175 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@177) ($generated@@175 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@186) (= (type $generated@@297) $generated@@186)) (= $generated@@295 ($generated@@260 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@175 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@73) (= (type $generated@@307) $generated@@87)) (= ($generated@@146 $generated@@307 ($generated@@169 $generated@@306))  (and ($generated@@146 $generated@@307 ($generated@@143 $generated@@306)) (not (= $generated@@307 $generated@@144)))))
 :pattern ( ($generated@@146 $generated@@307 ($generated@@169 $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@186)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@73) (= (type $generated@@312) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@286 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@84 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@286 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@314) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@315) $generated@@186)) (= (type $generated@@316) $generated@@73)) ($generated@@151 $generated@@313 $generated@@314)) ($generated@@286 $generated@@315 $generated@@316 $generated@@313)) ($generated@@286 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@151 $generated@@313 $generated@@314) ($generated@@286 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@318) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@320) $generated@@73)) ($generated@@151 $generated@@317 $generated@@318)) ($generated@@84 $generated@@319 $generated@@320 $generated@@317)) ($generated@@84 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@151 $generated@@317 $generated@@318) ($generated@@84 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@86 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@89 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@86 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@91 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@78)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@73) (and (= ($generated@@82 ($generated@@143 $generated@@329)) $generated@@61) (= ($generated@@327 ($generated@@143 $generated@@329)) $generated@@69)))
 :pattern ( ($generated@@143 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@73) (and (= ($generated@@82 ($generated@@169 $generated@@330)) $generated@@62) (= ($generated@@327 ($generated@@169 $generated@@330)) $generated@@69)))
 :pattern ( ($generated@@169 $generated@@330))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 18)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@86 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@91 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@91 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 19)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@86 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@91 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@91 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@89 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@86 $generated@@368 $generated@@2)) (= ($generated@@194 $generated@@367) (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@368) (and (<= 0 ($generated ($generated@@91 $generated@@367 $generated@@369))) (<= ($generated ($generated@@91 $generated@@367 $generated@@369)) ($generated@@321 $generated@@367))))
 :pattern ( ($generated@@91 $generated@@367 $generated@@369))
)))))
 :pattern ( ($generated@@194 $generated@@367))
)))
(assert (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@186) ($generated@@261 $generated@@373 $generated@@158)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@373)) $generated@@373) ($generated@@146 ($generated@@370 $generated@@87 $generated@@373) $generated@@158)))
 :pattern ( ($generated@@261 $generated@@373 $generated@@158))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@186) ($generated@@261 $generated@@374 $generated@@191)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@374)) $generated@@374) ($generated@@146 ($generated@@370 $generated@@87 $generated@@374) $generated@@191)))
 :pattern ( ($generated@@261 $generated@@374 $generated@@191))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@186) ($generated@@261 $generated@@375 $generated@@161)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@375)) $generated@@375) ($generated@@146 ($generated@@370 $generated@@87 $generated@@375) $generated@@161)))
 :pattern ( ($generated@@261 $generated@@375 $generated@@161))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@186) ($generated@@261 $generated@@376 $generated@@257)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@376)) $generated@@376) ($generated@@146 ($generated@@370 $generated@@87 $generated@@376) $generated@@257)))
 :pattern ( ($generated@@261 $generated@@376 $generated@@257))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@73) (= (type $generated@@378) $generated@@87)) (= ($generated@@146 $generated@@378 ($generated@@143 $generated@@377))  (or (= $generated@@378 $generated@@144) (= ($generated@@145 $generated@@378) ($generated@@143 $generated@@377)))))
 :pattern ( ($generated@@146 $generated@@378 ($generated@@143 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@87) (= ($generated@@146 $generated@@379 $generated@@191)  (and ($generated@@146 $generated@@379 $generated@@158) (not (= $generated@@379 $generated@@144)))))
 :pattern ( ($generated@@146 $generated@@379 $generated@@191))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@87) (= ($generated@@146 $generated@@380 $generated@@257)  (and ($generated@@146 $generated@@380 $generated@@161) (not (= $generated@@380 $generated@@144)))))
 :pattern ( ($generated@@146 $generated@@380 $generated@@257))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@335 (type $generated@@381))))
(let (($generated@@383 ($generated@@334 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@333 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@332 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@91 ($generated@@331 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@331 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@335 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@86 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@335 (type $generated@@388))))
(let (($generated@@390 ($generated@@334 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@333 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@332 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@91 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@353 (type $generated@@392))))
(let (($generated@@394 ($generated@@352 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@351 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@350 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@91 ($generated@@349 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@349 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@353 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@86 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@353 (type $generated@@399))))
(let (($generated@@401 ($generated@@352 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@351 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@350 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@91 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@86 $generated@@186 $generated@@2)) (= (type $generated@@404) $generated@@73)) (= ($generated@@146 $generated@@403 ($generated@@193 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@186) (< 0 ($generated ($generated@@91 $generated@@403 $generated@@405)))) ($generated@@261 $generated@@405 $generated@@404))
 :pattern ( ($generated@@91 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@146 $generated@@403 ($generated@@193 $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@407) $generated@@73)) (= (type $generated@@408) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@406 ($generated@@270 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@186) ($generated@@0 ($generated@@91 $generated@@406 $generated@@409))) ($generated@@286 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@91 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@84 $generated@@406 ($generated@@270 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@411) $generated@@73)) (= (type $generated@@412) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@410 ($generated@@275 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@186) ($generated@@0 ($generated@@91 $generated@@410 $generated@@413))) ($generated@@286 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@91 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@410 ($generated@@275 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@91 ($generated@@322 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@91 ($generated@@322 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@86 $generated@@186 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@335 (type $generated@@419))))
(let (($generated@@421 ($generated@@334 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@86 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@423) $generated@@186)) (= ($generated@@0 ($generated@@91 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@91 ($generated@@331 $generated@@422) ($generated@@184 ($generated@@370 $generated@@177 $generated@@423)))) (= ($generated@@91 ($generated@@417 $generated@@422) ($generated@@184 ($generated@@370 $generated@@177 $generated@@423))) ($generated@@185 ($generated@@370 $generated@@177 $generated@@423))))))
 :pattern ( ($generated@@91 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@86 $generated@@186 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@353 (type $generated@@427))))
(let (($generated@@429 ($generated@@352 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@86 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@431) $generated@@186)) (= ($generated@@0 ($generated@@91 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@91 ($generated@@349 $generated@@430) ($generated@@184 ($generated@@370 $generated@@177 $generated@@431)))) (= ($generated@@91 ($generated@@425 $generated@@430) ($generated@@184 ($generated@@370 $generated@@177 $generated@@431))) ($generated@@185 ($generated@@370 $generated@@177 $generated@@431))))))
 :pattern ( ($generated@@91 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@334 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@333 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@91 ($generated@@385 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@91 ($generated@@331 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@91 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@91 ($generated@@331 $generated@@432) $generated@@436))
 :pattern ( ($generated@@91 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@91 ($generated@@385 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@352 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@351 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@91 ($generated@@396 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@91 ($generated@@349 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@91 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@91 ($generated@@349 $generated@@437) $generated@@441))
 :pattern ( ($generated@@91 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@91 ($generated@@396 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@73)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) $generated@@73)) (= (type $generated@@448) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@331 $generated@@445) $generated@@449))) (and ($generated@@286 ($generated@@91 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@286 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@91 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@91 ($generated@@331 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@84 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@73)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@454) $generated@@73)) (= (type $generated@@455) $generated@@73)) (= (type $generated@@456) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@349 $generated@@453) $generated@@457))) (and ($generated@@286 ($generated@@91 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@286 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@91 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@91 ($generated@@349 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@84 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@458) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@459) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@460) ($generated@@86 $generated@@87 $generated@@88))) (not (= $generated@@458 $generated@@460))) (and ($generated@@151 $generated@@458 $generated@@459) ($generated@@151 $generated@@459 $generated@@460))) ($generated@@151 $generated@@458 $generated@@460))
 :pattern ( ($generated@@151 $generated@@458 $generated@@459) ($generated@@151 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 Int) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@75 $generated@@186))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 Int) ) (!  (=> (and (and (= (type $generated@@463) $generated@@73) (= (type $generated@@464) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@465) $generated@@87)) (=> (and (and (and ($generated@@164 $generated@@464) (and (not (= $generated@@465 $generated@@144)) (= ($generated@@145 $generated@@465) ($generated@@143 $generated@@463)))) (and (<= 0 $generated@@466) (< $generated@@466 ($generated@@142 $generated@@465)))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@464 $generated@@465) $generated@@60))) ($generated@@286 ($generated@@93 ($generated@@91 $generated@@464 $generated@@465) ($generated@@461 $generated@@466)) $generated@@463 $generated@@464)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@464 $generated@@465) ($generated@@461 $generated@@466)) ($generated@@143 $generated@@463))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@86 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@353 (type $generated@@469))))
(let (($generated@@471 ($generated@@352 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@351 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@350 $generated@@471 $generated@@470)) (= ($generated@@349 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@349 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@353 (type $generated@@472))))
(let (($generated@@474 ($generated@@352 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@351 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@350 $generated@@474 $generated@@473)) (= ($generated@@396 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@396 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@353 (type $generated@@475))))
(let (($generated@@477 ($generated@@352 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@351 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@350 $generated@@477 $generated@@476)) (= ($generated@@424 $generated@@475) ($generated@@467 $generated@@186))))))
 :pattern ( ($generated@@424 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@335 (type $generated@@478))))
(let (($generated@@480 ($generated@@334 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@333 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@332 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@186) (= (type $generated@@482) $generated@@186)) ($generated@@0 ($generated@@91 ($generated@@416 $generated@@478) ($generated@@308 ($generated@@260 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@416 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@353 (type $generated@@483))))
(let (($generated@@485 ($generated@@352 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@351 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@350 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@186) (= (type $generated@@487) $generated@@186)) ($generated@@0 ($generated@@91 ($generated@@424 $generated@@483) ($generated@@308 ($generated@@260 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@424 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@186) ($generated@@261 $generated@@488 $generated@@46)) (and (= ($generated@@308 ($generated@@370 $generated@@2 $generated@@488)) $generated@@488) ($generated@@146 ($generated@@370 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@261 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@186) ($generated@@261 $generated@@489 $generated@@47)) (and (= ($generated@@308 ($generated@@370 $generated@@3 $generated@@489)) $generated@@489) ($generated@@146 ($generated@@370 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@261 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@186) ($generated@@261 $generated@@490 $generated@@44)) (and (= ($generated@@308 ($generated@@370 $generated@@4 $generated@@490)) $generated@@490) ($generated@@146 ($generated@@370 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@261 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 20))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@186) ($generated@@261 $generated@@492 $generated@@45)) (and (= ($generated@@308 ($generated@@370 $generated@@491 $generated@@492)) $generated@@492) ($generated@@146 ($generated@@370 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@261 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@73) (= ($generated@@261 ($generated@@308 $generated@@493) $generated@@494) ($generated@@146 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@261 ($generated@@308 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@87) (<= 0 ($generated@@142 $generated@@495)))
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@89 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@86 $generated@@497 $generated@@2)) (<= 0 ($generated@@321 $generated@@496))))
 :pattern ( ($generated@@321 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@301 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@300 $generated@@499)) (<= 0 ($generated@@299 $generated@@498))))
 :pattern ( ($generated@@299 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@73)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@73) (= (type $generated@@503) $generated@@73)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@73)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@73) (= (type $generated@@507) $generated@@73)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@73) (= (type $generated@@509) $generated@@73)) (= ($generated@@82 ($generated@@442 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@73)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@73) (= (type $generated@@513) $generated@@73)) (= ($generated@@510 ($generated@@450 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@450 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@73)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@73) (= (type $generated@@517) $generated@@73)) (= ($generated@@514 ($generated@@450 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@450 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@73) (= (type $generated@@519) $generated@@73)) (= ($generated@@82 ($generated@@450 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@186) (= (type $generated@@521) $generated@@186)) (= ($generated@@292 ($generated@@260 $generated@@520 $generated@@521)) $generated@@63))
 :pattern ( ($generated@@260 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@73)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@73) (= (type $generated@@525) $generated@@73)) (= ($generated@@522 ($generated@@176 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@176 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@73)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@73) (= (type $generated@@529) $generated@@73)) (= ($generated@@526 ($generated@@176 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@176 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@186) (= (type $generated@@531) $generated@@186)) (= ($generated@@184 ($generated@@260 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@260 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@186) (= (type $generated@@533) $generated@@186)) (= ($generated@@185 ($generated@@260 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@260 $generated@@532 $generated@@533))
)))
(assert  (and (forall (($generated@@536 T@U) ) (! (= (type ($generated@@534 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@536))
)) (forall (($generated@@537 T@U) ($generated@@538 Int) ) (! (let (($generated@@539 ($generated@@301 (type $generated@@537))))
(= (type ($generated@@535 $generated@@537 $generated@@538)) $generated@@539))
 :pattern ( ($generated@@535 $generated@@537 $generated@@538))
))))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@300 $generated@@186)) (= (type $generated@@541) $generated@@73)) (= (type $generated@@542) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@540 ($generated@@534 $generated@@541) $generated@@542) (forall (($generated@@543 Int) ) (!  (=> (and (<= 0 $generated@@543) (< $generated@@543 ($generated@@299 $generated@@540))) ($generated@@286 ($generated@@535 $generated@@540 $generated@@543) $generated@@541 $generated@@542))
 :pattern ( ($generated@@535 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@84 $generated@@540 ($generated@@534 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@544 ($generated@@85 $generated@@545)) $generated@@545)
 :pattern ( ($generated@@85 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@73)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@546 ($generated@@270 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@270 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@82 ($generated@@270 $generated@@549)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@73)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@550 ($generated@@275 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@275 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@73) (= ($generated@@82 ($generated@@275 $generated@@553)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@73)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@73) (= ($generated@@554 ($generated@@193 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@193 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@73) (= ($generated@@82 ($generated@@193 $generated@@557)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@73)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@73) (= ($generated@@558 ($generated@@534 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@534 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@73) (= ($generated@@82 ($generated@@534 $generated@@561)) $generated@@57))
 :pattern ( ($generated@@534 $generated@@561))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@81 ($generated@@461 $generated@@562)) 1)
 :pattern ( ($generated@@461 $generated@@562))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@461 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@461 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@73)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@73) (= ($generated@@565 ($generated@@143 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@143 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@73)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@73) (= ($generated@@568 ($generated@@169 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@169 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@370 $generated@@572 ($generated@@308 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@308 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@73)) (= ($generated@@146 $generated@@573 ($generated@@442 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@331 $generated@@573) $generated@@576))) (and ($generated@@261 ($generated@@91 ($generated@@417 $generated@@573) $generated@@576) $generated@@575) ($generated@@261 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@91 ($generated@@417 $generated@@573) $generated@@576))
 :pattern ( ($generated@@91 ($generated@@331 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@146 $generated@@573 ($generated@@442 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@578) $generated@@73)) (= (type $generated@@579) $generated@@73)) (= ($generated@@146 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@349 $generated@@577) $generated@@580))) (and ($generated@@261 ($generated@@91 ($generated@@425 $generated@@577) $generated@@580) $generated@@579) ($generated@@261 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@91 ($generated@@425 $generated@@577) $generated@@580))
 :pattern ( ($generated@@91 ($generated@@349 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@146 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@73) (= (type $generated@@582) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@583) $generated@@87)) (and (and ($generated@@164 $generated@@582) (and (not (= $generated@@583 $generated@@144)) (= ($generated@@145 $generated@@583) ($generated@@143 $generated@@581)))) (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@142 $generated@@583))))) ($generated@@261 ($generated@@93 ($generated@@91 $generated@@582 $generated@@583) ($generated@@461 $generated@@584)) $generated@@581))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@582 $generated@@583) ($generated@@461 $generated@@584)) ($generated@@143 $generated@@581))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@186) (= (type $generated@@588) $generated@@186)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@260 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@260 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@186) (= (type $generated@@590) $generated@@186)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@260 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@260 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@186) (= (type $generated@@592) $generated@@73)) (= (type $generated@@593) $generated@@73)) ($generated@@261 $generated@@591 ($generated@@442 $generated@@592 $generated@@593))) (and (= ($generated@@308 ($generated@@370 ($generated@@333 $generated@@186 $generated@@186) $generated@@591)) $generated@@591) ($generated@@146 ($generated@@370 ($generated@@333 $generated@@186 $generated@@186) $generated@@591) ($generated@@442 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@261 $generated@@591 ($generated@@442 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@186) (= (type $generated@@595) $generated@@73)) (= (type $generated@@596) $generated@@73)) ($generated@@261 $generated@@594 ($generated@@450 $generated@@595 $generated@@596))) (and (= ($generated@@308 ($generated@@370 ($generated@@351 $generated@@186 $generated@@186) $generated@@594)) $generated@@594) ($generated@@146 ($generated@@370 ($generated@@351 $generated@@186 $generated@@186) $generated@@594) ($generated@@450 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@261 $generated@@594 ($generated@@450 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@73) (= (type $generated@@598) $generated@@73)) (= (type $generated@@599) $generated@@186)) ($generated@@261 $generated@@599 ($generated@@176 $generated@@597 $generated@@598))) (and (= ($generated@@308 ($generated@@370 $generated@@177 $generated@@599)) $generated@@599) ($generated@@146 ($generated@@370 $generated@@177 $generated@@599) ($generated@@176 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@261 $generated@@599 ($generated@@176 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@91 ($generated@@467 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@91 ($generated@@467 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@73) (= (type $generated@@603) $generated@@73)) (and (= ($generated@@82 ($generated@@176 $generated@@602 $generated@@603)) $generated@@64) (= ($generated@@327 ($generated@@176 $generated@@602 $generated@@603)) $generated@@70)))
 :pattern ( ($generated@@176 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@177) (= ($generated@@585 ($generated@@308 $generated@@604)) ($generated@@586 $generated@@604)))
 :pattern ( ($generated@@585 ($generated@@308 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@186) ($generated@@261 $generated@@605 ($generated@@85 0))) (and (= ($generated@@308 ($generated@@370 $generated@@2 $generated@@605)) $generated@@605) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@605) ($generated@@85 0))))
 :pattern ( ($generated@@261 $generated@@605 ($generated@@85 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@186) (= (type $generated@@607) $generated@@73)) ($generated@@261 $generated@@606 ($generated@@270 $generated@@607))) (and (= ($generated@@308 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@606)) $generated@@606) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@606) ($generated@@270 $generated@@607))))
 :pattern ( ($generated@@261 $generated@@606 ($generated@@270 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@186) (= (type $generated@@609) $generated@@73)) ($generated@@261 $generated@@608 ($generated@@275 $generated@@609))) (and (= ($generated@@308 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@608)) $generated@@608) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@608) ($generated@@275 $generated@@609))))
 :pattern ( ($generated@@261 $generated@@608 ($generated@@275 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@186) (= (type $generated@@611) $generated@@73)) ($generated@@261 $generated@@610 ($generated@@193 $generated@@611))) (and (= ($generated@@308 ($generated@@370 ($generated@@86 $generated@@186 $generated@@2) $generated@@610)) $generated@@610) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@2) $generated@@610) ($generated@@193 $generated@@611))))
 :pattern ( ($generated@@261 $generated@@610 ($generated@@193 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@186) (= (type $generated@@613) $generated@@73)) ($generated@@261 $generated@@612 ($generated@@534 $generated@@613))) (and (= ($generated@@308 ($generated@@370 ($generated@@300 $generated@@186) $generated@@612)) $generated@@612) ($generated@@146 ($generated@@370 ($generated@@300 $generated@@186) $generated@@612) ($generated@@534 $generated@@613))))
 :pattern ( ($generated@@261 $generated@@612 ($generated@@534 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@73) (= (type $generated@@615) $generated@@186)) ($generated@@261 $generated@@615 ($generated@@143 $generated@@614))) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@615)) $generated@@615) ($generated@@146 ($generated@@370 $generated@@87 $generated@@615) ($generated@@143 $generated@@614))))
 :pattern ( ($generated@@261 $generated@@615 ($generated@@143 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@73) (= (type $generated@@617) $generated@@186)) ($generated@@261 $generated@@617 ($generated@@169 $generated@@616))) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@617)) $generated@@617) ($generated@@146 ($generated@@370 $generated@@87 $generated@@617) ($generated@@169 $generated@@616))))
 :pattern ( ($generated@@261 $generated@@617 ($generated@@169 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@87) (= (type $generated@@619) ($generated@@86 $generated@@87 $generated@@88))) (and (not (= $generated@@618 $generated@@144)) ($generated@@84 $generated@@618 $generated@@161 $generated@@619))) ($generated@@84 $generated@@618 $generated@@191 $generated@@619))
 :pattern ( ($generated@@84 $generated@@618 $generated@@161 $generated@@619))
)))
(assert (= ($generated@@82 $generated@@158) $generated@@65))
(assert (= ($generated@@327 $generated@@158) $generated@@71))
(assert (= ($generated@@82 $generated@@191) $generated@@66))
(assert (= ($generated@@327 $generated@@191) $generated@@71))
(assert (= ($generated@@82 $generated@@161) $generated@@67))
(assert (= ($generated@@327 $generated@@161) $generated@@72))
(assert (= ($generated@@82 $generated@@257) $generated@@68))
(assert (= ($generated@@327 $generated@@257) $generated@@72))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@86 $generated@@186 $generated@@2)) (= (type $generated@@621) $generated@@73)) (= (type $generated@@622) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@620 ($generated@@193 $generated@@621) $generated@@622) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@186) (< 0 ($generated ($generated@@91 $generated@@620 $generated@@623)))) ($generated@@286 $generated@@623 $generated@@621 $generated@@622))
 :pattern ( ($generated@@91 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@84 $generated@@620 ($generated@@193 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@87) (= ($generated@@146 $generated@@624 $generated@@158)  (or (= $generated@@624 $generated@@144) ($generated@@174 ($generated@@145 $generated@@624)))))
 :pattern ( ($generated@@146 $generated@@624 $generated@@158))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@177) (= (type $generated@@626) $generated@@73)) (= (type $generated@@627) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@164 $generated@@627) (and ($generated@@175 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@73) ($generated@@84 $generated@@625 ($generated@@176 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@84 $generated@@625 ($generated@@176 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@286 ($generated@@184 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@286 ($generated@@184 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@177) (= (type $generated@@630) $generated@@73)) (= (type $generated@@631) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@164 $generated@@631) (and ($generated@@175 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@73) ($generated@@84 $generated@@629 ($generated@@176 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@84 $generated@@629 ($generated@@176 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@286 ($generated@@185 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@286 ($generated@@185 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@186) (= (type $generated@@634) $generated@@186)) (= ($generated@@260 ($generated@@282 $generated@@633) ($generated@@282 $generated@@634)) ($generated@@282 ($generated@@260 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@633) ($generated@@282 $generated@@634)))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@280 $generated@@635))) ($generated@@282 ($generated@@308 ($generated@@8 $generated@@635))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@280 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ) (! (= ($generated@@308 ($generated@@282 $generated@@636)) ($generated@@282 ($generated@@308 $generated@@636)))
 :pattern ( ($generated@@308 ($generated@@282 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@301 (type $generated@@637))))
 (=> (and (= (type $generated@@637) ($generated@@300 $generated@@638)) (= ($generated@@299 $generated@@637) 0)) (= $generated@@637 ($generated@@298 $generated@@638))))
 :pattern ( ($generated@@299 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@640)))
 (=> (and (and (= (type $generated@@639) ($generated@@86 $generated@@642 $generated@@2)) (= (type $generated@@641) $generated@@2)) (<= 0 ($generated $generated@@641))) (= ($generated@@321 ($generated@@92 $generated@@639 $generated@@640 $generated@@641)) (+ (- ($generated@@321 $generated@@639) ($generated ($generated@@91 $generated@@639 $generated@@640))) ($generated $generated@@641)))))
 :pattern ( ($generated@@321 ($generated@@92 $generated@@639 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@644) $generated@@2)) ($generated@@84 $generated@@644 $generated@@46 $generated@@643))
 :pattern ( ($generated@@84 $generated@@644 $generated@@46 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@646) $generated@@3)) ($generated@@84 $generated@@646 $generated@@47 $generated@@645))
 :pattern ( ($generated@@84 $generated@@646 $generated@@47 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@648) $generated@@4)) ($generated@@84 $generated@@648 $generated@@44 $generated@@647))
 :pattern ( ($generated@@84 $generated@@648 $generated@@44 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@650) $generated@@491)) ($generated@@84 $generated@@650 $generated@@45 $generated@@649))
 :pattern ( ($generated@@84 $generated@@650 $generated@@45 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@652) $generated@@186)) ($generated@@84 $generated@@652 $generated@@48 $generated@@651))
 :pattern ( ($generated@@84 $generated@@652 $generated@@48 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@300 $generated@@186)) (= (type $generated@@654) $generated@@73)) (= ($generated@@146 $generated@@653 ($generated@@534 $generated@@654)) (forall (($generated@@655 Int) ) (!  (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@299 $generated@@653))) ($generated@@261 ($generated@@535 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@535 $generated@@653 $generated@@655))
))))
 :pattern ( ($generated@@146 $generated@@653 ($generated@@534 $generated@@654)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 Int) ) (!  (=> (= (type $generated@@657) ($generated@@300 $generated@@186)) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@299 $generated@@657))) (< ($generated@@586 ($generated@@370 $generated@@177 ($generated@@535 $generated@@657 $generated@@658))) ($generated@@656 $generated@@657))))
 :pattern ( ($generated@@586 ($generated@@370 $generated@@177 ($generated@@535 $generated@@657 $generated@@658))))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@660) $generated@@73)) (= (type $generated@@661) $generated@@73)) ($generated@@146 $generated@@659 ($generated@@442 $generated@@660 $generated@@661))) (and (and ($generated@@146 ($generated@@331 $generated@@659) ($generated@@270 $generated@@660)) ($generated@@146 ($generated@@385 $generated@@659) ($generated@@270 $generated@@661))) ($generated@@146 ($generated@@416 $generated@@659) ($generated@@270 ($generated@@176 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@146 $generated@@659 ($generated@@442 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@663) $generated@@73)) (= (type $generated@@664) $generated@@73)) ($generated@@146 $generated@@662 ($generated@@450 $generated@@663 $generated@@664))) (and (and ($generated@@146 ($generated@@349 $generated@@662) ($generated@@275 $generated@@663)) ($generated@@146 ($generated@@396 $generated@@662) ($generated@@275 $generated@@664))) ($generated@@146 ($generated@@424 $generated@@662) ($generated@@275 ($generated@@176 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@146 $generated@@662 ($generated@@450 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@2) ($generated@@146 $generated@@665 $generated@@46))
 :pattern ( ($generated@@146 $generated@@665 $generated@@46))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@3) ($generated@@146 $generated@@666 $generated@@47))
 :pattern ( ($generated@@146 $generated@@666 $generated@@47))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@4) ($generated@@146 $generated@@667 $generated@@44))
 :pattern ( ($generated@@146 $generated@@667 $generated@@44))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@491) ($generated@@146 $generated@@668 $generated@@45))
 :pattern ( ($generated@@146 $generated@@668 $generated@@45))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@186) ($generated@@146 $generated@@669 $generated@@48))
 :pattern ( ($generated@@146 $generated@@669 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 (T@U) Bool)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(assert  (and (and (and (= (type $generated@@670) ($generated@@201 $generated@@87 $generated@@4)) (= (type $generated@@671) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@672) $generated@@87)) (= (type $generated@@674) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@676  (=> (= $generated@@670 ($generated@@200 $generated@@144 $generated@@671 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@672 $generated@@144))) (=> (not (= $generated@@672 $generated@@144)) (=> (= ($generated@@142 $generated@@672) ($generated@@280 2)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@672 $generated@@144))) (=> (not (= $generated@@672 $generated@@144)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@280 0)) (< ($generated@@280 0) ($generated@@142 $generated@@672)))) (=> (and (<= 0 ($generated@@280 0)) (< ($generated@@280 0) ($generated@@142 $generated@@672))) (=> (= ($generated ($generated@@370 $generated@@2 ($generated@@93 ($generated@@91 $generated@@671 $generated@@672) ($generated@@461 ($generated@@280 0))))) ($generated@@280 1)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@672 $generated@@144))) (=> (not (= $generated@@672 $generated@@144)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 ($generated@@280 1)) (< ($generated@@280 1) ($generated@@142 $generated@@672)))))))))))))))))
(let (($generated@@677  (=> (and (and (and ($generated@@164 $generated@@671) ($generated@@673 $generated@@671)) (and (not (= $generated@@674 $generated@@144)) (and ($generated@@146 $generated@@674 $generated@@257) ($generated@@84 $generated@@674 $generated@@257 $generated@@671)))) (and (and ($generated@@146 $generated@@672 ($generated@@169 $generated@@46)) ($generated@@84 $generated@@672 ($generated@@169 $generated@@46) $generated@@671)) (and (= 2 $generated@@675) (= (ControlFlow 0 7) 2)))) $generated@@676)))
$generated@@677)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@461 (Int) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@535 (T@U Int) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@604 (Int Int) Int)
(declare-fun $generated@@659 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@74)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 11)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 12)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@76 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@76 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@73)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert  (and (and (forall (($generated@@147 T@U) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@73)
 :pattern ( ($generated@@143 $generated@@147))
)) (= (type $generated@@144) $generated@@87)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@73)
 :pattern ( ($generated@@145 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@73) (= (type $generated@@150) $generated@@87)) (and (not (= $generated@@150 $generated@@144)) (= ($generated@@145 $generated@@150) ($generated@@143 $generated@@149)))) ($generated@@146 ($generated@@8 ($generated@@142 $generated@@150)) $generated@@46))
 :pattern ( ($generated@@142 $generated@@150) ($generated@@143 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@153) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@151 $generated@@152 $generated@@153)) (forall (($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@87) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@152 $generated@@154) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@153 $generated@@154) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@153 $generated@@154) $generated@@60))
)))
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@73) (= (type $generated@@156) $generated@@87)) (= (type $generated@@157) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@156 ($generated@@143 $generated@@155) $generated@@157)  (or (= $generated@@156 $generated@@144) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@156 ($generated@@143 $generated@@155) $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@73))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@87) (= (type $generated@@160) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@144) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (= (type $generated@@161) $generated@@73))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@87) (= (type $generated@@163) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@162 $generated@@161 $generated@@163)  (or (= $generated@@162 $generated@@144) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@162 $generated@@161 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@73) (= (type $generated@@166) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@167) $generated@@87)) (and (and ($generated@@164 $generated@@166) (and (not (= $generated@@167 $generated@@144)) (= ($generated@@145 $generated@@167) ($generated@@143 $generated@@165)))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@166 $generated@@167) $generated@@60)))) ($generated@@84 ($generated@@8 ($generated@@142 $generated@@167)) $generated@@46 $generated@@166))
 :pattern ( ($generated@@142 $generated@@167) ($generated@@93 ($generated@@91 $generated@@166 $generated@@167) $generated@@60) ($generated@@143 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@146 $generated@@168 ($generated@@85 0)))
 :pattern ( ($generated@@146 $generated@@168 ($generated@@85 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@73)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@73) (= (type $generated@@172) $generated@@87)) (= (type $generated@@173) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@84 $generated@@172 ($generated@@143 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@84 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert ($generated@@174 $generated@@161))
(assert  (and (= ($generated@@1 $generated@@177) 14) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@73) (= (type $generated@@181) $generated@@73)) (= (type $generated@@182) $generated@@177)) ($generated@@146 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@146 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 15) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (= (type $generated@@191) $generated@@73))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@87) (=> (and (not (= $generated@@192 $generated@@144)) ($generated@@146 $generated@@192 $generated@@161)) ($generated@@146 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@146 $generated@@192 $generated@@161))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@73)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@86 $generated@@186 $generated@@2)) (= (type $generated@@197) $generated@@73)) ($generated@@146 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@146 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= (type $generated@@198) $generated@@87) (= ($generated@@146 $generated@@198 $generated@@161)  (or (= $generated@@198 $generated@@144) (= ($generated@@145 $generated@@198) $generated@@161))))
 :pattern ( ($generated@@146 $generated@@198 $generated@@161))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 16)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@201 $generated@@87 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@76 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@87) (= (type $generated@@249) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@250) ($generated@@75 $generated@@4))) (= (type $generated@@252) $generated@@87)) (= (type $generated@@253) ($generated@@75 $generated@@254))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@87) (= (type $generated@@256) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@255 $generated@@191 $generated@@256) ($generated@@84 $generated@@255 $generated@@158 $generated@@256)))
 :pattern ( ($generated@@84 $generated@@255 $generated@@191 $generated@@256))
)))
(assert (= (type $generated@@257) $generated@@73))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@87) (= (type $generated@@259) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@258 $generated@@257 $generated@@259) ($generated@@84 $generated@@258 $generated@@161 $generated@@259)))
 :pattern ( ($generated@@84 $generated@@258 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@177)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@73) (= (type $generated@@265) $generated@@73)) (= (type $generated@@266) $generated@@186)) (= (type $generated@@267) $generated@@186)) (= ($generated@@146 ($generated@@260 $generated@@266 $generated@@267) ($generated@@176 $generated@@264 $generated@@265))  (and ($generated@@261 $generated@@266 $generated@@264) ($generated@@261 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@146 ($generated@@260 $generated@@266 $generated@@267) ($generated@@176 $generated@@264 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@177) (= (type $generated@@269) $generated@@177)) (= ($generated@@183 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@183 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@73)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@273) $generated@@73)) (= ($generated@@146 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@186) ($generated@@0 ($generated@@91 $generated@@272 $generated@@274))) ($generated@@261 $generated@@274 $generated@@273))
 :pattern ( ($generated@@91 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@146 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@73)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@278) $generated@@73)) (= ($generated@@146 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@186) ($generated@@0 ($generated@@91 $generated@@277 $generated@@279))) ($generated@@261 $generated@@279 $generated@@278))
 :pattern ( ($generated@@91 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@146 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@73) (= (type $generated@@288) $generated@@73)) (= (type $generated@@289) $generated@@186)) (= (type $generated@@290) $generated@@186)) (= (type $generated@@291) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@164 $generated@@291)) (= ($generated@@84 ($generated@@260 $generated@@289 $generated@@290) ($generated@@176 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@84 ($generated@@260 $generated@@289 $generated@@290) ($generated@@176 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@77)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@177) (= ($generated@@175 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@175 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@177) ($generated@@175 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@186) (= (type $generated@@297) $generated@@186)) (= $generated@@295 ($generated@@260 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@175 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@73) (= (type $generated@@307) $generated@@87)) (= ($generated@@146 $generated@@307 ($generated@@169 $generated@@306))  (and ($generated@@146 $generated@@307 ($generated@@143 $generated@@306)) (not (= $generated@@307 $generated@@144)))))
 :pattern ( ($generated@@146 $generated@@307 ($generated@@169 $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@186)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@73) (= (type $generated@@312) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@286 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@84 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@286 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@314) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@315) $generated@@186)) (= (type $generated@@316) $generated@@73)) ($generated@@151 $generated@@313 $generated@@314)) ($generated@@286 $generated@@315 $generated@@316 $generated@@313)) ($generated@@286 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@151 $generated@@313 $generated@@314) ($generated@@286 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@318) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@320) $generated@@73)) ($generated@@151 $generated@@317 $generated@@318)) ($generated@@84 $generated@@319 $generated@@320 $generated@@317)) ($generated@@84 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@151 $generated@@317 $generated@@318) ($generated@@84 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@86 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@89 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@86 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@91 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@78)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@73) (and (= ($generated@@82 ($generated@@143 $generated@@329)) $generated@@61) (= ($generated@@327 ($generated@@143 $generated@@329)) $generated@@69)))
 :pattern ( ($generated@@143 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@73) (and (= ($generated@@82 ($generated@@169 $generated@@330)) $generated@@62) (= ($generated@@327 ($generated@@169 $generated@@330)) $generated@@69)))
 :pattern ( ($generated@@169 $generated@@330))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 18)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@86 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@91 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@91 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 19)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@86 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@91 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@91 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@89 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@86 $generated@@368 $generated@@2)) (= ($generated@@194 $generated@@367) (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@368) (and (<= 0 ($generated ($generated@@91 $generated@@367 $generated@@369))) (<= ($generated ($generated@@91 $generated@@367 $generated@@369)) ($generated@@321 $generated@@367))))
 :pattern ( ($generated@@91 $generated@@367 $generated@@369))
)))))
 :pattern ( ($generated@@194 $generated@@367))
)))
(assert (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@186) ($generated@@261 $generated@@373 $generated@@158)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@373)) $generated@@373) ($generated@@146 ($generated@@370 $generated@@87 $generated@@373) $generated@@158)))
 :pattern ( ($generated@@261 $generated@@373 $generated@@158))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@186) ($generated@@261 $generated@@374 $generated@@191)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@374)) $generated@@374) ($generated@@146 ($generated@@370 $generated@@87 $generated@@374) $generated@@191)))
 :pattern ( ($generated@@261 $generated@@374 $generated@@191))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@186) ($generated@@261 $generated@@375 $generated@@161)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@375)) $generated@@375) ($generated@@146 ($generated@@370 $generated@@87 $generated@@375) $generated@@161)))
 :pattern ( ($generated@@261 $generated@@375 $generated@@161))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@186) ($generated@@261 $generated@@376 $generated@@257)) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@376)) $generated@@376) ($generated@@146 ($generated@@370 $generated@@87 $generated@@376) $generated@@257)))
 :pattern ( ($generated@@261 $generated@@376 $generated@@257))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@73) (= (type $generated@@378) $generated@@87)) (= ($generated@@146 $generated@@378 ($generated@@143 $generated@@377))  (or (= $generated@@378 $generated@@144) (= ($generated@@145 $generated@@378) ($generated@@143 $generated@@377)))))
 :pattern ( ($generated@@146 $generated@@378 ($generated@@143 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@87) (= ($generated@@146 $generated@@379 $generated@@191)  (and ($generated@@146 $generated@@379 $generated@@158) (not (= $generated@@379 $generated@@144)))))
 :pattern ( ($generated@@146 $generated@@379 $generated@@191))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@87) (= ($generated@@146 $generated@@380 $generated@@257)  (and ($generated@@146 $generated@@380 $generated@@161) (not (= $generated@@380 $generated@@144)))))
 :pattern ( ($generated@@146 $generated@@380 $generated@@257))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@335 (type $generated@@381))))
(let (($generated@@383 ($generated@@334 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@333 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@332 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@91 ($generated@@331 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@331 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@335 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@86 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@335 (type $generated@@388))))
(let (($generated@@390 ($generated@@334 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@333 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@332 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@91 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@353 (type $generated@@392))))
(let (($generated@@394 ($generated@@352 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@351 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@350 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@91 ($generated@@349 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@349 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@353 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@86 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@353 (type $generated@@399))))
(let (($generated@@401 ($generated@@352 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@351 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@350 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@91 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@86 $generated@@186 $generated@@2)) (= (type $generated@@404) $generated@@73)) (= ($generated@@146 $generated@@403 ($generated@@193 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@186) (< 0 ($generated ($generated@@91 $generated@@403 $generated@@405)))) ($generated@@261 $generated@@405 $generated@@404))
 :pattern ( ($generated@@91 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@146 $generated@@403 ($generated@@193 $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@407) $generated@@73)) (= (type $generated@@408) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@406 ($generated@@270 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@186) ($generated@@0 ($generated@@91 $generated@@406 $generated@@409))) ($generated@@286 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@91 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@84 $generated@@406 ($generated@@270 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@86 $generated@@186 $generated@@4)) (= (type $generated@@411) $generated@@73)) (= (type $generated@@412) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@410 ($generated@@275 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@186) ($generated@@0 ($generated@@91 $generated@@410 $generated@@413))) ($generated@@286 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@91 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@410 ($generated@@275 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@91 ($generated@@322 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@91 ($generated@@322 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@86 $generated@@186 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@335 (type $generated@@419))))
(let (($generated@@421 ($generated@@334 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@86 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@423) $generated@@186)) (= ($generated@@0 ($generated@@91 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@91 ($generated@@331 $generated@@422) ($generated@@184 ($generated@@370 $generated@@177 $generated@@423)))) (= ($generated@@91 ($generated@@417 $generated@@422) ($generated@@184 ($generated@@370 $generated@@177 $generated@@423))) ($generated@@185 ($generated@@370 $generated@@177 $generated@@423))))))
 :pattern ( ($generated@@91 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@86 $generated@@186 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@353 (type $generated@@427))))
(let (($generated@@429 ($generated@@352 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@86 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@431) $generated@@186)) (= ($generated@@0 ($generated@@91 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@91 ($generated@@349 $generated@@430) ($generated@@184 ($generated@@370 $generated@@177 $generated@@431)))) (= ($generated@@91 ($generated@@425 $generated@@430) ($generated@@184 ($generated@@370 $generated@@177 $generated@@431))) ($generated@@185 ($generated@@370 $generated@@177 $generated@@431))))))
 :pattern ( ($generated@@91 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@334 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@333 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@91 ($generated@@385 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@91 ($generated@@331 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@91 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@91 ($generated@@331 $generated@@432) $generated@@436))
 :pattern ( ($generated@@91 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@91 ($generated@@385 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@352 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@351 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@91 ($generated@@396 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@91 ($generated@@349 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@91 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@91 ($generated@@349 $generated@@437) $generated@@441))
 :pattern ( ($generated@@91 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@91 ($generated@@396 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@73)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) $generated@@73)) (= (type $generated@@448) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@331 $generated@@445) $generated@@449))) (and ($generated@@286 ($generated@@91 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@286 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@91 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@91 ($generated@@331 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@84 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@73)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@454) $generated@@73)) (= (type $generated@@455) $generated@@73)) (= (type $generated@@456) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@349 $generated@@453) $generated@@457))) (and ($generated@@286 ($generated@@91 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@286 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@91 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@91 ($generated@@349 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@84 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@458) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@459) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@460) ($generated@@86 $generated@@87 $generated@@88))) (not (= $generated@@458 $generated@@460))) (and ($generated@@151 $generated@@458 $generated@@459) ($generated@@151 $generated@@459 $generated@@460))) ($generated@@151 $generated@@458 $generated@@460))
 :pattern ( ($generated@@151 $generated@@458 $generated@@459) ($generated@@151 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 Int) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@75 $generated@@186))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 Int) ) (!  (=> (and (and (= (type $generated@@463) $generated@@73) (= (type $generated@@464) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@465) $generated@@87)) (=> (and (and (and ($generated@@164 $generated@@464) (and (not (= $generated@@465 $generated@@144)) (= ($generated@@145 $generated@@465) ($generated@@143 $generated@@463)))) (and (<= 0 $generated@@466) (< $generated@@466 ($generated@@142 $generated@@465)))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@464 $generated@@465) $generated@@60))) ($generated@@286 ($generated@@93 ($generated@@91 $generated@@464 $generated@@465) ($generated@@461 $generated@@466)) $generated@@463 $generated@@464)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@464 $generated@@465) ($generated@@461 $generated@@466)) ($generated@@143 $generated@@463))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@86 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@353 (type $generated@@469))))
(let (($generated@@471 ($generated@@352 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@351 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@350 $generated@@471 $generated@@470)) (= ($generated@@349 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@349 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@353 (type $generated@@472))))
(let (($generated@@474 ($generated@@352 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@351 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@350 $generated@@474 $generated@@473)) (= ($generated@@396 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@396 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@353 (type $generated@@475))))
(let (($generated@@477 ($generated@@352 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@351 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@350 $generated@@477 $generated@@476)) (= ($generated@@424 $generated@@475) ($generated@@467 $generated@@186))))))
 :pattern ( ($generated@@424 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@335 (type $generated@@478))))
(let (($generated@@480 ($generated@@334 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@333 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@332 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@186) (= (type $generated@@482) $generated@@186)) ($generated@@0 ($generated@@91 ($generated@@416 $generated@@478) ($generated@@308 ($generated@@260 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@416 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@353 (type $generated@@483))))
(let (($generated@@485 ($generated@@352 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@351 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@350 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@186) (= (type $generated@@487) $generated@@186)) ($generated@@0 ($generated@@91 ($generated@@424 $generated@@483) ($generated@@308 ($generated@@260 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@424 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@186) ($generated@@261 $generated@@488 $generated@@46)) (and (= ($generated@@308 ($generated@@370 $generated@@2 $generated@@488)) $generated@@488) ($generated@@146 ($generated@@370 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@261 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@186) ($generated@@261 $generated@@489 $generated@@47)) (and (= ($generated@@308 ($generated@@370 $generated@@3 $generated@@489)) $generated@@489) ($generated@@146 ($generated@@370 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@261 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@186) ($generated@@261 $generated@@490 $generated@@44)) (and (= ($generated@@308 ($generated@@370 $generated@@4 $generated@@490)) $generated@@490) ($generated@@146 ($generated@@370 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@261 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 20))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@186) ($generated@@261 $generated@@492 $generated@@45)) (and (= ($generated@@308 ($generated@@370 $generated@@491 $generated@@492)) $generated@@492) ($generated@@146 ($generated@@370 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@261 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@73) (= ($generated@@261 ($generated@@308 $generated@@493) $generated@@494) ($generated@@146 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@261 ($generated@@308 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@87) (<= 0 ($generated@@142 $generated@@495)))
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@89 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@86 $generated@@497 $generated@@2)) (<= 0 ($generated@@321 $generated@@496))))
 :pattern ( ($generated@@321 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@301 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@300 $generated@@499)) (<= 0 ($generated@@299 $generated@@498))))
 :pattern ( ($generated@@299 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@73)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@73) (= (type $generated@@503) $generated@@73)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@73)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@73) (= (type $generated@@507) $generated@@73)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@73) (= (type $generated@@509) $generated@@73)) (= ($generated@@82 ($generated@@442 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@73)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@73) (= (type $generated@@513) $generated@@73)) (= ($generated@@510 ($generated@@450 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@450 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@73)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@73) (= (type $generated@@517) $generated@@73)) (= ($generated@@514 ($generated@@450 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@450 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@73) (= (type $generated@@519) $generated@@73)) (= ($generated@@82 ($generated@@450 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@186) (= (type $generated@@521) $generated@@186)) (= ($generated@@292 ($generated@@260 $generated@@520 $generated@@521)) $generated@@63))
 :pattern ( ($generated@@260 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@73)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@73) (= (type $generated@@525) $generated@@73)) (= ($generated@@522 ($generated@@176 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@176 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@73)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@73) (= (type $generated@@529) $generated@@73)) (= ($generated@@526 ($generated@@176 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@176 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@186) (= (type $generated@@531) $generated@@186)) (= ($generated@@184 ($generated@@260 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@260 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@186) (= (type $generated@@533) $generated@@186)) (= ($generated@@185 ($generated@@260 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@260 $generated@@532 $generated@@533))
)))
(assert  (and (forall (($generated@@536 T@U) ) (! (= (type ($generated@@534 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@536))
)) (forall (($generated@@537 T@U) ($generated@@538 Int) ) (! (let (($generated@@539 ($generated@@301 (type $generated@@537))))
(= (type ($generated@@535 $generated@@537 $generated@@538)) $generated@@539))
 :pattern ( ($generated@@535 $generated@@537 $generated@@538))
))))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@300 $generated@@186)) (= (type $generated@@541) $generated@@73)) (= (type $generated@@542) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@540 ($generated@@534 $generated@@541) $generated@@542) (forall (($generated@@543 Int) ) (!  (=> (and (<= 0 $generated@@543) (< $generated@@543 ($generated@@299 $generated@@540))) ($generated@@286 ($generated@@535 $generated@@540 $generated@@543) $generated@@541 $generated@@542))
 :pattern ( ($generated@@535 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@84 $generated@@540 ($generated@@534 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@544 ($generated@@85 $generated@@545)) $generated@@545)
 :pattern ( ($generated@@85 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@73)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@546 ($generated@@270 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@270 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@82 ($generated@@270 $generated@@549)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@73)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@550 ($generated@@275 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@275 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@73) (= ($generated@@82 ($generated@@275 $generated@@553)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@73)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@73) (= ($generated@@554 ($generated@@193 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@193 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@73) (= ($generated@@82 ($generated@@193 $generated@@557)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@73)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@73) (= ($generated@@558 ($generated@@534 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@534 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@73) (= ($generated@@82 ($generated@@534 $generated@@561)) $generated@@57))
 :pattern ( ($generated@@534 $generated@@561))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@81 ($generated@@461 $generated@@562)) 1)
 :pattern ( ($generated@@461 $generated@@562))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@461 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@461 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@73)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@73) (= ($generated@@565 ($generated@@143 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@143 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@73)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@73) (= ($generated@@568 ($generated@@169 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@169 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@370 $generated@@572 ($generated@@308 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@308 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@73)) (= ($generated@@146 $generated@@573 ($generated@@442 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@331 $generated@@573) $generated@@576))) (and ($generated@@261 ($generated@@91 ($generated@@417 $generated@@573) $generated@@576) $generated@@575) ($generated@@261 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@91 ($generated@@417 $generated@@573) $generated@@576))
 :pattern ( ($generated@@91 ($generated@@331 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@146 $generated@@573 ($generated@@442 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@578) $generated@@73)) (= (type $generated@@579) $generated@@73)) (= ($generated@@146 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@186) ($generated@@0 ($generated@@91 ($generated@@349 $generated@@577) $generated@@580))) (and ($generated@@261 ($generated@@91 ($generated@@425 $generated@@577) $generated@@580) $generated@@579) ($generated@@261 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@91 ($generated@@425 $generated@@577) $generated@@580))
 :pattern ( ($generated@@91 ($generated@@349 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@146 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@73) (= (type $generated@@582) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@583) $generated@@87)) (and (and ($generated@@164 $generated@@582) (and (not (= $generated@@583 $generated@@144)) (= ($generated@@145 $generated@@583) ($generated@@143 $generated@@581)))) (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@142 $generated@@583))))) ($generated@@261 ($generated@@93 ($generated@@91 $generated@@582 $generated@@583) ($generated@@461 $generated@@584)) $generated@@581))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@582 $generated@@583) ($generated@@461 $generated@@584)) ($generated@@143 $generated@@581))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@186) (= (type $generated@@588) $generated@@186)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@260 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@260 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@186) (= (type $generated@@590) $generated@@186)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@260 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@260 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@186) (= (type $generated@@592) $generated@@73)) (= (type $generated@@593) $generated@@73)) ($generated@@261 $generated@@591 ($generated@@442 $generated@@592 $generated@@593))) (and (= ($generated@@308 ($generated@@370 ($generated@@333 $generated@@186 $generated@@186) $generated@@591)) $generated@@591) ($generated@@146 ($generated@@370 ($generated@@333 $generated@@186 $generated@@186) $generated@@591) ($generated@@442 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@261 $generated@@591 ($generated@@442 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@186) (= (type $generated@@595) $generated@@73)) (= (type $generated@@596) $generated@@73)) ($generated@@261 $generated@@594 ($generated@@450 $generated@@595 $generated@@596))) (and (= ($generated@@308 ($generated@@370 ($generated@@351 $generated@@186 $generated@@186) $generated@@594)) $generated@@594) ($generated@@146 ($generated@@370 ($generated@@351 $generated@@186 $generated@@186) $generated@@594) ($generated@@450 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@261 $generated@@594 ($generated@@450 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@73) (= (type $generated@@598) $generated@@73)) (= (type $generated@@599) $generated@@186)) ($generated@@261 $generated@@599 ($generated@@176 $generated@@597 $generated@@598))) (and (= ($generated@@308 ($generated@@370 $generated@@177 $generated@@599)) $generated@@599) ($generated@@146 ($generated@@370 $generated@@177 $generated@@599) ($generated@@176 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@261 $generated@@599 ($generated@@176 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@91 ($generated@@467 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@91 ($generated@@467 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@73) (= (type $generated@@603) $generated@@73)) (and (= ($generated@@82 ($generated@@176 $generated@@602 $generated@@603)) $generated@@64) (= ($generated@@327 ($generated@@176 $generated@@602 $generated@@603)) $generated@@70)))
 :pattern ( ($generated@@176 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 Int) ($generated@@606 Int) ) (! (= ($generated@@604 $generated@@605 $generated@@606) (* $generated@@605 $generated@@606))
 :pattern ( ($generated@@604 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@177) (= ($generated@@585 ($generated@@308 $generated@@607)) ($generated@@586 $generated@@607)))
 :pattern ( ($generated@@585 ($generated@@308 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@186) ($generated@@261 $generated@@608 ($generated@@85 0))) (and (= ($generated@@308 ($generated@@370 $generated@@2 $generated@@608)) $generated@@608) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@608) ($generated@@85 0))))
 :pattern ( ($generated@@261 $generated@@608 ($generated@@85 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@186) (= (type $generated@@610) $generated@@73)) ($generated@@261 $generated@@609 ($generated@@270 $generated@@610))) (and (= ($generated@@308 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@609)) $generated@@609) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@609) ($generated@@270 $generated@@610))))
 :pattern ( ($generated@@261 $generated@@609 ($generated@@270 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@186) (= (type $generated@@612) $generated@@73)) ($generated@@261 $generated@@611 ($generated@@275 $generated@@612))) (and (= ($generated@@308 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@611)) $generated@@611) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@4) $generated@@611) ($generated@@275 $generated@@612))))
 :pattern ( ($generated@@261 $generated@@611 ($generated@@275 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@186) (= (type $generated@@614) $generated@@73)) ($generated@@261 $generated@@613 ($generated@@193 $generated@@614))) (and (= ($generated@@308 ($generated@@370 ($generated@@86 $generated@@186 $generated@@2) $generated@@613)) $generated@@613) ($generated@@146 ($generated@@370 ($generated@@86 $generated@@186 $generated@@2) $generated@@613) ($generated@@193 $generated@@614))))
 :pattern ( ($generated@@261 $generated@@613 ($generated@@193 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@186) (= (type $generated@@616) $generated@@73)) ($generated@@261 $generated@@615 ($generated@@534 $generated@@616))) (and (= ($generated@@308 ($generated@@370 ($generated@@300 $generated@@186) $generated@@615)) $generated@@615) ($generated@@146 ($generated@@370 ($generated@@300 $generated@@186) $generated@@615) ($generated@@534 $generated@@616))))
 :pattern ( ($generated@@261 $generated@@615 ($generated@@534 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@73) (= (type $generated@@618) $generated@@186)) ($generated@@261 $generated@@618 ($generated@@143 $generated@@617))) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@618)) $generated@@618) ($generated@@146 ($generated@@370 $generated@@87 $generated@@618) ($generated@@143 $generated@@617))))
 :pattern ( ($generated@@261 $generated@@618 ($generated@@143 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@73) (= (type $generated@@620) $generated@@186)) ($generated@@261 $generated@@620 ($generated@@169 $generated@@619))) (and (= ($generated@@308 ($generated@@370 $generated@@87 $generated@@620)) $generated@@620) ($generated@@146 ($generated@@370 $generated@@87 $generated@@620) ($generated@@169 $generated@@619))))
 :pattern ( ($generated@@261 $generated@@620 ($generated@@169 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@87) (= (type $generated@@622) ($generated@@86 $generated@@87 $generated@@88))) (and (not (= $generated@@621 $generated@@144)) ($generated@@84 $generated@@621 $generated@@161 $generated@@622))) ($generated@@84 $generated@@621 $generated@@191 $generated@@622))
 :pattern ( ($generated@@84 $generated@@621 $generated@@161 $generated@@622))
)))
(assert (= ($generated@@82 $generated@@158) $generated@@65))
(assert (= ($generated@@327 $generated@@158) $generated@@71))
(assert (= ($generated@@82 $generated@@191) $generated@@66))
(assert (= ($generated@@327 $generated@@191) $generated@@71))
(assert (= ($generated@@82 $generated@@161) $generated@@67))
(assert (= ($generated@@327 $generated@@161) $generated@@72))
(assert (= ($generated@@82 $generated@@257) $generated@@68))
(assert (= ($generated@@327 $generated@@257) $generated@@72))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@86 $generated@@186 $generated@@2)) (= (type $generated@@624) $generated@@73)) (= (type $generated@@625) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@623 ($generated@@193 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@186) (< 0 ($generated ($generated@@91 $generated@@623 $generated@@626)))) ($generated@@286 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@91 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@84 $generated@@623 ($generated@@193 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@87) (= ($generated@@146 $generated@@627 $generated@@158)  (or (= $generated@@627 $generated@@144) ($generated@@174 ($generated@@145 $generated@@627)))))
 :pattern ( ($generated@@146 $generated@@627 $generated@@158))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@177) (= (type $generated@@629) $generated@@73)) (= (type $generated@@630) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@164 $generated@@630) (and ($generated@@175 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@73) ($generated@@84 $generated@@628 ($generated@@176 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@84 $generated@@628 ($generated@@176 $generated@@629 $generated@@631) $generated@@630))
))))) ($generated@@286 ($generated@@184 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@286 ($generated@@184 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@177) (= (type $generated@@633) $generated@@73)) (= (type $generated@@634) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@164 $generated@@634) (and ($generated@@175 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@73) ($generated@@84 $generated@@632 ($generated@@176 $generated@@635 $generated@@633) $generated@@634))
 :pattern ( ($generated@@84 $generated@@632 ($generated@@176 $generated@@635 $generated@@633) $generated@@634))
))))) ($generated@@286 ($generated@@185 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@286 ($generated@@185 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@186) (= (type $generated@@637) $generated@@186)) (= ($generated@@260 ($generated@@282 $generated@@636) ($generated@@282 $generated@@637)) ($generated@@282 ($generated@@260 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@636) ($generated@@282 $generated@@637)))
)))
(assert (forall (($generated@@638 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@280 $generated@@638))) ($generated@@282 ($generated@@308 ($generated@@8 $generated@@638))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@280 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@308 ($generated@@282 $generated@@639)) ($generated@@282 ($generated@@308 $generated@@639)))
 :pattern ( ($generated@@308 ($generated@@282 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@301 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@300 $generated@@641)) (= ($generated@@299 $generated@@640) 0)) (= $generated@@640 ($generated@@298 $generated@@641))))
 :pattern ( ($generated@@299 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@643)))
 (=> (and (and (= (type $generated@@642) ($generated@@86 $generated@@645 $generated@@2)) (= (type $generated@@644) $generated@@2)) (<= 0 ($generated $generated@@644))) (= ($generated@@321 ($generated@@92 $generated@@642 $generated@@643 $generated@@644)) (+ (- ($generated@@321 $generated@@642) ($generated ($generated@@91 $generated@@642 $generated@@643))) ($generated $generated@@644)))))
 :pattern ( ($generated@@321 ($generated@@92 $generated@@642 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@647) $generated@@2)) ($generated@@84 $generated@@647 $generated@@46 $generated@@646))
 :pattern ( ($generated@@84 $generated@@647 $generated@@46 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@649) $generated@@3)) ($generated@@84 $generated@@649 $generated@@47 $generated@@648))
 :pattern ( ($generated@@84 $generated@@649 $generated@@47 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@651) $generated@@4)) ($generated@@84 $generated@@651 $generated@@44 $generated@@650))
 :pattern ( ($generated@@84 $generated@@651 $generated@@44 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@653) $generated@@491)) ($generated@@84 $generated@@653 $generated@@45 $generated@@652))
 :pattern ( ($generated@@84 $generated@@653 $generated@@45 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@655) $generated@@186)) ($generated@@84 $generated@@655 $generated@@48 $generated@@654))
 :pattern ( ($generated@@84 $generated@@655 $generated@@48 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@300 $generated@@186)) (= (type $generated@@657) $generated@@73)) (= ($generated@@146 $generated@@656 ($generated@@534 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@299 $generated@@656))) ($generated@@261 ($generated@@535 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@535 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@146 $generated@@656 ($generated@@534 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 Int) ) (!  (=> (= (type $generated@@660) ($generated@@300 $generated@@186)) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@299 $generated@@660))) (< ($generated@@586 ($generated@@370 $generated@@177 ($generated@@535 $generated@@660 $generated@@661))) ($generated@@659 $generated@@660))))
 :pattern ( ($generated@@586 ($generated@@370 $generated@@177 ($generated@@535 $generated@@660 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@333 $generated@@186 $generated@@186)) (= (type $generated@@663) $generated@@73)) (= (type $generated@@664) $generated@@73)) ($generated@@146 $generated@@662 ($generated@@442 $generated@@663 $generated@@664))) (and (and ($generated@@146 ($generated@@331 $generated@@662) ($generated@@270 $generated@@663)) ($generated@@146 ($generated@@385 $generated@@662) ($generated@@270 $generated@@664))) ($generated@@146 ($generated@@416 $generated@@662) ($generated@@270 ($generated@@176 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@146 $generated@@662 ($generated@@442 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@351 $generated@@186 $generated@@186)) (= (type $generated@@666) $generated@@73)) (= (type $generated@@667) $generated@@73)) ($generated@@146 $generated@@665 ($generated@@450 $generated@@666 $generated@@667))) (and (and ($generated@@146 ($generated@@349 $generated@@665) ($generated@@275 $generated@@666)) ($generated@@146 ($generated@@396 $generated@@665) ($generated@@275 $generated@@667))) ($generated@@146 ($generated@@424 $generated@@665) ($generated@@275 ($generated@@176 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@146 $generated@@665 ($generated@@450 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@2) ($generated@@146 $generated@@668 $generated@@46))
 :pattern ( ($generated@@146 $generated@@668 $generated@@46))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@3) ($generated@@146 $generated@@669 $generated@@47))
 :pattern ( ($generated@@146 $generated@@669 $generated@@47))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@4) ($generated@@146 $generated@@670 $generated@@44))
 :pattern ( ($generated@@146 $generated@@670 $generated@@44))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@491) ($generated@@146 $generated@@671 $generated@@45))
 :pattern ( ($generated@@146 $generated@@671 $generated@@45))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@186) ($generated@@146 $generated@@672 $generated@@48))
 :pattern ( ($generated@@146 $generated@@672 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 (T@U) Bool)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Int)
(assert  (and (and (and (and (and (= (type $generated@@673) ($generated@@201 $generated@@87 $generated@@4)) (= (type $generated@@674) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@675) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@679) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@681) $generated@@87)) (= (type $generated@@682) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@684  (=> (= $generated@@673 ($generated@@200 $generated@@144 $generated@@674 $generated@@60 false)) (=> (and ($generated@@164 $generated@@675) ($generated@@676 $generated@@675)) (=> (and (and (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@87) (=> (and (not (= $generated@@685 $generated@@144)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@674 $generated@@685) $generated@@60))) (= ($generated@@91 $generated@@675 $generated@@685) ($generated@@91 $generated@@674 $generated@@685))))
 :pattern ( ($generated@@91 $generated@@675 $generated@@685))
)) ($generated@@151 $generated@@674 $generated@@675)) (and (= $generated@@677 ($generated@@280 2)) (= $generated@@678 ($generated@@280 5)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@280 0) $generated@@677)) (=> (<= ($generated@@280 0) $generated@@677) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@280 0) $generated@@678)) (=> (<= ($generated@@280 0) $generated@@678) (=> (and ($generated@@164 $generated@@679) ($generated@@676 $generated@@679)) (=> (and (and (= $generated@@680 ($generated@@604 $generated@@677 $generated@@678)) (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@87) (=> (and (not (= $generated@@686 $generated@@144)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@675 $generated@@686) $generated@@60))) (= ($generated@@91 $generated@@679 $generated@@686) ($generated@@91 $generated@@675 $generated@@686))))
 :pattern ( ($generated@@91 $generated@@679 $generated@@686))
))) (and ($generated@@151 $generated@@675 $generated@@679) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@680 ($generated@@280 10)))))))))))))
(let (($generated@@687  (=> (and (and ($generated@@164 $generated@@674) ($generated@@676 $generated@@674)) (and (not (= $generated@@681 $generated@@144)) (and ($generated@@146 $generated@@681 $generated@@257) ($generated@@84 $generated@@681 $generated@@257 $generated@@674)))) (=> (and (and (and ($generated@@146 $generated@@682 ($generated@@169 $generated@@46)) ($generated@@84 $generated@@682 ($generated@@169 $generated@@46) $generated@@674)) (= 2 $generated@@683)) (and (and (= ($generated@@142 $generated@@682) ($generated@@280 2)) (= ($generated ($generated@@370 $generated@@2 ($generated@@93 ($generated@@91 $generated@@674 $generated@@682) ($generated@@461 ($generated@@280 0))))) ($generated@@280 1))) (and (= ($generated ($generated@@370 $generated@@2 ($generated@@93 ($generated@@91 $generated@@674 $generated@@682) ($generated@@461 ($generated@@280 1))))) ($generated@@280 10)) (= (ControlFlow 0 5) 2)))) $generated@@684))))
$generated@@687)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
