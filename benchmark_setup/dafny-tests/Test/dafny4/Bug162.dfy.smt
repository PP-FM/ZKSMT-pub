(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 () T@U)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@331 () T@U)
(declare-fun $generated@@333 () T@U)
(declare-fun $generated@@335 () T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@83 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@72)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@72) (= (type $generated@@152) $generated@@72)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@84 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@72)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@85 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@75 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@85) (= (type $generated@@217) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@218) ($generated@@74 $generated@@4))) (= (type $generated@@220) $generated@@85)) (= (type $generated@@221) ($generated@@74 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@148)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@72) (= (type $generated@@228) $generated@@72)) (= (type $generated@@229) $generated@@157)) (= (type $generated@@230) $generated@@157)) (= ($generated@@144 ($generated@@223 $generated@@229 $generated@@230) ($generated@@147 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@144 ($generated@@223 $generated@@229 $generated@@230) ($generated@@147 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@148) (= (type $generated@@232) $generated@@148)) (= ($generated@@154 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@154 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@72)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@84 $generated@@157 $generated@@4)) (= (type $generated@@236) $generated@@72)) (= ($generated@@144 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@157) ($generated@@0 ($generated@@89 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@89 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@144 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@72)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@84 $generated@@157 $generated@@4)) (= (type $generated@@241) $generated@@72)) (= ($generated@@144 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@157) ($generated@@0 ($generated@@89 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@89 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@144 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@72) (= (type $generated@@250) $generated@@72)) (= (type $generated@@251) $generated@@157)) (= (type $generated@@252) $generated@@157)) (= (type $generated@@253) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@247 $generated@@253)) (= ($generated@@82 ($generated@@223 $generated@@251 $generated@@252) ($generated@@147 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@82 ($generated@@223 $generated@@251 $generated@@252) ($generated@@147 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@76)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@148) (= ($generated@@146 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@148) ($generated@@146 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@157) (= (type $generated@@259) $generated@@157)) (= $generated@@257 ($generated@@223 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@146 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@157)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@72) (= (type $generated@@272) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@82 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@274) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@275) $generated@@157)) (= (type $generated@@276) $generated@@72)) ($generated@@140 $generated@@273 $generated@@274)) ($generated@@248 $generated@@275 $generated@@276 $generated@@273)) ($generated@@248 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@140 $generated@@273 $generated@@274) ($generated@@248 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@278) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@280) $generated@@72)) ($generated@@140 $generated@@277 $generated@@278)) ($generated@@82 $generated@@279 $generated@@280 $generated@@277)) ($generated@@82 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@140 $generated@@277 $generated@@278) ($generated@@82 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@84 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@87 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@84 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@89 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@84 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@89 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@89 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@84 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@89 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@89 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@87 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@84 $generated@@324 $generated@@2)) (= ($generated@@163 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@89 $generated@@323 $generated@@325))) (<= ($generated ($generated@@89 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@89 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@163 $generated@@323))
)))
(assert  (and (= (type $generated@@326) $generated@@72) (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@157) ($generated@@224 $generated@@330 $generated@@326)) (and (= ($generated@@268 ($generated@@327 $generated@@148 $generated@@330)) $generated@@330) ($generated@@144 ($generated@@327 $generated@@148 $generated@@330) $generated@@326)))
 :pattern ( ($generated@@224 $generated@@330 $generated@@326))
)))
(assert (= (type $generated@@331) $generated@@72))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@157) ($generated@@224 $generated@@332 $generated@@331)) (and (= ($generated@@268 ($generated@@327 $generated@@148 $generated@@332)) $generated@@332) ($generated@@144 ($generated@@327 $generated@@148 $generated@@332) $generated@@331)))
 :pattern ( ($generated@@224 $generated@@332 $generated@@331))
)))
(assert (= (type $generated@@333) $generated@@72))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@157) ($generated@@224 $generated@@334 $generated@@333)) (and (= ($generated@@268 ($generated@@327 $generated@@148 $generated@@334)) $generated@@334) ($generated@@144 ($generated@@327 $generated@@148 $generated@@334) $generated@@333)))
 :pattern ( ($generated@@224 $generated@@334 $generated@@333))
)))
(assert (= (type $generated@@335) $generated@@72))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@157) ($generated@@224 $generated@@336 $generated@@335)) (and (= ($generated@@268 ($generated@@327 $generated@@148 $generated@@336)) $generated@@336) ($generated@@144 ($generated@@327 $generated@@148 $generated@@336) $generated@@335)))
 :pattern ( ($generated@@224 $generated@@336 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@89 ($generated@@287 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@287 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@291 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@84 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@291 (type $generated@@344))))
(let (($generated@@346 ($generated@@290 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@289 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@288 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@89 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@89 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@84 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@89 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@84 $generated@@157 $generated@@2)) (= (type $generated@@360) $generated@@72)) (= ($generated@@144 $generated@@359 ($generated@@162 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@157) (< 0 ($generated ($generated@@89 $generated@@359 $generated@@361)))) ($generated@@224 $generated@@361 $generated@@360))
 :pattern ( ($generated@@89 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@144 $generated@@359 ($generated@@162 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@84 $generated@@157 $generated@@4)) (= (type $generated@@363) $generated@@72)) (= (type $generated@@364) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@362 ($generated@@233 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@157) ($generated@@0 ($generated@@89 $generated@@362 $generated@@365))) ($generated@@248 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@89 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@82 $generated@@362 ($generated@@233 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@84 $generated@@157 $generated@@4)) (= (type $generated@@367) $generated@@72)) (= (type $generated@@368) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@366 ($generated@@238 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@157) ($generated@@0 ($generated@@89 $generated@@366 $generated@@369))) ($generated@@248 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@89 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@82 $generated@@366 ($generated@@238 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@89 ($generated@@282 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@89 ($generated@@282 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@84 $generated@@157 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@291 (type $generated@@375))))
(let (($generated@@377 ($generated@@290 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@84 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@289 $generated@@157 $generated@@157)) (= (type $generated@@379) $generated@@157)) (= ($generated@@0 ($generated@@89 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@89 ($generated@@287 $generated@@378) ($generated@@155 ($generated@@327 $generated@@148 $generated@@379)))) (= ($generated@@89 ($generated@@373 $generated@@378) ($generated@@155 ($generated@@327 $generated@@148 $generated@@379))) ($generated@@156 ($generated@@327 $generated@@148 $generated@@379))))))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@84 $generated@@157 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@309 (type $generated@@383))))
(let (($generated@@385 ($generated@@308 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@84 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@387) $generated@@157)) (= ($generated@@0 ($generated@@89 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@89 ($generated@@305 $generated@@386) ($generated@@155 ($generated@@327 $generated@@148 $generated@@387)))) (= ($generated@@89 ($generated@@381 $generated@@386) ($generated@@155 ($generated@@327 $generated@@148 $generated@@387))) ($generated@@156 ($generated@@327 $generated@@148 $generated@@387))))))
 :pattern ( ($generated@@89 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@290 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@289 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@89 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@89 ($generated@@287 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@89 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@89 ($generated@@287 $generated@@388) $generated@@392))
 :pattern ( ($generated@@89 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@89 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@308 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@307 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@89 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@89 ($generated@@305 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@89 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@89 ($generated@@305 $generated@@393) $generated@@397))
 :pattern ( ($generated@@89 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@89 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@72)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@289 $generated@@157 $generated@@157)) (= (type $generated@@402) $generated@@72)) (= (type $generated@@403) $generated@@72)) (= (type $generated@@404) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@157) ($generated@@0 ($generated@@89 ($generated@@287 $generated@@401) $generated@@405))) (and ($generated@@248 ($generated@@89 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@248 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@89 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@89 ($generated@@287 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@82 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@72)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@410) $generated@@72)) (= (type $generated@@411) $generated@@72)) (= (type $generated@@412) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@157) ($generated@@0 ($generated@@89 ($generated@@305 $generated@@409) $generated@@413))) (and ($generated@@248 ($generated@@89 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@248 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@89 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@89 ($generated@@305 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@82 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@415) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@416) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@414 $generated@@416))) (and ($generated@@140 $generated@@414 $generated@@415) ($generated@@140 $generated@@415 $generated@@416))) ($generated@@140 $generated@@414 $generated@@416))
 :pattern ( ($generated@@140 $generated@@414 $generated@@415) ($generated@@140 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@84 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@309 (type $generated@@419))))
(let (($generated@@421 ($generated@@308 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@307 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@306 $generated@@421 $generated@@420)) (= ($generated@@305 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@305 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@309 (type $generated@@422))))
(let (($generated@@424 ($generated@@308 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@307 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@306 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@309 (type $generated@@425))))
(let (($generated@@427 ($generated@@308 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@307 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@306 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@157))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@291 (type $generated@@428))))
(let (($generated@@430 ($generated@@290 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@289 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@288 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@157) (= (type $generated@@432) $generated@@157)) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@428) ($generated@@268 ($generated@@223 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@309 (type $generated@@433))))
(let (($generated@@435 ($generated@@308 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@307 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@306 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@157) (= (type $generated@@437) $generated@@157)) ($generated@@0 ($generated@@89 ($generated@@380 $generated@@433) ($generated@@268 ($generated@@223 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@157) ($generated@@224 $generated@@438 $generated@@46)) (and (= ($generated@@268 ($generated@@327 $generated@@2 $generated@@438)) $generated@@438) ($generated@@144 ($generated@@327 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@157) ($generated@@224 $generated@@439 $generated@@47)) (and (= ($generated@@268 ($generated@@327 $generated@@3 $generated@@439)) $generated@@439) ($generated@@144 ($generated@@327 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@157) ($generated@@224 $generated@@440 $generated@@44)) (and (= ($generated@@268 ($generated@@327 $generated@@4 $generated@@440)) $generated@@440) ($generated@@144 ($generated@@327 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@157) ($generated@@224 $generated@@442 $generated@@45)) (and (= ($generated@@268 ($generated@@327 $generated@@441 $generated@@442)) $generated@@442) ($generated@@144 ($generated@@327 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@72) (= ($generated@@224 ($generated@@268 $generated@@443) $generated@@444) ($generated@@144 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@224 ($generated@@268 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@87 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@84 $generated@@446 $generated@@2)) (<= 0 ($generated@@281 $generated@@445))))
 :pattern ( ($generated@@281 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@263 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@262 $generated@@448)) (<= 0 ($generated@@261 $generated@@447))))
 :pattern ( ($generated@@261 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@72)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@72) (= (type $generated@@452) $generated@@72)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@72)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@72) (= (type $generated@@456) $generated@@72)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@72) (= (type $generated@@458) $generated@@72)) (= ($generated@@80 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@72)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@72) (= (type $generated@@462) $generated@@72)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@72)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@72) (= (type $generated@@466) $generated@@72)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@72) (= (type $generated@@468) $generated@@72)) (= ($generated@@80 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@157) (= (type $generated@@470) $generated@@157)) (= ($generated@@254 ($generated@@223 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@72)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@72) (= (type $generated@@474) $generated@@72)) (= ($generated@@471 ($generated@@147 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@72)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@72) (= (type $generated@@478) $generated@@72)) (= ($generated@@475 ($generated@@147 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@147 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@157) (= (type $generated@@480) $generated@@157)) (= ($generated@@155 ($generated@@223 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@223 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@157) (= (type $generated@@482) $generated@@157)) (= ($generated@@156 ($generated@@223 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@223 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@72)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@263 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@262 $generated@@157)) (= (type $generated@@490) $generated@@72)) (= (type $generated@@491) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@261 $generated@@489))) ($generated@@248 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@82 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@83 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@83 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@72)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@72) (= ($generated@@495 ($generated@@233 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@233 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@72) (= ($generated@@80 ($generated@@233 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@72)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@72) (= ($generated@@499 ($generated@@238 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@238 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@72) (= ($generated@@80 ($generated@@238 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@72)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@72) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@72) (= ($generated@@80 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@72)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@72) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@72) (= ($generated@@80 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@327 $generated@@512 ($generated@@268 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@268 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@289 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@72)) (= (type $generated@@515) $generated@@72)) (= ($generated@@144 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@89 ($generated@@287 $generated@@513) $generated@@516))) (and ($generated@@224 ($generated@@89 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@224 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@89 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@89 ($generated@@287 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@72)) (= (type $generated@@519) $generated@@72)) (= ($generated@@144 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@89 ($generated@@305 $generated@@517) $generated@@520))) (and ($generated@@224 ($generated@@89 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@224 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@89 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@89 ($generated@@305 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@223 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@223 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@223 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@157) (= (type $generated@@528) $generated@@72)) (= (type $generated@@529) $generated@@72)) ($generated@@224 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@268 ($generated@@327 ($generated@@289 $generated@@157 $generated@@157) $generated@@527)) $generated@@527) ($generated@@144 ($generated@@327 ($generated@@289 $generated@@157 $generated@@157) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@157) (= (type $generated@@531) $generated@@72)) (= (type $generated@@532) $generated@@72)) ($generated@@224 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@268 ($generated@@327 ($generated@@307 $generated@@157 $generated@@157) $generated@@530)) $generated@@530) ($generated@@144 ($generated@@327 ($generated@@307 $generated@@157 $generated@@157) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@72) (= (type $generated@@534) $generated@@72)) (= (type $generated@@535) $generated@@157)) ($generated@@224 $generated@@535 ($generated@@147 $generated@@533 $generated@@534))) (and (= ($generated@@268 ($generated@@327 $generated@@148 $generated@@535)) $generated@@535) ($generated@@144 ($generated@@327 $generated@@148 $generated@@535) ($generated@@147 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@147 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@89 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@89 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@77)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@72) (= (type $generated@@541) $generated@@72)) (and (= ($generated@@80 ($generated@@147 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@147 $generated@@540 $generated@@541)) $generated@@67)))
 :pattern ( ($generated@@147 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@148) (= ($generated@@521 ($generated@@268 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@268 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@157) ($generated@@224 $generated@@543 ($generated@@83 0))) (and (= ($generated@@268 ($generated@@327 $generated@@2 $generated@@543)) $generated@@543) ($generated@@144 ($generated@@327 ($generated@@84 $generated@@157 $generated@@4) $generated@@543) ($generated@@83 0))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@83 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@157) (= (type $generated@@545) $generated@@72)) ($generated@@224 $generated@@544 ($generated@@233 $generated@@545))) (and (= ($generated@@268 ($generated@@327 ($generated@@84 $generated@@157 $generated@@4) $generated@@544)) $generated@@544) ($generated@@144 ($generated@@327 ($generated@@84 $generated@@157 $generated@@4) $generated@@544) ($generated@@233 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@233 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@72)) ($generated@@224 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@268 ($generated@@327 ($generated@@84 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@327 ($generated@@84 $generated@@157 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@224 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@72)) ($generated@@224 $generated@@548 ($generated@@162 $generated@@549))) (and (= ($generated@@268 ($generated@@327 ($generated@@84 $generated@@157 $generated@@2) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@327 ($generated@@84 $generated@@157 $generated@@2) $generated@@548) ($generated@@162 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@162 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@72)) ($generated@@224 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@268 ($generated@@327 ($generated@@262 $generated@@157) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@327 ($generated@@262 $generated@@157) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (= ($generated@@80 $generated@@326) $generated@@63))
(assert (= ($generated@@538 $generated@@326) $generated@@68))
(assert (= ($generated@@80 $generated@@331) $generated@@64))
(assert (= ($generated@@538 $generated@@331) $generated@@69))
(assert (= ($generated@@80 $generated@@333) $generated@@65))
(assert (= ($generated@@538 $generated@@333) $generated@@70))
(assert (= ($generated@@80 $generated@@335) $generated@@66))
(assert (= ($generated@@538 $generated@@335) $generated@@71))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@84 $generated@@157 $generated@@2)) (= (type $generated@@553) $generated@@72)) (= (type $generated@@554) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@552 ($generated@@162 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@157) (< 0 ($generated ($generated@@89 $generated@@552 $generated@@555)))) ($generated@@248 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@89 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@82 $generated@@552 ($generated@@162 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@148) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@247 $generated@@558) (and ($generated@@146 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@72) ($generated@@82 $generated@@556 ($generated@@147 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@82 $generated@@556 ($generated@@147 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@248 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@248 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@148) (= (type $generated@@561) $generated@@72)) (= (type $generated@@562) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@247 $generated@@562) (and ($generated@@146 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@72) ($generated@@82 $generated@@560 ($generated@@147 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@82 $generated@@560 ($generated@@147 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@248 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@248 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@157) (= (type $generated@@565) $generated@@157)) (= ($generated@@223 ($generated@@243 $generated@@564) ($generated@@243 $generated@@565)) ($generated@@243 ($generated@@223 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@564) ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@566)) ($generated@@243 ($generated@@268 $generated@@566)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@263 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@262 $generated@@568)) (= ($generated@@261 $generated@@567) 0)) (= $generated@@567 ($generated@@260 $generated@@568))))
 :pattern ( ($generated@@261 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@84 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@281 ($generated@@90 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@281 $generated@@569) ($generated ($generated@@89 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@281 ($generated@@90 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@574) $generated@@2)) ($generated@@82 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@82 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@576) $generated@@3)) ($generated@@82 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@82 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@578) $generated@@4)) ($generated@@82 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@82 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@580) $generated@@441)) ($generated@@82 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@82 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@582) $generated@@157)) ($generated@@82 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@82 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@262 $generated@@157)) (= (type $generated@@584) $generated@@72)) (= ($generated@@144 $generated@@583 ($generated@@483 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@261 $generated@@583))) ($generated@@224 ($generated@@484 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@484 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@144 $generated@@583 ($generated@@483 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@262 $generated@@157)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@261 $generated@@587))) (< ($generated@@522 ($generated@@327 $generated@@148 ($generated@@484 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@522 ($generated@@327 $generated@@148 ($generated@@484 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@289 $generated@@157 $generated@@157)) (= (type $generated@@590) $generated@@72)) (= (type $generated@@591) $generated@@72)) ($generated@@144 $generated@@589 ($generated@@398 $generated@@590 $generated@@591))) (and (and ($generated@@144 ($generated@@287 $generated@@589) ($generated@@233 $generated@@590)) ($generated@@144 ($generated@@341 $generated@@589) ($generated@@233 $generated@@591))) ($generated@@144 ($generated@@372 $generated@@589) ($generated@@233 ($generated@@147 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@144 $generated@@589 ($generated@@398 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@72)) (= (type $generated@@594) $generated@@72)) ($generated@@144 $generated@@592 ($generated@@406 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@305 $generated@@592) ($generated@@238 $generated@@593)) ($generated@@144 ($generated@@352 $generated@@592) ($generated@@238 $generated@@594))) ($generated@@144 ($generated@@380 $generated@@592) ($generated@@238 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@406 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@144 $generated@@595 $generated@@46))
 :pattern ( ($generated@@144 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@144 $generated@@596 $generated@@47))
 :pattern ( ($generated@@144 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@144 $generated@@597 $generated@@44))
 :pattern ( ($generated@@144 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@441) ($generated@@144 $generated@@598 $generated@@45))
 :pattern ( ($generated@@144 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@157) ($generated@@144 $generated@@599 $generated@@48))
 :pattern ( ($generated@@144 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
