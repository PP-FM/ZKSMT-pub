(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U T@U Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@U Int) Bool)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U Int) Bool)
(declare-fun $generated@@136 (T@U T@U) T@U)
(declare-fun $generated@@137 (Int) T@U)
(declare-fun $generated@@138 (T@U T@U Int) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (Int) Int)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@T) T@U)
(declare-fun $generated@@239 (T@U) Int)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T T@T) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U Int) T@U)
(declare-fun $generated@@398 (T@U) Int)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@418 (T@T T@U) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@131) 12) (= ($generated@@1 $generated@@132) 13)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@129 $generated@@142)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@143)))
(= (type ($generated@@130 $generated@@143)) $generated@@144))
 :pattern ( ($generated@@130 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@136 $generated@@145 $generated@@146)) $generated@@132)
 :pattern ( ($generated@@136 $generated@@145 $generated@@146))
))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@137 $generated@@147)) $generated@@132)
 :pattern ( ($generated@@137 $generated@@147))
))) (= (type $generated@@139) $generated@@131)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (and (and (= (type $generated@@148) $generated@@131) (= (type $generated@@149) $generated@@132)) (or ($generated@@133 ($generated@@130 $generated@@149) $generated@@150) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@149)) ($generated@@135 ($generated@@136 $generated@@149 ($generated@@137 1)) (+ $generated@@150 1))) (=> (=> (< 0 ($generated@@134 $generated@@149)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@149 ($generated@@137 1)) (+ $generated@@150 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@149)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@132) ($generated@@141 $generated@@151 $generated@@149)) ($generated@@133 $generated@@151 $generated@@150))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@151 $generated@@150))
))))) (= ($generated@@128 ($generated@@129 $generated@@148) ($generated@@130 $generated@@149) $generated@@150)  (and (=> (< 0 ($generated@@134 $generated@@149)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@149 ($generated@@137 1)) (+ $generated@@150 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@149)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@132) ($generated@@141 $generated@@152 $generated@@149)) ($generated@@128 ($generated@@129 $generated@@148) $generated@@152 $generated@@150))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@152 $generated@@150))
)))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) ($generated@@130 $generated@@149) $generated@@150))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (and (and (= (type $generated@@153) $generated@@131) (= (type $generated@@154) $generated@@132)) (or ($generated@@135 ($generated@@130 $generated@@154) $generated@@155) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@154)) ($generated@@133 ($generated@@136 $generated@@154 ($generated@@137 1)) (+ $generated@@155 1))) (=> (=> (< 0 ($generated@@134 $generated@@154)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@154 ($generated@@137 1)) (+ $generated@@155 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@154)) (forall (($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@132) ($generated@@141 $generated@@156 $generated@@154)) ($generated@@135 $generated@@156 $generated@@155))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@153) $generated@@156 $generated@@155))
))))) (= ($generated@@138 ($generated@@129 $generated@@153) ($generated@@130 $generated@@154) $generated@@155)  (and (=> (< 0 ($generated@@134 $generated@@154)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@154 ($generated@@137 1)) (+ $generated@@155 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@154)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@132) ($generated@@141 $generated@@157 $generated@@154)) ($generated@@138 ($generated@@129 $generated@@153) $generated@@157 $generated@@155))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@153) $generated@@157 $generated@@155))
)))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@129 $generated@@153) ($generated@@130 $generated@@154) $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@132) (= (type $generated@@159) $generated@@132)) (= (type $generated@@160) $generated@@132)) (and ($generated@@141 $generated@@158 $generated@@159) ($generated@@141 $generated@@159 $generated@@160))) ($generated@@141 $generated@@158 $generated@@160))
 :pattern ( ($generated@@141 $generated@@158 $generated@@159) ($generated@@141 $generated@@159 $generated@@160))
 :pattern ( ($generated@@141 $generated@@158 $generated@@159) ($generated@@141 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 Int) ) (!  (=> (= (type $generated@@161) $generated@@132) (=> (and (and (<= 0 $generated@@162) (<= 0 $generated@@163)) (<= (+ $generated@@162 $generated@@163) ($generated@@134 $generated@@161))) (= ($generated@@136 ($generated@@136 $generated@@161 ($generated@@137 $generated@@162)) ($generated@@137 $generated@@163)) ($generated@@136 $generated@@161 ($generated@@137 (+ $generated@@162 $generated@@163))))))
 :pattern ( ($generated@@136 ($generated@@136 $generated@@161 ($generated@@137 $generated@@162)) ($generated@@137 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 14)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@72 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@64 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@72) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@215) ($generated@@63 $generated@@4))) (= (type $generated@@217) $generated@@72)) (= (type $generated@@218) ($generated@@63 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Int) ) (!  (=> (and (and (= (type $generated@@220) $generated@@131) (= (type $generated@@221) $generated@@132)) (or ($generated@@133 ($generated@@130 $generated@@221) ($generated@@140 $generated@@222)) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@221)) ($generated@@135 ($generated@@136 $generated@@221 ($generated@@137 1)) (+ $generated@@222 1))) (=> (=> (< 0 ($generated@@134 $generated@@221)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@221 ($generated@@137 1)) (+ $generated@@222 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@221)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@132) ($generated@@141 $generated@@223 $generated@@221)) ($generated@@133 $generated@@223 $generated@@222))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@220) $generated@@223 $generated@@222))
))))) (= ($generated@@128 ($generated@@129 $generated@@220) ($generated@@130 $generated@@221) ($generated@@140 $generated@@222))  (and (=> (< 0 ($generated@@134 $generated@@221)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@221 ($generated@@137 1)) (+ $generated@@222 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@221)) (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@132) ($generated@@141 $generated@@224 $generated@@221)) ($generated@@128 ($generated@@129 $generated@@220) $generated@@224 $generated@@222))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@220) $generated@@224 $generated@@222))
)))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@220) ($generated@@130 $generated@@221) ($generated@@140 $generated@@222)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Int) ) (!  (=> (and (and (= (type $generated@@225) $generated@@131) (= (type $generated@@226) $generated@@132)) (or ($generated@@135 ($generated@@130 $generated@@226) ($generated@@140 $generated@@227)) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@226)) ($generated@@133 ($generated@@136 $generated@@226 ($generated@@137 1)) (+ $generated@@227 1))) (=> (=> (< 0 ($generated@@134 $generated@@226)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@226 ($generated@@137 1)) (+ $generated@@227 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@226)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@132) ($generated@@141 $generated@@228 $generated@@226)) ($generated@@135 $generated@@228 $generated@@227))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@225) $generated@@228 $generated@@227))
))))) (= ($generated@@138 ($generated@@129 $generated@@225) ($generated@@130 $generated@@226) ($generated@@140 $generated@@227))  (and (=> (< 0 ($generated@@134 $generated@@226)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@226 ($generated@@137 1)) (+ $generated@@227 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@226)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@132) ($generated@@141 $generated@@229 $generated@@226)) ($generated@@138 ($generated@@129 $generated@@225) $generated@@229 $generated@@227))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@225) $generated@@229 $generated@@227))
)))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@129 $generated@@225) ($generated@@130 $generated@@226) ($generated@@140 $generated@@227)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@230 T@U) ($generated@@231 Int) ($generated@@232 T@U) ) (!  (=> (and (and (= (type $generated@@230) $generated@@131) (= (type $generated@@232) $generated@@132)) (= $generated@@232 ($generated@@137 0))) ($generated@@128 $generated@@230 $generated@@232 $generated@@231))
 :pattern ( ($generated@@128 $generated@@230 $generated@@232 $generated@@231))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@233 T@U) ($generated@@234 Int) ($generated@@235 T@U) ) (!  (=> (and (and (= (type $generated@@233) $generated@@131) (= (type $generated@@235) $generated@@132)) (= $generated@@235 ($generated@@137 0))) ($generated@@138 $generated@@233 $generated@@235 $generated@@234))
 :pattern ( ($generated@@138 $generated@@233 $generated@@235 $generated@@234))
))))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@140 $generated@@236) $generated@@236)
 :pattern ( ($generated@@140 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@130 $generated@@237) $generated@@237)
 :pattern ( ($generated@@130 $generated@@237))
)))
(assert  (and (and (forall (($generated@@242 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@242)) 15)) (forall (($generated@@243 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
))) (forall (($generated@@244 T@T) ) (! (= (type ($generated@@238 $generated@@244)) ($generated@@240 $generated@@244))
 :pattern ( ($generated@@238 $generated@@244))
))))
(assert (forall (($generated@@245 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@245)) 0)
 :pattern ( ($generated@@238 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Int) ) (!  (=> (and (= (type $generated@@246) $generated@@131) (= (type $generated@@247) $generated@@132)) (= ($generated@@128 ($generated@@129 $generated@@246) $generated@@247 $generated@@248) ($generated@@128 $generated@@246 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Int) ) (!  (=> (and (= (type $generated@@249) $generated@@131) (= (type $generated@@250) $generated@@132)) (= ($generated@@138 ($generated@@129 $generated@@249) $generated@@250 $generated@@251) ($generated@@138 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@132)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@61) (= (type $generated@@257) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@252 ($generated@@253 $generated@@255) $generated@@256 $generated@@257) ($generated@@69 $generated@@255 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@255) $generated@@256 $generated@@257))
)))
(assert  (and (and (and (and (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@263 $generated@@264)) 16)) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@265 $generated@@266)) $generated@@265)
 :pattern ( ($generated@@260 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@267 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@260 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@261 (type $generated@@269))))
(= (type ($generated@@258 $generated@@269)) ($generated@@71 $generated@@270 $generated@@4)))
 :pattern ( ($generated@@258 $generated@@269))
))) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= (type ($generated@@259 $generated@@271 $generated@@272)) ($generated@@260 $generated@@271 $generated@@272))
 :pattern ( ($generated@@259 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@T) ) (! (let (($generated@@275 (type $generated@@273)))
 (not ($generated@@0 ($generated@@76 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273))))
 :pattern ( (let (($generated@@275 (type $generated@@273)))
($generated@@76 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273)))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 17)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@71 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@76 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@76 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@132) (= (type $generated@@296) $generated@@132)) (and ($generated@@294 $generated@@296) (<= ($generated@@134 $generated@@296) ($generated@@134 $generated@@295)))) (and (= ($generated@@294 ($generated@@136 $generated@@295 $generated@@296)) ($generated@@294 $generated@@295)) (= ($generated@@134 ($generated@@136 $generated@@295 $generated@@296)) (- ($generated@@134 $generated@@295) ($generated@@134 $generated@@296)))))
 :pattern ( ($generated@@136 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 Int) ) (!  (=> (<= 0 $generated@@297) (and ($generated@@294 ($generated@@137 $generated@@297)) (= ($generated@@134 ($generated@@137 $generated@@297)) $generated@@297)))
 :pattern ( ($generated@@137 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@262 (type $generated@@298))))
(let (($generated@@300 ($generated@@261 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@260 $generated@@300 $generated@@299)) (or (= $generated@@298 ($generated@@259 $generated@@300 $generated@@299)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) ($generated@@0 ($generated@@76 ($generated@@258 $generated@@298) $generated@@301)))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@258 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@280 (type $generated@@302))))
(let (($generated@@304 ($generated@@279 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@278 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@277 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) ($generated@@0 ($generated@@76 ($generated@@276 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@276 $generated@@302))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (and (= (type $generated@@306) $generated@@131) (= (type $generated@@307) $generated@@132)) (or ($generated@@133 $generated@@307 $generated@@308) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@307)) ($generated@@135 ($generated@@136 $generated@@307 ($generated@@137 1)) (+ $generated@@308 1))) (=> (=> (< 0 ($generated@@134 $generated@@307)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@307 ($generated@@137 1)) (+ $generated@@308 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@307)) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@132) ($generated@@141 $generated@@309 $generated@@307)) ($generated@@133 $generated@@309 $generated@@308))
 :pattern ( ($generated@@128 $generated@@306 $generated@@309 $generated@@308))
))))) (= ($generated@@128 ($generated@@129 $generated@@306) $generated@@307 $generated@@308)  (and (=> (< 0 ($generated@@134 $generated@@307)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@307 ($generated@@137 1)) (+ $generated@@308 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@307)) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@132) ($generated@@141 $generated@@310 $generated@@307)) ($generated@@128 $generated@@306 $generated@@310 $generated@@308))
 :pattern ( ($generated@@128 $generated@@306 $generated@@310 $generated@@308))
)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@306) $generated@@307 $generated@@308))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 Int) ) (!  (=> (and (and (= (type $generated@@311) $generated@@131) (= (type $generated@@312) $generated@@132)) (or ($generated@@135 $generated@@312 $generated@@313) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@312)) ($generated@@133 ($generated@@136 $generated@@312 ($generated@@137 1)) (+ $generated@@313 1))) (=> (=> (< 0 ($generated@@134 $generated@@312)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@312 ($generated@@137 1)) (+ $generated@@313 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@312)) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@132) ($generated@@141 $generated@@314 $generated@@312)) ($generated@@135 $generated@@314 $generated@@313))
 :pattern ( ($generated@@138 $generated@@311 $generated@@314 $generated@@313))
))))) (= ($generated@@138 ($generated@@129 $generated@@311) $generated@@312 $generated@@313)  (and (=> (< 0 ($generated@@134 $generated@@312)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@312 ($generated@@137 1)) (+ $generated@@313 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@312)) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@132) ($generated@@141 $generated@@315 $generated@@312)) ($generated@@138 $generated@@311 $generated@@315 $generated@@313))
 :pattern ( ($generated@@138 $generated@@311 $generated@@315 $generated@@313))
)))))))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@311) $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@132) (= (type $generated@@317) $generated@@132)) (or (or ($generated@@141 $generated@@316 $generated@@317) (= $generated@@316 $generated@@317)) ($generated@@141 $generated@@317 $generated@@316)))
 :pattern ( ($generated@@141 $generated@@316 $generated@@317) ($generated@@141 $generated@@317 $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@61)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@71 $generated@@132 $generated@@4)) (= (type $generated@@321) $generated@@61)) (= (type $generated@@322) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@320 ($generated@@318 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@132) ($generated@@0 ($generated@@76 $generated@@320 $generated@@323))) ($generated@@252 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@76 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@69 $generated@@320 ($generated@@318 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@71 $generated@@132 $generated@@4)) (= (type $generated@@327) $generated@@61)) (= (type $generated@@328) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@326 ($generated@@324 $generated@@327) $generated@@328) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@132) ($generated@@0 ($generated@@76 $generated@@326 $generated@@329))) ($generated@@252 $generated@@329 $generated@@327 $generated@@328))
 :pattern ( ($generated@@76 $generated@@326 $generated@@329))
))))
 :pattern ( ($generated@@69 $generated@@326 ($generated@@324 $generated@@327) $generated@@328))
)))
(assert  (and (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@332 $generated@@333))
)) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@262 (type $generated@@334))))
(let (($generated@@336 ($generated@@261 (type $generated@@334))))
(= (type ($generated@@331 $generated@@334)) ($generated@@71 $generated@@336 $generated@@335))))
 :pattern ( ($generated@@331 $generated@@334))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@337) ($generated@@260 $generated@@132 $generated@@132)) (= (type $generated@@338) $generated@@61)) (= (type $generated@@339) $generated@@61)) (= (type $generated@@340) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@337 ($generated@@330 $generated@@338 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@132) ($generated@@0 ($generated@@76 ($generated@@258 $generated@@337) $generated@@341))) (and ($generated@@252 ($generated@@76 ($generated@@331 $generated@@337) $generated@@341) $generated@@339 $generated@@340) ($generated@@252 $generated@@341 $generated@@338 $generated@@340)))
 :pattern ( ($generated@@76 ($generated@@331 $generated@@337) $generated@@341))
 :pattern ( ($generated@@76 ($generated@@258 $generated@@337) $generated@@341))
))))
 :pattern ( ($generated@@69 $generated@@337 ($generated@@330 $generated@@338 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (! (= (type ($generated@@342 $generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344 $generated@@345))
)) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@280 (type $generated@@346))))
(let (($generated@@348 ($generated@@279 (type $generated@@346))))
(= (type ($generated@@343 $generated@@346)) ($generated@@71 $generated@@348 $generated@@347))))
 :pattern ( ($generated@@343 $generated@@346))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (= (type $generated@@349) ($generated@@278 $generated@@132 $generated@@132)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) $generated@@61)) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@342 $generated@@350 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@132) ($generated@@0 ($generated@@76 ($generated@@276 $generated@@349) $generated@@353))) (and ($generated@@252 ($generated@@76 ($generated@@343 $generated@@349) $generated@@353) $generated@@351 $generated@@352) ($generated@@252 $generated@@353 $generated@@350 $generated@@352)))
 :pattern ( ($generated@@76 ($generated@@343 $generated@@349) $generated@@353))
 :pattern ( ($generated@@76 ($generated@@276 $generated@@349) $generated@@353))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@342 $generated@@350 $generated@@351) $generated@@352))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 Int) ) (!  (=> (and (and (= (type $generated@@354) $generated@@131) (= (type $generated@@355) $generated@@132)) (or ($generated@@133 $generated@@355 $generated@@356) (not (= 1 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@354 $generated@@355 $generated@@356))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 Int) ) (!  (=> (and (and (= (type $generated@@357) $generated@@131) (= (type $generated@@358) $generated@@132)) (or ($generated@@135 $generated@@358 $generated@@359) (not (= 1 $generated@@127)))) true)
 :pattern ( ($generated@@138 $generated@@357 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@71 $generated@@361 $generated@@4))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@280 (type $generated@@362))))
(let (($generated@@364 ($generated@@279 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@278 $generated@@364 $generated@@363)) (= (= $generated@@362 ($generated@@277 $generated@@364 $generated@@363)) (= ($generated@@276 $generated@@362) ($generated@@360 $generated@@364))))))
 :pattern ( ($generated@@276 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@132) (<= 0 ($generated@@134 $generated@@365)))
 :pattern ( ($generated@@134 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@241 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@240 $generated@@367)) (<= 0 ($generated@@239 $generated@@366))))
 :pattern ( ($generated@@239 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@61) (= (type $generated@@371) $generated@@61)) (= ($generated@@368 ($generated@@330 $generated@@370 $generated@@371)) $generated@@370))
 :pattern ( ($generated@@330 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@61)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@61) (= (type $generated@@375) $generated@@61)) (= ($generated@@372 ($generated@@330 $generated@@374 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@330 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@67 ($generated@@330 $generated@@376 $generated@@377)) $generated@@58))
 :pattern ( ($generated@@330 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) $generated@@61)
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@61) (= (type $generated@@381) $generated@@61)) (= ($generated@@378 ($generated@@342 $generated@@380 $generated@@381)) $generated@@380))
 :pattern ( ($generated@@342 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) $generated@@61)
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@61) (= (type $generated@@385) $generated@@61)) (= ($generated@@382 ($generated@@342 $generated@@384 $generated@@385)) $generated@@385))
 :pattern ( ($generated@@342 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@61) (= (type $generated@@387) $generated@@61)) (= ($generated@@67 ($generated@@342 $generated@@386 $generated@@387)) $generated@@59))
 :pattern ( ($generated@@342 $generated@@386 $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) $generated@@61)
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ($generated@@392 Int) ) (! (let (($generated@@393 ($generated@@241 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391 $generated@@392)) $generated@@393))
 :pattern ( ($generated@@389 $generated@@391 $generated@@392))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@240 $generated@@132)) (= (type $generated@@395) $generated@@61)) (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@394 ($generated@@388 $generated@@395) $generated@@396) (forall (($generated@@397 Int) ) (!  (=> (and (<= 0 $generated@@397) (< $generated@@397 ($generated@@239 $generated@@394))) ($generated@@252 ($generated@@389 $generated@@394 $generated@@397) $generated@@395 $generated@@396))
 :pattern ( ($generated@@389 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@69 $generated@@394 ($generated@@388 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 Int) ) (! (= ($generated@@398 ($generated@@70 $generated@@399)) $generated@@399)
 :pattern ( ($generated@@70 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@61) (= ($generated@@400 ($generated@@318 $generated@@402)) $generated@@402))
 :pattern ( ($generated@@318 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@61) (= ($generated@@67 ($generated@@318 $generated@@403)) $generated@@54))
 :pattern ( ($generated@@318 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (= (type ($generated@@404 $generated@@405)) $generated@@61)
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@61) (= ($generated@@404 ($generated@@324 $generated@@406)) $generated@@406))
 :pattern ( ($generated@@324 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@61) (= ($generated@@67 ($generated@@324 $generated@@407)) $generated@@55))
 :pattern ( ($generated@@324 $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) $generated@@61)
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) $generated@@61)
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@61) (= ($generated@@409 ($generated@@408 $generated@@412)) $generated@@412))
 :pattern ( ($generated@@408 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@61) (= ($generated@@67 ($generated@@408 $generated@@413)) $generated@@56))
 :pattern ( ($generated@@408 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@61)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@61) (= ($generated@@414 ($generated@@388 $generated@@416)) $generated@@416))
 :pattern ( ($generated@@388 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@61) (= ($generated@@67 ($generated@@388 $generated@@417)) $generated@@57))
 :pattern ( ($generated@@388 $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated@@418 $generated@@422 ($generated@@253 $generated@@421)) $generated@@421))
 :pattern ( ($generated@@253 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@132) (= (type $generated@@424) $generated@@132)) (and (and (and (=> ($generated@@141 $generated@@423 $generated@@424) (not (= $generated@@423 $generated@@424))) (=> (and ($generated@@294 $generated@@423) (not ($generated@@294 $generated@@424))) ($generated@@141 $generated@@423 $generated@@424))) (=> (and ($generated@@294 $generated@@423) ($generated@@294 $generated@@424)) (= ($generated@@141 $generated@@423 $generated@@424) (< ($generated@@134 $generated@@423) ($generated@@134 $generated@@424))))) (=> (and ($generated@@141 $generated@@423 $generated@@424) ($generated@@294 $generated@@424)) ($generated@@294 $generated@@423))))
 :pattern ( ($generated@@141 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (not ($generated@@0 ($generated@@76 ($generated@@360 $generated@@426) $generated@@425))))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@76 ($generated@@360 $generated@@426) $generated@@425)))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@132) ($generated@@294 $generated@@427)) (= $generated@@427 ($generated@@137 ($generated@@134 $generated@@427))))
 :pattern ( ($generated@@134 $generated@@427))
 :pattern ( ($generated@@294 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@71 $generated@@132 $generated@@2)) (= (type $generated@@429) $generated@@61)) (= (type $generated@@430) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@428 ($generated@@408 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@132) (< 0 ($generated ($generated@@76 $generated@@428 $generated@@431)))) ($generated@@252 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@76 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@69 $generated@@428 ($generated@@408 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@432) $generated@@132) (= (type $generated@@433) $generated@@132)) (and ($generated@@294 $generated@@433) (<= ($generated@@134 $generated@@433) ($generated@@134 $generated@@432)))) (or (and (= $generated@@433 ($generated@@137 0)) (= ($generated@@136 $generated@@432 $generated@@433) $generated@@432)) (and (not (= $generated@@433 ($generated@@137 0))) ($generated@@141 ($generated@@136 $generated@@432 $generated@@433) $generated@@432))))
 :pattern ( ($generated@@136 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 Int) ) (! (= ($generated@@253 ($generated@@8 ($generated@@140 $generated@@434))) ($generated@@130 ($generated@@253 ($generated@@8 $generated@@434))))
 :pattern ( ($generated@@253 ($generated@@8 ($generated@@140 $generated@@434))))
)))
(assert (forall (($generated@@435 T@U) ) (! (= ($generated@@253 ($generated@@130 $generated@@435)) ($generated@@130 ($generated@@253 $generated@@435)))
 :pattern ( ($generated@@253 ($generated@@130 $generated@@435)))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@241 (type $generated@@436))))
 (=> (and (= (type $generated@@436) ($generated@@240 $generated@@437)) (= ($generated@@239 $generated@@436) 0)) (= $generated@@436 ($generated@@238 $generated@@437))))
 :pattern ( ($generated@@239 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@2)) ($generated@@69 $generated@@439 $generated@@46 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@46 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@3)) ($generated@@69 $generated@@441 $generated@@47 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@47 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@443) $generated@@4)) ($generated@@69 $generated@@443 $generated@@44 $generated@@442))
 :pattern ( ($generated@@69 $generated@@443 $generated@@44 $generated@@442))
)))
(assert (= ($generated@@1 $generated@@444) 18))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@446) $generated@@444)) ($generated@@69 $generated@@446 $generated@@45 $generated@@445))
 :pattern ( ($generated@@69 $generated@@446 $generated@@45 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@448) $generated@@132)) ($generated@@69 $generated@@448 $generated@@48 $generated@@447))
 :pattern ( ($generated@@69 $generated@@448 $generated@@48 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@131)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 Int) ) (!  (=> (and (= (type $generated@@451) $generated@@131) (= (type $generated@@452) $generated@@132)) (= ($generated@@128 $generated@@451 $generated@@452 $generated@@453) ($generated@@128 $generated@@139 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@128 ($generated@@449 $generated@@451) $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ) (!  (=> (and (= (type $generated@@454) $generated@@131) (= (type $generated@@455) $generated@@132)) (= ($generated@@138 $generated@@454 $generated@@455 $generated@@456) ($generated@@138 $generated@@139 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@138 ($generated@@449 $generated@@454) $generated@@455 $generated@@456))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 (T@U) Bool)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 (T@U) Bool)
(declare-fun $generated@@462 () T@U)
(declare-fun $generated@@463 () T@U)
(declare-fun $generated@@464 () Int)
(declare-fun $generated@@465 () T@U)
(declare-fun $generated@@466 () T@U)
(declare-fun $generated@@467 () Int)
(declare-fun $generated@@468 () T@U)
(declare-fun $generated@@469 () T@U)
(declare-fun $generated@@470 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@457) $generated@@132) (= (type $generated@@463) $generated@@132)) (= (type $generated@@465) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@462) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@466) $generated@@132)) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@468) ($generated@@166 $generated@@72 $generated@@4))) (= (type $generated@@469) $generated@@72)) (= (type $generated@@470) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@471  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@133 $generated@@457 $generated@@458) (or ($generated@@128 ($generated@@129 $generated@@139) $generated@@457 $generated@@458) (=> (< 0 ($generated@@134 $generated@@457)) ($generated@@138 ($generated@@129 ($generated@@129 $generated@@139)) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)))))) (=> (=> ($generated@@133 $generated@@457 $generated@@458) (or ($generated@@128 ($generated@@129 $generated@@139) $generated@@457 $generated@@458) (=> (< 0 ($generated@@134 $generated@@457)) ($generated@@138 ($generated@@129 ($generated@@129 $generated@@139)) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@133 $generated@@457 $generated@@458) (or ($generated@@128 ($generated@@129 $generated@@139) $generated@@457 $generated@@458) (=> (= ($generated@@140 0) ($generated@@134 $generated@@457)) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@132) ($generated@@141 $generated@@472 $generated@@457)) ($generated@@128 ($generated@@129 ($generated@@129 $generated@@139)) $generated@@472 $generated@@458))
 :pattern ( ($generated@@128 ($generated@@129 ($generated@@129 $generated@@139)) $generated@@472 $generated@@458))
))))))))))
(let (($generated@@473  (=> (<= ($generated@@134 $generated@@457) 0) (=> (and (and (and ($generated@@459 $generated@@460) ($generated@@461 $generated@@460)) (= $generated@@462 $generated@@460)) (and (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (and (= (type $generated@@474) $generated@@132) ($generated@@141 $generated@@474 $generated@@457)) ($generated@@128 ($generated@@129 $generated@@139) $generated@@474 $generated@@475))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
)) (= (ControlFlow 0 10) 2))) $generated@@471))))
(let (($generated@@476  (=> (< 0 ($generated@@134 $generated@@457)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@294 ($generated@@130 ($generated@@137 1)))) (=> ($generated@@294 ($generated@@130 ($generated@@137 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457))) (=> (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457)) (=> (and (= $generated@@463 ($generated@@136 $generated@@457 ($generated@@137 1))) (= $generated@@464 (+ $generated@@458 1))) (=> (and (and (and ($generated@@459 $generated@@465) ($generated@@461 $generated@@465)) ($generated@@135 $generated@@463 $generated@@464)) (and (and ($generated@@135 $generated@@463 $generated@@464) (and ($generated@@138 ($generated@@129 $generated@@139) $generated@@463 $generated@@464) (and (=> (< 0 ($generated@@134 $generated@@463)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@463 ($generated@@137 1)) (+ $generated@@464 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@463)) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@132) ($generated@@141 $generated@@477 $generated@@463)) ($generated@@138 ($generated@@129 $generated@@139) $generated@@477 $generated@@464))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@139) $generated@@477 $generated@@464))
)))))) (= $generated@@462 $generated@@465))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@294 ($generated@@130 ($generated@@137 1)))) (=> ($generated@@294 ($generated@@130 ($generated@@137 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457))) (=> (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457)) (=> (and (= $generated@@466 ($generated@@136 $generated@@457 ($generated@@137 1))) ($generated@@69 $generated@@466 $generated@@48 $generated@@465)) (=> (and (and (= $generated@@467 (+ $generated@@458 1)) ($generated@@69 ($generated@@8 $generated@@467) $generated@@46 $generated@@465)) (and ($generated@@135 ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)) ($generated@@135 ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@135 ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)))) (=> (and ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)) (= (ControlFlow 0 4) 2)) $generated@@471)))))))))))))))))
(let (($generated@@478  (=> (= $generated@@468 ($generated@@165 $generated@@469 $generated@@470 $generated@@60 false)) (=> (and (and ($generated@@459 $generated@@462) ($generated@@461 $generated@@462)) (and (= $generated@@470 $generated@@462) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (!  (=> (= (type $generated@@479) $generated@@132) (=> (and ($generated@@0 ($generated@@130 ($generated@@11 true))) (or ($generated@@141 $generated@@479 $generated@@457) (and (= $generated@@479 $generated@@457) (and (<= 0 $generated@@480) (< $generated@@480 $generated@@458))))) ($generated@@128 ($generated@@129 $generated@@139) $generated@@479 $generated@@480)))
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
)))) (and (=> (= (ControlFlow 0 11) 4) $generated@@476) (=> (= (ControlFlow 0 11) 10) $generated@@473))))))
(let (($generated@@481  (=> (and (and ($generated@@459 $generated@@470) ($generated@@461 $generated@@470)) (and (= 2 $generated@@127) (= (ControlFlow 0 12) 11))) $generated@@478)))
$generated@@481))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 () Int)
(declare-fun $generated@@68 (T@U T@U Int) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U Int) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@156 (T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@U Int) Bool)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (Int) Int)
(declare-fun $generated@@228 (Int) Bool)
(declare-fun $generated@@229 (Int) Bool)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@337 (T@U T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@369 (T@T) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U Int) T@U)
(declare-fun $generated@@417 (T@U) Int)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@T T@U) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert  (and (= ($generated@@1 $generated@@70) 9) (= ($generated@@1 $generated@@71) 10)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@73) $generated@@70) (= (type $generated@@75) $generated@@71)) (= (type $generated@@76) $generated@@71)) (= (type $generated@@77) $generated@@71)) ($generated@@72 $generated@@75 $generated@@76)) ($generated@@68 $generated@@73 $generated@@75 $generated@@74)) ($generated@@68 $generated@@73 $generated@@76 $generated@@74))
 :pattern ( ($generated@@68 $generated@@73 $generated@@75 $generated@@74) ($generated@@69 $generated@@75 $generated@@77) ($generated@@69 $generated@@76 $generated@@77))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@79 T@U) ($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@79) $generated@@70) (= (type $generated@@81) $generated@@71)) (= (type $generated@@82) $generated@@71)) (= (type $generated@@83) $generated@@71)) ($generated@@72 $generated@@81 $generated@@82)) ($generated@@78 $generated@@79 $generated@@81 $generated@@80)) ($generated@@78 $generated@@79 $generated@@82 $generated@@80))
 :pattern ( ($generated@@78 $generated@@79 $generated@@81 $generated@@80) ($generated@@69 $generated@@81 $generated@@83) ($generated@@69 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@62)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@64 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@61)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@71) (= (type $generated@@145) $generated@@71)) (= (type $generated@@146) $generated@@71)) (and ($generated@@72 $generated@@144 $generated@@145) ($generated@@72 $generated@@145 $generated@@146))) ($generated@@72 $generated@@144 $generated@@146))
 :pattern ( ($generated@@72 $generated@@144 $generated@@145) ($generated@@72 $generated@@145 $generated@@146))
 :pattern ( ($generated@@72 $generated@@144 $generated@@145) ($generated@@72 $generated@@144 $generated@@146))
)))
(assert  (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@147 $generated@@150 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@147 $generated@@150 $generated@@151))
)) (forall (($generated@@152 Int) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 Int) ) (!  (=> (= (type $generated@@153) $generated@@71) (=> (and (and (<= 0 $generated@@154) (<= 0 $generated@@155)) (<= (+ $generated@@154 $generated@@155) ($generated@@149 $generated@@153))) (= ($generated@@147 ($generated@@147 $generated@@153 ($generated@@148 $generated@@154)) ($generated@@148 $generated@@155)) ($generated@@147 $generated@@153 ($generated@@148 (+ $generated@@154 $generated@@155))))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@153 ($generated@@148 $generated@@154)) ($generated@@148 $generated@@155)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@1 ($generated@@158 $generated@@162 $generated@@163)) 14)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@159 ($generated@@158 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@160 ($generated@@158 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@158 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@160 (type $generated@@168))))
(= (type ($generated@@156 $generated@@168 $generated@@169 $generated@@170)) $generated@@171))
 :pattern ( ($generated@@156 $generated@@168 $generated@@169 $generated@@170))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 (type $generated@@175)))
(let (($generated@@177 (type $generated@@173)))
(= (type ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@158 $generated@@177 $generated@@176))))
 :pattern ( ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@160 (type $generated@@178))))
 (=> (= (type $generated@@181) $generated@@182) (= ($generated@@156 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@179 $generated@@180) $generated@@181)))
 :weight 0
))) (and (and (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@156 ($generated@@161 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@156 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@156 ($generated@@161 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@156 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or true (= ($generated@@156 ($generated@@161 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@156 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ) (! (= (type ($generated@@157 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@158 $generated@@89 $generated@@4))
 :pattern ( ($generated@@157 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@64 (type $generated@@210))))
 (=> (and (and (and (and (= (type $generated@@205) $generated@@89) (= (type $generated@@206) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@207) ($generated@@63 $generated@@4))) (= (type $generated@@209) $generated@@89)) (= (type $generated@@210) ($generated@@63 $generated@@211))) (= ($generated@@0 ($generated@@156 ($generated@@157 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))  (=> (and (not (= $generated@@209 $generated@@205)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@206 $generated@@209) $generated@@207))) $generated@@208))))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))
)))
(assert  (and (and (forall (($generated@@220 T@U) ) (! (= (type ($generated@@212 $generated@@220)) $generated@@70)
 :pattern ( ($generated@@212 $generated@@220))
)) (forall (($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(= (type ($generated@@213 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@213 $generated@@221))
))) (= (type $generated@@218) $generated@@70)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ) (!  (=> (and (and (= (type $generated@@223) $generated@@70) (= (type $generated@@224) $generated@@71)) (or ($generated@@214 ($generated@@213 $generated@@224) $generated@@225) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@224)) (and ($generated@@215 $generated@@225) (=> (not ($generated@@216 $generated@@225)) ($generated@@217 ($generated@@147 $generated@@224 ($generated@@148 1)) (+ $generated@@225 1))))) (=> (=> (< 0 ($generated@@149 $generated@@224)) (or ($generated@@216 $generated@@225) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@224 ($generated@@148 1)) (+ $generated@@225 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@224)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@71) ($generated@@69 $generated@@226 $generated@@224)) ($generated@@214 $generated@@226 $generated@@225))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@223) $generated@@226 $generated@@225))
))))) (= ($generated@@68 ($generated@@212 $generated@@223) ($generated@@213 $generated@@224) $generated@@225)  (and (=> (< 0 ($generated@@149 $generated@@224)) (or ($generated@@216 $generated@@225) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@224 ($generated@@148 1)) (+ $generated@@225 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@224)) (exists (($generated@@227 T@U) ) (!  (and (= (type $generated@@227) $generated@@71) (and ($generated@@69 $generated@@227 $generated@@224) ($generated@@68 ($generated@@212 $generated@@223) $generated@@227 $generated@@225)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@223) $generated@@227 $generated@@225))
)))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@212 $generated@@223) ($generated@@213 $generated@@224) $generated@@225))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Int) ) (!  (=> (and (and (= (type $generated@@230) $generated@@70) (= (type $generated@@231) $generated@@71)) (or ($generated@@217 ($generated@@213 $generated@@231) $generated@@232) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@231)) (and ($generated@@228 $generated@@232) (=> (not ($generated@@229 $generated@@232)) ($generated@@214 ($generated@@147 $generated@@231 ($generated@@148 1)) (+ $generated@@232 1))))) (=> (=> (< 0 ($generated@@149 $generated@@231)) (or ($generated@@229 $generated@@232) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@231 ($generated@@148 1)) (+ $generated@@232 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@231)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@71) ($generated@@69 $generated@@233 $generated@@231)) ($generated@@217 $generated@@233 $generated@@232))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@230) $generated@@233 $generated@@232))
))))) (= ($generated@@78 ($generated@@212 $generated@@230) ($generated@@213 $generated@@231) $generated@@232)  (and (=> (< 0 ($generated@@149 $generated@@231)) (or ($generated@@229 $generated@@232) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@231 ($generated@@148 1)) (+ $generated@@232 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@231)) (exists (($generated@@234 T@U) ) (!  (and (= (type $generated@@234) $generated@@71) (and ($generated@@69 $generated@@234 $generated@@231) ($generated@@78 ($generated@@212 $generated@@230) $generated@@234 $generated@@232)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@230) $generated@@234 $generated@@232))
)))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@212 $generated@@230) ($generated@@213 $generated@@231) $generated@@232))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@235 T@U) ($generated@@236 Int) ($generated@@237 T@U) ) (!  (=> (and (and (= (type $generated@@235) $generated@@70) (= (type $generated@@237) $generated@@71)) (= $generated@@237 ($generated@@148 0))) (not ($generated@@68 $generated@@235 $generated@@237 $generated@@236)))
 :pattern ( ($generated@@68 $generated@@235 $generated@@237 $generated@@236))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@238 T@U) ($generated@@239 Int) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@70) (= (type $generated@@240) $generated@@71)) (= $generated@@240 ($generated@@148 0))) (not ($generated@@78 $generated@@238 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@78 $generated@@238 $generated@@240 $generated@@239))
))))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@219 $generated@@241) $generated@@241)
 :pattern ( ($generated@@219 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@213 $generated@@242) $generated@@242)
 :pattern ( ($generated@@213 $generated@@242))
)))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@215 $generated@@243) (not (= 0 $generated@@67))) true)
 :pattern ( ($generated@@216 $generated@@243))
))))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@244 Int) ) (!  (=> (or ($generated@@228 $generated@@244) (not (= 0 $generated@@67))) true)
 :pattern ( ($generated@@229 $generated@@244))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Int) ) (!  (=> (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@71)) (or ($generated@@214 ($generated@@213 $generated@@246) ($generated@@219 $generated@@247)) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@246)) (and ($generated@@215 $generated@@247) (=> (not ($generated@@216 $generated@@247)) ($generated@@217 ($generated@@147 $generated@@246 ($generated@@148 1)) (+ $generated@@247 1))))) (=> (=> (< 0 ($generated@@149 $generated@@246)) (or ($generated@@216 $generated@@247) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@246 ($generated@@148 1)) (+ $generated@@247 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@246)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@71) ($generated@@69 $generated@@248 $generated@@246)) ($generated@@214 $generated@@248 $generated@@247))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@245) $generated@@248 $generated@@247))
))))) (= ($generated@@68 ($generated@@212 $generated@@245) ($generated@@213 $generated@@246) ($generated@@219 $generated@@247))  (and (=> (< 0 ($generated@@149 $generated@@246)) (or ($generated@@216 $generated@@247) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@246 ($generated@@148 1)) (+ $generated@@247 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@246)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@71) (and ($generated@@69 $generated@@249 $generated@@246) ($generated@@68 ($generated@@212 $generated@@245) $generated@@249 $generated@@247)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@245) $generated@@249 $generated@@247))
)))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@212 $generated@@245) ($generated@@213 $generated@@246) ($generated@@219 $generated@@247)))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Int) ) (!  (=> (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@71)) (or ($generated@@217 ($generated@@213 $generated@@251) ($generated@@219 $generated@@252)) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@251)) (and ($generated@@228 $generated@@252) (=> (not ($generated@@229 $generated@@252)) ($generated@@214 ($generated@@147 $generated@@251 ($generated@@148 1)) (+ $generated@@252 1))))) (=> (=> (< 0 ($generated@@149 $generated@@251)) (or ($generated@@229 $generated@@252) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@251 ($generated@@148 1)) (+ $generated@@252 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@251)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@71) ($generated@@69 $generated@@253 $generated@@251)) ($generated@@217 $generated@@253 $generated@@252))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@250) $generated@@253 $generated@@252))
))))) (= ($generated@@78 ($generated@@212 $generated@@250) ($generated@@213 $generated@@251) ($generated@@219 $generated@@252))  (and (=> (< 0 ($generated@@149 $generated@@251)) (or ($generated@@229 $generated@@252) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@251 ($generated@@148 1)) (+ $generated@@252 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@251)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@71) (and ($generated@@69 $generated@@254 $generated@@251) ($generated@@78 ($generated@@212 $generated@@250) $generated@@254 $generated@@252)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@250) $generated@@254 $generated@@252))
)))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@212 $generated@@250) ($generated@@213 $generated@@251) ($generated@@219 $generated@@252)))
))))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 15)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Int) ) (!  (=> (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@71)) (= ($generated@@68 ($generated@@212 $generated@@263) $generated@@264 $generated@@265) ($generated@@68 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 Int) ) (!  (=> (and (= (type $generated@@266) $generated@@70) (= (type $generated@@267) $generated@@71)) (= ($generated@@78 ($generated@@212 $generated@@266) $generated@@267 $generated@@268) ($generated@@78 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@61) (= (type $generated@@274) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@269 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@86 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@269 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 16)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@88 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@93 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@93 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 17)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@88 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@93 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@93 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) $generated@@71)) (and ($generated@@311 $generated@@313) (<= ($generated@@149 $generated@@313) ($generated@@149 $generated@@312)))) (and (= ($generated@@311 ($generated@@147 $generated@@312 $generated@@313)) ($generated@@311 $generated@@312)) (= ($generated@@149 ($generated@@147 $generated@@312 $generated@@313)) (- ($generated@@149 $generated@@312) ($generated@@149 $generated@@313)))))
 :pattern ( ($generated@@147 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 Int) ) (!  (=> (<= 0 $generated@@314) (and ($generated@@311 ($generated@@148 $generated@@314)) (= ($generated@@149 ($generated@@148 $generated@@314)) $generated@@314)))
 :pattern ( ($generated@@148 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@279 (type $generated@@315))))
(let (($generated@@317 ($generated@@278 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@277 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@276 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) ($generated@@0 ($generated@@93 ($generated@@275 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@275 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@297 (type $generated@@319))))
(let (($generated@@321 ($generated@@296 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@295 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@294 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@93 ($generated@@293 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@293 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@71) (= (type $generated@@324) $generated@@71)) (or (or ($generated@@72 $generated@@323 $generated@@324) (= $generated@@323 $generated@@324)) ($generated@@72 $generated@@324 $generated@@323)))
 :pattern ( ($generated@@72 $generated@@323 $generated@@324) ($generated@@72 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@88 $generated@@71 $generated@@4)) (= (type $generated@@328) $generated@@61)) (= (type $generated@@329) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@327 ($generated@@325 $generated@@328) $generated@@329) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@71) ($generated@@0 ($generated@@93 $generated@@327 $generated@@330))) ($generated@@269 $generated@@330 $generated@@328 $generated@@329))
 :pattern ( ($generated@@93 $generated@@327 $generated@@330))
))))
 :pattern ( ($generated@@86 $generated@@327 ($generated@@325 $generated@@328) $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@88 $generated@@71 $generated@@4)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@333 ($generated@@331 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@71) ($generated@@0 ($generated@@93 $generated@@333 $generated@@336))) ($generated@@269 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@93 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@86 $generated@@333 ($generated@@331 $generated@@334) $generated@@335))
)))
(assert  (and (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (= (type ($generated@@337 $generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@279 (type $generated@@341))))
(let (($generated@@343 ($generated@@278 (type $generated@@341))))
(= (type ($generated@@338 $generated@@341)) ($generated@@88 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@338 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (= (type $generated@@344) ($generated@@277 $generated@@71 $generated@@71)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@344 ($generated@@337 $generated@@345 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@71) ($generated@@0 ($generated@@93 ($generated@@275 $generated@@344) $generated@@348))) (and ($generated@@269 ($generated@@93 ($generated@@338 $generated@@344) $generated@@348) $generated@@346 $generated@@347) ($generated@@269 $generated@@348 $generated@@345 $generated@@347)))
 :pattern ( ($generated@@93 ($generated@@338 $generated@@344) $generated@@348))
 :pattern ( ($generated@@93 ($generated@@275 $generated@@344) $generated@@348))
))))
 :pattern ( ($generated@@86 $generated@@344 ($generated@@337 $generated@@345 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@297 (type $generated@@353))))
(let (($generated@@355 ($generated@@296 (type $generated@@353))))
(= (type ($generated@@350 $generated@@353)) ($generated@@88 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@350 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (and (= (type $generated@@356) ($generated@@295 $generated@@71 $generated@@71)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) $generated@@61)) (= (type $generated@@359) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@356 ($generated@@349 $generated@@357 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@71) ($generated@@0 ($generated@@93 ($generated@@293 $generated@@356) $generated@@360))) (and ($generated@@269 ($generated@@93 ($generated@@350 $generated@@356) $generated@@360) $generated@@358 $generated@@359) ($generated@@269 $generated@@360 $generated@@357 $generated@@359)))
 :pattern ( ($generated@@93 ($generated@@350 $generated@@356) $generated@@360))
 :pattern ( ($generated@@93 ($generated@@293 $generated@@356) $generated@@360))
))))
 :pattern ( ($generated@@86 $generated@@356 ($generated@@349 $generated@@357 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@71) (= (type $generated@@362) $generated@@71)) (= ($generated@@69 $generated@@361 $generated@@362) ($generated@@72 $generated@@361 $generated@@362)))
 :pattern ( ($generated@@69 $generated@@361 $generated@@362))
)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 Int) ) (!  (=> (and (and (= (type $generated@@363) $generated@@70) (= (type $generated@@364) $generated@@71)) (or ($generated@@214 $generated@@364 $generated@@365) (not (= 2 $generated@@67)))) true)
 :pattern ( ($generated@@68 $generated@@363 $generated@@364 $generated@@365))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 Int) ) (!  (=> (and (and (= (type $generated@@366) $generated@@70) (= (type $generated@@367) $generated@@71)) (or ($generated@@217 $generated@@367 $generated@@368) (not (= 2 $generated@@67)))) true)
 :pattern ( ($generated@@78 $generated@@366 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@370 T@T) ) (! (= (type ($generated@@369 $generated@@370)) ($generated@@88 $generated@@370 $generated@@4))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@297 (type $generated@@371))))
(let (($generated@@373 ($generated@@296 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@295 $generated@@373 $generated@@372)) (= (= $generated@@371 ($generated@@294 $generated@@373 $generated@@372)) (= ($generated@@293 $generated@@371) ($generated@@369 $generated@@373))))))
 :pattern ( ($generated@@293 $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@71) (<= 0 ($generated@@149 $generated@@374)))
 :pattern ( ($generated@@149 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@258 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@257 $generated@@376)) (<= 0 ($generated@@256 $generated@@375))))
 :pattern ( ($generated@@256 $generated@@375))
)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 Int) ) (!  (=> (and (and (= (type $generated@@377) $generated@@70) (= (type $generated@@378) $generated@@71)) (or ($generated@@214 $generated@@378 $generated@@379) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@378)) (and ($generated@@215 $generated@@379) (=> (not ($generated@@216 $generated@@379)) ($generated@@217 ($generated@@147 $generated@@378 ($generated@@148 1)) (+ $generated@@379 1))))) (=> (=> (< 0 ($generated@@149 $generated@@378)) (or ($generated@@216 $generated@@379) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@378 ($generated@@148 1)) (+ $generated@@379 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@378)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@71) ($generated@@69 $generated@@380 $generated@@378)) ($generated@@214 $generated@@380 $generated@@379))
 :pattern ( ($generated@@68 $generated@@377 $generated@@380 $generated@@379))
))))) (= ($generated@@68 ($generated@@212 $generated@@377) $generated@@378 $generated@@379)  (and (=> (< 0 ($generated@@149 $generated@@378)) (or ($generated@@216 $generated@@379) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@378 ($generated@@148 1)) (+ $generated@@379 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@71) (and ($generated@@69 $generated@@381 $generated@@378) ($generated@@68 $generated@@377 $generated@@381 $generated@@379)))
 :pattern ( ($generated@@68 $generated@@377 $generated@@381 $generated@@379))
)))))))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@377) $generated@@378 $generated@@379))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 Int) ) (!  (=> (and (and (= (type $generated@@382) $generated@@70) (= (type $generated@@383) $generated@@71)) (or ($generated@@217 $generated@@383 $generated@@384) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@383)) (and ($generated@@228 $generated@@384) (=> (not ($generated@@229 $generated@@384)) ($generated@@214 ($generated@@147 $generated@@383 ($generated@@148 1)) (+ $generated@@384 1))))) (=> (=> (< 0 ($generated@@149 $generated@@383)) (or ($generated@@229 $generated@@384) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@383 ($generated@@148 1)) (+ $generated@@384 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@383)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) ($generated@@69 $generated@@385 $generated@@383)) ($generated@@217 $generated@@385 $generated@@384))
 :pattern ( ($generated@@78 $generated@@382 $generated@@385 $generated@@384))
))))) (= ($generated@@78 ($generated@@212 $generated@@382) $generated@@383 $generated@@384)  (and (=> (< 0 ($generated@@149 $generated@@383)) (or ($generated@@229 $generated@@384) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@383 ($generated@@148 1)) (+ $generated@@384 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@71) (and ($generated@@69 $generated@@386 $generated@@383) ($generated@@78 $generated@@382 $generated@@386 $generated@@384)))
 :pattern ( ($generated@@78 $generated@@382 $generated@@386 $generated@@384))
)))))))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@382) $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@388 T@U) ) (! (= (type ($generated@@387 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@61) (= (type $generated@@390) $generated@@61)) (= ($generated@@387 ($generated@@337 $generated@@389 $generated@@390)) $generated@@389))
 :pattern ( ($generated@@337 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@61) (= (type $generated@@394) $generated@@61)) (= ($generated@@391 ($generated@@337 $generated@@393 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@337 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@61) (= (type $generated@@396) $generated@@61)) (= ($generated@@84 ($generated@@337 $generated@@395 $generated@@396)) $generated@@58))
 :pattern ( ($generated@@337 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (= (type ($generated@@397 $generated@@398)) $generated@@61)
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@61) (= (type $generated@@400) $generated@@61)) (= ($generated@@397 ($generated@@349 $generated@@399 $generated@@400)) $generated@@399))
 :pattern ( ($generated@@349 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (= (type ($generated@@401 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@61) (= (type $generated@@404) $generated@@61)) (= ($generated@@401 ($generated@@349 $generated@@403 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@349 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@61) (= (type $generated@@406) $generated@@61)) (= ($generated@@84 ($generated@@349 $generated@@405 $generated@@406)) $generated@@59))
 :pattern ( ($generated@@349 $generated@@405 $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) $generated@@61)
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ($generated@@411 Int) ) (! (let (($generated@@412 ($generated@@258 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410 $generated@@411)) $generated@@412))
 :pattern ( ($generated@@408 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@257 $generated@@71)) (= (type $generated@@414) $generated@@61)) (= (type $generated@@415) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@413 ($generated@@407 $generated@@414) $generated@@415) (forall (($generated@@416 Int) ) (!  (=> (and (<= 0 $generated@@416) (< $generated@@416 ($generated@@256 $generated@@413))) ($generated@@269 ($generated@@408 $generated@@413 $generated@@416) $generated@@414 $generated@@415))
 :pattern ( ($generated@@408 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@86 $generated@@413 ($generated@@407 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 Int) ) (! (= ($generated@@417 ($generated@@87 $generated@@418)) $generated@@418)
 :pattern ( ($generated@@87 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (= (type ($generated@@419 $generated@@420)) $generated@@61)
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@61) (= ($generated@@419 ($generated@@325 $generated@@421)) $generated@@421))
 :pattern ( ($generated@@325 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@61) (= ($generated@@84 ($generated@@325 $generated@@422)) $generated@@54))
 :pattern ( ($generated@@325 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (= (type ($generated@@423 $generated@@424)) $generated@@61)
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@61) (= ($generated@@423 ($generated@@331 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@331 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@61) (= ($generated@@84 ($generated@@331 $generated@@426)) $generated@@55))
 :pattern ( ($generated@@331 $generated@@426))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) $generated@@61)
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) $generated@@61)
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@61) (= ($generated@@428 ($generated@@427 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@427 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@61) (= ($generated@@84 ($generated@@427 $generated@@432)) $generated@@56))
 :pattern ( ($generated@@427 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@61)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@61) (= ($generated@@433 ($generated@@407 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@407 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@61) (= ($generated@@84 ($generated@@407 $generated@@436)) $generated@@57))
 :pattern ( ($generated@@407 $generated@@436))
)))
(assert (forall (($generated@@438 T@T) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@438)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated@@437 $generated@@441 ($generated@@270 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@71) (= (type $generated@@443) $generated@@71)) (and (and (and (=> ($generated@@72 $generated@@442 $generated@@443) (not (= $generated@@442 $generated@@443))) (=> (and ($generated@@311 $generated@@442) (not ($generated@@311 $generated@@443))) ($generated@@72 $generated@@442 $generated@@443))) (=> (and ($generated@@311 $generated@@442) ($generated@@311 $generated@@443)) (= ($generated@@72 $generated@@442 $generated@@443) (< ($generated@@149 $generated@@442) ($generated@@149 $generated@@443))))) (=> (and ($generated@@72 $generated@@442 $generated@@443) ($generated@@311 $generated@@443)) ($generated@@311 $generated@@442))))
 :pattern ( ($generated@@72 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
 (not ($generated@@0 ($generated@@93 ($generated@@369 $generated@@445) $generated@@444))))
 :pattern ( (let (($generated@@445 (type $generated@@444)))
($generated@@93 ($generated@@369 $generated@@445) $generated@@444)))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@71) ($generated@@311 $generated@@446)) (= $generated@@446 ($generated@@148 ($generated@@149 $generated@@446))))
 :pattern ( ($generated@@149 $generated@@446))
 :pattern ( ($generated@@311 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@88 $generated@@71 $generated@@2)) (= (type $generated@@448) $generated@@61)) (= (type $generated@@449) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@447 ($generated@@427 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@71) (< 0 ($generated ($generated@@93 $generated@@447 $generated@@450)))) ($generated@@269 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@93 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@86 $generated@@447 ($generated@@427 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@71) (= (type $generated@@452) $generated@@71)) (and ($generated@@311 $generated@@452) (<= ($generated@@149 $generated@@452) ($generated@@149 $generated@@451)))) (or (and (= $generated@@452 ($generated@@148 0)) (= ($generated@@147 $generated@@451 $generated@@452) $generated@@451)) (and (not (= $generated@@452 ($generated@@148 0))) ($generated@@72 ($generated@@147 $generated@@451 $generated@@452) $generated@@451))))
 :pattern ( ($generated@@147 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@219 $generated@@453))) ($generated@@213 ($generated@@270 ($generated@@8 $generated@@453))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@219 $generated@@453))))
)))
(assert (forall (($generated@@454 T@U) ) (! (= ($generated@@270 ($generated@@213 $generated@@454)) ($generated@@213 ($generated@@270 $generated@@454)))
 :pattern ( ($generated@@270 ($generated@@213 $generated@@454)))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@258 (type $generated@@455))))
 (=> (and (= (type $generated@@455) ($generated@@257 $generated@@456)) (= ($generated@@256 $generated@@455) 0)) (= $generated@@455 ($generated@@255 $generated@@456))))
 :pattern ( ($generated@@256 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@458) $generated@@2)) ($generated@@86 $generated@@458 $generated@@46 $generated@@457))
 :pattern ( ($generated@@86 $generated@@458 $generated@@46 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@460) $generated@@3)) ($generated@@86 $generated@@460 $generated@@47 $generated@@459))
 :pattern ( ($generated@@86 $generated@@460 $generated@@47 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@462) $generated@@4)) ($generated@@86 $generated@@462 $generated@@44 $generated@@461))
 :pattern ( ($generated@@86 $generated@@462 $generated@@44 $generated@@461))
)))
(assert (= ($generated@@1 $generated@@463) 18))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@465) $generated@@463)) ($generated@@86 $generated@@465 $generated@@45 $generated@@464))
 :pattern ( ($generated@@86 $generated@@465 $generated@@45 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@467) $generated@@71)) ($generated@@86 $generated@@467 $generated@@48 $generated@@466))
 :pattern ( ($generated@@86 $generated@@467 $generated@@48 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 Int) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@71)) (= ($generated@@68 $generated@@470 $generated@@471 $generated@@472) ($generated@@68 $generated@@218 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@68 ($generated@@468 $generated@@470) $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@71)) (= ($generated@@78 $generated@@473 $generated@@474 $generated@@475) ($generated@@78 $generated@@218 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@78 ($generated@@468 $generated@@473) $generated@@474 $generated@@475))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@476 () T@U)
(declare-fun $generated@@477 () Int)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@479 () Int)
(declare-fun $generated@@480 () T@U)
(declare-fun $generated@@481 () T@U)
(declare-fun $generated@@482 () Int)
(declare-fun $generated@@483 () T@U)
(declare-fun $generated@@484 () T@U)
(declare-fun $generated@@485 () T@U)
(declare-fun $generated@@486 (T@U) Bool)
(declare-fun $generated@@487 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@476) $generated@@71) (= (type $generated@@478) $generated@@71)) (= (type $generated@@480) $generated@@71)) (= (type $generated@@481) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@483) ($generated@@158 $generated@@89 $generated@@4))) (= (type $generated@@484) $generated@@89)) (= (type $generated@@485) ($generated@@88 $generated@@89 $generated@@90))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@488 true))
(let (($generated@@489  (=> ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@311 ($generated@@213 ($generated@@148 1)))) (=> ($generated@@311 ($generated@@213 ($generated@@148 1))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476))) (=> (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476)) (=> (and (= $generated@@478 ($generated@@147 $generated@@476 ($generated@@148 1))) (= $generated@@479 (+ $generated@@477 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@217 $generated@@478 $generated@@479) (or ($generated@@78 ($generated@@212 $generated@@218) $generated@@478 $generated@@479) (=> (< 0 ($generated@@149 $generated@@478)) (or ($generated@@229 $generated@@479) ($generated@@68 ($generated@@212 ($generated@@212 $generated@@218)) ($generated@@147 $generated@@478 ($generated@@148 1)) (+ $generated@@479 1))))))) (=> (=> ($generated@@217 $generated@@478 $generated@@479) (or ($generated@@78 ($generated@@212 $generated@@218) $generated@@478 $generated@@479) (=> (< 0 ($generated@@149 $generated@@478)) (or ($generated@@229 $generated@@479) ($generated@@68 ($generated@@212 ($generated@@212 $generated@@218)) ($generated@@147 $generated@@478 ($generated@@148 1)) (+ $generated@@479 1)))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@217 $generated@@478 $generated@@479) (or ($generated@@78 ($generated@@212 $generated@@218) $generated@@478 $generated@@479) (=> (= ($generated@@219 0) ($generated@@149 $generated@@478)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@71) (and ($generated@@69 $generated@@490 $generated@@478) ($generated@@78 ($generated@@212 $generated@@218) $generated@@490 $generated@@479)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@218) $generated@@490 $generated@@479))
))))))))))))))))
(let (($generated@@491  (=> (< 0 ($generated@@149 $generated@@476)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@311 ($generated@@213 ($generated@@148 1)))) (=> ($generated@@311 ($generated@@213 ($generated@@148 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476))) (=> (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476)) (=> (and (= $generated@@480 ($generated@@147 $generated@@476 ($generated@@148 1))) ($generated@@86 $generated@@480 $generated@@48 $generated@@481)) (=> (and (and (= $generated@@482 (+ $generated@@477 1)) ($generated@@86 ($generated@@8 $generated@@482) $generated@@46 $generated@@481)) (and ($generated@@217 ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)) ($generated@@217 ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@489) (=> (= (ControlFlow 0 8) 7) $generated@@488)))))))))))
(let (($generated@@492 true))
(let (($generated@@493  (=> (= $generated@@483 ($generated@@157 $generated@@484 $generated@@485 $generated@@60 false)) (=> (and (and ($generated@@486 $generated@@481) ($generated@@487 $generated@@481)) (and (= $generated@@485 $generated@@481) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (!  (=> (= (type $generated@@494) $generated@@71) (=> (and ($generated@@68 ($generated@@212 $generated@@218) $generated@@494 $generated@@495) (or ($generated@@72 $generated@@494 $generated@@476) (and (= $generated@@494 $generated@@476) (and (<= 0 $generated@@495) (< $generated@@495 $generated@@477))))) true))
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@491) (=> (= (ControlFlow 0 11) 1) $generated@@492))))))
(let (($generated@@496  (=> (and (and (and ($generated@@486 $generated@@485) ($generated@@487 $generated@@485)) (= 3 $generated@@67)) (and (and ($generated@@214 $generated@@476 $generated@@477) (and ($generated@@68 ($generated@@212 $generated@@218) $generated@@476 $generated@@477) (and (=> (< 0 ($generated@@149 $generated@@476)) (or ($generated@@216 $generated@@477) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@476)) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@71) (and ($generated@@69 $generated@@497 $generated@@476) ($generated@@68 ($generated@@212 $generated@@218) $generated@@497 $generated@@477)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@218) $generated@@497 $generated@@477))
)))))) (= (ControlFlow 0 12) 11))) $generated@@493)))
$generated@@496)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 () Int)
(declare-fun $generated@@68 (T@U T@U Int) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 (Int) T@U)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@150 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U Int) Bool)
(declare-fun $generated@@209 (Int) Bool)
(declare-fun $generated@@210 (Int) Bool)
(declare-fun $generated@@211 (Int) Int)
(declare-fun $generated@@231 (T@T) T@U)
(declare-fun $generated@@232 (T@U) Int)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 (T@T T@T) T@U)
(declare-fun $generated@@250 (T@T T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@T T@T) T@U)
(declare-fun $generated@@268 (T@T T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@322 (T@U T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U Int) T@U)
(declare-fun $generated@@377 (T@U) Int)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert  (and (= ($generated@@1 $generated@@70) 9) (= ($generated@@1 $generated@@71) 10)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@73) $generated@@70) (= (type $generated@@75) $generated@@71)) (= (type $generated@@76) $generated@@71)) (= (type $generated@@77) $generated@@71)) ($generated@@72 $generated@@75 $generated@@76)) ($generated@@68 $generated@@73 $generated@@75 $generated@@74)) ($generated@@68 $generated@@73 $generated@@76 $generated@@74))
 :pattern ( ($generated@@68 $generated@@73 $generated@@75 $generated@@74) ($generated@@69 $generated@@75 $generated@@77) ($generated@@69 $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@62)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@64 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@61)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (and (= (type $generated@@138) $generated@@71) (= (type $generated@@139) $generated@@71)) (= (type $generated@@140) $generated@@71)) (and ($generated@@72 $generated@@138 $generated@@139) ($generated@@72 $generated@@139 $generated@@140))) ($generated@@72 $generated@@138 $generated@@140))
 :pattern ( ($generated@@72 $generated@@138 $generated@@139) ($generated@@72 $generated@@139 $generated@@140))
 :pattern ( ($generated@@72 $generated@@138 $generated@@139) ($generated@@72 $generated@@138 $generated@@140))
)))
(assert  (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@141 $generated@@144 $generated@@145)) $generated@@71)
 :pattern ( ($generated@@141 $generated@@144 $generated@@145))
)) (forall (($generated@@146 Int) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@71)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 Int) ) (!  (=> (= (type $generated@@147) $generated@@71) (=> (and (and (<= 0 $generated@@148) (<= 0 $generated@@149)) (<= (+ $generated@@148 $generated@@149) ($generated@@143 $generated@@147))) (= ($generated@@141 ($generated@@141 $generated@@147 ($generated@@142 $generated@@148)) ($generated@@142 $generated@@149)) ($generated@@141 $generated@@147 ($generated@@142 (+ $generated@@148 $generated@@149))))))
 :pattern ( ($generated@@141 ($generated@@141 $generated@@147 ($generated@@142 $generated@@148)) ($generated@@142 $generated@@149)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@156 $generated@@157)) 14)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@152 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@154 (type $generated@@162))))
(= (type ($generated@@150 $generated@@162 $generated@@163 $generated@@164)) $generated@@165))
 :pattern ( ($generated@@150 $generated@@162 $generated@@163 $generated@@164))
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(let (($generated@@171 (type $generated@@167)))
(= (type ($generated@@155 $generated@@166 $generated@@167 $generated@@168 $generated@@169)) ($generated@@152 $generated@@171 $generated@@170))))
 :pattern ( ($generated@@155 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@154 (type $generated@@172))))
 (=> (= (type $generated@@175) $generated@@176) (= ($generated@@150 ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@173 $generated@@174) $generated@@175)))
 :weight 0
))) (and (and (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@150 ($generated@@155 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@150 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@150 ($generated@@155 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@150 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or true (= ($generated@@150 ($generated@@155 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@150 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ) (! (= (type ($generated@@151 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@152 $generated@@83 $generated@@4))
 :pattern ( ($generated@@151 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Bool) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@64 (type $generated@@204))))
 (=> (and (and (and (and (= (type $generated@@199) $generated@@83) (= (type $generated@@200) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@201) ($generated@@63 $generated@@4))) (= (type $generated@@203) $generated@@83)) (= (type $generated@@204) ($generated@@63 $generated@@205))) (= ($generated@@0 ($generated@@150 ($generated@@151 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))  (=> (and (not (= $generated@@203 $generated@@199)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@200 $generated@@203) $generated@@201))) $generated@@202))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))
)))
(assert  (and (forall (($generated@@212 T@U) ) (! (= (type ($generated@@206 $generated@@212)) $generated@@70)
 :pattern ( ($generated@@206 $generated@@212))
)) (forall (($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(= (type ($generated@@207 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@207 $generated@@213))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Int) ) (!  (=> (and (and (= (type $generated@@215) $generated@@70) (= (type $generated@@216) $generated@@71)) (or ($generated@@208 ($generated@@207 $generated@@216) $generated@@217) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@143 $generated@@216)) (and ($generated@@209 $generated@@217) (=> (not ($generated@@210 $generated@@217)) ($generated@@208 ($generated@@141 $generated@@216 ($generated@@142 1)) (+ $generated@@217 1))))) (=> (=> (< 0 ($generated@@143 $generated@@216)) (or ($generated@@210 $generated@@217) ($generated@@68 ($generated@@206 $generated@@215) ($generated@@141 $generated@@216 ($generated@@142 1)) (+ $generated@@217 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@216)) (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@71) ($generated@@69 $generated@@218 $generated@@216)) ($generated@@208 $generated@@218 $generated@@217))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@215) $generated@@218 $generated@@217))
))))) (= ($generated@@68 ($generated@@206 $generated@@215) ($generated@@207 $generated@@216) $generated@@217)  (and (=> (< 0 ($generated@@143 $generated@@216)) (or ($generated@@210 $generated@@217) ($generated@@68 ($generated@@206 $generated@@215) ($generated@@141 $generated@@216 ($generated@@142 1)) (+ $generated@@217 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@216)) (exists (($generated@@219 T@U) ) (!  (and (= (type $generated@@219) $generated@@71) (and ($generated@@69 $generated@@219 $generated@@216) ($generated@@68 ($generated@@206 $generated@@215) $generated@@219 $generated@@217)))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@215) $generated@@219 $generated@@217))
)))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@206 $generated@@215) ($generated@@207 $generated@@216) $generated@@217))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@70) (= (type $generated@@222) $generated@@71)) (= $generated@@222 ($generated@@142 0))) (not ($generated@@68 $generated@@220 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@68 $generated@@220 $generated@@222 $generated@@221))
))))
(assert (forall (($generated@@223 Int) ) (! (= ($generated@@211 $generated@@223) $generated@@223)
 :pattern ( ($generated@@211 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@207 $generated@@224) $generated@@224)
 :pattern ( ($generated@@207 $generated@@224))
)))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@225 Int) ) (!  (=> (or ($generated@@209 $generated@@225) (not (= 0 $generated@@67))) true)
 :pattern ( ($generated@@210 $generated@@225))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Int) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) $generated@@71)) (or ($generated@@208 ($generated@@207 $generated@@227) ($generated@@211 $generated@@228)) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@143 $generated@@227)) (and ($generated@@209 $generated@@228) (=> (not ($generated@@210 $generated@@228)) ($generated@@208 ($generated@@141 $generated@@227 ($generated@@142 1)) (+ $generated@@228 1))))) (=> (=> (< 0 ($generated@@143 $generated@@227)) (or ($generated@@210 $generated@@228) ($generated@@68 ($generated@@206 $generated@@226) ($generated@@141 $generated@@227 ($generated@@142 1)) (+ $generated@@228 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@227)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@71) ($generated@@69 $generated@@229 $generated@@227)) ($generated@@208 $generated@@229 $generated@@228))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@226) $generated@@229 $generated@@228))
))))) (= ($generated@@68 ($generated@@206 $generated@@226) ($generated@@207 $generated@@227) ($generated@@211 $generated@@228))  (and (=> (< 0 ($generated@@143 $generated@@227)) (or ($generated@@210 $generated@@228) ($generated@@68 ($generated@@206 $generated@@226) ($generated@@141 $generated@@227 ($generated@@142 1)) (+ $generated@@228 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@227)) (exists (($generated@@230 T@U) ) (!  (and (= (type $generated@@230) $generated@@71) (and ($generated@@69 $generated@@230 $generated@@227) ($generated@@68 ($generated@@206 $generated@@226) $generated@@230 $generated@@228)))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@226) $generated@@230 $generated@@228))
)))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@206 $generated@@226) ($generated@@207 $generated@@227) ($generated@@211 $generated@@228)))
))))
(assert  (and (and (forall (($generated@@235 T@T) ) (= ($generated@@1 ($generated@@233 $generated@@235)) 15)) (forall (($generated@@236 T@T) ) (! (= ($generated@@234 ($generated@@233 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
))) (forall (($generated@@237 T@T) ) (! (= (type ($generated@@231 $generated@@237)) ($generated@@233 $generated@@237))
 :pattern ( ($generated@@231 $generated@@237))
))))
(assert (forall (($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@238)) 0)
 :pattern ( ($generated@@231 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Int) ) (!  (=> (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@71)) (= ($generated@@68 ($generated@@206 $generated@@239) $generated@@240 $generated@@241) ($generated@@68 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@71)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@61) (= (type $generated@@247) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@242 ($generated@@243 $generated@@245) $generated@@246 $generated@@247) ($generated@@80 $generated@@245 $generated@@246 $generated@@247)))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@245) $generated@@246 $generated@@247))
)))
(assert  (and (and (and (and (forall (($generated@@253 T@T) ($generated@@254 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@253 $generated@@254)) 16)) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@255 $generated@@256)) $generated@@255)
 :pattern ( ($generated@@250 $generated@@255 $generated@@256))
))) (forall (($generated@@257 T@T) ($generated@@258 T@T) ) (! (= ($generated@@252 ($generated@@250 $generated@@257 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@250 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@251 (type $generated@@259))))
(= (type ($generated@@248 $generated@@259)) ($generated@@82 $generated@@260 $generated@@4)))
 :pattern ( ($generated@@248 $generated@@259))
))) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= (type ($generated@@249 $generated@@261 $generated@@262)) ($generated@@250 $generated@@261 $generated@@262))
 :pattern ( ($generated@@249 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@T) ) (! (let (($generated@@265 (type $generated@@263)))
 (not ($generated@@0 ($generated@@87 ($generated@@248 ($generated@@249 $generated@@265 $generated@@264)) $generated@@263))))
 :pattern ( (let (($generated@@265 (type $generated@@263)))
($generated@@87 ($generated@@248 ($generated@@249 $generated@@265 $generated@@264)) $generated@@263)))
)))
(assert  (and (and (and (and (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@271 $generated@@272)) 17)) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@273 $generated@@274)) $generated@@273)
 :pattern ( ($generated@@268 $generated@@273 $generated@@274))
))) (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@268 $generated@@275 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@268 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@269 (type $generated@@277))))
(= (type ($generated@@266 $generated@@277)) ($generated@@82 $generated@@278 $generated@@4)))
 :pattern ( ($generated@@266 $generated@@277))
))) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= (type ($generated@@267 $generated@@279 $generated@@280)) ($generated@@268 $generated@@279 $generated@@280))
 :pattern ( ($generated@@267 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@T) ) (! (let (($generated@@283 (type $generated@@281)))
 (not ($generated@@0 ($generated@@87 ($generated@@266 ($generated@@267 $generated@@283 $generated@@282)) $generated@@281))))
 :pattern ( (let (($generated@@283 (type $generated@@281)))
($generated@@87 ($generated@@266 ($generated@@267 $generated@@283 $generated@@282)) $generated@@281)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@71) (= (type $generated@@286) $generated@@71)) (and ($generated@@284 $generated@@286) (<= ($generated@@143 $generated@@286) ($generated@@143 $generated@@285)))) (and (= ($generated@@284 ($generated@@141 $generated@@285 $generated@@286)) ($generated@@284 $generated@@285)) (= ($generated@@143 ($generated@@141 $generated@@285 $generated@@286)) (- ($generated@@143 $generated@@285) ($generated@@143 $generated@@286)))))
 :pattern ( ($generated@@141 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 Int) ) (!  (=> (<= 0 $generated@@287) (and ($generated@@284 ($generated@@142 $generated@@287)) (= ($generated@@143 ($generated@@142 $generated@@287)) $generated@@287)))
 :pattern ( ($generated@@142 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@252 (type $generated@@288))))
(let (($generated@@290 ($generated@@251 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@250 $generated@@290 $generated@@289)) (or (= $generated@@288 ($generated@@249 $generated@@290 $generated@@289)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) ($generated@@0 ($generated@@87 ($generated@@248 $generated@@288) $generated@@291)))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@248 $generated@@288))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@270 (type $generated@@292))))
(let (($generated@@294 ($generated@@269 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@268 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@267 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@87 ($generated@@266 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@266 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@71) (= (type $generated@@297) $generated@@71)) (or (or ($generated@@72 $generated@@296 $generated@@297) (= $generated@@296 $generated@@297)) ($generated@@72 $generated@@297 $generated@@296)))
 :pattern ( ($generated@@72 $generated@@296 $generated@@297) ($generated@@72 $generated@@297 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@61)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@300) ($generated@@82 $generated@@71 $generated@@4)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@300 ($generated@@298 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@71) ($generated@@0 ($generated@@87 $generated@@300 $generated@@303))) ($generated@@242 $generated@@303 $generated@@301 $generated@@302))
 :pattern ( ($generated@@87 $generated@@300 $generated@@303))
))))
 :pattern ( ($generated@@80 $generated@@300 ($generated@@298 $generated@@301) $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) ($generated@@82 $generated@@71 $generated@@4)) (= (type $generated@@307) $generated@@61)) (= (type $generated@@308) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@306 ($generated@@304 $generated@@307) $generated@@308) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@71) ($generated@@0 ($generated@@87 $generated@@306 $generated@@309))) ($generated@@242 $generated@@309 $generated@@307 $generated@@308))
 :pattern ( ($generated@@87 $generated@@306 $generated@@309))
))))
 :pattern ( ($generated@@80 $generated@@306 ($generated@@304 $generated@@307) $generated@@308))
)))
(assert  (and (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@252 (type $generated@@314))))
(let (($generated@@316 ($generated@@251 (type $generated@@314))))
(= (type ($generated@@311 $generated@@314)) ($generated@@82 $generated@@316 $generated@@315))))
 :pattern ( ($generated@@311 $generated@@314))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (= (type $generated@@317) ($generated@@250 $generated@@71 $generated@@71)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) $generated@@61)) (= (type $generated@@320) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@317 ($generated@@310 $generated@@318 $generated@@319) $generated@@320) (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@71) ($generated@@0 ($generated@@87 ($generated@@248 $generated@@317) $generated@@321))) (and ($generated@@242 ($generated@@87 ($generated@@311 $generated@@317) $generated@@321) $generated@@319 $generated@@320) ($generated@@242 $generated@@321 $generated@@318 $generated@@320)))
 :pattern ( ($generated@@87 ($generated@@311 $generated@@317) $generated@@321))
 :pattern ( ($generated@@87 ($generated@@248 $generated@@317) $generated@@321))
))))
 :pattern ( ($generated@@80 $generated@@317 ($generated@@310 $generated@@318 $generated@@319) $generated@@320))
)))
(assert  (and (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (= (type ($generated@@322 $generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@324 $generated@@325))
)) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@270 (type $generated@@326))))
(let (($generated@@328 ($generated@@269 (type $generated@@326))))
(= (type ($generated@@323 $generated@@326)) ($generated@@82 $generated@@328 $generated@@327))))
 :pattern ( ($generated@@323 $generated@@326))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (= (type $generated@@329) ($generated@@268 $generated@@71 $generated@@71)) (= (type $generated@@330) $generated@@61)) (= (type $generated@@331) $generated@@61)) (= (type $generated@@332) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@329 ($generated@@322 $generated@@330 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@71) ($generated@@0 ($generated@@87 ($generated@@266 $generated@@329) $generated@@333))) (and ($generated@@242 ($generated@@87 ($generated@@323 $generated@@329) $generated@@333) $generated@@331 $generated@@332) ($generated@@242 $generated@@333 $generated@@330 $generated@@332)))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@329) $generated@@333))
 :pattern ( ($generated@@87 ($generated@@266 $generated@@329) $generated@@333))
))))
 :pattern ( ($generated@@80 $generated@@329 ($generated@@322 $generated@@330 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@71) (= (type $generated@@335) $generated@@71)) (= ($generated@@69 $generated@@334 $generated@@335) ($generated@@72 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@69 $generated@@334 $generated@@335))
)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 Int) ) (!  (=> (and (and (= (type $generated@@336) $generated@@70) (= (type $generated@@337) $generated@@71)) (or ($generated@@208 $generated@@337 $generated@@338) (not (= 2 $generated@@67)))) true)
 :pattern ( ($generated@@68 $generated@@336 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@82 $generated@@340 $generated@@4))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@270 (type $generated@@341))))
(let (($generated@@343 ($generated@@269 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@268 $generated@@343 $generated@@342)) (= (= $generated@@341 ($generated@@267 $generated@@343 $generated@@342)) (= ($generated@@266 $generated@@341) ($generated@@339 $generated@@343))))))
 :pattern ( ($generated@@266 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@71) (<= 0 ($generated@@143 $generated@@344)))
 :pattern ( ($generated@@143 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@234 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@233 $generated@@346)) (<= 0 ($generated@@232 $generated@@345))))
 :pattern ( ($generated@@232 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@61) (= (type $generated@@350) $generated@@61)) (= ($generated@@347 ($generated@@310 $generated@@349 $generated@@350)) $generated@@349))
 :pattern ( ($generated@@310 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@351 ($generated@@310 $generated@@353 $generated@@354)) $generated@@354))
 :pattern ( ($generated@@310 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@61) (= (type $generated@@356) $generated@@61)) (= ($generated@@78 ($generated@@310 $generated@@355 $generated@@356)) $generated@@58))
 :pattern ( ($generated@@310 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@61)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@61) (= (type $generated@@360) $generated@@61)) (= ($generated@@357 ($generated@@322 $generated@@359 $generated@@360)) $generated@@359))
 :pattern ( ($generated@@322 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@61)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@361 ($generated@@322 $generated@@363 $generated@@364)) $generated@@364))
 :pattern ( ($generated@@322 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@61) (= (type $generated@@366) $generated@@61)) (= ($generated@@78 ($generated@@322 $generated@@365 $generated@@366)) $generated@@59))
 :pattern ( ($generated@@322 $generated@@365 $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ($generated@@371 Int) ) (! (let (($generated@@372 ($generated@@234 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370 $generated@@371)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@233 $generated@@71)) (= (type $generated@@374) $generated@@61)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@367 $generated@@374) $generated@@375) (forall (($generated@@376 Int) ) (!  (=> (and (<= 0 $generated@@376) (< $generated@@376 ($generated@@232 $generated@@373))) ($generated@@242 ($generated@@368 $generated@@373 $generated@@376) $generated@@374 $generated@@375))
 :pattern ( ($generated@@368 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@367 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@378 Int) ) (! (= ($generated@@377 ($generated@@81 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@81 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (= (type ($generated@@379 $generated@@380)) $generated@@61)
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@61) (= ($generated@@379 ($generated@@298 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@298 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@61) (= ($generated@@78 ($generated@@298 $generated@@382)) $generated@@54))
 :pattern ( ($generated@@298 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (= (type ($generated@@383 $generated@@384)) $generated@@61)
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@61) (= ($generated@@383 ($generated@@304 $generated@@385)) $generated@@385))
 :pattern ( ($generated@@304 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@61) (= ($generated@@78 ($generated@@304 $generated@@386)) $generated@@55))
 :pattern ( ($generated@@304 $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) $generated@@61)
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) $generated@@61)
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@61) (= ($generated@@388 ($generated@@387 $generated@@391)) $generated@@391))
 :pattern ( ($generated@@387 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@61) (= ($generated@@78 ($generated@@387 $generated@@392)) $generated@@56))
 :pattern ( ($generated@@387 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (= (type ($generated@@393 $generated@@394)) $generated@@61)
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@393 ($generated@@367 $generated@@395)) $generated@@395))
 :pattern ( ($generated@@367 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@61) (= ($generated@@78 ($generated@@367 $generated@@396)) $generated@@57))
 :pattern ( ($generated@@367 $generated@@396))
)))
(assert (forall (($generated@@398 T@T) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated@@397 $generated@@401 ($generated@@243 $generated@@400)) $generated@@400))
 :pattern ( ($generated@@243 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@71) (= (type $generated@@403) $generated@@71)) (and (and (and (=> ($generated@@72 $generated@@402 $generated@@403) (not (= $generated@@402 $generated@@403))) (=> (and ($generated@@284 $generated@@402) (not ($generated@@284 $generated@@403))) ($generated@@72 $generated@@402 $generated@@403))) (=> (and ($generated@@284 $generated@@402) ($generated@@284 $generated@@403)) (= ($generated@@72 $generated@@402 $generated@@403) (< ($generated@@143 $generated@@402) ($generated@@143 $generated@@403))))) (=> (and ($generated@@72 $generated@@402 $generated@@403) ($generated@@284 $generated@@403)) ($generated@@284 $generated@@402))))
 :pattern ( ($generated@@72 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
 (not ($generated@@0 ($generated@@87 ($generated@@339 $generated@@405) $generated@@404))))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@87 ($generated@@339 $generated@@405) $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@71) ($generated@@284 $generated@@406)) (= $generated@@406 ($generated@@142 ($generated@@143 $generated@@406))))
 :pattern ( ($generated@@143 $generated@@406))
 :pattern ( ($generated@@284 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@82 $generated@@71 $generated@@2)) (= (type $generated@@408) $generated@@61)) (= (type $generated@@409) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@407 ($generated@@387 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@71) (< 0 ($generated ($generated@@87 $generated@@407 $generated@@410)))) ($generated@@242 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@87 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@80 $generated@@407 ($generated@@387 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@411) $generated@@71) (= (type $generated@@412) $generated@@71)) (and ($generated@@284 $generated@@412) (<= ($generated@@143 $generated@@412) ($generated@@143 $generated@@411)))) (or (and (= $generated@@412 ($generated@@142 0)) (= ($generated@@141 $generated@@411 $generated@@412) $generated@@411)) (and (not (= $generated@@412 ($generated@@142 0))) ($generated@@72 ($generated@@141 $generated@@411 $generated@@412) $generated@@411))))
 :pattern ( ($generated@@141 $generated@@411 $generated@@412))
)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 Int) ) (!  (=> (and (and (= (type $generated@@413) $generated@@70) (= (type $generated@@414) $generated@@71)) (or ($generated@@208 $generated@@414 $generated@@415) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@143 $generated@@414)) (and ($generated@@209 $generated@@415) (=> (not ($generated@@210 $generated@@415)) ($generated@@208 ($generated@@141 $generated@@414 ($generated@@142 1)) (+ $generated@@415 1))))) (=> (=> (< 0 ($generated@@143 $generated@@414)) (or ($generated@@210 $generated@@415) ($generated@@68 $generated@@413 ($generated@@141 $generated@@414 ($generated@@142 1)) (+ $generated@@415 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@414)) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@71) ($generated@@69 $generated@@416 $generated@@414)) ($generated@@208 $generated@@416 $generated@@415))
 :pattern ( ($generated@@68 $generated@@413 $generated@@416 $generated@@415))
))))) (= ($generated@@68 ($generated@@206 $generated@@413) $generated@@414 $generated@@415)  (and (=> (< 0 ($generated@@143 $generated@@414)) (or ($generated@@210 $generated@@415) ($generated@@68 $generated@@413 ($generated@@141 $generated@@414 ($generated@@142 1)) (+ $generated@@415 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@71) (and ($generated@@69 $generated@@417 $generated@@414) ($generated@@68 $generated@@413 $generated@@417 $generated@@415)))
 :pattern ( ($generated@@68 $generated@@413 $generated@@417 $generated@@415))
)))))))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@413) $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@418 Int) ) (! (= ($generated@@243 ($generated@@8 ($generated@@211 $generated@@418))) ($generated@@207 ($generated@@243 ($generated@@8 $generated@@418))))
 :pattern ( ($generated@@243 ($generated@@8 ($generated@@211 $generated@@418))))
)))
(assert (forall (($generated@@419 T@U) ) (! (= ($generated@@243 ($generated@@207 $generated@@419)) ($generated@@207 ($generated@@243 $generated@@419)))
 :pattern ( ($generated@@243 ($generated@@207 $generated@@419)))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@234 (type $generated@@420))))
 (=> (and (= (type $generated@@420) ($generated@@233 $generated@@421)) (= ($generated@@232 $generated@@420) 0)) (= $generated@@420 ($generated@@231 $generated@@421))))
 :pattern ( ($generated@@232 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@423) $generated@@2)) ($generated@@80 $generated@@423 $generated@@46 $generated@@422))
 :pattern ( ($generated@@80 $generated@@423 $generated@@46 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@425) $generated@@3)) ($generated@@80 $generated@@425 $generated@@47 $generated@@424))
 :pattern ( ($generated@@80 $generated@@425 $generated@@47 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@427) $generated@@4)) ($generated@@80 $generated@@427 $generated@@44 $generated@@426))
 :pattern ( ($generated@@80 $generated@@427 $generated@@44 $generated@@426))
)))
(assert (= ($generated@@1 $generated@@428) 18))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@430) $generated@@428)) ($generated@@80 $generated@@430 $generated@@45 $generated@@429))
 :pattern ( ($generated@@80 $generated@@430 $generated@@45 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@432) $generated@@71)) ($generated@@80 $generated@@432 $generated@@48 $generated@@431))
 :pattern ( ($generated@@80 $generated@@432 $generated@@48 $generated@@431))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@433 $generated@@435))
)) (= (type $generated@@434) $generated@@70)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 Int) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@71)) (= ($generated@@68 $generated@@436 $generated@@437 $generated@@438) ($generated@@68 $generated@@434 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@68 ($generated@@433 $generated@@436) $generated@@437 $generated@@438))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () T@U)
(declare-fun $generated@@440 () Int)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () Int)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 () Int)
(declare-fun $generated@@446 () T@U)
(declare-fun $generated@@447 () T@U)
(declare-fun $generated@@448 () T@U)
(declare-fun $generated@@449 (T@U) Bool)
(declare-fun $generated@@450 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@439) $generated@@71) (= (type $generated@@441) $generated@@71)) (= (type $generated@@443) $generated@@71)) (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@446) ($generated@@152 $generated@@83 $generated@@4))) (= (type $generated@@447) $generated@@83)) (= (type $generated@@448) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@451 true))
(let (($generated@@452  (=> ($generated@@68 ($generated@@206 $generated@@434) ($generated@@141 $generated@@439 ($generated@@142 1)) (+ $generated@@440 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@284 ($generated@@207 ($generated@@142 1)))) (=> ($generated@@284 ($generated@@207 ($generated@@142 1))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@143 ($generated@@207 ($generated@@142 1))) ($generated@@143 $generated@@439))) (=> (<= ($generated@@143 ($generated@@207 ($generated@@142 1))) ($generated@@143 $generated@@439)) (=> (and (= $generated@@441 ($generated@@141 $generated@@439 ($generated@@142 1))) (= $generated@@442 (+ $generated@@440 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@208 $generated@@441 $generated@@442) (or ($generated@@68 ($generated@@206 $generated@@434) $generated@@441 $generated@@442) (=> (< 0 ($generated@@143 $generated@@441)) (or ($generated@@210 $generated@@442) ($generated@@68 ($generated@@206 ($generated@@206 $generated@@434)) ($generated@@141 $generated@@441 ($generated@@142 1)) (+ $generated@@442 1))))))) (=> (=> ($generated@@208 $generated@@441 $generated@@442) (or ($generated@@68 ($generated@@206 $generated@@434) $generated@@441 $generated@@442) (=> (< 0 ($generated@@143 $generated@@441)) (or ($generated@@210 $generated@@442) ($generated@@68 ($generated@@206 ($generated@@206 $generated@@434)) ($generated@@141 $generated@@441 ($generated@@142 1)) (+ $generated@@442 1)))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@208 $generated@@441 $generated@@442) (or ($generated@@68 ($generated@@206 $generated@@434) $generated@@441 $generated@@442) (=> (= ($generated@@211 0) ($generated@@143 $generated@@441)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@71) (and ($generated@@69 $generated@@453 $generated@@441) ($generated@@68 ($generated@@206 $generated@@434) $generated@@453 $generated@@442)))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@434) $generated@@453 $generated@@442))
))))))))))))))))
(let (($generated@@454  (=> (< 0 ($generated@@143 $generated@@439)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@284 ($generated@@207 ($generated@@142 1)))) (=> ($generated@@284 ($generated@@207 ($generated@@142 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@143 ($generated@@207 ($generated@@142 1))) ($generated@@143 $generated@@439))) (=> (<= ($generated@@143 ($generated@@207 ($generated@@142 1))) ($generated@@143 $generated@@439)) (=> (and (= $generated@@443 ($generated@@141 $generated@@439 ($generated@@142 1))) ($generated@@80 $generated@@443 $generated@@48 $generated@@444)) (=> (and (and (= $generated@@445 (+ $generated@@440 1)) ($generated@@80 ($generated@@8 $generated@@445) $generated@@46 $generated@@444)) (and ($generated@@208 ($generated@@141 $generated@@439 ($generated@@142 1)) (+ $generated@@440 1)) ($generated@@208 ($generated@@141 $generated@@439 ($generated@@142 1)) (+ $generated@@440 1)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@452) (=> (= (ControlFlow 0 8) 7) $generated@@451)))))))))))
(let (($generated@@455 true))
(let (($generated@@456  (=> (= $generated@@446 ($generated@@151 $generated@@447 $generated@@448 $generated@@60 false)) (=> (and (and ($generated@@449 $generated@@444) ($generated@@450 $generated@@444)) (and (= $generated@@448 $generated@@444) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (!  (=> (= (type $generated@@457) $generated@@71) (=> (and ($generated@@68 ($generated@@206 $generated@@434) $generated@@457 $generated@@458) (or ($generated@@72 $generated@@457 $generated@@439) (and (= $generated@@457 $generated@@439) (and (<= 0 $generated@@458) (< $generated@@458 $generated@@440))))) true))
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@454) (=> (= (ControlFlow 0 11) 1) $generated@@455))))))
(let (($generated@@459  (=> (and (and (and ($generated@@449 $generated@@448) ($generated@@450 $generated@@448)) (= 3 $generated@@67)) (and (and ($generated@@208 $generated@@439 $generated@@440) (and ($generated@@68 ($generated@@206 $generated@@434) $generated@@439 $generated@@440) (and (=> (< 0 ($generated@@143 $generated@@439)) (or ($generated@@210 $generated@@440) ($generated@@68 ($generated@@206 $generated@@434) ($generated@@141 $generated@@439 ($generated@@142 1)) (+ $generated@@440 1)))) (=> (= ($generated@@211 0) ($generated@@143 $generated@@439)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@71) (and ($generated@@69 $generated@@460 $generated@@439) ($generated@@68 ($generated@@206 $generated@@434) $generated@@460 $generated@@440)))
 :pattern ( ($generated@@68 ($generated@@206 $generated@@434) $generated@@460 $generated@@440))
)))))) (= (ControlFlow 0 12) 11))) $generated@@456)))
$generated@@459)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U T@U Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@U Int) Bool)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U Int) Bool)
(declare-fun $generated@@136 (T@U T@U) T@U)
(declare-fun $generated@@137 (Int) T@U)
(declare-fun $generated@@138 (T@U T@U Int) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (Int) Int)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@T) T@U)
(declare-fun $generated@@239 (T@U) Int)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T T@T) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U Int) T@U)
(declare-fun $generated@@398 (T@U) Int)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@418 (T@T T@U) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@131) 12) (= ($generated@@1 $generated@@132) 13)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@129 $generated@@142)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@143)))
(= (type ($generated@@130 $generated@@143)) $generated@@144))
 :pattern ( ($generated@@130 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@136 $generated@@145 $generated@@146)) $generated@@132)
 :pattern ( ($generated@@136 $generated@@145 $generated@@146))
))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@137 $generated@@147)) $generated@@132)
 :pattern ( ($generated@@137 $generated@@147))
))) (= (type $generated@@139) $generated@@131)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (and (and (= (type $generated@@148) $generated@@131) (= (type $generated@@149) $generated@@132)) (or ($generated@@133 ($generated@@130 $generated@@149) $generated@@150) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@149)) ($generated@@135 ($generated@@136 $generated@@149 ($generated@@137 1)) (+ $generated@@150 1))) (=> (=> (< 0 ($generated@@134 $generated@@149)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@149 ($generated@@137 1)) (+ $generated@@150 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@149)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@132) ($generated@@141 $generated@@151 $generated@@149)) ($generated@@133 $generated@@151 $generated@@150))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@151 $generated@@150))
))))) (= ($generated@@128 ($generated@@129 $generated@@148) ($generated@@130 $generated@@149) $generated@@150)  (and (=> (< 0 ($generated@@134 $generated@@149)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@149 ($generated@@137 1)) (+ $generated@@150 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@149)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@132) ($generated@@141 $generated@@152 $generated@@149)) ($generated@@128 ($generated@@129 $generated@@148) $generated@@152 $generated@@150))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@152 $generated@@150))
)))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) ($generated@@130 $generated@@149) $generated@@150))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (and (and (= (type $generated@@153) $generated@@131) (= (type $generated@@154) $generated@@132)) (or ($generated@@135 ($generated@@130 $generated@@154) $generated@@155) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@154)) ($generated@@133 ($generated@@136 $generated@@154 ($generated@@137 1)) (+ $generated@@155 1))) (=> (=> (< 0 ($generated@@134 $generated@@154)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@154 ($generated@@137 1)) (+ $generated@@155 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@154)) (forall (($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@132) ($generated@@141 $generated@@156 $generated@@154)) ($generated@@135 $generated@@156 $generated@@155))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@153) $generated@@156 $generated@@155))
))))) (= ($generated@@138 ($generated@@129 $generated@@153) ($generated@@130 $generated@@154) $generated@@155)  (and (=> (< 0 ($generated@@134 $generated@@154)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@154 ($generated@@137 1)) (+ $generated@@155 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@154)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@132) ($generated@@141 $generated@@157 $generated@@154)) ($generated@@138 ($generated@@129 $generated@@153) $generated@@157 $generated@@155))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@153) $generated@@157 $generated@@155))
)))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@129 $generated@@153) ($generated@@130 $generated@@154) $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@132) (= (type $generated@@159) $generated@@132)) (= (type $generated@@160) $generated@@132)) (and ($generated@@141 $generated@@158 $generated@@159) ($generated@@141 $generated@@159 $generated@@160))) ($generated@@141 $generated@@158 $generated@@160))
 :pattern ( ($generated@@141 $generated@@158 $generated@@159) ($generated@@141 $generated@@159 $generated@@160))
 :pattern ( ($generated@@141 $generated@@158 $generated@@159) ($generated@@141 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 Int) ) (!  (=> (= (type $generated@@161) $generated@@132) (=> (and (and (<= 0 $generated@@162) (<= 0 $generated@@163)) (<= (+ $generated@@162 $generated@@163) ($generated@@134 $generated@@161))) (= ($generated@@136 ($generated@@136 $generated@@161 ($generated@@137 $generated@@162)) ($generated@@137 $generated@@163)) ($generated@@136 $generated@@161 ($generated@@137 (+ $generated@@162 $generated@@163))))))
 :pattern ( ($generated@@136 ($generated@@136 $generated@@161 ($generated@@137 $generated@@162)) ($generated@@137 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 14)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@72 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@64 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@72) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@215) ($generated@@63 $generated@@4))) (= (type $generated@@217) $generated@@72)) (= (type $generated@@218) ($generated@@63 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Int) ) (!  (=> (and (and (= (type $generated@@220) $generated@@131) (= (type $generated@@221) $generated@@132)) (or ($generated@@133 ($generated@@130 $generated@@221) ($generated@@140 $generated@@222)) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@221)) ($generated@@135 ($generated@@136 $generated@@221 ($generated@@137 1)) (+ $generated@@222 1))) (=> (=> (< 0 ($generated@@134 $generated@@221)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@221 ($generated@@137 1)) (+ $generated@@222 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@221)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@132) ($generated@@141 $generated@@223 $generated@@221)) ($generated@@133 $generated@@223 $generated@@222))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@220) $generated@@223 $generated@@222))
))))) (= ($generated@@128 ($generated@@129 $generated@@220) ($generated@@130 $generated@@221) ($generated@@140 $generated@@222))  (and (=> (< 0 ($generated@@134 $generated@@221)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@221 ($generated@@137 1)) (+ $generated@@222 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@221)) (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@132) ($generated@@141 $generated@@224 $generated@@221)) ($generated@@128 ($generated@@129 $generated@@220) $generated@@224 $generated@@222))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@220) $generated@@224 $generated@@222))
)))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@220) ($generated@@130 $generated@@221) ($generated@@140 $generated@@222)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Int) ) (!  (=> (and (and (= (type $generated@@225) $generated@@131) (= (type $generated@@226) $generated@@132)) (or ($generated@@135 ($generated@@130 $generated@@226) ($generated@@140 $generated@@227)) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@226)) ($generated@@133 ($generated@@136 $generated@@226 ($generated@@137 1)) (+ $generated@@227 1))) (=> (=> (< 0 ($generated@@134 $generated@@226)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@226 ($generated@@137 1)) (+ $generated@@227 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@226)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@132) ($generated@@141 $generated@@228 $generated@@226)) ($generated@@135 $generated@@228 $generated@@227))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@225) $generated@@228 $generated@@227))
))))) (= ($generated@@138 ($generated@@129 $generated@@225) ($generated@@130 $generated@@226) ($generated@@140 $generated@@227))  (and (=> (< 0 ($generated@@134 $generated@@226)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@226 ($generated@@137 1)) (+ $generated@@227 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@226)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@132) ($generated@@141 $generated@@229 $generated@@226)) ($generated@@138 ($generated@@129 $generated@@225) $generated@@229 $generated@@227))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@225) $generated@@229 $generated@@227))
)))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@129 $generated@@225) ($generated@@130 $generated@@226) ($generated@@140 $generated@@227)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@230 T@U) ($generated@@231 Int) ($generated@@232 T@U) ) (!  (=> (and (and (= (type $generated@@230) $generated@@131) (= (type $generated@@232) $generated@@132)) (= $generated@@232 ($generated@@137 0))) ($generated@@128 $generated@@230 $generated@@232 $generated@@231))
 :pattern ( ($generated@@128 $generated@@230 $generated@@232 $generated@@231))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@233 T@U) ($generated@@234 Int) ($generated@@235 T@U) ) (!  (=> (and (and (= (type $generated@@233) $generated@@131) (= (type $generated@@235) $generated@@132)) (= $generated@@235 ($generated@@137 0))) ($generated@@138 $generated@@233 $generated@@235 $generated@@234))
 :pattern ( ($generated@@138 $generated@@233 $generated@@235 $generated@@234))
))))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@140 $generated@@236) $generated@@236)
 :pattern ( ($generated@@140 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@130 $generated@@237) $generated@@237)
 :pattern ( ($generated@@130 $generated@@237))
)))
(assert  (and (and (forall (($generated@@242 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@242)) 15)) (forall (($generated@@243 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
))) (forall (($generated@@244 T@T) ) (! (= (type ($generated@@238 $generated@@244)) ($generated@@240 $generated@@244))
 :pattern ( ($generated@@238 $generated@@244))
))))
(assert (forall (($generated@@245 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@245)) 0)
 :pattern ( ($generated@@238 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Int) ) (!  (=> (and (= (type $generated@@246) $generated@@131) (= (type $generated@@247) $generated@@132)) (= ($generated@@128 ($generated@@129 $generated@@246) $generated@@247 $generated@@248) ($generated@@128 $generated@@246 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Int) ) (!  (=> (and (= (type $generated@@249) $generated@@131) (= (type $generated@@250) $generated@@132)) (= ($generated@@138 ($generated@@129 $generated@@249) $generated@@250 $generated@@251) ($generated@@138 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@132)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@61) (= (type $generated@@257) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@252 ($generated@@253 $generated@@255) $generated@@256 $generated@@257) ($generated@@69 $generated@@255 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@255) $generated@@256 $generated@@257))
)))
(assert  (and (and (and (and (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@263 $generated@@264)) 16)) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@265 $generated@@266)) $generated@@265)
 :pattern ( ($generated@@260 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@267 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@260 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@261 (type $generated@@269))))
(= (type ($generated@@258 $generated@@269)) ($generated@@71 $generated@@270 $generated@@4)))
 :pattern ( ($generated@@258 $generated@@269))
))) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= (type ($generated@@259 $generated@@271 $generated@@272)) ($generated@@260 $generated@@271 $generated@@272))
 :pattern ( ($generated@@259 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@T) ) (! (let (($generated@@275 (type $generated@@273)))
 (not ($generated@@0 ($generated@@76 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273))))
 :pattern ( (let (($generated@@275 (type $generated@@273)))
($generated@@76 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273)))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 17)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@71 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@76 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@76 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@132) (= (type $generated@@296) $generated@@132)) (and ($generated@@294 $generated@@296) (<= ($generated@@134 $generated@@296) ($generated@@134 $generated@@295)))) (and (= ($generated@@294 ($generated@@136 $generated@@295 $generated@@296)) ($generated@@294 $generated@@295)) (= ($generated@@134 ($generated@@136 $generated@@295 $generated@@296)) (- ($generated@@134 $generated@@295) ($generated@@134 $generated@@296)))))
 :pattern ( ($generated@@136 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 Int) ) (!  (=> (<= 0 $generated@@297) (and ($generated@@294 ($generated@@137 $generated@@297)) (= ($generated@@134 ($generated@@137 $generated@@297)) $generated@@297)))
 :pattern ( ($generated@@137 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@262 (type $generated@@298))))
(let (($generated@@300 ($generated@@261 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@260 $generated@@300 $generated@@299)) (or (= $generated@@298 ($generated@@259 $generated@@300 $generated@@299)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) ($generated@@0 ($generated@@76 ($generated@@258 $generated@@298) $generated@@301)))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@258 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@280 (type $generated@@302))))
(let (($generated@@304 ($generated@@279 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@278 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@277 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) ($generated@@0 ($generated@@76 ($generated@@276 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@276 $generated@@302))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (and (= (type $generated@@306) $generated@@131) (= (type $generated@@307) $generated@@132)) (or ($generated@@133 $generated@@307 $generated@@308) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@307)) ($generated@@135 ($generated@@136 $generated@@307 ($generated@@137 1)) (+ $generated@@308 1))) (=> (=> (< 0 ($generated@@134 $generated@@307)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@307 ($generated@@137 1)) (+ $generated@@308 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@307)) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@132) ($generated@@141 $generated@@309 $generated@@307)) ($generated@@133 $generated@@309 $generated@@308))
 :pattern ( ($generated@@128 $generated@@306 $generated@@309 $generated@@308))
))))) (= ($generated@@128 ($generated@@129 $generated@@306) $generated@@307 $generated@@308)  (and (=> (< 0 ($generated@@134 $generated@@307)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@307 ($generated@@137 1)) (+ $generated@@308 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@307)) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@132) ($generated@@141 $generated@@310 $generated@@307)) ($generated@@128 $generated@@306 $generated@@310 $generated@@308))
 :pattern ( ($generated@@128 $generated@@306 $generated@@310 $generated@@308))
)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@306) $generated@@307 $generated@@308))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 Int) ) (!  (=> (and (and (= (type $generated@@311) $generated@@131) (= (type $generated@@312) $generated@@132)) (or ($generated@@135 $generated@@312 $generated@@313) (not (= 1 $generated@@127)))) (and (and (=> (< 0 ($generated@@134 $generated@@312)) ($generated@@133 ($generated@@136 $generated@@312 ($generated@@137 1)) (+ $generated@@313 1))) (=> (=> (< 0 ($generated@@134 $generated@@312)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@312 ($generated@@137 1)) (+ $generated@@313 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@312)) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@132) ($generated@@141 $generated@@314 $generated@@312)) ($generated@@135 $generated@@314 $generated@@313))
 :pattern ( ($generated@@138 $generated@@311 $generated@@314 $generated@@313))
))))) (= ($generated@@138 ($generated@@129 $generated@@311) $generated@@312 $generated@@313)  (and (=> (< 0 ($generated@@134 $generated@@312)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@312 ($generated@@137 1)) (+ $generated@@313 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@312)) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@132) ($generated@@141 $generated@@315 $generated@@312)) ($generated@@138 $generated@@311 $generated@@315 $generated@@313))
 :pattern ( ($generated@@138 $generated@@311 $generated@@315 $generated@@313))
)))))))
 :pattern ( ($generated@@138 ($generated@@129 $generated@@311) $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@132) (= (type $generated@@317) $generated@@132)) (or (or ($generated@@141 $generated@@316 $generated@@317) (= $generated@@316 $generated@@317)) ($generated@@141 $generated@@317 $generated@@316)))
 :pattern ( ($generated@@141 $generated@@316 $generated@@317) ($generated@@141 $generated@@317 $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@61)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@71 $generated@@132 $generated@@4)) (= (type $generated@@321) $generated@@61)) (= (type $generated@@322) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@320 ($generated@@318 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@132) ($generated@@0 ($generated@@76 $generated@@320 $generated@@323))) ($generated@@252 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@76 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@69 $generated@@320 ($generated@@318 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@71 $generated@@132 $generated@@4)) (= (type $generated@@327) $generated@@61)) (= (type $generated@@328) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@326 ($generated@@324 $generated@@327) $generated@@328) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@132) ($generated@@0 ($generated@@76 $generated@@326 $generated@@329))) ($generated@@252 $generated@@329 $generated@@327 $generated@@328))
 :pattern ( ($generated@@76 $generated@@326 $generated@@329))
))))
 :pattern ( ($generated@@69 $generated@@326 ($generated@@324 $generated@@327) $generated@@328))
)))
(assert  (and (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@332 $generated@@333))
)) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@262 (type $generated@@334))))
(let (($generated@@336 ($generated@@261 (type $generated@@334))))
(= (type ($generated@@331 $generated@@334)) ($generated@@71 $generated@@336 $generated@@335))))
 :pattern ( ($generated@@331 $generated@@334))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@337) ($generated@@260 $generated@@132 $generated@@132)) (= (type $generated@@338) $generated@@61)) (= (type $generated@@339) $generated@@61)) (= (type $generated@@340) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@337 ($generated@@330 $generated@@338 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@132) ($generated@@0 ($generated@@76 ($generated@@258 $generated@@337) $generated@@341))) (and ($generated@@252 ($generated@@76 ($generated@@331 $generated@@337) $generated@@341) $generated@@339 $generated@@340) ($generated@@252 $generated@@341 $generated@@338 $generated@@340)))
 :pattern ( ($generated@@76 ($generated@@331 $generated@@337) $generated@@341))
 :pattern ( ($generated@@76 ($generated@@258 $generated@@337) $generated@@341))
))))
 :pattern ( ($generated@@69 $generated@@337 ($generated@@330 $generated@@338 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (! (= (type ($generated@@342 $generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344 $generated@@345))
)) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@280 (type $generated@@346))))
(let (($generated@@348 ($generated@@279 (type $generated@@346))))
(= (type ($generated@@343 $generated@@346)) ($generated@@71 $generated@@348 $generated@@347))))
 :pattern ( ($generated@@343 $generated@@346))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (= (type $generated@@349) ($generated@@278 $generated@@132 $generated@@132)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) $generated@@61)) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@342 $generated@@350 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@132) ($generated@@0 ($generated@@76 ($generated@@276 $generated@@349) $generated@@353))) (and ($generated@@252 ($generated@@76 ($generated@@343 $generated@@349) $generated@@353) $generated@@351 $generated@@352) ($generated@@252 $generated@@353 $generated@@350 $generated@@352)))
 :pattern ( ($generated@@76 ($generated@@343 $generated@@349) $generated@@353))
 :pattern ( ($generated@@76 ($generated@@276 $generated@@349) $generated@@353))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@342 $generated@@350 $generated@@351) $generated@@352))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 Int) ) (!  (=> (and (and (= (type $generated@@354) $generated@@131) (= (type $generated@@355) $generated@@132)) (or ($generated@@133 $generated@@355 $generated@@356) (not (= 1 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@354 $generated@@355 $generated@@356))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 Int) ) (!  (=> (and (and (= (type $generated@@357) $generated@@131) (= (type $generated@@358) $generated@@132)) (or ($generated@@135 $generated@@358 $generated@@359) (not (= 1 $generated@@127)))) true)
 :pattern ( ($generated@@138 $generated@@357 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@71 $generated@@361 $generated@@4))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@280 (type $generated@@362))))
(let (($generated@@364 ($generated@@279 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@278 $generated@@364 $generated@@363)) (= (= $generated@@362 ($generated@@277 $generated@@364 $generated@@363)) (= ($generated@@276 $generated@@362) ($generated@@360 $generated@@364))))))
 :pattern ( ($generated@@276 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@132) (<= 0 ($generated@@134 $generated@@365)))
 :pattern ( ($generated@@134 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@241 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@240 $generated@@367)) (<= 0 ($generated@@239 $generated@@366))))
 :pattern ( ($generated@@239 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@61) (= (type $generated@@371) $generated@@61)) (= ($generated@@368 ($generated@@330 $generated@@370 $generated@@371)) $generated@@370))
 :pattern ( ($generated@@330 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@61)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@61) (= (type $generated@@375) $generated@@61)) (= ($generated@@372 ($generated@@330 $generated@@374 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@330 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@67 ($generated@@330 $generated@@376 $generated@@377)) $generated@@58))
 :pattern ( ($generated@@330 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) $generated@@61)
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@61) (= (type $generated@@381) $generated@@61)) (= ($generated@@378 ($generated@@342 $generated@@380 $generated@@381)) $generated@@380))
 :pattern ( ($generated@@342 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) $generated@@61)
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@61) (= (type $generated@@385) $generated@@61)) (= ($generated@@382 ($generated@@342 $generated@@384 $generated@@385)) $generated@@385))
 :pattern ( ($generated@@342 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@61) (= (type $generated@@387) $generated@@61)) (= ($generated@@67 ($generated@@342 $generated@@386 $generated@@387)) $generated@@59))
 :pattern ( ($generated@@342 $generated@@386 $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) $generated@@61)
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ($generated@@392 Int) ) (! (let (($generated@@393 ($generated@@241 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391 $generated@@392)) $generated@@393))
 :pattern ( ($generated@@389 $generated@@391 $generated@@392))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@240 $generated@@132)) (= (type $generated@@395) $generated@@61)) (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@394 ($generated@@388 $generated@@395) $generated@@396) (forall (($generated@@397 Int) ) (!  (=> (and (<= 0 $generated@@397) (< $generated@@397 ($generated@@239 $generated@@394))) ($generated@@252 ($generated@@389 $generated@@394 $generated@@397) $generated@@395 $generated@@396))
 :pattern ( ($generated@@389 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@69 $generated@@394 ($generated@@388 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 Int) ) (! (= ($generated@@398 ($generated@@70 $generated@@399)) $generated@@399)
 :pattern ( ($generated@@70 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@61) (= ($generated@@400 ($generated@@318 $generated@@402)) $generated@@402))
 :pattern ( ($generated@@318 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@61) (= ($generated@@67 ($generated@@318 $generated@@403)) $generated@@54))
 :pattern ( ($generated@@318 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (= (type ($generated@@404 $generated@@405)) $generated@@61)
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@61) (= ($generated@@404 ($generated@@324 $generated@@406)) $generated@@406))
 :pattern ( ($generated@@324 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@61) (= ($generated@@67 ($generated@@324 $generated@@407)) $generated@@55))
 :pattern ( ($generated@@324 $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) $generated@@61)
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) $generated@@61)
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@61) (= ($generated@@409 ($generated@@408 $generated@@412)) $generated@@412))
 :pattern ( ($generated@@408 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@61) (= ($generated@@67 ($generated@@408 $generated@@413)) $generated@@56))
 :pattern ( ($generated@@408 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@61)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@61) (= ($generated@@414 ($generated@@388 $generated@@416)) $generated@@416))
 :pattern ( ($generated@@388 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@61) (= ($generated@@67 ($generated@@388 $generated@@417)) $generated@@57))
 :pattern ( ($generated@@388 $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated@@418 $generated@@422 ($generated@@253 $generated@@421)) $generated@@421))
 :pattern ( ($generated@@253 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@132) (= (type $generated@@424) $generated@@132)) (and (and (and (=> ($generated@@141 $generated@@423 $generated@@424) (not (= $generated@@423 $generated@@424))) (=> (and ($generated@@294 $generated@@423) (not ($generated@@294 $generated@@424))) ($generated@@141 $generated@@423 $generated@@424))) (=> (and ($generated@@294 $generated@@423) ($generated@@294 $generated@@424)) (= ($generated@@141 $generated@@423 $generated@@424) (< ($generated@@134 $generated@@423) ($generated@@134 $generated@@424))))) (=> (and ($generated@@141 $generated@@423 $generated@@424) ($generated@@294 $generated@@424)) ($generated@@294 $generated@@423))))
 :pattern ( ($generated@@141 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (not ($generated@@0 ($generated@@76 ($generated@@360 $generated@@426) $generated@@425))))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@76 ($generated@@360 $generated@@426) $generated@@425)))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@132) ($generated@@294 $generated@@427)) (= $generated@@427 ($generated@@137 ($generated@@134 $generated@@427))))
 :pattern ( ($generated@@134 $generated@@427))
 :pattern ( ($generated@@294 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@71 $generated@@132 $generated@@2)) (= (type $generated@@429) $generated@@61)) (= (type $generated@@430) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@428 ($generated@@408 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@132) (< 0 ($generated ($generated@@76 $generated@@428 $generated@@431)))) ($generated@@252 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@76 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@69 $generated@@428 ($generated@@408 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@432) $generated@@132) (= (type $generated@@433) $generated@@132)) (and ($generated@@294 $generated@@433) (<= ($generated@@134 $generated@@433) ($generated@@134 $generated@@432)))) (or (and (= $generated@@433 ($generated@@137 0)) (= ($generated@@136 $generated@@432 $generated@@433) $generated@@432)) (and (not (= $generated@@433 ($generated@@137 0))) ($generated@@141 ($generated@@136 $generated@@432 $generated@@433) $generated@@432))))
 :pattern ( ($generated@@136 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 Int) ) (! (= ($generated@@253 ($generated@@8 ($generated@@140 $generated@@434))) ($generated@@130 ($generated@@253 ($generated@@8 $generated@@434))))
 :pattern ( ($generated@@253 ($generated@@8 ($generated@@140 $generated@@434))))
)))
(assert (forall (($generated@@435 T@U) ) (! (= ($generated@@253 ($generated@@130 $generated@@435)) ($generated@@130 ($generated@@253 $generated@@435)))
 :pattern ( ($generated@@253 ($generated@@130 $generated@@435)))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@241 (type $generated@@436))))
 (=> (and (= (type $generated@@436) ($generated@@240 $generated@@437)) (= ($generated@@239 $generated@@436) 0)) (= $generated@@436 ($generated@@238 $generated@@437))))
 :pattern ( ($generated@@239 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@2)) ($generated@@69 $generated@@439 $generated@@46 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@46 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@3)) ($generated@@69 $generated@@441 $generated@@47 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@47 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@443) $generated@@4)) ($generated@@69 $generated@@443 $generated@@44 $generated@@442))
 :pattern ( ($generated@@69 $generated@@443 $generated@@44 $generated@@442))
)))
(assert (= ($generated@@1 $generated@@444) 18))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@446) $generated@@444)) ($generated@@69 $generated@@446 $generated@@45 $generated@@445))
 :pattern ( ($generated@@69 $generated@@446 $generated@@45 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@448) $generated@@132)) ($generated@@69 $generated@@448 $generated@@48 $generated@@447))
 :pattern ( ($generated@@69 $generated@@448 $generated@@48 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@131)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 Int) ) (!  (=> (and (= (type $generated@@451) $generated@@131) (= (type $generated@@452) $generated@@132)) (= ($generated@@128 $generated@@451 $generated@@452 $generated@@453) ($generated@@128 $generated@@139 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@128 ($generated@@449 $generated@@451) $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ) (!  (=> (and (= (type $generated@@454) $generated@@131) (= (type $generated@@455) $generated@@132)) (= ($generated@@138 $generated@@454 $generated@@455 $generated@@456) ($generated@@138 $generated@@139 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@138 ($generated@@449 $generated@@454) $generated@@455 $generated@@456))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 (T@U) Bool)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 (T@U) Bool)
(declare-fun $generated@@462 () T@U)
(declare-fun $generated@@463 () T@U)
(declare-fun $generated@@464 () Int)
(declare-fun $generated@@465 () T@U)
(declare-fun $generated@@466 () T@U)
(declare-fun $generated@@467 () Int)
(declare-fun $generated@@468 () T@U)
(declare-fun $generated@@469 () T@U)
(declare-fun $generated@@470 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@457) $generated@@132) (= (type $generated@@463) $generated@@132)) (= (type $generated@@465) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@462) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@466) $generated@@132)) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@468) ($generated@@166 $generated@@72 $generated@@4))) (= (type $generated@@469) $generated@@72)) (= (type $generated@@470) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@471  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@135 $generated@@457 $generated@@458) (or ($generated@@138 ($generated@@129 $generated@@139) $generated@@457 $generated@@458) (=> (< 0 ($generated@@134 $generated@@457)) ($generated@@128 ($generated@@129 ($generated@@129 $generated@@139)) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)))))) (=> (=> ($generated@@135 $generated@@457 $generated@@458) (or ($generated@@138 ($generated@@129 $generated@@139) $generated@@457 $generated@@458) (=> (< 0 ($generated@@134 $generated@@457)) ($generated@@128 ($generated@@129 ($generated@@129 $generated@@139)) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@135 $generated@@457 $generated@@458) (or ($generated@@138 ($generated@@129 $generated@@139) $generated@@457 $generated@@458) (=> (= ($generated@@140 0) ($generated@@134 $generated@@457)) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@132) ($generated@@141 $generated@@472 $generated@@457)) ($generated@@138 ($generated@@129 ($generated@@129 $generated@@139)) $generated@@472 $generated@@458))
 :pattern ( ($generated@@138 ($generated@@129 ($generated@@129 $generated@@139)) $generated@@472 $generated@@458))
))))))))))
(let (($generated@@473  (=> (<= ($generated@@134 $generated@@457) 0) (=> (and (and (and ($generated@@459 $generated@@460) ($generated@@461 $generated@@460)) (= $generated@@462 $generated@@460)) (and (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (and (= (type $generated@@474) $generated@@132) ($generated@@141 $generated@@474 $generated@@457)) ($generated@@138 ($generated@@129 $generated@@139) $generated@@474 $generated@@475))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
)) (= (ControlFlow 0 10) 2))) $generated@@471))))
(let (($generated@@476  (=> (< 0 ($generated@@134 $generated@@457)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@294 ($generated@@130 ($generated@@137 1)))) (=> ($generated@@294 ($generated@@130 ($generated@@137 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457))) (=> (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457)) (=> (and (= $generated@@463 ($generated@@136 $generated@@457 ($generated@@137 1))) (= $generated@@464 (+ $generated@@458 1))) (=> (and (and (and ($generated@@459 $generated@@465) ($generated@@461 $generated@@465)) ($generated@@133 $generated@@463 $generated@@464)) (and (and ($generated@@133 $generated@@463 $generated@@464) (and ($generated@@128 ($generated@@129 $generated@@139) $generated@@463 $generated@@464) (and (=> (< 0 ($generated@@134 $generated@@463)) ($generated@@138 ($generated@@129 $generated@@139) ($generated@@136 $generated@@463 ($generated@@137 1)) (+ $generated@@464 1))) (=> (= ($generated@@140 0) ($generated@@134 $generated@@463)) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@132) ($generated@@141 $generated@@477 $generated@@463)) ($generated@@128 ($generated@@129 $generated@@139) $generated@@477 $generated@@464))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) $generated@@477 $generated@@464))
)))))) (= $generated@@462 $generated@@465))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@294 ($generated@@130 ($generated@@137 1)))) (=> ($generated@@294 ($generated@@130 ($generated@@137 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457))) (=> (<= ($generated@@134 ($generated@@130 ($generated@@137 1))) ($generated@@134 $generated@@457)) (=> (and (= $generated@@466 ($generated@@136 $generated@@457 ($generated@@137 1))) ($generated@@69 $generated@@466 $generated@@48 $generated@@465)) (=> (and (and (= $generated@@467 (+ $generated@@458 1)) ($generated@@69 ($generated@@8 $generated@@467) $generated@@46 $generated@@465)) (and ($generated@@133 ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)) ($generated@@133 ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@133 ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)) ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)))) (=> (and ($generated@@128 ($generated@@129 $generated@@139) ($generated@@136 $generated@@457 ($generated@@137 1)) (+ $generated@@458 1)) (= (ControlFlow 0 4) 2)) $generated@@471)))))))))))))))))
(let (($generated@@478  (=> (= $generated@@468 ($generated@@165 $generated@@469 $generated@@470 $generated@@60 false)) (=> (and (and ($generated@@459 $generated@@462) ($generated@@461 $generated@@462)) (and (= $generated@@470 $generated@@462) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (!  (=> (= (type $generated@@479) $generated@@132) (=> (and ($generated@@0 ($generated@@130 ($generated@@11 true))) (or ($generated@@141 $generated@@479 $generated@@457) (and (= $generated@@479 $generated@@457) (and (<= 0 $generated@@480) (< $generated@@480 $generated@@458))))) ($generated@@138 ($generated@@129 $generated@@139) $generated@@479 $generated@@480)))
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
)))) (and (=> (= (ControlFlow 0 11) 4) $generated@@476) (=> (= (ControlFlow 0 11) 10) $generated@@473))))))
(let (($generated@@481  (=> (and (and ($generated@@459 $generated@@470) ($generated@@461 $generated@@470)) (and (= 2 $generated@@127) (= (ControlFlow 0 12) 11))) $generated@@478)))
$generated@@481))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 () Int)
(declare-fun $generated@@68 (T@U T@U Int) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U Int) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@156 (T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@U Int) Bool)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (Int) Int)
(declare-fun $generated@@228 (Int) Bool)
(declare-fun $generated@@229 (Int) Bool)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@337 (T@U T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@369 (T@T) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U Int) T@U)
(declare-fun $generated@@417 (T@U) Int)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@T T@U) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert  (and (= ($generated@@1 $generated@@70) 9) (= ($generated@@1 $generated@@71) 10)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@73) $generated@@70) (= (type $generated@@75) $generated@@71)) (= (type $generated@@76) $generated@@71)) (= (type $generated@@77) $generated@@71)) ($generated@@72 $generated@@75 $generated@@76)) ($generated@@68 $generated@@73 $generated@@75 $generated@@74)) ($generated@@68 $generated@@73 $generated@@76 $generated@@74))
 :pattern ( ($generated@@68 $generated@@73 $generated@@75 $generated@@74) ($generated@@69 $generated@@75 $generated@@77) ($generated@@69 $generated@@76 $generated@@77))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@79 T@U) ($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@79) $generated@@70) (= (type $generated@@81) $generated@@71)) (= (type $generated@@82) $generated@@71)) (= (type $generated@@83) $generated@@71)) ($generated@@72 $generated@@81 $generated@@82)) ($generated@@78 $generated@@79 $generated@@81 $generated@@80)) ($generated@@78 $generated@@79 $generated@@82 $generated@@80))
 :pattern ( ($generated@@78 $generated@@79 $generated@@81 $generated@@80) ($generated@@69 $generated@@81 $generated@@83) ($generated@@69 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@62)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@64 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@61)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@71) (= (type $generated@@145) $generated@@71)) (= (type $generated@@146) $generated@@71)) (and ($generated@@72 $generated@@144 $generated@@145) ($generated@@72 $generated@@145 $generated@@146))) ($generated@@72 $generated@@144 $generated@@146))
 :pattern ( ($generated@@72 $generated@@144 $generated@@145) ($generated@@72 $generated@@145 $generated@@146))
 :pattern ( ($generated@@72 $generated@@144 $generated@@145) ($generated@@72 $generated@@144 $generated@@146))
)))
(assert  (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@147 $generated@@150 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@147 $generated@@150 $generated@@151))
)) (forall (($generated@@152 Int) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 Int) ) (!  (=> (= (type $generated@@153) $generated@@71) (=> (and (and (<= 0 $generated@@154) (<= 0 $generated@@155)) (<= (+ $generated@@154 $generated@@155) ($generated@@149 $generated@@153))) (= ($generated@@147 ($generated@@147 $generated@@153 ($generated@@148 $generated@@154)) ($generated@@148 $generated@@155)) ($generated@@147 $generated@@153 ($generated@@148 (+ $generated@@154 $generated@@155))))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@153 ($generated@@148 $generated@@154)) ($generated@@148 $generated@@155)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@1 ($generated@@158 $generated@@162 $generated@@163)) 14)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@159 ($generated@@158 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@160 ($generated@@158 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@158 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@160 (type $generated@@168))))
(= (type ($generated@@156 $generated@@168 $generated@@169 $generated@@170)) $generated@@171))
 :pattern ( ($generated@@156 $generated@@168 $generated@@169 $generated@@170))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 (type $generated@@175)))
(let (($generated@@177 (type $generated@@173)))
(= (type ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@158 $generated@@177 $generated@@176))))
 :pattern ( ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@160 (type $generated@@178))))
 (=> (= (type $generated@@181) $generated@@182) (= ($generated@@156 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@179 $generated@@180) $generated@@181)))
 :weight 0
))) (and (and (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@156 ($generated@@161 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@156 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@156 ($generated@@161 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@156 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or true (= ($generated@@156 ($generated@@161 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@156 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ) (! (= (type ($generated@@157 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@158 $generated@@89 $generated@@4))
 :pattern ( ($generated@@157 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@64 (type $generated@@210))))
 (=> (and (and (and (and (= (type $generated@@205) $generated@@89) (= (type $generated@@206) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@207) ($generated@@63 $generated@@4))) (= (type $generated@@209) $generated@@89)) (= (type $generated@@210) ($generated@@63 $generated@@211))) (= ($generated@@0 ($generated@@156 ($generated@@157 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))  (=> (and (not (= $generated@@209 $generated@@205)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@206 $generated@@209) $generated@@207))) $generated@@208))))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))
)))
(assert  (and (and (forall (($generated@@220 T@U) ) (! (= (type ($generated@@212 $generated@@220)) $generated@@70)
 :pattern ( ($generated@@212 $generated@@220))
)) (forall (($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(= (type ($generated@@213 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@213 $generated@@221))
))) (= (type $generated@@218) $generated@@70)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ) (!  (=> (and (and (= (type $generated@@223) $generated@@70) (= (type $generated@@224) $generated@@71)) (or ($generated@@214 ($generated@@213 $generated@@224) $generated@@225) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@224)) (and ($generated@@215 $generated@@225) (=> (not ($generated@@216 $generated@@225)) ($generated@@217 ($generated@@147 $generated@@224 ($generated@@148 1)) (+ $generated@@225 1))))) (=> (=> (< 0 ($generated@@149 $generated@@224)) (or ($generated@@216 $generated@@225) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@224 ($generated@@148 1)) (+ $generated@@225 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@224)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@71) ($generated@@69 $generated@@226 $generated@@224)) ($generated@@214 $generated@@226 $generated@@225))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@223) $generated@@226 $generated@@225))
))))) (= ($generated@@68 ($generated@@212 $generated@@223) ($generated@@213 $generated@@224) $generated@@225)  (and (=> (< 0 ($generated@@149 $generated@@224)) (or ($generated@@216 $generated@@225) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@224 ($generated@@148 1)) (+ $generated@@225 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@224)) (exists (($generated@@227 T@U) ) (!  (and (= (type $generated@@227) $generated@@71) (and ($generated@@69 $generated@@227 $generated@@224) ($generated@@68 ($generated@@212 $generated@@223) $generated@@227 $generated@@225)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@223) $generated@@227 $generated@@225))
)))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@212 $generated@@223) ($generated@@213 $generated@@224) $generated@@225))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Int) ) (!  (=> (and (and (= (type $generated@@230) $generated@@70) (= (type $generated@@231) $generated@@71)) (or ($generated@@217 ($generated@@213 $generated@@231) $generated@@232) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@231)) (and ($generated@@228 $generated@@232) (=> (not ($generated@@229 $generated@@232)) ($generated@@214 ($generated@@147 $generated@@231 ($generated@@148 1)) (+ $generated@@232 1))))) (=> (=> (< 0 ($generated@@149 $generated@@231)) (or ($generated@@229 $generated@@232) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@231 ($generated@@148 1)) (+ $generated@@232 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@231)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@71) ($generated@@69 $generated@@233 $generated@@231)) ($generated@@217 $generated@@233 $generated@@232))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@230) $generated@@233 $generated@@232))
))))) (= ($generated@@78 ($generated@@212 $generated@@230) ($generated@@213 $generated@@231) $generated@@232)  (and (=> (< 0 ($generated@@149 $generated@@231)) (or ($generated@@229 $generated@@232) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@231 ($generated@@148 1)) (+ $generated@@232 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@231)) (exists (($generated@@234 T@U) ) (!  (and (= (type $generated@@234) $generated@@71) (and ($generated@@69 $generated@@234 $generated@@231) ($generated@@78 ($generated@@212 $generated@@230) $generated@@234 $generated@@232)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@230) $generated@@234 $generated@@232))
)))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@212 $generated@@230) ($generated@@213 $generated@@231) $generated@@232))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@235 T@U) ($generated@@236 Int) ($generated@@237 T@U) ) (!  (=> (and (and (= (type $generated@@235) $generated@@70) (= (type $generated@@237) $generated@@71)) (= $generated@@237 ($generated@@148 0))) (not ($generated@@68 $generated@@235 $generated@@237 $generated@@236)))
 :pattern ( ($generated@@68 $generated@@235 $generated@@237 $generated@@236))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@238 T@U) ($generated@@239 Int) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@70) (= (type $generated@@240) $generated@@71)) (= $generated@@240 ($generated@@148 0))) (not ($generated@@78 $generated@@238 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@78 $generated@@238 $generated@@240 $generated@@239))
))))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@219 $generated@@241) $generated@@241)
 :pattern ( ($generated@@219 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@213 $generated@@242) $generated@@242)
 :pattern ( ($generated@@213 $generated@@242))
)))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@215 $generated@@243) (not (= 0 $generated@@67))) true)
 :pattern ( ($generated@@216 $generated@@243))
))))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@244 Int) ) (!  (=> (or ($generated@@228 $generated@@244) (not (= 0 $generated@@67))) true)
 :pattern ( ($generated@@229 $generated@@244))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Int) ) (!  (=> (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@71)) (or ($generated@@214 ($generated@@213 $generated@@246) ($generated@@219 $generated@@247)) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@246)) (and ($generated@@215 $generated@@247) (=> (not ($generated@@216 $generated@@247)) ($generated@@217 ($generated@@147 $generated@@246 ($generated@@148 1)) (+ $generated@@247 1))))) (=> (=> (< 0 ($generated@@149 $generated@@246)) (or ($generated@@216 $generated@@247) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@246 ($generated@@148 1)) (+ $generated@@247 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@246)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@71) ($generated@@69 $generated@@248 $generated@@246)) ($generated@@214 $generated@@248 $generated@@247))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@245) $generated@@248 $generated@@247))
))))) (= ($generated@@68 ($generated@@212 $generated@@245) ($generated@@213 $generated@@246) ($generated@@219 $generated@@247))  (and (=> (< 0 ($generated@@149 $generated@@246)) (or ($generated@@216 $generated@@247) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@246 ($generated@@148 1)) (+ $generated@@247 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@246)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@71) (and ($generated@@69 $generated@@249 $generated@@246) ($generated@@68 ($generated@@212 $generated@@245) $generated@@249 $generated@@247)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@245) $generated@@249 $generated@@247))
)))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@212 $generated@@245) ($generated@@213 $generated@@246) ($generated@@219 $generated@@247)))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Int) ) (!  (=> (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@71)) (or ($generated@@217 ($generated@@213 $generated@@251) ($generated@@219 $generated@@252)) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@251)) (and ($generated@@228 $generated@@252) (=> (not ($generated@@229 $generated@@252)) ($generated@@214 ($generated@@147 $generated@@251 ($generated@@148 1)) (+ $generated@@252 1))))) (=> (=> (< 0 ($generated@@149 $generated@@251)) (or ($generated@@229 $generated@@252) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@251 ($generated@@148 1)) (+ $generated@@252 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@251)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@71) ($generated@@69 $generated@@253 $generated@@251)) ($generated@@217 $generated@@253 $generated@@252))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@250) $generated@@253 $generated@@252))
))))) (= ($generated@@78 ($generated@@212 $generated@@250) ($generated@@213 $generated@@251) ($generated@@219 $generated@@252))  (and (=> (< 0 ($generated@@149 $generated@@251)) (or ($generated@@229 $generated@@252) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@251 ($generated@@148 1)) (+ $generated@@252 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@251)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@71) (and ($generated@@69 $generated@@254 $generated@@251) ($generated@@78 ($generated@@212 $generated@@250) $generated@@254 $generated@@252)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@250) $generated@@254 $generated@@252))
)))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@212 $generated@@250) ($generated@@213 $generated@@251) ($generated@@219 $generated@@252)))
))))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 15)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Int) ) (!  (=> (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@71)) (= ($generated@@68 ($generated@@212 $generated@@263) $generated@@264 $generated@@265) ($generated@@68 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 Int) ) (!  (=> (and (= (type $generated@@266) $generated@@70) (= (type $generated@@267) $generated@@71)) (= ($generated@@78 ($generated@@212 $generated@@266) $generated@@267 $generated@@268) ($generated@@78 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@61) (= (type $generated@@274) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@269 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@86 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@269 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 16)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@88 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@93 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@93 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 17)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@88 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@93 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@93 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) $generated@@71)) (and ($generated@@311 $generated@@313) (<= ($generated@@149 $generated@@313) ($generated@@149 $generated@@312)))) (and (= ($generated@@311 ($generated@@147 $generated@@312 $generated@@313)) ($generated@@311 $generated@@312)) (= ($generated@@149 ($generated@@147 $generated@@312 $generated@@313)) (- ($generated@@149 $generated@@312) ($generated@@149 $generated@@313)))))
 :pattern ( ($generated@@147 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 Int) ) (!  (=> (<= 0 $generated@@314) (and ($generated@@311 ($generated@@148 $generated@@314)) (= ($generated@@149 ($generated@@148 $generated@@314)) $generated@@314)))
 :pattern ( ($generated@@148 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@279 (type $generated@@315))))
(let (($generated@@317 ($generated@@278 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@277 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@276 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) ($generated@@0 ($generated@@93 ($generated@@275 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@275 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@297 (type $generated@@319))))
(let (($generated@@321 ($generated@@296 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@295 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@294 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@93 ($generated@@293 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@293 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@71) (= (type $generated@@324) $generated@@71)) (or (or ($generated@@72 $generated@@323 $generated@@324) (= $generated@@323 $generated@@324)) ($generated@@72 $generated@@324 $generated@@323)))
 :pattern ( ($generated@@72 $generated@@323 $generated@@324) ($generated@@72 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@88 $generated@@71 $generated@@4)) (= (type $generated@@328) $generated@@61)) (= (type $generated@@329) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@327 ($generated@@325 $generated@@328) $generated@@329) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@71) ($generated@@0 ($generated@@93 $generated@@327 $generated@@330))) ($generated@@269 $generated@@330 $generated@@328 $generated@@329))
 :pattern ( ($generated@@93 $generated@@327 $generated@@330))
))))
 :pattern ( ($generated@@86 $generated@@327 ($generated@@325 $generated@@328) $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@88 $generated@@71 $generated@@4)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@333 ($generated@@331 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@71) ($generated@@0 ($generated@@93 $generated@@333 $generated@@336))) ($generated@@269 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@93 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@86 $generated@@333 ($generated@@331 $generated@@334) $generated@@335))
)))
(assert  (and (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (= (type ($generated@@337 $generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@279 (type $generated@@341))))
(let (($generated@@343 ($generated@@278 (type $generated@@341))))
(= (type ($generated@@338 $generated@@341)) ($generated@@88 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@338 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (= (type $generated@@344) ($generated@@277 $generated@@71 $generated@@71)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@344 ($generated@@337 $generated@@345 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@71) ($generated@@0 ($generated@@93 ($generated@@275 $generated@@344) $generated@@348))) (and ($generated@@269 ($generated@@93 ($generated@@338 $generated@@344) $generated@@348) $generated@@346 $generated@@347) ($generated@@269 $generated@@348 $generated@@345 $generated@@347)))
 :pattern ( ($generated@@93 ($generated@@338 $generated@@344) $generated@@348))
 :pattern ( ($generated@@93 ($generated@@275 $generated@@344) $generated@@348))
))))
 :pattern ( ($generated@@86 $generated@@344 ($generated@@337 $generated@@345 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@297 (type $generated@@353))))
(let (($generated@@355 ($generated@@296 (type $generated@@353))))
(= (type ($generated@@350 $generated@@353)) ($generated@@88 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@350 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (and (= (type $generated@@356) ($generated@@295 $generated@@71 $generated@@71)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) $generated@@61)) (= (type $generated@@359) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@356 ($generated@@349 $generated@@357 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@71) ($generated@@0 ($generated@@93 ($generated@@293 $generated@@356) $generated@@360))) (and ($generated@@269 ($generated@@93 ($generated@@350 $generated@@356) $generated@@360) $generated@@358 $generated@@359) ($generated@@269 $generated@@360 $generated@@357 $generated@@359)))
 :pattern ( ($generated@@93 ($generated@@350 $generated@@356) $generated@@360))
 :pattern ( ($generated@@93 ($generated@@293 $generated@@356) $generated@@360))
))))
 :pattern ( ($generated@@86 $generated@@356 ($generated@@349 $generated@@357 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@71) (= (type $generated@@362) $generated@@71)) (= ($generated@@69 $generated@@361 $generated@@362) ($generated@@72 $generated@@361 $generated@@362)))
 :pattern ( ($generated@@69 $generated@@361 $generated@@362))
)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 Int) ) (!  (=> (and (and (= (type $generated@@363) $generated@@70) (= (type $generated@@364) $generated@@71)) (or ($generated@@214 $generated@@364 $generated@@365) (not (= 2 $generated@@67)))) true)
 :pattern ( ($generated@@68 $generated@@363 $generated@@364 $generated@@365))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 Int) ) (!  (=> (and (and (= (type $generated@@366) $generated@@70) (= (type $generated@@367) $generated@@71)) (or ($generated@@217 $generated@@367 $generated@@368) (not (= 2 $generated@@67)))) true)
 :pattern ( ($generated@@78 $generated@@366 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@370 T@T) ) (! (= (type ($generated@@369 $generated@@370)) ($generated@@88 $generated@@370 $generated@@4))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@297 (type $generated@@371))))
(let (($generated@@373 ($generated@@296 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@295 $generated@@373 $generated@@372)) (= (= $generated@@371 ($generated@@294 $generated@@373 $generated@@372)) (= ($generated@@293 $generated@@371) ($generated@@369 $generated@@373))))))
 :pattern ( ($generated@@293 $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@71) (<= 0 ($generated@@149 $generated@@374)))
 :pattern ( ($generated@@149 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@258 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@257 $generated@@376)) (<= 0 ($generated@@256 $generated@@375))))
 :pattern ( ($generated@@256 $generated@@375))
)))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 Int) ) (!  (=> (and (and (= (type $generated@@377) $generated@@70) (= (type $generated@@378) $generated@@71)) (or ($generated@@214 $generated@@378 $generated@@379) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@378)) (and ($generated@@215 $generated@@379) (=> (not ($generated@@216 $generated@@379)) ($generated@@217 ($generated@@147 $generated@@378 ($generated@@148 1)) (+ $generated@@379 1))))) (=> (=> (< 0 ($generated@@149 $generated@@378)) (or ($generated@@216 $generated@@379) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@378 ($generated@@148 1)) (+ $generated@@379 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@378)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@71) ($generated@@69 $generated@@380 $generated@@378)) ($generated@@214 $generated@@380 $generated@@379))
 :pattern ( ($generated@@68 $generated@@377 $generated@@380 $generated@@379))
))))) (= ($generated@@68 ($generated@@212 $generated@@377) $generated@@378 $generated@@379)  (and (=> (< 0 ($generated@@149 $generated@@378)) (or ($generated@@216 $generated@@379) ($generated@@78 ($generated@@212 $generated@@218) ($generated@@147 $generated@@378 ($generated@@148 1)) (+ $generated@@379 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@71) (and ($generated@@69 $generated@@381 $generated@@378) ($generated@@68 $generated@@377 $generated@@381 $generated@@379)))
 :pattern ( ($generated@@68 $generated@@377 $generated@@381 $generated@@379))
)))))))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@377) $generated@@378 $generated@@379))
))))
(assert  (=> (<= 2 $generated@@67) (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 Int) ) (!  (=> (and (and (= (type $generated@@382) $generated@@70) (= (type $generated@@383) $generated@@71)) (or ($generated@@217 $generated@@383 $generated@@384) (not (= 2 $generated@@67)))) (and (and (=> (< 0 ($generated@@149 $generated@@383)) (and ($generated@@228 $generated@@384) (=> (not ($generated@@229 $generated@@384)) ($generated@@214 ($generated@@147 $generated@@383 ($generated@@148 1)) (+ $generated@@384 1))))) (=> (=> (< 0 ($generated@@149 $generated@@383)) (or ($generated@@229 $generated@@384) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@383 ($generated@@148 1)) (+ $generated@@384 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@383)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) ($generated@@69 $generated@@385 $generated@@383)) ($generated@@217 $generated@@385 $generated@@384))
 :pattern ( ($generated@@78 $generated@@382 $generated@@385 $generated@@384))
))))) (= ($generated@@78 ($generated@@212 $generated@@382) $generated@@383 $generated@@384)  (and (=> (< 0 ($generated@@149 $generated@@383)) (or ($generated@@229 $generated@@384) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@383 ($generated@@148 1)) (+ $generated@@384 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@71) (and ($generated@@69 $generated@@386 $generated@@383) ($generated@@78 $generated@@382 $generated@@386 $generated@@384)))
 :pattern ( ($generated@@78 $generated@@382 $generated@@386 $generated@@384))
)))))))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@382) $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@388 T@U) ) (! (= (type ($generated@@387 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@61) (= (type $generated@@390) $generated@@61)) (= ($generated@@387 ($generated@@337 $generated@@389 $generated@@390)) $generated@@389))
 :pattern ( ($generated@@337 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@61) (= (type $generated@@394) $generated@@61)) (= ($generated@@391 ($generated@@337 $generated@@393 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@337 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@61) (= (type $generated@@396) $generated@@61)) (= ($generated@@84 ($generated@@337 $generated@@395 $generated@@396)) $generated@@58))
 :pattern ( ($generated@@337 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (= (type ($generated@@397 $generated@@398)) $generated@@61)
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@61) (= (type $generated@@400) $generated@@61)) (= ($generated@@397 ($generated@@349 $generated@@399 $generated@@400)) $generated@@399))
 :pattern ( ($generated@@349 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (= (type ($generated@@401 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@61) (= (type $generated@@404) $generated@@61)) (= ($generated@@401 ($generated@@349 $generated@@403 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@349 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@61) (= (type $generated@@406) $generated@@61)) (= ($generated@@84 ($generated@@349 $generated@@405 $generated@@406)) $generated@@59))
 :pattern ( ($generated@@349 $generated@@405 $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) $generated@@61)
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ($generated@@411 Int) ) (! (let (($generated@@412 ($generated@@258 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410 $generated@@411)) $generated@@412))
 :pattern ( ($generated@@408 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@257 $generated@@71)) (= (type $generated@@414) $generated@@61)) (= (type $generated@@415) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@413 ($generated@@407 $generated@@414) $generated@@415) (forall (($generated@@416 Int) ) (!  (=> (and (<= 0 $generated@@416) (< $generated@@416 ($generated@@256 $generated@@413))) ($generated@@269 ($generated@@408 $generated@@413 $generated@@416) $generated@@414 $generated@@415))
 :pattern ( ($generated@@408 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@86 $generated@@413 ($generated@@407 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 Int) ) (! (= ($generated@@417 ($generated@@87 $generated@@418)) $generated@@418)
 :pattern ( ($generated@@87 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (= (type ($generated@@419 $generated@@420)) $generated@@61)
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@61) (= ($generated@@419 ($generated@@325 $generated@@421)) $generated@@421))
 :pattern ( ($generated@@325 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@61) (= ($generated@@84 ($generated@@325 $generated@@422)) $generated@@54))
 :pattern ( ($generated@@325 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (= (type ($generated@@423 $generated@@424)) $generated@@61)
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@61) (= ($generated@@423 ($generated@@331 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@331 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@61) (= ($generated@@84 ($generated@@331 $generated@@426)) $generated@@55))
 :pattern ( ($generated@@331 $generated@@426))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) $generated@@61)
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) $generated@@61)
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@61) (= ($generated@@428 ($generated@@427 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@427 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@61) (= ($generated@@84 ($generated@@427 $generated@@432)) $generated@@56))
 :pattern ( ($generated@@427 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@61)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@61) (= ($generated@@433 ($generated@@407 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@407 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@61) (= ($generated@@84 ($generated@@407 $generated@@436)) $generated@@57))
 :pattern ( ($generated@@407 $generated@@436))
)))
(assert (forall (($generated@@438 T@T) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@438)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated@@437 $generated@@441 ($generated@@270 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@71) (= (type $generated@@443) $generated@@71)) (and (and (and (=> ($generated@@72 $generated@@442 $generated@@443) (not (= $generated@@442 $generated@@443))) (=> (and ($generated@@311 $generated@@442) (not ($generated@@311 $generated@@443))) ($generated@@72 $generated@@442 $generated@@443))) (=> (and ($generated@@311 $generated@@442) ($generated@@311 $generated@@443)) (= ($generated@@72 $generated@@442 $generated@@443) (< ($generated@@149 $generated@@442) ($generated@@149 $generated@@443))))) (=> (and ($generated@@72 $generated@@442 $generated@@443) ($generated@@311 $generated@@443)) ($generated@@311 $generated@@442))))
 :pattern ( ($generated@@72 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
 (not ($generated@@0 ($generated@@93 ($generated@@369 $generated@@445) $generated@@444))))
 :pattern ( (let (($generated@@445 (type $generated@@444)))
($generated@@93 ($generated@@369 $generated@@445) $generated@@444)))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@71) ($generated@@311 $generated@@446)) (= $generated@@446 ($generated@@148 ($generated@@149 $generated@@446))))
 :pattern ( ($generated@@149 $generated@@446))
 :pattern ( ($generated@@311 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@88 $generated@@71 $generated@@2)) (= (type $generated@@448) $generated@@61)) (= (type $generated@@449) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@447 ($generated@@427 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@71) (< 0 ($generated ($generated@@93 $generated@@447 $generated@@450)))) ($generated@@269 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@93 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@86 $generated@@447 ($generated@@427 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@71) (= (type $generated@@452) $generated@@71)) (and ($generated@@311 $generated@@452) (<= ($generated@@149 $generated@@452) ($generated@@149 $generated@@451)))) (or (and (= $generated@@452 ($generated@@148 0)) (= ($generated@@147 $generated@@451 $generated@@452) $generated@@451)) (and (not (= $generated@@452 ($generated@@148 0))) ($generated@@72 ($generated@@147 $generated@@451 $generated@@452) $generated@@451))))
 :pattern ( ($generated@@147 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@219 $generated@@453))) ($generated@@213 ($generated@@270 ($generated@@8 $generated@@453))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@219 $generated@@453))))
)))
(assert (forall (($generated@@454 T@U) ) (! (= ($generated@@270 ($generated@@213 $generated@@454)) ($generated@@213 ($generated@@270 $generated@@454)))
 :pattern ( ($generated@@270 ($generated@@213 $generated@@454)))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@258 (type $generated@@455))))
 (=> (and (= (type $generated@@455) ($generated@@257 $generated@@456)) (= ($generated@@256 $generated@@455) 0)) (= $generated@@455 ($generated@@255 $generated@@456))))
 :pattern ( ($generated@@256 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@458) $generated@@2)) ($generated@@86 $generated@@458 $generated@@46 $generated@@457))
 :pattern ( ($generated@@86 $generated@@458 $generated@@46 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@460) $generated@@3)) ($generated@@86 $generated@@460 $generated@@47 $generated@@459))
 :pattern ( ($generated@@86 $generated@@460 $generated@@47 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@462) $generated@@4)) ($generated@@86 $generated@@462 $generated@@44 $generated@@461))
 :pattern ( ($generated@@86 $generated@@462 $generated@@44 $generated@@461))
)))
(assert (= ($generated@@1 $generated@@463) 18))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@465) $generated@@463)) ($generated@@86 $generated@@465 $generated@@45 $generated@@464))
 :pattern ( ($generated@@86 $generated@@465 $generated@@45 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@467) $generated@@71)) ($generated@@86 $generated@@467 $generated@@48 $generated@@466))
 :pattern ( ($generated@@86 $generated@@467 $generated@@48 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 Int) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@71)) (= ($generated@@68 $generated@@470 $generated@@471 $generated@@472) ($generated@@68 $generated@@218 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@68 ($generated@@468 $generated@@470) $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@71)) (= ($generated@@78 $generated@@473 $generated@@474 $generated@@475) ($generated@@78 $generated@@218 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@78 ($generated@@468 $generated@@473) $generated@@474 $generated@@475))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@476 () T@U)
(declare-fun $generated@@477 () Int)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@479 () Int)
(declare-fun $generated@@480 () T@U)
(declare-fun $generated@@481 () T@U)
(declare-fun $generated@@482 () Int)
(declare-fun $generated@@483 () T@U)
(declare-fun $generated@@484 () T@U)
(declare-fun $generated@@485 () T@U)
(declare-fun $generated@@486 (T@U) Bool)
(declare-fun $generated@@487 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@476) $generated@@71) (= (type $generated@@478) $generated@@71)) (= (type $generated@@480) $generated@@71)) (= (type $generated@@481) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@483) ($generated@@158 $generated@@89 $generated@@4))) (= (type $generated@@484) $generated@@89)) (= (type $generated@@485) ($generated@@88 $generated@@89 $generated@@90))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@488 true))
(let (($generated@@489  (=> ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@311 ($generated@@213 ($generated@@148 1)))) (=> ($generated@@311 ($generated@@213 ($generated@@148 1))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476))) (=> (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476)) (=> (and (= $generated@@478 ($generated@@147 $generated@@476 ($generated@@148 1))) (= $generated@@479 (+ $generated@@477 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@214 $generated@@478 $generated@@479) (or ($generated@@68 ($generated@@212 $generated@@218) $generated@@478 $generated@@479) (=> (< 0 ($generated@@149 $generated@@478)) (or ($generated@@216 $generated@@479) ($generated@@78 ($generated@@212 ($generated@@212 $generated@@218)) ($generated@@147 $generated@@478 ($generated@@148 1)) (+ $generated@@479 1))))))) (=> (=> ($generated@@214 $generated@@478 $generated@@479) (or ($generated@@68 ($generated@@212 $generated@@218) $generated@@478 $generated@@479) (=> (< 0 ($generated@@149 $generated@@478)) (or ($generated@@216 $generated@@479) ($generated@@78 ($generated@@212 ($generated@@212 $generated@@218)) ($generated@@147 $generated@@478 ($generated@@148 1)) (+ $generated@@479 1)))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@214 $generated@@478 $generated@@479) (or ($generated@@68 ($generated@@212 $generated@@218) $generated@@478 $generated@@479) (=> (= ($generated@@219 0) ($generated@@149 $generated@@478)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@71) (and ($generated@@69 $generated@@490 $generated@@478) ($generated@@68 ($generated@@212 $generated@@218) $generated@@490 $generated@@479)))
 :pattern ( ($generated@@68 ($generated@@212 $generated@@218) $generated@@490 $generated@@479))
))))))))))))))))
(let (($generated@@491  (=> (< 0 ($generated@@149 $generated@@476)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@311 ($generated@@213 ($generated@@148 1)))) (=> ($generated@@311 ($generated@@213 ($generated@@148 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476))) (=> (<= ($generated@@149 ($generated@@213 ($generated@@148 1))) ($generated@@149 $generated@@476)) (=> (and (= $generated@@480 ($generated@@147 $generated@@476 ($generated@@148 1))) ($generated@@86 $generated@@480 $generated@@48 $generated@@481)) (=> (and (and (= $generated@@482 (+ $generated@@477 1)) ($generated@@86 ($generated@@8 $generated@@482) $generated@@46 $generated@@481)) (and ($generated@@214 ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)) ($generated@@214 ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@489) (=> (= (ControlFlow 0 8) 7) $generated@@488)))))))))))
(let (($generated@@492 true))
(let (($generated@@493  (=> (= $generated@@483 ($generated@@157 $generated@@484 $generated@@485 $generated@@60 false)) (=> (and (and ($generated@@486 $generated@@481) ($generated@@487 $generated@@481)) (and (= $generated@@485 $generated@@481) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (!  (=> (= (type $generated@@494) $generated@@71) (=> (and ($generated@@78 ($generated@@212 $generated@@218) $generated@@494 $generated@@495) (or ($generated@@72 $generated@@494 $generated@@476) (and (= $generated@@494 $generated@@476) (and (<= 0 $generated@@495) (< $generated@@495 $generated@@477))))) true))
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@491) (=> (= (ControlFlow 0 11) 1) $generated@@492))))))
(let (($generated@@496  (=> (and (and (and ($generated@@486 $generated@@485) ($generated@@487 $generated@@485)) (= 3 $generated@@67)) (and (and ($generated@@217 $generated@@476 $generated@@477) (and ($generated@@78 ($generated@@212 $generated@@218) $generated@@476 $generated@@477) (and (=> (< 0 ($generated@@149 $generated@@476)) (or ($generated@@229 $generated@@477) ($generated@@68 ($generated@@212 $generated@@218) ($generated@@147 $generated@@476 ($generated@@148 1)) (+ $generated@@477 1)))) (=> (= ($generated@@219 0) ($generated@@149 $generated@@476)) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@71) (and ($generated@@69 $generated@@497 $generated@@476) ($generated@@78 ($generated@@212 $generated@@218) $generated@@497 $generated@@477)))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@218) $generated@@497 $generated@@477))
)))))) (= (ControlFlow 0 12) 11))) $generated@@493)))
$generated@@496)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
