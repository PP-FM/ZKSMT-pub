(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@U Int) T@U)
(declare-fun $generated@@144 (Int) Int)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U T@U) Bool)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@148 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@148)) 14)) (forall (($generated@@149 T@T) ) (! (= ($generated@@147 ($generated@@135 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@135 $generated@@149))
))) (= ($generated@@1 $generated@@136) 15)) (forall (($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(= (type ($generated@@134 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@134 $generated@@150))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@139 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@152))
))) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@64)) (forall (($generated@@153 T@U) ($generated@@154 Int) ) (! (let (($generated@@155 ($generated@@147 (type $generated@@153))))
(= (type ($generated@@143 $generated@@153 $generated@@154)) $generated@@155))
 :pattern ( ($generated@@143 $generated@@153 $generated@@154))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@135 $generated@@136)) (= (type $generated@@157) ($generated@@135 $generated@@136))) (or ($generated@@137 ($generated@@134 $generated@@156) ($generated@@134 $generated@@157)) (and (not (= 1 $generated@@132)) (and ($generated@@138 $generated@@156 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@157 ($generated@@139 $generated@@141)))))) (and (=> (= ($generated@@142 ($generated@@134 $generated@@156)) (+ ($generated@@142 ($generated@@134 $generated@@157)) 1)) (forall (($generated@@158 Int) ($generated@@159 Int) ) (!  (=> (= $generated@@159 (+ $generated@@158 1)) (=> (<= ($generated@@144 0) $generated@@158) (=> (< $generated@@158 ($generated@@142 ($generated@@134 $generated@@157))) ($generated@@145 ($generated@@143 ($generated@@134 $generated@@156) $generated@@158) ($generated@@143 ($generated@@134 $generated@@156) $generated@@159) ($generated@@143 ($generated@@134 $generated@@157) $generated@@158)))))
 :pattern ( ($generated@@143 $generated@@157 $generated@@158) ($generated@@143 $generated@@156 $generated@@159))
 :pattern ( ($generated@@143 $generated@@156 $generated@@159) ($generated@@143 $generated@@156 $generated@@158))
))) (= ($generated@@133 ($generated@@134 $generated@@156) ($generated@@134 $generated@@157))  (and (= ($generated@@142 ($generated@@134 $generated@@156)) (+ ($generated@@142 ($generated@@134 $generated@@157)) 1)) (forall (($generated@@160 Int) ($generated@@161 Int) ) (!  (=> (= $generated@@161 (+ $generated@@160 1)) (=> (and (<= ($generated@@144 0) $generated@@160) (< $generated@@160 ($generated@@142 ($generated@@134 $generated@@157)))) ($generated@@146 ($generated@@143 ($generated@@134 $generated@@156) $generated@@160) ($generated@@143 ($generated@@134 $generated@@156) $generated@@161) ($generated@@143 ($generated@@134 $generated@@157) $generated@@160))))
 :pattern ( ($generated@@143 $generated@@157 $generated@@160) ($generated@@143 $generated@@156 $generated@@161))
 :pattern ( ($generated@@143 $generated@@156 $generated@@161) ($generated@@143 $generated@@156 $generated@@160))
))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@156) ($generated@@134 $generated@@157)))
))))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@138 $generated@@162 ($generated@@75 0)))
 :pattern ( ($generated@@138 $generated@@162 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@165) 16) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167)) $generated@@64)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@64) (= (type $generated@@169) $generated@@64)) (= (type $generated@@170) $generated@@165)) ($generated@@138 $generated@@170 ($generated@@164 $generated@@168 $generated@@169))) ($generated@@163 $generated@@170))
 :pattern ( ($generated@@163 $generated@@170) ($generated@@138 $generated@@170 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@136)
 :pattern ( ($generated@@172 $generated@@174))
)) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@136)
 :pattern ( ($generated@@173 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@165) (= (type $generated@@177) $generated@@165)) true) (= ($generated@@171 $generated@@176 $generated@@177)  (and (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)) (= ($generated@@173 $generated@@176) ($generated@@173 $generated@@177)))))
 :pattern ( ($generated@@171 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@64)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@182) $generated@@64)) ($generated@@138 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@138 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 17)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@77 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@67 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@77) (= (type $generated@@233) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@234) ($generated@@66 $generated@@4))) (= (type $generated@@236) $generated@@77)) (= (type $generated@@237) ($generated@@66 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@77 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@67 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@77) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@246) ($generated@@66 $generated@@4))) (= (type $generated@@248) $generated@@77)) (= (type $generated@@249) ($generated@@66 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@165)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@136)) (= (type $generated@@258) $generated@@136)) (= ($generated@@138 ($generated@@251 $generated@@257 $generated@@258) ($generated@@164 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@138 ($generated@@251 $generated@@257 $generated@@258) ($generated@@164 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@165) (= (type $generated@@260) $generated@@165)) (= ($generated@@171 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@171 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@64)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@264) $generated@@64)) (= ($generated@@138 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@0 ($generated@@81 $generated@@263 $generated@@265))) ($generated@@252 $generated@@265 $generated@@264))
 :pattern ( ($generated@@81 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@138 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@138 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@136) ($generated@@0 ($generated@@81 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@81 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@138 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@144 $generated@@271) $generated@@271)
 :pattern ( ($generated@@144 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@134 $generated@@272) $generated@@272)
 :pattern ( ($generated@@134 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) $generated@@136)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@251 $generated@@277 $generated@@278) ($generated@@164 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@251 $generated@@277 $generated@@278) ($generated@@164 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@165) (= ($generated@@163 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@165) ($generated@@163 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@136) (= (type $generated@@285) $generated@@136)) (= $generated@@283 ($generated@@251 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@163 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@135 $generated@@287))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@142 ($generated@@286 $generated@@288)) 0)
 :pattern ( ($generated@@286 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@136)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@64) (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@74 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@274 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@76 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@79 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@76 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@81 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@79 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@76 $generated@@337 $generated@@2)) (= ($generated@@179 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@81 $generated@@336 $generated@@338))) (<= ($generated ($generated@@81 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@81 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@179 $generated@@336))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (= (type $generated@@339) $generated@@136) (= (type $generated@@340) $generated@@136)) (= (type $generated@@341) $generated@@136)) (or ($generated@@145 $generated@@339 $generated@@340 $generated@@341) (and (not (= 0 $generated@@132)) (and (and ($generated@@252 $generated@@339 $generated@@140) ($generated@@252 $generated@@340 $generated@@140)) ($generated@@252 $generated@@341 $generated@@141))))) true)
 :pattern ( ($generated@@146 $generated@@339 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@304 (type $generated@@342))))
(let (($generated@@344 ($generated@@303 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@302 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@301 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@300 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@304 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@304 (type $generated@@349))))
(let (($generated@@351 ($generated@@303 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@302 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@301 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@322 (type $generated@@353))))
(let (($generated@@355 ($generated@@321 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@320 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@319 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@318 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@322 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@322 (type $generated@@360))))
(let (($generated@@362 ($generated@@321 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@320 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@319 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@365) $generated@@64)) (= ($generated@@138 $generated@@364 ($generated@@178 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@364 $generated@@366)))) ($generated@@252 $generated@@366 $generated@@365))
 :pattern ( ($generated@@81 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@138 $generated@@364 ($generated@@178 $generated@@365)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@135 $generated@@136)) (= (type $generated@@368) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@367 $generated@@368) (and (not (= 1 $generated@@132)) (and ($generated@@138 $generated@@367 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@368 ($generated@@139 $generated@@141)))))) true)
 :pattern ( ($generated@@133 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@370) $generated@@64)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@369 ($generated@@261 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@136) ($generated@@0 ($generated@@81 $generated@@369 $generated@@372))) ($generated@@274 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@81 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@74 $generated@@369 ($generated@@261 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@266 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@136) ($generated@@0 ($generated@@81 $generated@@373 $generated@@376))) ($generated@@274 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@81 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@266 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@81 ($generated@@295 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@81 ($generated@@295 $generated@@378) $generated@@377)))
)))
(assert  (and (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@379 $generated@@382)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@379 $generated@@382))
)) (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@380 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@380 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@304 (type $generated@@385))))
(let (($generated@@387 ($generated@@303 (type $generated@@385))))
(= (type ($generated@@381 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@381 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@389) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@388) ($generated@@172 ($generated@@380 $generated@@165 $generated@@389)))) (= ($generated@@81 ($generated@@381 $generated@@388) ($generated@@172 ($generated@@380 $generated@@165 $generated@@389))) ($generated@@173 ($generated@@380 $generated@@165 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@322 (type $generated@@393))))
(let (($generated@@395 ($generated@@321 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@76 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@397) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@396) ($generated@@172 ($generated@@380 $generated@@165 $generated@@397)))) (= ($generated@@81 ($generated@@391 $generated@@396) ($generated@@172 ($generated@@380 $generated@@165 $generated@@397))) ($generated@@173 ($generated@@380 $generated@@165 $generated@@397))))))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@303 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@302 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@381 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@321 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@320 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@81 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@411) $generated@@415))) (and ($generated@@274 ($generated@@81 ($generated@@381 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@274 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@64)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@419) $generated@@423))) (and ($generated@@274 ($generated@@81 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@274 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@76 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@322 (type $generated@@426))))
(let (($generated@@428 ($generated@@321 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@320 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@319 $generated@@428 $generated@@427)) (= ($generated@@318 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@318 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@322 (type $generated@@429))))
(let (($generated@@431 ($generated@@321 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@320 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@357 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@357 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@136))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@304 (type $generated@@435))))
(let (($generated@@437 ($generated@@303 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@302 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@301 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@136) (= (type $generated@@439) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@435) ($generated@@289 ($generated@@251 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@379 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@322 (type $generated@@440))))
(let (($generated@@442 ($generated@@321 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@320 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@319 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@136) (= (type $generated@@444) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@390 $generated@@440) ($generated@@289 ($generated@@251 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@136) ($generated@@252 $generated@@445 $generated@@46)) (and (= ($generated@@289 ($generated@@380 $generated@@2 $generated@@445)) $generated@@445) ($generated@@138 ($generated@@380 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@136) ($generated@@252 $generated@@446 $generated@@47)) (and (= ($generated@@289 ($generated@@380 $generated@@3 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@380 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@136) ($generated@@252 $generated@@447 $generated@@44)) (and (= ($generated@@289 ($generated@@380 $generated@@4 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@380 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@136) ($generated@@252 $generated@@449 $generated@@45)) (and (= ($generated@@289 ($generated@@380 $generated@@448 $generated@@449)) $generated@@449) ($generated@@138 ($generated@@380 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@252 ($generated@@289 $generated@@450) $generated@@451) ($generated@@138 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@252 ($generated@@289 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@294 $generated@@452))))
 :pattern ( ($generated@@294 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@147 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@135 $generated@@455)) (<= 0 ($generated@@142 $generated@@454))))
 :pattern ( ($generated@@142 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@136) (= (type $generated@@477) $generated@@136)) (= ($generated@@280 ($generated@@251 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@164 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@164 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@164 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@164 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@136) (= (type $generated@@487) $generated@@136)) (= ($generated@@172 ($generated@@251 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@251 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@136) (= (type $generated@@489) $generated@@136)) (= ($generated@@173 ($generated@@251 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@251 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@135 $generated@@136)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@490 ($generated@@139 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@142 $generated@@490))) ($generated@@274 ($generated@@143 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@143 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@74 $generated@@490 ($generated@@139 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@261 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@261 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@261 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@266 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@266 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@266 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@178 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@178 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@178 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@139 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@139 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@139 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@139 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@380 $generated@@513 ($generated@@289 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@289 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@138 $generated@@514 ($generated@@408 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@514) $generated@@517))) (and ($generated@@252 ($generated@@81 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@252 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@138 $generated@@514 ($generated@@408 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@138 $generated@@518 ($generated@@416 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@518) $generated@@521))) (and ($generated@@252 ($generated@@81 ($generated@@391 $generated@@518) $generated@@521) $generated@@520) ($generated@@252 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@138 $generated@@518 ($generated@@416 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@136) (= (type $generated@@525) $generated@@136)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@251 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@251 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@136) (= (type $generated@@527) $generated@@136)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@251 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@251 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@136) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@252 $generated@@528 ($generated@@408 $generated@@529 $generated@@530))) (and (= ($generated@@289 ($generated@@380 ($generated@@302 $generated@@136 $generated@@136) $generated@@528)) $generated@@528) ($generated@@138 ($generated@@380 ($generated@@302 $generated@@136 $generated@@136) $generated@@528) ($generated@@408 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@252 $generated@@528 ($generated@@408 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@252 $generated@@531 ($generated@@416 $generated@@532 $generated@@533))) (and (= ($generated@@289 ($generated@@380 ($generated@@320 $generated@@136 $generated@@136) $generated@@531)) $generated@@531) ($generated@@138 ($generated@@380 ($generated@@320 $generated@@136 $generated@@136) $generated@@531) ($generated@@416 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@252 $generated@@531 ($generated@@416 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@136)) ($generated@@252 $generated@@536 ($generated@@164 $generated@@534 $generated@@535))) (and (= ($generated@@289 ($generated@@380 $generated@@165 $generated@@536)) $generated@@536) ($generated@@138 ($generated@@380 $generated@@165 $generated@@536) ($generated@@164 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@252 $generated@@536 ($generated@@164 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@424 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@424 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@164 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@164 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@165) (= ($generated@@522 ($generated@@289 $generated@@543)) ($generated@@523 $generated@@543)))
 :pattern ( ($generated@@522 ($generated@@289 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@136) ($generated@@252 $generated@@544 ($generated@@75 0))) (and (= ($generated@@289 ($generated@@380 $generated@@2 $generated@@544)) $generated@@544) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@252 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@136) (= (type $generated@@546) $generated@@64)) ($generated@@252 $generated@@545 ($generated@@261 $generated@@546))) (and (= ($generated@@289 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@545)) $generated@@545) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@545) ($generated@@261 $generated@@546))))
 :pattern ( ($generated@@252 $generated@@545 ($generated@@261 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) ($generated@@252 $generated@@547 ($generated@@266 $generated@@548))) (and (= ($generated@@289 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@547)) $generated@@547) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@547) ($generated@@266 $generated@@548))))
 :pattern ( ($generated@@252 $generated@@547 ($generated@@266 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@136) (= (type $generated@@550) $generated@@64)) ($generated@@252 $generated@@549 ($generated@@178 $generated@@550))) (and (= ($generated@@289 ($generated@@380 ($generated@@76 $generated@@136 $generated@@2) $generated@@549)) $generated@@549) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@2) $generated@@549) ($generated@@178 $generated@@550))))
 :pattern ( ($generated@@252 $generated@@549 ($generated@@178 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) ($generated@@252 $generated@@551 ($generated@@139 $generated@@552))) (and (= ($generated@@289 ($generated@@380 ($generated@@135 $generated@@136) $generated@@551)) $generated@@551) ($generated@@138 ($generated@@380 ($generated@@135 $generated@@136) $generated@@551) ($generated@@139 $generated@@552))))
 :pattern ( ($generated@@252 $generated@@551 ($generated@@139 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@178 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@274 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@178 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@165) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@559) (and ($generated@@163 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@164 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@164 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@274 ($generated@@172 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@274 ($generated@@172 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@165) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@563) (and ($generated@@163 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@164 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@164 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@274 ($generated@@173 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@274 ($generated@@173 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@136)) (= ($generated@@251 ($generated@@134 $generated@@565) ($generated@@134 $generated@@566)) ($generated@@134 ($generated@@251 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@251 ($generated@@134 $generated@@565) ($generated@@134 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@144 $generated@@567))) ($generated@@134 ($generated@@289 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@144 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@289 ($generated@@134 $generated@@568)) ($generated@@134 ($generated@@289 $generated@@568)))
 :pattern ( ($generated@@289 ($generated@@134 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@147 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@135 $generated@@570)) (= ($generated@@142 $generated@@569) 0)) (= $generated@@569 ($generated@@286 $generated@@570))))
 :pattern ( ($generated@@142 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@294 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@294 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@294 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@448)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@136)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@135 $generated@@136)) (= (type $generated@@586) $generated@@64)) (= ($generated@@138 $generated@@585 ($generated@@139 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@142 $generated@@585))) ($generated@@252 ($generated@@143 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@143 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@138 $generated@@585 ($generated@@139 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@142 $generated@@589))) (< ($generated@@523 ($generated@@380 $generated@@165 ($generated@@143 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@523 ($generated@@380 $generated@@165 ($generated@@143 $generated@@589 $generated@@590))))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@135 $generated@@136)) (= (type $generated@@592) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@591 $generated@@592) (and (not (= 1 $generated@@132)) (and ($generated@@138 $generated@@591 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@592 ($generated@@139 $generated@@141)))))) (and (=> (= ($generated@@142 $generated@@591) (+ ($generated@@142 $generated@@592) 1)) (forall (($generated@@593 Int) ($generated@@594 Int) ) (!  (=> (= $generated@@594 (+ $generated@@593 1)) (=> (<= ($generated@@144 0) $generated@@593) (=> (< $generated@@593 ($generated@@142 $generated@@592)) ($generated@@145 ($generated@@143 $generated@@591 $generated@@593) ($generated@@143 $generated@@591 $generated@@594) ($generated@@143 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@143 $generated@@592 $generated@@593) ($generated@@143 $generated@@591 $generated@@594))
 :pattern ( ($generated@@143 $generated@@591 $generated@@594) ($generated@@143 $generated@@591 $generated@@593))
))) (= ($generated@@133 $generated@@591 $generated@@592)  (and (= ($generated@@142 $generated@@591) (+ ($generated@@142 $generated@@592) 1)) (forall (($generated@@595 Int) ($generated@@596 Int) ) (!  (=> (= $generated@@596 (+ $generated@@595 1)) (=> (and (<= ($generated@@144 0) $generated@@595) (< $generated@@595 ($generated@@142 $generated@@592))) ($generated@@146 ($generated@@143 $generated@@591 $generated@@595) ($generated@@143 $generated@@591 $generated@@596) ($generated@@143 $generated@@592 $generated@@595))))
 :pattern ( ($generated@@143 $generated@@592 $generated@@595) ($generated@@143 $generated@@591 $generated@@596))
 :pattern ( ($generated@@143 $generated@@591 $generated@@596) ($generated@@143 $generated@@591 $generated@@595))
))))))
 :pattern ( ($generated@@133 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@138 $generated@@597 ($generated@@408 $generated@@598 $generated@@599))) (and (and ($generated@@138 ($generated@@300 $generated@@597) ($generated@@261 $generated@@598)) ($generated@@138 ($generated@@346 $generated@@597) ($generated@@261 $generated@@599))) ($generated@@138 ($generated@@379 $generated@@597) ($generated@@261 ($generated@@164 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@138 $generated@@597 ($generated@@408 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@138 $generated@@600 ($generated@@416 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@318 $generated@@600) ($generated@@266 $generated@@601)) ($generated@@138 ($generated@@357 $generated@@600) ($generated@@266 $generated@@602))) ($generated@@138 ($generated@@390 $generated@@600) ($generated@@266 ($generated@@164 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@416 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@138 $generated@@603 $generated@@46))
 :pattern ( ($generated@@138 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@138 $generated@@604 $generated@@47))
 :pattern ( ($generated@@138 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@138 $generated@@605 $generated@@44))
 :pattern ( ($generated@@138 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@448) ($generated@@138 $generated@@606 $generated@@45))
 :pattern ( ($generated@@138 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@136) ($generated@@138 $generated@@607 $generated@@48))
 :pattern ( ($generated@@138 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@610) ($generated@@135 $generated@@136)) (= (type $generated@@609) ($generated@@135 $generated@@136))) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)) (= (type $generated@@615) ($generated@@185 $generated@@77 $generated@@4))) (= (type $generated@@616) $generated@@77)) (= (type $generated@@617) ($generated@@185 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@619 true))
(let (($generated@@620 true))
(let (($generated@@621  (=> (and (not (and (<= ($generated@@144 0) $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609)))) (= (ControlFlow 0 9) 2)) $generated@@620)))
(let (($generated@@622  (=> (and (<= ($generated@@144 0) $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@610)))) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@610))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 (+ $generated@@608 1)) (< (+ $generated@@608 1) ($generated@@142 $generated@@610)))) (=> (and (<= 0 (+ $generated@@608 1)) (< (+ $generated@@608 1) ($generated@@142 $generated@@610))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609)))) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609))) (=> (and (and (and (= $generated@@611 ($generated@@143 $generated@@610 $generated@@608)) ($generated@@274 $generated@@611 $generated@@140 $generated@@612)) (and (= $generated@@613 ($generated@@143 $generated@@610 (+ $generated@@608 1))) ($generated@@274 $generated@@613 $generated@@140 $generated@@612))) (and (and (= $generated@@614 ($generated@@143 $generated@@609 $generated@@608)) ($generated@@274 $generated@@614 $generated@@141 $generated@@612)) (and ($generated@@145 ($generated@@143 $generated@@610 $generated@@608) ($generated@@143 $generated@@610 (+ $generated@@608 1)) ($generated@@143 $generated@@609 $generated@@608)) (= (ControlFlow 0 5) 2)))) $generated@@620))))))))))
(let (($generated@@623  (=> (< $generated@@608 ($generated@@144 0)) (and (=> (= (ControlFlow 0 11) 5) $generated@@622) (=> (= (ControlFlow 0 11) 9) $generated@@621)))))
(let (($generated@@624  (=> (<= ($generated@@144 0) $generated@@608) (and (=> (= (ControlFlow 0 10) 5) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621)))))
(let (($generated@@625  (and (=> (= (ControlFlow 0 12) 10) $generated@@624) (=> (= (ControlFlow 0 12) 11) $generated@@623))))
(let (($generated@@626  (=> (= ($generated@@142 $generated@@610) (+ ($generated@@142 $generated@@609) 1)) (and (=> (= (ControlFlow 0 13) 12) $generated@@625) (=> (= (ControlFlow 0 13) 4) $generated@@619)))))
(let (($generated@@627  (=> (and (not (= ($generated@@142 $generated@@610) (+ ($generated@@142 $generated@@609) 1))) (= (ControlFlow 0 3) 2)) $generated@@620)))
(let (($generated@@628  (=> (= $generated@@615 ($generated@@239 $generated@@616 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@626) (=> (= (ControlFlow 0 14) 3) $generated@@627)))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (= $generated@@617 ($generated@@184 $generated@@616 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@629) (=> (= (ControlFlow 0 15) 14) $generated@@628)))))
(let (($generated@@631  (=> (and ($generated@@273 $generated@@612) ($generated@@618 $generated@@612)) (=> (and (and ($generated@@138 $generated@@610 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@609 ($generated@@139 $generated@@141))) (and (= 1 $generated@@132) (= (ControlFlow 0 16) 15))) $generated@@630))))
$generated@@631))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@U Int) T@U)
(declare-fun $generated@@144 (Int) Int)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U T@U) Bool)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@148 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@148)) 14)) (forall (($generated@@149 T@T) ) (! (= ($generated@@147 ($generated@@135 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@135 $generated@@149))
))) (= ($generated@@1 $generated@@136) 15)) (forall (($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(= (type ($generated@@134 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@134 $generated@@150))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@139 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@152))
))) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@64)) (forall (($generated@@153 T@U) ($generated@@154 Int) ) (! (let (($generated@@155 ($generated@@147 (type $generated@@153))))
(= (type ($generated@@143 $generated@@153 $generated@@154)) $generated@@155))
 :pattern ( ($generated@@143 $generated@@153 $generated@@154))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@135 $generated@@136)) (= (type $generated@@157) ($generated@@135 $generated@@136))) (or ($generated@@137 ($generated@@134 $generated@@156) ($generated@@134 $generated@@157)) (and (not (= 1 $generated@@132)) (and ($generated@@138 $generated@@156 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@157 ($generated@@139 $generated@@141)))))) (and (=> (= ($generated@@142 ($generated@@134 $generated@@156)) (+ ($generated@@142 ($generated@@134 $generated@@157)) 1)) (forall (($generated@@158 Int) ($generated@@159 Int) ) (!  (=> (= $generated@@159 (+ $generated@@158 1)) (=> (<= ($generated@@144 0) $generated@@158) (=> (< $generated@@158 ($generated@@142 ($generated@@134 $generated@@157))) ($generated@@145 ($generated@@143 ($generated@@134 $generated@@156) $generated@@158) ($generated@@143 ($generated@@134 $generated@@156) $generated@@159) ($generated@@143 ($generated@@134 $generated@@157) $generated@@158)))))
 :pattern ( ($generated@@143 $generated@@157 $generated@@158) ($generated@@143 $generated@@156 $generated@@159))
 :pattern ( ($generated@@143 $generated@@156 $generated@@159) ($generated@@143 $generated@@156 $generated@@158))
))) (= ($generated@@133 ($generated@@134 $generated@@156) ($generated@@134 $generated@@157))  (and (= ($generated@@142 ($generated@@134 $generated@@156)) (+ ($generated@@142 ($generated@@134 $generated@@157)) 1)) (forall (($generated@@160 Int) ($generated@@161 Int) ) (!  (=> (= $generated@@161 (+ $generated@@160 1)) (=> (and (<= ($generated@@144 0) $generated@@160) (< $generated@@160 ($generated@@142 ($generated@@134 $generated@@157)))) ($generated@@146 ($generated@@143 ($generated@@134 $generated@@156) $generated@@160) ($generated@@143 ($generated@@134 $generated@@156) $generated@@161) ($generated@@143 ($generated@@134 $generated@@157) $generated@@160))))
 :pattern ( ($generated@@143 $generated@@157 $generated@@160) ($generated@@143 $generated@@156 $generated@@161))
 :pattern ( ($generated@@143 $generated@@156 $generated@@161) ($generated@@143 $generated@@156 $generated@@160))
))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@156) ($generated@@134 $generated@@157)))
))))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@138 $generated@@162 ($generated@@75 0)))
 :pattern ( ($generated@@138 $generated@@162 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@165) 16) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167)) $generated@@64)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@64) (= (type $generated@@169) $generated@@64)) (= (type $generated@@170) $generated@@165)) ($generated@@138 $generated@@170 ($generated@@164 $generated@@168 $generated@@169))) ($generated@@163 $generated@@170))
 :pattern ( ($generated@@163 $generated@@170) ($generated@@138 $generated@@170 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@136)
 :pattern ( ($generated@@172 $generated@@174))
)) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@136)
 :pattern ( ($generated@@173 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@165) (= (type $generated@@177) $generated@@165)) true) (= ($generated@@171 $generated@@176 $generated@@177)  (and (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)) (= ($generated@@173 $generated@@176) ($generated@@173 $generated@@177)))))
 :pattern ( ($generated@@171 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@64)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@182) $generated@@64)) ($generated@@138 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@138 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 17)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@77 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@67 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@77) (= (type $generated@@233) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@234) ($generated@@66 $generated@@4))) (= (type $generated@@236) $generated@@77)) (= (type $generated@@237) ($generated@@66 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@77 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@67 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@77) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@246) ($generated@@66 $generated@@4))) (= (type $generated@@248) $generated@@77)) (= (type $generated@@249) ($generated@@66 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@165)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@136)) (= (type $generated@@258) $generated@@136)) (= ($generated@@138 ($generated@@251 $generated@@257 $generated@@258) ($generated@@164 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@138 ($generated@@251 $generated@@257 $generated@@258) ($generated@@164 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@165) (= (type $generated@@260) $generated@@165)) (= ($generated@@171 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@171 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@64)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@264) $generated@@64)) (= ($generated@@138 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@0 ($generated@@81 $generated@@263 $generated@@265))) ($generated@@252 $generated@@265 $generated@@264))
 :pattern ( ($generated@@81 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@138 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@138 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@136) ($generated@@0 ($generated@@81 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@81 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@138 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@144 $generated@@271) $generated@@271)
 :pattern ( ($generated@@144 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@134 $generated@@272) $generated@@272)
 :pattern ( ($generated@@134 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) $generated@@136)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@251 $generated@@277 $generated@@278) ($generated@@164 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@251 $generated@@277 $generated@@278) ($generated@@164 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@165) (= ($generated@@163 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@165) ($generated@@163 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@136) (= (type $generated@@285) $generated@@136)) (= $generated@@283 ($generated@@251 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@163 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@135 $generated@@287))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@142 ($generated@@286 $generated@@288)) 0)
 :pattern ( ($generated@@286 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@136)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@64) (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@74 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@274 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@76 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@79 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@76 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@81 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@79 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@76 $generated@@337 $generated@@2)) (= ($generated@@179 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@81 $generated@@336 $generated@@338))) (<= ($generated ($generated@@81 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@81 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@179 $generated@@336))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (= (type $generated@@339) $generated@@136) (= (type $generated@@340) $generated@@136)) (= (type $generated@@341) $generated@@136)) (or ($generated@@145 $generated@@339 $generated@@340 $generated@@341) (and (not (= 0 $generated@@132)) (and (and ($generated@@252 $generated@@339 $generated@@140) ($generated@@252 $generated@@340 $generated@@140)) ($generated@@252 $generated@@341 $generated@@141))))) true)
 :pattern ( ($generated@@146 $generated@@339 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@304 (type $generated@@342))))
(let (($generated@@344 ($generated@@303 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@302 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@301 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@300 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@304 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@304 (type $generated@@349))))
(let (($generated@@351 ($generated@@303 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@302 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@301 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@322 (type $generated@@353))))
(let (($generated@@355 ($generated@@321 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@320 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@319 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@318 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@322 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@322 (type $generated@@360))))
(let (($generated@@362 ($generated@@321 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@320 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@319 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@365) $generated@@64)) (= ($generated@@138 $generated@@364 ($generated@@178 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@364 $generated@@366)))) ($generated@@252 $generated@@366 $generated@@365))
 :pattern ( ($generated@@81 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@138 $generated@@364 ($generated@@178 $generated@@365)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@135 $generated@@136)) (= (type $generated@@368) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@367 $generated@@368) (and (not (= 1 $generated@@132)) (and ($generated@@138 $generated@@367 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@368 ($generated@@139 $generated@@141)))))) true)
 :pattern ( ($generated@@133 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@370) $generated@@64)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@369 ($generated@@261 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@136) ($generated@@0 ($generated@@81 $generated@@369 $generated@@372))) ($generated@@274 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@81 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@74 $generated@@369 ($generated@@261 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@266 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@136) ($generated@@0 ($generated@@81 $generated@@373 $generated@@376))) ($generated@@274 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@81 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@266 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@81 ($generated@@295 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@81 ($generated@@295 $generated@@378) $generated@@377)))
)))
(assert  (and (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@379 $generated@@382)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@379 $generated@@382))
)) (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@380 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@380 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@304 (type $generated@@385))))
(let (($generated@@387 ($generated@@303 (type $generated@@385))))
(= (type ($generated@@381 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@381 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@389) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@388) ($generated@@172 ($generated@@380 $generated@@165 $generated@@389)))) (= ($generated@@81 ($generated@@381 $generated@@388) ($generated@@172 ($generated@@380 $generated@@165 $generated@@389))) ($generated@@173 ($generated@@380 $generated@@165 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@322 (type $generated@@393))))
(let (($generated@@395 ($generated@@321 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@76 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@397) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@396) ($generated@@172 ($generated@@380 $generated@@165 $generated@@397)))) (= ($generated@@81 ($generated@@391 $generated@@396) ($generated@@172 ($generated@@380 $generated@@165 $generated@@397))) ($generated@@173 ($generated@@380 $generated@@165 $generated@@397))))))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@303 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@302 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@381 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@321 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@320 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@81 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@411) $generated@@415))) (and ($generated@@274 ($generated@@81 ($generated@@381 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@274 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@64)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@419) $generated@@423))) (and ($generated@@274 ($generated@@81 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@274 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@76 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@322 (type $generated@@426))))
(let (($generated@@428 ($generated@@321 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@320 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@319 $generated@@428 $generated@@427)) (= ($generated@@318 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@318 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@322 (type $generated@@429))))
(let (($generated@@431 ($generated@@321 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@320 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@357 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@357 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@136))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@304 (type $generated@@435))))
(let (($generated@@437 ($generated@@303 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@302 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@301 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@136) (= (type $generated@@439) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@435) ($generated@@289 ($generated@@251 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@379 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@322 (type $generated@@440))))
(let (($generated@@442 ($generated@@321 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@320 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@319 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@136) (= (type $generated@@444) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@390 $generated@@440) ($generated@@289 ($generated@@251 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@136) ($generated@@252 $generated@@445 $generated@@46)) (and (= ($generated@@289 ($generated@@380 $generated@@2 $generated@@445)) $generated@@445) ($generated@@138 ($generated@@380 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@136) ($generated@@252 $generated@@446 $generated@@47)) (and (= ($generated@@289 ($generated@@380 $generated@@3 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@380 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@136) ($generated@@252 $generated@@447 $generated@@44)) (and (= ($generated@@289 ($generated@@380 $generated@@4 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@380 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@136) ($generated@@252 $generated@@449 $generated@@45)) (and (= ($generated@@289 ($generated@@380 $generated@@448 $generated@@449)) $generated@@449) ($generated@@138 ($generated@@380 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@252 ($generated@@289 $generated@@450) $generated@@451) ($generated@@138 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@252 ($generated@@289 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@294 $generated@@452))))
 :pattern ( ($generated@@294 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@147 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@135 $generated@@455)) (<= 0 ($generated@@142 $generated@@454))))
 :pattern ( ($generated@@142 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@136) (= (type $generated@@477) $generated@@136)) (= ($generated@@280 ($generated@@251 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@164 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@164 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@164 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@164 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@136) (= (type $generated@@487) $generated@@136)) (= ($generated@@172 ($generated@@251 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@251 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@136) (= (type $generated@@489) $generated@@136)) (= ($generated@@173 ($generated@@251 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@251 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@135 $generated@@136)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@490 ($generated@@139 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@142 $generated@@490))) ($generated@@274 ($generated@@143 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@143 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@74 $generated@@490 ($generated@@139 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@261 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@261 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@261 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@266 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@266 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@266 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@178 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@178 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@178 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@139 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@139 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@139 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@139 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@380 $generated@@513 ($generated@@289 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@289 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@138 $generated@@514 ($generated@@408 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@514) $generated@@517))) (and ($generated@@252 ($generated@@81 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@252 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@138 $generated@@514 ($generated@@408 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@138 $generated@@518 ($generated@@416 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@518) $generated@@521))) (and ($generated@@252 ($generated@@81 ($generated@@391 $generated@@518) $generated@@521) $generated@@520) ($generated@@252 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@138 $generated@@518 ($generated@@416 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@136) (= (type $generated@@525) $generated@@136)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@251 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@251 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@136) (= (type $generated@@527) $generated@@136)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@251 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@251 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@136) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@252 $generated@@528 ($generated@@408 $generated@@529 $generated@@530))) (and (= ($generated@@289 ($generated@@380 ($generated@@302 $generated@@136 $generated@@136) $generated@@528)) $generated@@528) ($generated@@138 ($generated@@380 ($generated@@302 $generated@@136 $generated@@136) $generated@@528) ($generated@@408 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@252 $generated@@528 ($generated@@408 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@252 $generated@@531 ($generated@@416 $generated@@532 $generated@@533))) (and (= ($generated@@289 ($generated@@380 ($generated@@320 $generated@@136 $generated@@136) $generated@@531)) $generated@@531) ($generated@@138 ($generated@@380 ($generated@@320 $generated@@136 $generated@@136) $generated@@531) ($generated@@416 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@252 $generated@@531 ($generated@@416 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@136)) ($generated@@252 $generated@@536 ($generated@@164 $generated@@534 $generated@@535))) (and (= ($generated@@289 ($generated@@380 $generated@@165 $generated@@536)) $generated@@536) ($generated@@138 ($generated@@380 $generated@@165 $generated@@536) ($generated@@164 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@252 $generated@@536 ($generated@@164 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@424 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@424 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@164 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@164 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@165) (= ($generated@@522 ($generated@@289 $generated@@543)) ($generated@@523 $generated@@543)))
 :pattern ( ($generated@@522 ($generated@@289 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@136) ($generated@@252 $generated@@544 ($generated@@75 0))) (and (= ($generated@@289 ($generated@@380 $generated@@2 $generated@@544)) $generated@@544) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@252 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@136) (= (type $generated@@546) $generated@@64)) ($generated@@252 $generated@@545 ($generated@@261 $generated@@546))) (and (= ($generated@@289 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@545)) $generated@@545) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@545) ($generated@@261 $generated@@546))))
 :pattern ( ($generated@@252 $generated@@545 ($generated@@261 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) ($generated@@252 $generated@@547 ($generated@@266 $generated@@548))) (and (= ($generated@@289 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@547)) $generated@@547) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@4) $generated@@547) ($generated@@266 $generated@@548))))
 :pattern ( ($generated@@252 $generated@@547 ($generated@@266 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@136) (= (type $generated@@550) $generated@@64)) ($generated@@252 $generated@@549 ($generated@@178 $generated@@550))) (and (= ($generated@@289 ($generated@@380 ($generated@@76 $generated@@136 $generated@@2) $generated@@549)) $generated@@549) ($generated@@138 ($generated@@380 ($generated@@76 $generated@@136 $generated@@2) $generated@@549) ($generated@@178 $generated@@550))))
 :pattern ( ($generated@@252 $generated@@549 ($generated@@178 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) ($generated@@252 $generated@@551 ($generated@@139 $generated@@552))) (and (= ($generated@@289 ($generated@@380 ($generated@@135 $generated@@136) $generated@@551)) $generated@@551) ($generated@@138 ($generated@@380 ($generated@@135 $generated@@136) $generated@@551) ($generated@@139 $generated@@552))))
 :pattern ( ($generated@@252 $generated@@551 ($generated@@139 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@178 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@274 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@178 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@165) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@559) (and ($generated@@163 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@164 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@164 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@274 ($generated@@172 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@274 ($generated@@172 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@165) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@563) (and ($generated@@163 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@164 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@164 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@274 ($generated@@173 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@274 ($generated@@173 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@136)) (= ($generated@@251 ($generated@@134 $generated@@565) ($generated@@134 $generated@@566)) ($generated@@134 ($generated@@251 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@251 ($generated@@134 $generated@@565) ($generated@@134 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@144 $generated@@567))) ($generated@@134 ($generated@@289 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@144 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@289 ($generated@@134 $generated@@568)) ($generated@@134 ($generated@@289 $generated@@568)))
 :pattern ( ($generated@@289 ($generated@@134 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@147 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@135 $generated@@570)) (= ($generated@@142 $generated@@569) 0)) (= $generated@@569 ($generated@@286 $generated@@570))))
 :pattern ( ($generated@@142 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@294 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@294 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@294 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@448)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@136)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@135 $generated@@136)) (= (type $generated@@586) $generated@@64)) (= ($generated@@138 $generated@@585 ($generated@@139 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@142 $generated@@585))) ($generated@@252 ($generated@@143 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@143 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@138 $generated@@585 ($generated@@139 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@142 $generated@@589))) (< ($generated@@523 ($generated@@380 $generated@@165 ($generated@@143 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@523 ($generated@@380 $generated@@165 ($generated@@143 $generated@@589 $generated@@590))))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@135 $generated@@136)) (= (type $generated@@592) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@591 $generated@@592) (and (not (= 1 $generated@@132)) (and ($generated@@138 $generated@@591 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@592 ($generated@@139 $generated@@141)))))) (and (=> (= ($generated@@142 $generated@@591) (+ ($generated@@142 $generated@@592) 1)) (forall (($generated@@593 Int) ($generated@@594 Int) ) (!  (=> (= $generated@@594 (+ $generated@@593 1)) (=> (<= ($generated@@144 0) $generated@@593) (=> (< $generated@@593 ($generated@@142 $generated@@592)) ($generated@@145 ($generated@@143 $generated@@591 $generated@@593) ($generated@@143 $generated@@591 $generated@@594) ($generated@@143 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@143 $generated@@592 $generated@@593) ($generated@@143 $generated@@591 $generated@@594))
 :pattern ( ($generated@@143 $generated@@591 $generated@@594) ($generated@@143 $generated@@591 $generated@@593))
))) (= ($generated@@133 $generated@@591 $generated@@592)  (and (= ($generated@@142 $generated@@591) (+ ($generated@@142 $generated@@592) 1)) (forall (($generated@@595 Int) ($generated@@596 Int) ) (!  (=> (= $generated@@596 (+ $generated@@595 1)) (=> (and (<= ($generated@@144 0) $generated@@595) (< $generated@@595 ($generated@@142 $generated@@592))) ($generated@@146 ($generated@@143 $generated@@591 $generated@@595) ($generated@@143 $generated@@591 $generated@@596) ($generated@@143 $generated@@592 $generated@@595))))
 :pattern ( ($generated@@143 $generated@@592 $generated@@595) ($generated@@143 $generated@@591 $generated@@596))
 :pattern ( ($generated@@143 $generated@@591 $generated@@596) ($generated@@143 $generated@@591 $generated@@595))
))))))
 :pattern ( ($generated@@133 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@302 $generated@@136 $generated@@136)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@138 $generated@@597 ($generated@@408 $generated@@598 $generated@@599))) (and (and ($generated@@138 ($generated@@300 $generated@@597) ($generated@@261 $generated@@598)) ($generated@@138 ($generated@@346 $generated@@597) ($generated@@261 $generated@@599))) ($generated@@138 ($generated@@379 $generated@@597) ($generated@@261 ($generated@@164 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@138 $generated@@597 ($generated@@408 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@138 $generated@@600 ($generated@@416 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@318 $generated@@600) ($generated@@266 $generated@@601)) ($generated@@138 ($generated@@357 $generated@@600) ($generated@@266 $generated@@602))) ($generated@@138 ($generated@@390 $generated@@600) ($generated@@266 ($generated@@164 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@416 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@138 $generated@@603 $generated@@46))
 :pattern ( ($generated@@138 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@138 $generated@@604 $generated@@47))
 :pattern ( ($generated@@138 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@138 $generated@@605 $generated@@44))
 :pattern ( ($generated@@138 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@448) ($generated@@138 $generated@@606 $generated@@45))
 :pattern ( ($generated@@138 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@136) ($generated@@138 $generated@@607 $generated@@48))
 :pattern ( ($generated@@138 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@610) ($generated@@135 $generated@@136)) (= (type $generated@@609) ($generated@@135 $generated@@136))) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)) (= (type $generated@@615) ($generated@@185 $generated@@77 $generated@@4))) (= (type $generated@@616) $generated@@77)) (= (type $generated@@617) ($generated@@185 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@619 true))
(let (($generated@@620 true))
(let (($generated@@621  (=> (and (not (and (<= ($generated@@144 0) $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609)))) (= (ControlFlow 0 9) 2)) $generated@@620)))
(let (($generated@@622  (=> (and (<= ($generated@@144 0) $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@610)))) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@610))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 (+ $generated@@608 1)) (< (+ $generated@@608 1) ($generated@@142 $generated@@610)))) (=> (and (<= 0 (+ $generated@@608 1)) (< (+ $generated@@608 1) ($generated@@142 $generated@@610))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609)))) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@142 $generated@@609))) (=> (and (and (and (= $generated@@611 ($generated@@143 $generated@@610 $generated@@608)) ($generated@@274 $generated@@611 $generated@@140 $generated@@612)) (and (= $generated@@613 ($generated@@143 $generated@@610 (+ $generated@@608 1))) ($generated@@274 $generated@@613 $generated@@140 $generated@@612))) (and (and (= $generated@@614 ($generated@@143 $generated@@609 $generated@@608)) ($generated@@274 $generated@@614 $generated@@141 $generated@@612)) (and ($generated@@145 ($generated@@143 $generated@@610 $generated@@608) ($generated@@143 $generated@@610 (+ $generated@@608 1)) ($generated@@143 $generated@@609 $generated@@608)) (= (ControlFlow 0 5) 2)))) $generated@@620))))))))))
(let (($generated@@623  (=> (< $generated@@608 ($generated@@144 0)) (and (=> (= (ControlFlow 0 11) 5) $generated@@622) (=> (= (ControlFlow 0 11) 9) $generated@@621)))))
(let (($generated@@624  (=> (<= ($generated@@144 0) $generated@@608) (and (=> (= (ControlFlow 0 10) 5) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621)))))
(let (($generated@@625  (and (=> (= (ControlFlow 0 12) 10) $generated@@624) (=> (= (ControlFlow 0 12) 11) $generated@@623))))
(let (($generated@@626  (=> (= ($generated@@142 $generated@@610) (+ ($generated@@142 $generated@@609) 1)) (and (=> (= (ControlFlow 0 13) 12) $generated@@625) (=> (= (ControlFlow 0 13) 4) $generated@@619)))))
(let (($generated@@627  (=> (and (not (= ($generated@@142 $generated@@610) (+ ($generated@@142 $generated@@609) 1))) (= (ControlFlow 0 3) 2)) $generated@@620)))
(let (($generated@@628  (=> (= $generated@@615 ($generated@@239 $generated@@616 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@626) (=> (= (ControlFlow 0 14) 3) $generated@@627)))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (= $generated@@617 ($generated@@184 $generated@@616 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@629) (=> (= (ControlFlow 0 15) 14) $generated@@628)))))
(let (($generated@@631  (=> (and ($generated@@273 $generated@@612) ($generated@@618 $generated@@612)) (=> (and (and ($generated@@138 $generated@@610 ($generated@@139 $generated@@140)) ($generated@@138 $generated@@609 ($generated@@139 $generated@@141))) (and (= 1 $generated@@132) (= (ControlFlow 0 16) 15))) $generated@@630))))
$generated@@631))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
