(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@273 (Int) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@358 () Int)
(declare-fun $generated@@359 (T@U T@U) Bool)
(declare-fun $generated@@360 (T@U T@U) Bool)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@136) ($generated@@135 $generated@@138)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@67)) (= (type $generated@@147) $generated@@136)) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146))) ($generated@@141 $generated@@147))
 :pattern ( ($generated@@141 $generated@@147) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@136) (= (type $generated@@155) $generated@@136)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@67)) ($generated@@139 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@139 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@80 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@70 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@80) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@212) ($generated@@69 $generated@@4))) (= (type $generated@@214) $generated@@80)) (= (type $generated@@215) ($generated@@69 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (= (type $generated@@217) $generated@@67))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@136) ($generated@@139 $generated@@218 $generated@@217)) ($generated@@137 $generated@@218))
 :pattern ( ($generated@@137 $generated@@218) ($generated@@139 $generated@@218 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@136)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@67) (= (type $generated@@224) $generated@@67)) (= (type $generated@@225) $generated@@151)) (= (type $generated@@226) $generated@@151)) (= ($generated@@139 ($generated@@219 $generated@@225 $generated@@226) ($generated@@142 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@139 ($generated@@219 $generated@@225 $generated@@226) ($generated@@142 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@136) (= (type $generated@@228) $generated@@136)) (= ($generated@@148 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@148 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@136) (= (type $generated@@231) $generated@@136)) (= ($generated@@229 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@235) $generated@@67)) (= ($generated@@139 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) ($generated@@0 ($generated@@84 $generated@@234 $generated@@236))) ($generated@@220 $generated@@236 $generated@@235))
 :pattern ( ($generated@@84 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@139 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@67)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@240) $generated@@67)) (= ($generated@@139 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@151) ($generated@@0 ($generated@@84 $generated@@239 $generated@@241))) ($generated@@220 $generated@@241 $generated@@240))
 :pattern ( ($generated@@84 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@139 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@151)) (= (type $generated@@253) $generated@@151)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@219 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@219 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@136) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@137 $generated@@258) (= ($generated@@255 $generated@@258) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@141 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@151) (= (type $generated@@261) $generated@@151)) (= $generated@@259 ($generated@@219 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@136) (= (type $generated@@272) $generated@@136)) true) (= ($generated@@229 $generated@@271 $generated@@272) (= ($generated@@270 $generated@@271) ($generated@@270 $generated@@272))))
 :pattern ( ($generated@@229 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 Int) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@136)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@137 $generated@@275)) (exists (($generated@@276 Int) ) (= $generated@@275 ($generated@@273 $generated@@276))))
 :pattern ( ($generated@@137 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@151)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@67) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@77 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@249 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@79 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@82 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@79 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@84 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@79 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@79 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@82 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@79 $generated@@325 $generated@@2)) (= ($generated@@157 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@84 $generated@@324 $generated@@326))) (<= ($generated ($generated@@84 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@84 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@157 $generated@@324))
)))
(assert (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@151) ($generated@@220 $generated@@330 $generated@@217)) (and (= ($generated@@277 ($generated@@327 $generated@@136 $generated@@330)) $generated@@330) ($generated@@139 ($generated@@327 $generated@@136 $generated@@330) $generated@@217)))
 :pattern ( ($generated@@220 $generated@@330 $generated@@217))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@292 (type $generated@@331))))
(let (($generated@@333 ($generated@@291 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@290 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@289 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@288 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@292 (type $generated@@338))))
(let (($generated@@340 ($generated@@291 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@290 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@289 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@310 (type $generated@@342))))
(let (($generated@@344 ($generated@@309 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@308 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@307 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@306 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@310 (type $generated@@349))))
(let (($generated@@351 ($generated@@309 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@308 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@307 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@354) $generated@@67)) (= ($generated@@139 $generated@@353 ($generated@@156 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@353 $generated@@355)))) ($generated@@220 $generated@@355 $generated@@354))
 :pattern ( ($generated@@84 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@139 $generated@@353 ($generated@@156 $generated@@354)))
)))
(assert (forall (($generated@@356 Int) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@248 $generated@@357)) (= ($generated@@77 ($generated@@273 $generated@@356) $generated@@217 $generated@@357) ($generated@@77 ($generated@@8 $generated@@356) $generated@@46 $generated@@357)))
 :pattern ( ($generated@@77 ($generated@@273 $generated@@356) $generated@@217 $generated@@357))
)))
(assert  (=> (<= 1 $generated@@358) (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) $generated@@136) (= (type $generated@@362) $generated@@136)) (or ($generated@@360 $generated@@361 $generated@@362) (and (not (= 1 $generated@@358)) (and ($generated@@139 $generated@@361 $generated@@217) ($generated@@139 $generated@@362 $generated@@217))))) true)
 :pattern ( ($generated@@359 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@363 ($generated@@232 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@151) ($generated@@0 ($generated@@84 $generated@@363 $generated@@366))) ($generated@@249 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@84 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@77 $generated@@363 ($generated@@232 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@237 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@151) ($generated@@0 ($generated@@84 $generated@@367 $generated@@370))) ($generated@@249 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@84 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@237 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated ($generated@@84 ($generated@@283 $generated@@372) $generated@@371)) 0))
 :pattern ( (let (($generated@@372 (type $generated@@371)))
($generated@@84 ($generated@@283 $generated@@372) $generated@@371)))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@292 (type $generated@@376))))
(let (($generated@@378 ($generated@@291 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@380) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@379) ($generated@@149 ($generated@@327 $generated@@136 $generated@@380)))) (= ($generated@@84 ($generated@@374 $generated@@379) ($generated@@149 ($generated@@327 $generated@@136 $generated@@380))) ($generated@@150 ($generated@@327 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@310 (type $generated@@384))))
(let (($generated@@386 ($generated@@309 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@388) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@387) ($generated@@149 ($generated@@327 $generated@@136 $generated@@388)))) (= ($generated@@84 ($generated@@382 $generated@@387) ($generated@@149 ($generated@@327 $generated@@136 $generated@@388))) ($generated@@150 ($generated@@327 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@291 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@290 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@335 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@374 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@309 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@308 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@84 ($generated@@346 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@84 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@67)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@402) $generated@@406))) (and ($generated@@249 ($generated@@84 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@249 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@77 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@410) $generated@@414))) (and ($generated@@249 ($generated@@84 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@249 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@79 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@310 (type $generated@@417))))
(let (($generated@@419 ($generated@@309 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@308 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@307 $generated@@419 $generated@@418)) (= ($generated@@306 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@306 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@310 (type $generated@@420))))
(let (($generated@@422 ($generated@@309 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@308 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@307 $generated@@422 $generated@@421)) (= ($generated@@346 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@346 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@310 (type $generated@@423))))
(let (($generated@@425 ($generated@@309 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@308 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@307 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@151))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@292 (type $generated@@426))))
(let (($generated@@428 ($generated@@291 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@290 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@289 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@151) (= (type $generated@@430) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@426) ($generated@@277 ($generated@@219 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@310 (type $generated@@431))))
(let (($generated@@433 ($generated@@309 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@308 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@307 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@151) (= (type $generated@@435) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@431) ($generated@@277 ($generated@@219 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@151) ($generated@@220 $generated@@436 $generated@@46)) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@436)) $generated@@436) ($generated@@139 ($generated@@327 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@151) ($generated@@220 $generated@@437 $generated@@47)) (and (= ($generated@@277 ($generated@@327 $generated@@3 $generated@@437)) $generated@@437) ($generated@@139 ($generated@@327 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@151) ($generated@@220 $generated@@438 $generated@@44)) (and (= ($generated@@277 ($generated@@327 $generated@@4 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@327 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@151) ($generated@@220 $generated@@440 $generated@@45)) (and (= ($generated@@277 ($generated@@327 $generated@@439 $generated@@440)) $generated@@440) ($generated@@139 ($generated@@327 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@440 $generated@@45))
)))
(assert  (=> (<= 1 $generated@@358) (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) $generated@@136) (= (type $generated@@442) $generated@@136)) (or ($generated@@360 ($generated@@244 $generated@@441) ($generated@@244 $generated@@442)) (and (not (= 1 $generated@@358)) (and ($generated@@139 $generated@@441 $generated@@217) ($generated@@139 $generated@@442 $generated@@217))))) (and (and ($generated@@137 ($generated@@244 $generated@@441)) ($generated@@137 ($generated@@244 $generated@@442))) (= ($generated@@359 ($generated@@244 $generated@@441) ($generated@@244 $generated@@442)) ($generated@@0 ($generated@@244 ($generated@@11 (< ($generated@@270 ($generated@@244 $generated@@441)) ($generated@@270 ($generated@@244 $generated@@442)))))))))
 :weight 3
 :pattern ( ($generated@@359 ($generated@@244 $generated@@441) ($generated@@244 $generated@@442)))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@220 ($generated@@277 $generated@@443) $generated@@444) ($generated@@139 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@220 ($generated@@277 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@282 $generated@@445))))
 :pattern ( ($generated@@282 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@265 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@264 $generated@@448)) (<= 0 ($generated@@263 $generated@@447))))
 :pattern ( ($generated@@263 $generated@@447))
)))
(assert  (=> (<= 1 $generated@@358) (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@449) $generated@@136) (= (type $generated@@450) $generated@@136)) (or ($generated@@360 $generated@@449 $generated@@450) (and (not (= 1 $generated@@358)) (and ($generated@@139 $generated@@449 $generated@@217) ($generated@@139 $generated@@450 $generated@@217))))) (and (and ($generated@@137 $generated@@449) ($generated@@137 $generated@@450)) (= ($generated@@359 $generated@@449 $generated@@450) (< ($generated@@270 $generated@@449) ($generated@@270 $generated@@450)))))
 :pattern ( ($generated@@359 $generated@@449 $generated@@450))
))))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@399 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@75 ($generated@@399 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@407 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@407 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@407 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@151) (= (type $generated@@472) $generated@@151)) (= ($generated@@255 ($generated@@219 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@219 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@142 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@142 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@142 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@142 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@151) (= (type $generated@@482) $generated@@151)) (= ($generated@@149 ($generated@@219 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@219 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@151) (= (type $generated@@484) $generated@@151)) (= ($generated@@150 ($generated@@219 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@219 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@265 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@264 $generated@@151)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@263 $generated@@491))) ($generated@@249 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@78 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@78 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@232 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@232 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@232 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@237 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@237 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@237 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@156 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@156 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@156 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@255 ($generated@@273 $generated@@513)) $generated@@63)
 :pattern ( ($generated@@273 $generated@@513))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@270 ($generated@@273 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@273 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@327 $generated@@516 ($generated@@277 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@277 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@139 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@517) $generated@@520))) (and ($generated@@220 ($generated@@84 ($generated@@374 $generated@@517) $generated@@520) $generated@@519) ($generated@@220 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@139 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) (= ($generated@@139 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@521) $generated@@524))) (and ($generated@@220 ($generated@@84 ($generated@@382 $generated@@521) $generated@@524) $generated@@523) ($generated@@220 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@521) $generated@@524))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@139 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@151) (= (type $generated@@528) $generated@@151)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@219 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@219 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@151) (= (type $generated@@530) $generated@@151)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@219 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@219 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@139 ($generated@@273 $generated@@531) $generated@@217) ($generated@@139 ($generated@@8 $generated@@531) $generated@@46))
 :pattern ( ($generated@@139 ($generated@@273 $generated@@531) $generated@@217))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@151) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@220 $generated@@532 ($generated@@399 $generated@@533 $generated@@534))) (and (= ($generated@@277 ($generated@@327 ($generated@@290 $generated@@151 $generated@@151) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@327 ($generated@@290 $generated@@151 $generated@@151) $generated@@532) ($generated@@399 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@220 $generated@@532 ($generated@@399 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) ($generated@@220 $generated@@535 ($generated@@407 $generated@@536 $generated@@537))) (and (= ($generated@@277 ($generated@@327 ($generated@@308 $generated@@151 $generated@@151) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@327 ($generated@@308 $generated@@151 $generated@@151) $generated@@535) ($generated@@407 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@220 $generated@@535 ($generated@@407 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@151)) ($generated@@220 $generated@@540 ($generated@@142 $generated@@538 $generated@@539))) (and (= ($generated@@277 ($generated@@327 $generated@@136 $generated@@540)) $generated@@540) ($generated@@139 ($generated@@327 $generated@@136 $generated@@540) ($generated@@142 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@220 $generated@@540 ($generated@@142 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@84 ($generated@@415 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@84 ($generated@@415 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@72)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@142 $generated@@545 $generated@@546)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@548) (and ($generated@@137 $generated@@547) ($generated@@77 $generated@@547 $generated@@217 $generated@@548)))) ($generated@@77 ($generated@@8 ($generated@@270 $generated@@547)) $generated@@46 $generated@@548))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@270 $generated@@547)) $generated@@46 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@136) (= ($generated@@525 ($generated@@277 $generated@@549)) ($generated@@526 $generated@@549)))
 :pattern ( ($generated@@525 ($generated@@277 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@151) ($generated@@220 $generated@@550 ($generated@@78 0))) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@550)) $generated@@550) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@151 $generated@@4) $generated@@550) ($generated@@78 0))))
 :pattern ( ($generated@@220 $generated@@550 ($generated@@78 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@151) (= (type $generated@@552) $generated@@67)) ($generated@@220 $generated@@551 ($generated@@232 $generated@@552))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@151 $generated@@4) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@151 $generated@@4) $generated@@551) ($generated@@232 $generated@@552))))
 :pattern ( ($generated@@220 $generated@@551 ($generated@@232 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@151) (= (type $generated@@554) $generated@@67)) ($generated@@220 $generated@@553 ($generated@@237 $generated@@554))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@151 $generated@@4) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@151 $generated@@4) $generated@@553) ($generated@@237 $generated@@554))))
 :pattern ( ($generated@@220 $generated@@553 ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@151) (= (type $generated@@556) $generated@@67)) ($generated@@220 $generated@@555 ($generated@@156 $generated@@556))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@151 $generated@@2) $generated@@555)) $generated@@555) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@151 $generated@@2) $generated@@555) ($generated@@156 $generated@@556))))
 :pattern ( ($generated@@220 $generated@@555 ($generated@@156 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@151) (= (type $generated@@558) $generated@@67)) ($generated@@220 $generated@@557 ($generated@@485 $generated@@558))) (and (= ($generated@@277 ($generated@@327 ($generated@@264 $generated@@151) $generated@@557)) $generated@@557) ($generated@@139 ($generated@@327 ($generated@@264 $generated@@151) $generated@@557) ($generated@@485 $generated@@558))))
 :pattern ( ($generated@@220 $generated@@557 ($generated@@485 $generated@@558)))
)))
(assert (= ($generated@@75 $generated@@217) $generated@@64))
(assert (= ($generated@@543 $generated@@217) $generated@@66))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@559 ($generated@@156 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@559 $generated@@562)))) ($generated@@249 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@84 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@77 $generated@@559 ($generated@@156 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@565) (and ($generated@@141 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@67) ($generated@@77 $generated@@563 ($generated@@142 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@142 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@249 ($generated@@149 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@249 ($generated@@149 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@136) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@569) (and ($generated@@141 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@67) ($generated@@77 $generated@@567 ($generated@@142 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@77 $generated@@567 ($generated@@142 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@249 ($generated@@150 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@151) (= (type $generated@@572) $generated@@151)) (= ($generated@@219 ($generated@@244 $generated@@571) ($generated@@244 $generated@@572)) ($generated@@244 ($generated@@219 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@219 ($generated@@244 $generated@@571) ($generated@@244 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@242 $generated@@573))) ($generated@@244 ($generated@@277 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@242 $generated@@573))))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@273 ($generated@@242 $generated@@574)) ($generated@@244 ($generated@@273 $generated@@574)))
 :pattern ( ($generated@@273 ($generated@@242 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@277 ($generated@@244 $generated@@575)) ($generated@@244 ($generated@@277 $generated@@575)))
 :pattern ( ($generated@@277 ($generated@@244 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@265 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@264 $generated@@577)) (= ($generated@@263 $generated@@576) 0)) (= $generated@@576 ($generated@@262 $generated@@577))))
 :pattern ( ($generated@@263 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@79 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@282 ($generated@@85 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@282 $generated@@578) ($generated ($generated@@84 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@282 ($generated@@85 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@2)) ($generated@@77 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@3)) ($generated@@77 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@4)) ($generated@@77 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@439)) ($generated@@77 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@591) $generated@@151)) ($generated@@77 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@77 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@264 $generated@@151)) (= (type $generated@@593) $generated@@67)) (= ($generated@@139 $generated@@592 ($generated@@485 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@592))) ($generated@@220 ($generated@@486 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@486 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@139 $generated@@592 ($generated@@485 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@264 $generated@@151)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@596))) (< ($generated@@526 ($generated@@327 $generated@@136 ($generated@@486 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@526 ($generated@@327 $generated@@136 ($generated@@486 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@139 $generated@@598 ($generated@@399 $generated@@599 $generated@@600))) (and (and ($generated@@139 ($generated@@288 $generated@@598) ($generated@@232 $generated@@599)) ($generated@@139 ($generated@@335 $generated@@598) ($generated@@232 $generated@@600))) ($generated@@139 ($generated@@373 $generated@@598) ($generated@@232 ($generated@@142 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@139 $generated@@598 ($generated@@399 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) $generated@@67)) ($generated@@139 $generated@@601 ($generated@@407 $generated@@602 $generated@@603))) (and (and ($generated@@139 ($generated@@306 $generated@@601) ($generated@@237 $generated@@602)) ($generated@@139 ($generated@@346 $generated@@601) ($generated@@237 $generated@@603))) ($generated@@139 ($generated@@381 $generated@@601) ($generated@@237 ($generated@@142 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@139 $generated@@601 ($generated@@407 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@139 $generated@@604 $generated@@46))
 :pattern ( ($generated@@139 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@139 $generated@@605 $generated@@47))
 :pattern ( ($generated@@139 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@139 $generated@@606 $generated@@44))
 :pattern ( ($generated@@139 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@439) ($generated@@139 $generated@@607 $generated@@45))
 :pattern ( ($generated@@139 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@151) ($generated@@139 $generated@@608 $generated@@48))
 :pattern ( ($generated@@139 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@609) $generated@@136) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) ($generated@@163 $generated@@80 $generated@@4))) (= (type $generated@@613) $generated@@80)) (= (type $generated@@615) $generated@@136)) (= (type $generated@@616) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@617  (=> (and (and (and (not ($generated@@359 $generated@@609 $generated@@610)) ($generated@@77 $generated@@610 $generated@@217 $generated@@611)) (and ($generated@@77 $generated@@609 $generated@@217 $generated@@611) ($generated@@360 $generated@@610 $generated@@609))) (and (and ($generated@@360 $generated@@610 $generated@@609) (= (ControlFlow 0 4) (- 0 3))) ($generated@@360 $generated@@610 $generated@@609))) (or ($generated@@359 $generated@@610 $generated@@609) (< ($generated@@270 $generated@@610) ($generated@@270 $generated@@609))))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (not ($generated@@229 $generated@@609 $generated@@610)) (=> (and (and ($generated@@77 $generated@@609 $generated@@217 $generated@@611) ($generated@@77 $generated@@610 $generated@@217 $generated@@611)) (and ($generated@@360 $generated@@609 $generated@@610) ($generated@@360 $generated@@609 $generated@@610))) (and (=> (= (ControlFlow 0 5) 2) $generated@@618) (=> (= (ControlFlow 0 5) 4) $generated@@617))))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (= $generated@@612 ($generated@@162 $generated@@613 $generated@@611 $generated@@60 false)) (=> (and ($generated@@139 $generated@@609 $generated@@217) ($generated@@77 $generated@@609 $generated@@217 $generated@@611)) (=> (and (and ($generated@@139 $generated@@610 $generated@@217) ($generated@@77 $generated@@610 $generated@@217 $generated@@611)) (and ($generated@@135 $generated@@609) ($generated@@135 $generated@@610))) (and (=> (= (ControlFlow 0 6) 1) $generated@@620) (=> (= (ControlFlow 0 6) 5) $generated@@619)))))))
(let (($generated@@622  (=> (and ($generated@@248 $generated@@611) ($generated@@614 $generated@@611)) (=> (and (and ($generated@@139 $generated@@615 $generated@@217) ($generated@@77 $generated@@615 $generated@@217 $generated@@611)) true) (=> (and (and (and ($generated@@139 $generated@@616 $generated@@217) ($generated@@77 $generated@@616 $generated@@217 $generated@@611)) true) (and (= 2 $generated@@358) (= (ControlFlow 0 7) 6))) $generated@@621)))))
$generated@@622)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
